{
    "https://api.github.com/repos/gorse-io/gorse": {
        "forks": 802,
        "watchers": 8716,
        "stars": 8716,
        "languages": {
            "Go": 1259398,
            "C": 120310,
            "Assembly": 90559,
            "Awk": 8857,
            "Jinja": 4121,
            "Dockerfile": 3701,
            "Shell": 1256,
            "Makefile": 668
        },
        "commits": [
            "2025-01-21T12:33:24Z",
            "2025-01-20T13:26:25Z",
            "2025-01-20T12:47:31Z",
            "2025-01-20T12:05:11Z",
            "2025-01-19T02:47:52Z",
            "2025-01-18T04:27:02Z",
            "2025-01-13T13:59:03Z",
            "2025-01-12T12:52:41Z",
            "2025-01-06T15:21:48Z",
            "2025-01-06T00:39:58Z",
            "2025-01-05T15:31:30Z",
            "2025-01-04T12:24:01Z",
            "2025-01-04T06:02:21Z",
            "2025-01-03T13:25:46Z",
            "2025-01-02T13:18:44Z",
            "2025-01-02T12:49:11Z",
            "2024-12-31T12:35:08Z",
            "2024-12-30T14:58:30Z",
            "2024-12-28T05:37:10Z",
            "2024-12-24T15:50:15Z",
            "2024-12-23T12:55:41Z",
            "2024-12-22T14:37:45Z",
            "2024-12-21T02:44:27Z",
            "2024-12-21T01:56:01Z",
            "2024-12-19T15:49:44Z",
            "2024-12-18T13:55:14Z",
            "2024-12-14T10:06:47Z",
            "2024-12-07T09:15:43Z",
            "2024-12-07T05:07:04Z",
            "2024-12-05T14:01:17Z"
        ],
        "creation_date": "2018-08-14T11:01:09Z",
        "contributors": 30,
        "topics": [
            "collaborative-filtering",
            "go",
            "knn",
            "machine-learning",
            "recommender-system"
        ],
        "subscribers": 63,
        "readme": "# Gorse Recommender System Engine\n\n<img width=160 src=\"assets/gorse.png\"/>\n\n![](https://img.shields.io/github/go-mod/go-version/zhenghaoz/gorse)\n[![build](https://github.com/zhenghaoz/gorse/workflows/build/badge.svg)](https://github.com/zhenghaoz/gorse/actions?query=workflow%3Abuild)\n[![codecov](https://codecov.io/gh/gorse-io/gorse/branch/master/graph/badge.svg)](https://codecov.io/gh/gorse-io/gorse)\n[![Go Report Card](https://goreportcard.com/badge/github.com/zhenghaoz/gorse)](https://goreportcard.com/report/github.com/zhenghaoz/gorse)\n[![Discord](https://img.shields.io/discord/830635934210588743)](https://discord.gg/x6gAtNNkAE)\n[![Twitter Follow](https://img.shields.io/twitter/follow/gorse_io?label=Follow&style=social)](https://twitter.com/gorse_io)\n[![Gurubase](https://img.shields.io/badge/Gurubase-Ask%20Gorse%20Guru-006BFF)](https://gurubase.io/g/gorse)\n\nGorse is an open-source recommendation system written in Go. Gorse aims to be a universal open-source recommender system that can be quickly introduced into a wide variety of online services. By importing items, users, and interaction data into Gorse, the system will automatically train models to generate recommendations for each user. Project features are as follows.\n\n<img width=520 src=\"assets/workflow.png\"/>\n\n- **Multi-source:** Recommend items from Popular, latest, user-based, item-based and collaborative filtering.\n- **AutoML:** Search the best recommendation model automatically in the background.\n- **Distributed prediction:** Support horizontal scaling in the recommendation stage after single node training.\n- **RESTful APIs:** Expose RESTful APIs for data CRUD and recommendation requests.\n- **Online evaluation:** Analyze online recommendation performance from recently inserted feedback.\n- **Dashboard:** Provide GUI for data management, system monitoring, and cluster status checking.\n\n## Quick Start\n\nThe playground mode has been prepared for beginners. Just set up a recommender system for GitHub repositories by the following commands. \n\n- Linux/macOS:\n\n```bash\ncurl -fsSL https://gorse.io/playground | bash\n```\n\n- Docker:\n\n```bash\ndocker run -p 8088:8088 zhenghaoz/gorse-in-one --playground\n```\n\nThe playground mode will download data from [GitRec](https://gitrec.gorse.io/) and import it into Gorse. The dashboard is available at `http://localhost:8088`.\n\n<img width=720 src=\"assets/dashboard.jpeg\"/>\n\nAfter the \"Find neighbors of items\" task is completed on the \"Tasks\" page, try to insert several feedbacks into Gorse. Suppose Bob is a frontend developer who starred several frontend repositories in GitHub. We insert his star feedback to Gorse.\n\n```bash\nread -d '' JSON << EOF\n[\n    { \\\"FeedbackType\\\": \\\"star\\\", \\\"UserId\\\": \\\"bob\\\", \\\"ItemId\\\": \\\"vuejs:vue\\\", \\\"Timestamp\\\": \\\"2022-02-24\\\" },\n    { \\\"FeedbackType\\\": \\\"star\\\", \\\"UserId\\\": \\\"bob\\\", \\\"ItemId\\\": \\\"d3:d3\\\", \\\"Timestamp\\\": \\\"2022-02-25\\\" },\n    { \\\"FeedbackType\\\": \\\"star\\\", \\\"UserId\\\": \\\"bob\\\", \\\"ItemId\\\": \\\"dogfalo:materialize\\\", \\\"Timestamp\\\": \\\"2022-02-26\\\" },\n    { \\\"FeedbackType\\\": \\\"star\\\", \\\"UserId\\\": \\\"bob\\\", \\\"ItemId\\\": \\\"mozilla:pdf.js\\\", \\\"Timestamp\\\": \\\"2022-02-27\\\" },\n    { \\\"FeedbackType\\\": \\\"star\\\", \\\"UserId\\\": \\\"bob\\\", \\\"ItemId\\\": \\\"moment:moment\\\", \\\"Timestamp\\\": \\\"2022-02-28\\\" }\n]\nEOF\n\ncurl -X POST http://127.0.0.1:8088/api/feedback \\\n   -H 'Content-Type: application/json' \\\n   -d \"$JSON\"\n```\n\nThen, fetch 10 recommended items from Gorse. We can find that frontend-related repositories are recommended for Bob.\n\n```bash\ncurl http://127.0.0.1:8088/api/recommend/bob?n=10\n```\n\n<details>\n<summary>Example outputs:</summary>\n\n```json\n[\n \"mbostock:d3\",\n \"nt1m:material-framework\",\n \"mdbootstrap:vue-bootstrap-with-material-design\",\n \"justice47:f2-vue\",\n \"10clouds:cyclejs-cookie\",\n \"academicpages:academicpages.github.io\",\n \"accenture:alexia\",\n \"addyosmani:tmi\",\n \"1wheel:d3-starterkit\",\n \"acdlite:redux-promise\"\n]\n```\n\n</details>\n\n> The exact output might be different from the example since the playground dataset changes over time.\n\nFor more information\uff1a\n\n- Read [official documents](https://gorse.io/docs/master)\n- Visit [official demo](https://gitrec.gorse.io/)\n- Discuss on [Discord](https://discord.gg/x6gAtNNkAE) or [GitHub Discussion](https://github.com/gorse-io/gorse/discussions)\n\n## Architecture\n\nGorse is a single-node training and distributed prediction recommender system. Gorse stores data in MySQL, MongoDB, Postgres, or ClickHouse, with intermediate results cached in Redis, MySQL, MongoDB and Postgres.\n\n1. The cluster consists of a master node, multiple worker nodes, and server nodes.\n1. The master node is responsible for model training, non-personalized item recommendation, configuration management, and membership management.\n1. The server node is responsible for exposing the RESTful APIs and online real-time recommendations.\n1. Worker nodes are responsible for offline recommendations for each user.\n\nIn addition, the administrator can perform system monitoring, data import and export, and system status checking via the dashboard on the master node.\n\n<img width=520 src=\"assets/architecture.png\"/>\n\n## Contributors\n\n<a href=\"https://github.com/zhenghaoz/gorse/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=zhenghaoz/gorse\" />\n</a>\n\nAny contribution is appreciated: report a bug, give advice or create a pull request. Read [CONTRIBUTING.md](CONTRIBUTING.md) for more information.\n\n## Acknowledgments\n\n`gorse` is inspired by the following projects:\n\n- [Guibing Guo's librec](https://github.com/guoguibing/librec)\n- [Nicolas Hug's Surprise](https://github.com/NicolasHug/Surprise)\n- [Golang Samples's gopher-vector](https://github.com/golang-samples/gopher-vector)\n",
        "releases": [
            {
                "name": "Gorse v0.5.0-alpha.3",
                "date": "2025-01-14T13:06:21Z"
            },
            {
                "name": "Gorse v0.5.0-alpha.2",
                "date": "2024-12-21T01:56:46Z"
            },
            {
                "name": "Gorse v0.5.0-alpha.1",
                "date": "2024-11-05T12:01:20Z"
            },
            {
                "name": "Gorse v0.4.16",
                "date": "2025-01-07T13:58:48Z"
            },
            {
                "name": "Gorse v0.4.15",
                "date": "2024-01-10T04:44:45Z"
            },
            {
                "name": "Gorse v0.5.0-alpha",
                "date": "2023-06-05T13:50:43Z"
            },
            {
                "name": "Gorse v0.4.14",
                "date": "2023-06-04T06:05:14Z"
            },
            {
                "name": "Gorse v0.4.13",
                "date": "2023-03-30T03:42:49Z"
            },
            {
                "name": "Gorse v0.4.12",
                "date": "2023-03-03T11:48:30Z"
            },
            {
                "name": "Gorse v0.4.11",
                "date": "2023-02-19T07:33:00Z"
            },
            {
                "name": "Gorse v0.4.10",
                "date": "2022-11-21T00:55:42Z"
            },
            {
                "name": "Gorse v0.4.9",
                "date": "2022-11-12T06:36:57Z"
            },
            {
                "name": "Gorse v0.4.8",
                "date": "2022-10-13T00:38:31Z"
            },
            {
                "name": "Gorse v0.4.7",
                "date": "2022-09-13T15:17:54Z"
            },
            {
                "name": "Gorse v0.4.6",
                "date": "2022-08-17T00:45:00Z"
            },
            {
                "name": "Gorse v0.4.5",
                "date": "2022-07-09T01:31:12Z"
            },
            {
                "name": "Gorse v0.4.4",
                "date": "2022-06-11T13:08:20Z"
            },
            {
                "name": "Gorse v0.4.3",
                "date": "2022-05-27T12:21:56Z"
            },
            {
                "name": "Gorse v0.4.2",
                "date": "2022-05-14T14:57:02Z"
            },
            {
                "name": "Gorse v0.4.1",
                "date": "2022-05-01T12:06:58Z"
            },
            {
                "name": "Gorse v0.4.0",
                "date": "2022-04-10T06:57:09Z"
            },
            {
                "name": "Gorse v0.3.4",
                "date": "2022-03-13T04:12:00Z"
            },
            {
                "name": "Gorse v0.3.3",
                "date": "2022-02-18T12:25:31Z"
            },
            {
                "name": "Gorse v0.3.2",
                "date": "2022-02-02T02:20:40Z"
            },
            {
                "name": "gorse v0.3.1",
                "date": "2021-12-29T13:35:57Z"
            },
            {
                "name": "gorse v0.3.0",
                "date": "2021-12-14T12:48:04Z"
            },
            {
                "name": "gorse v0.2.8",
                "date": "2021-11-06T10:28:02Z"
            },
            {
                "name": "gorse v0.2.7",
                "date": "2021-10-16T04:18:16Z"
            },
            {
                "name": "gorse v0.2.6",
                "date": "2021-09-26T13:37:46Z"
            },
            {
                "name": "gorse v0.2.5",
                "date": "2021-09-05T01:48:19Z"
            },
            {
                "name": "gorse v0.2.4",
                "date": "2021-08-15T06:22:52Z"
            },
            {
                "name": "gorse v0.2.3",
                "date": "2021-07-25T03:12:08Z"
            },
            {
                "name": "gorse v0.2.2",
                "date": "2021-07-17T14:33:59Z"
            },
            {
                "name": "gorse v0.2.1",
                "date": "2021-06-17T10:56:16Z"
            },
            {
                "name": "gorse v0.2.0",
                "date": "2021-06-05T05:44:35Z"
            }
        ]
    }
}