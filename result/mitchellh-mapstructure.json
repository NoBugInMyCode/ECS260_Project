{
    "https://api.github.com/repos/mitchellh/mapstructure": {
        "forks": 684,
        "watchers": 7950,
        "stars": 7950,
        "languages": {
            "Go": 146790
        },
        "commits": [
            "2023-12-16T20:14:59Z",
            "2023-04-18T17:25:16Z",
            "2022-04-23T18:50:08Z",
            "2022-04-23T18:47:53Z",
            "2022-04-23T18:47:42Z",
            "2022-04-23T18:46:54Z",
            "2022-04-23T18:46:37Z",
            "2022-04-23T10:21:22Z",
            "2022-04-23T09:25:49Z",
            "2022-04-21T16:44:51Z",
            "2022-04-21T09:37:10Z",
            "2022-04-20T22:31:31Z",
            "2022-04-20T22:28:47Z",
            "2022-04-20T22:28:18Z",
            "2022-04-20T22:27:15Z",
            "2022-04-20T22:10:04Z",
            "2022-04-20T22:09:27Z",
            "2022-04-20T22:08:51Z",
            "2022-04-20T22:07:06Z",
            "2022-04-20T22:05:39Z",
            "2022-04-20T21:49:43Z",
            "2022-04-20T21:48:41Z",
            "2022-04-20T21:47:38Z",
            "2022-04-20T21:46:57Z",
            "2022-04-20T21:42:18Z",
            "2022-04-20T21:41:19Z",
            "2022-04-20T21:40:25Z",
            "2022-04-20T21:39:51Z",
            "2022-04-20T21:38:17Z",
            "2022-02-04T18:10:14Z"
        ],
        "creation_date": "2013-05-20T05:24:34Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 66,
        "readme": "# mapstructure [![Godoc](https://godoc.org/github.com/mitchellh/mapstructure?status.svg)](https://godoc.org/github.com/mitchellh/mapstructure)\n\nmapstructure is a Go library for decoding generic map values to structures\nand vice versa, while providing helpful error handling.\n\nThis library is most useful when decoding values from some data stream (JSON,\nGob, etc.) where you don't _quite_ know the structure of the underlying data\nuntil you read a part of it. You can therefore read a `map[string]interface{}`\nand use this library to decode it into the proper underlying native Go\nstructure.\n\n## Installation\n\nStandard `go get`:\n\n```\n$ go get github.com/mitchellh/mapstructure\n```\n\n## Usage & Example\n\nFor usage and examples see the [Godoc](http://godoc.org/github.com/mitchellh/mapstructure).\n\nThe `Decode` function has examples associated with it there.\n\n## But Why?!\n\nGo offers fantastic standard libraries for decoding formats such as JSON.\nThe standard method is to have a struct pre-created, and populate that struct\nfrom the bytes of the encoded format. This is great, but the problem is if\nyou have configuration or an encoding that changes slightly depending on\nspecific fields. For example, consider this JSON:\n\n```json\n{\n  \"type\": \"person\",\n  \"name\": \"Mitchell\"\n}\n```\n\nPerhaps we can't populate a specific structure without first reading\nthe \"type\" field from the JSON. We could always do two passes over the\ndecoding of the JSON (reading the \"type\" first, and the rest later).\nHowever, it is much simpler to just decode this into a `map[string]interface{}`\nstructure, read the \"type\" key, then use something like this library\nto decode it into the proper structure.\n",
        "releases": []
    }
}