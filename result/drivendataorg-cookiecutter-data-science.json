{
    "https://api.github.com/repos/drivendata/cookiecutter-data-science": {
        "forks": 2484,
        "watchers": 8505,
        "stars": 8505,
        "languages": {
            "Python": 25934,
            "Makefile": 6513,
            "Shell": 3245
        },
        "commits": [
            "2024-12-30T23:19:54Z",
            "2024-11-25T17:51:40Z",
            "2024-08-02T17:06:32Z",
            "2024-07-12T16:41:32Z",
            "2024-07-12T00:34:55Z",
            "2024-06-28T22:50:01Z",
            "2024-06-05T02:41:31Z",
            "2024-05-30T18:44:54Z",
            "2024-05-22T19:12:20Z",
            "2024-05-22T17:45:54Z",
            "2024-05-22T17:44:57Z",
            "2024-05-22T16:56:01Z",
            "2024-05-22T16:53:20Z",
            "2023-09-22T22:33:50Z",
            "2022-03-11T18:27:47Z",
            "2022-03-11T18:25:13Z",
            "2021-06-23T00:23:22Z",
            "2021-03-20T05:33:34Z",
            "2021-03-06T18:11:46Z",
            "2021-01-21T23:12:54Z",
            "2020-12-22T18:46:23Z",
            "2020-12-10T17:12:53Z",
            "2020-05-26T17:16:03Z",
            "2020-04-23T05:14:31Z",
            "2020-04-06T16:05:54Z",
            "2019-09-23T15:49:26Z",
            "2019-09-04T17:29:26Z",
            "2019-05-24T16:58:50Z",
            "2019-05-06T16:41:28Z",
            "2019-01-17T21:52:14Z"
        ],
        "creation_date": "2015-10-30T19:19:57Z",
        "contributors": 30,
        "topics": [
            "ai",
            "cookiecutter",
            "cookiecutter-data-science",
            "cookiecutter-template",
            "data-science",
            "machine-learning"
        ],
        "subscribers": 122,
        "readme": "# Cookiecutter Data Science\n\n_A logical, reasonably standardized but flexible project structure for doing and sharing data science work._\n\n**Cookiecutter Data Science (CCDS)** is a tool for setting up a data science project template that incorporates best practices. To learn more about CCDS's philosophy, visit the [project homepage](https://cookiecutter-data-science.drivendata.org/).\n\n> \u2139\ufe0f Cookiecutter Data Science v2 has changed from v1. It now requires installing the new cookiecutter-data-science Python package, which extends the functionality of the [cookiecutter](https://cookiecutter.readthedocs.io/en/stable/README.html) templating utility. Use the provided `ccds` command-line program instead of `cookiecutter`.\n\n## Installation\n\nCookiecutter Data Science v2 requires Python 3.8+. Since this is a cross-project utility application, we recommend installing it with [pipx](https://pypa.github.io/pipx/). Installation command options:\n\n```bash\n# With pipx from PyPI (recommended)\npipx install cookiecutter-data-science\n\n# With pip from PyPI\npip install cookiecutter-data-science\n\n# With conda from conda-forge (coming soon)\n# conda install cookiecutter-data-science -c conda-forge\n```\n\n## Starting a new project\n\nTo start a new project, run:\n\n```bash\nccds\n```\n\n### The resulting directory structure\n\nThe directory structure of your new project will look something like this (depending on the settings that you choose):\n\n```\n\u251c\u2500\u2500 LICENSE            <- Open-source license if one is chosen\n\u251c\u2500\u2500 Makefile           <- Makefile with convenience commands like `make data` or `make train`\n\u251c\u2500\u2500 README.md          <- The top-level README for developers using this project.\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 external       <- Data from third party sources.\n\u2502   \u251c\u2500\u2500 interim        <- Intermediate data that has been transformed.\n\u2502   \u251c\u2500\u2500 processed      <- The final, canonical data sets for modeling.\n\u2502   \u2514\u2500\u2500 raw            <- The original, immutable data dump.\n\u2502\n\u251c\u2500\u2500 docs               <- A default mkdocs project; see www.mkdocs.org for details\n\u2502\n\u251c\u2500\u2500 models             <- Trained and serialized models, model predictions, or model summaries\n\u2502\n\u251c\u2500\u2500 notebooks          <- Jupyter notebooks. Naming convention is a number (for ordering),\n\u2502                         the creator's initials, and a short `-` delimited description, e.g.\n\u2502                         `1.0-jqp-initial-data-exploration`.\n\u2502\n\u251c\u2500\u2500 pyproject.toml     <- Project configuration file with package metadata for \n\u2502                         {{ cookiecutter.module_name }} and configuration for tools like black\n\u2502\n\u251c\u2500\u2500 references         <- Data dictionaries, manuals, and all other explanatory materials.\n\u2502\n\u251c\u2500\u2500 reports            <- Generated analysis as HTML, PDF, LaTeX, etc.\n\u2502   \u2514\u2500\u2500 figures        <- Generated graphics and figures to be used in reporting\n\u2502\n\u251c\u2500\u2500 requirements.txt   <- The requirements file for reproducing the analysis environment, e.g.\n\u2502                         generated with `pip freeze > requirements.txt`\n\u2502\n\u251c\u2500\u2500 setup.cfg          <- Configuration file for flake8\n\u2502\n\u2514\u2500\u2500 {{ cookiecutter.module_name }}   <- Source code for use in this project.\n    \u2502\n    \u251c\u2500\u2500 __init__.py             <- Makes {{ cookiecutter.module_name }} a Python module\n    \u2502\n    \u251c\u2500\u2500 config.py               <- Store useful variables and configuration\n    \u2502\n    \u251c\u2500\u2500 dataset.py              <- Scripts to download or generate data\n    \u2502\n    \u251c\u2500\u2500 features.py             <- Code to create features for modeling\n    \u2502\n    \u251c\u2500\u2500 modeling                \n    \u2502   \u251c\u2500\u2500 __init__.py \n    \u2502   \u251c\u2500\u2500 predict.py          <- Code to run model inference with trained models          \n    \u2502   \u2514\u2500\u2500 train.py            <- Code to train models\n    \u2502\n    \u2514\u2500\u2500 plots.py                <- Code to create visualizations   \n```\n\n## Using v1\n\nIf you want to use the old v1 project template, you need to have either the cookiecutter-data-science package or cookiecutter package installed. Then, use either command-line program with the `-c v1` option:\n\n```bash\nccds https://github.com/drivendataorg/cookiecutter-data-science -c v1\n# or equivalently\ncookiecutter https://github.com/drivendataorg/cookiecutter-data-science -c v1\n```\n\n## Contributing\n\nWe welcome contributions! [See the docs for guidelines](https://cookiecutter-data-science.drivendata.org/contributing/).\n\n### Installing development requirements\n\n```bash\npip install -r dev-requirements.txt\n```\n\n### Running the tests\n\n```bash\npytest tests\n```\n",
        "releases": [
            {
                "name": "v2.0.0",
                "date": "2024-05-22T19:10:02Z"
            },
            {
                "name": "v1 (Legacy)",
                "date": "2021-03-20T05:48:12Z"
            }
        ]
    }
}