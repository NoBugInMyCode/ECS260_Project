{
    "https://api.github.com/repos/typst/typst": {
        "forks": 994,
        "watchers": 36862,
        "stars": 36862,
        "languages": {
            "Rust": 3550784,
            "Typst": 550689,
            "TypeScript": 14512,
            "Nix": 4196,
            "Dockerfile": 1718,
            "HTML": 1027,
            "Shell": 10
        },
        "commits": [
            "2025-01-21T11:10:06Z",
            "2025-01-16T13:40:57Z",
            "2025-01-16T13:40:29Z",
            "2025-01-13T19:19:37Z",
            "2025-01-10T16:54:11Z",
            "2025-01-09T13:00:18Z",
            "2025-01-09T10:49:06Z",
            "2025-01-09T09:34:16Z",
            "2025-01-08T10:57:56Z",
            "2025-01-08T09:38:34Z",
            "2025-01-07T13:13:15Z",
            "2025-01-06T15:41:58Z",
            "2025-01-06T15:20:28Z",
            "2025-01-06T15:13:17Z",
            "2025-01-06T13:55:34Z",
            "2025-01-06T13:31:42Z",
            "2025-01-06T13:15:11Z",
            "2025-01-06T13:13:53Z",
            "2025-01-06T13:00:44Z",
            "2025-01-06T12:58:36Z",
            "2025-01-06T12:43:41Z",
            "2024-12-20T12:35:57Z",
            "2024-12-20T11:15:14Z",
            "2024-12-20T10:18:52Z",
            "2024-12-20T10:15:18Z",
            "2024-12-20T10:03:12Z",
            "2024-12-20T10:00:09Z",
            "2024-12-20T09:48:17Z",
            "2024-12-18T19:26:39Z",
            "2024-12-18T18:11:13Z"
        ],
        "creation_date": "2019-09-24T21:41:56Z",
        "contributors": 30,
        "topics": [
            "compiler",
            "markup",
            "typesetting"
        ],
        "subscribers": 104,
        "readme": "<h1 align=\"center\">\n  <img alt=\"Typst\" src=\"https://user-images.githubusercontent.com/17899797/226108480-722b770e-6313-40d7-84f2-26bebb55a281.png\">\n</h1>\n\n<p align=\"center\">\n  <a href=\"https://typst.app/docs/\">\n    <img alt=\"Documentation\" src=\"https://img.shields.io/website?down_message=offline&label=docs&up_color=007aff&up_message=online&url=https%3A%2F%2Ftypst.app%2Fdocs\"\n  ></a>\n  <a href=\"https://typst.app/\">\n    <img alt=\"Typst App\" src=\"https://img.shields.io/website?down_message=offline&label=typst.app&up_color=239dad&up_message=online&url=https%3A%2F%2Ftypst.app\"\n  ></a>\n  <a href=\"https://discord.gg/2uDybryKPe\">\n    <img alt=\"Discord Server\" src=\"https://img.shields.io/discord/1054443721975922748?color=5865F2&label=discord&labelColor=555\"\n  ></a>\n  <a href=\"https://github.com/typst/typst/blob/main/LICENSE\">\n    <img alt=\"Apache-2 License\" src=\"https://img.shields.io/badge/license-Apache%202-brightgreen\"\n  ></a>\n  <a href=\"https://typst.app/jobs/\">\n    <img alt=\"Jobs at Typst\" src=\"https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Ftypst.app%2Fassets%2Fdata%2Fshields.json&query=%24.jobs.text&label=jobs&color=%23A561FF&cacheSeconds=1800\"\n  ></a>\n</p>\n\nTypst is a new markup-based typesetting system that is designed to be as powerful\nas LaTeX while being much easier to learn and use. Typst has:\n\n- Built-in markup for the most common formatting tasks\n- Flexible functions for everything else\n- A tightly integrated scripting system\n- Math typesetting, bibliography management, and more\n- Fast compile times thanks to incremental compilation\n- Friendly error messages in case something goes wrong\n\nThis repository contains the Typst compiler and its CLI, which is everything you\nneed to compile Typst documents locally. For the best writing experience,\nconsider signing up to our [collaborative online editor][app] for free.\n\n## Example\nA [gentle introduction][tutorial] to Typst is available in our documentation.\nHowever, if you want to see the power of Typst encapsulated in one image, here\nit is:\n<p align=\"center\">\n <img alt=\"Example\" width=\"900\" src=\"https://user-images.githubusercontent.com/17899797/228031796-ced0e452-fcee-4ae9-92da-b9287764ff25.png\">\n</p>\n\n\nLet's dissect what's going on:\n\n- We use _set rules_ to configure element properties like the size of pages or\n  the numbering of headings. By setting the page height to `auto`, it scales to\n  fit the content. Set rules accommodate the most common configurations. If you\n  need full control, you can also use [show rules][show] to completely redefine\n  the appearance of an element.\n\n- We insert a heading with the `= Heading` syntax. One equals sign creates a top\n  level heading, two create a subheading and so on. Typst has more lightweight\n  markup like this, see the [syntax] reference for a full list.\n\n- [Mathematical equations][math] are enclosed in dollar signs. By adding extra\n  spaces around the contents of an equation, we can put it into a separate block.\n  Multi-letter identifiers are interpreted as Typst definitions and functions\n  unless put into quotes. This way, we don't need backslashes for things like\n  `floor` and `sqrt`. And `phi.alt` applies the `alt` modifier to the `phi` to\n  select a particular symbol variant.\n\n- Now, we get to some [scripting]. To input code into a Typst document, we can\n  write a hash followed by an expression. We define two variables and a\n  recursive function to compute the n-th fibonacci number. Then, we display the\n  results in a center-aligned table. The table function takes its cells\n  row-by-row. Therefore, we first pass the formulas `$F_1$` to `$F_8$` and then\n  the computed fibonacci numbers. We apply the spreading operator (`..`) to both\n  because they are arrays and we want to pass the arrays' items as individual\n  arguments.\n\n<details>\n  <summary>Text version of the code example.</summary>\n\n  ```typst\n  #set page(width: 10cm, height: auto)\n  #set heading(numbering: \"1.\")\n\n  = Fibonacci sequence\n  The Fibonacci sequence is defined through the\n  recurrence relation $F_n = F_(n-1) + F_(n-2)$.\n  It can also be expressed in _closed form:_\n\n  $ F_n = round(1 / sqrt(5) phi.alt^n), quad\n    phi.alt = (1 + sqrt(5)) / 2 $\n\n  #let count = 8\n  #let nums = range(1, count + 1)\n  #let fib(n) = (\n    if n <= 2 { 1 }\n    else { fib(n - 1) + fib(n - 2) }\n  )\n\n  The first #count numbers of the sequence are:\n\n  #align(center, table(\n    columns: count,\n    ..nums.map(n => $F_#n$),\n    ..nums.map(n => str(fib(n))),\n  ))\n  ```\n</details>\n\n## Installation\nTypst's CLI is available from different sources:\n\n- You can get sources and pre-built binaries for the latest release of Typst\n  from the [releases page][releases]. Download the archive for your platform and\n  place it in a directory that is in your `PATH`. To stay up to date with future\n  releases, you can simply run `typst update`.\n\n- You can install Typst through different package managers. Note that the\n  versions in the package managers might lag behind the latest release.\n  - Linux: View [Typst on Repology][repology]\n  - macOS: `brew install typst`\n  - Windows: `winget install --id Typst.Typst`\n\n- If you have a [Rust][rust] toolchain installed, you can install\n  - the latest released Typst version with\n    `cargo install --locked typst-cli`\n  - a development version with\n    `cargo install --git https://github.com/typst/typst --locked typst-cli`\n\n- Nix users can\n  - use the `typst` package with `nix-shell -p typst`\n  - build and run a development version with\n    `nix run github:typst/typst -- --version`.\n\n- Docker users can run a prebuilt image with\n  `docker run ghcr.io/typst/typst:latest --help`.\n\n## Usage\nOnce you have installed Typst, you can use it like this:\n```sh\n# Creates `file.pdf` in working directory.\ntypst compile file.typ\n\n# Creates PDF file at the desired path.\ntypst compile path/to/source.typ path/to/output.pdf\n```\n\nYou can also watch source files and automatically recompile on changes. This is\nfaster than compiling from scratch each time because Typst has incremental\ncompilation.\n```sh\n# Watches source files and recompiles on changes.\ntypst watch file.typ\n```\n\nTypst further allows you to add custom font paths for your project and list all\nof the fonts it discovered:\n```sh\n# Adds additional directories to search for fonts.\ntypst compile --font-path path/to/fonts file.typ\n\n# Lists all of the discovered fonts in the system and the given directory.\ntypst fonts --font-path path/to/fonts\n\n# Or via environment variable (Linux syntax).\nTYPST_FONT_PATHS=path/to/fonts typst fonts\n```\n\nFor other CLI subcommands and options, see below:\n```sh\n# Prints available subcommands and options.\ntypst help\n\n# Prints detailed usage of a subcommand.\ntypst help watch\n```\n\nIf you prefer an integrated IDE-like experience with autocompletion and instant\npreview, you can also check out [Typst's free web app][app].\n\n## Community\nThe main place where the community gathers is our [Discord server][discord].\nFeel free to join there to ask questions, help out others, share cool things\nyou created with Typst, or just to chat.\n\nAside from that there are a few places where you can find things built by\nthe community:\n\n- The official [package list](https://typst.app/docs/packages)\n- The [Awesome Typst](https://github.com/qjcg/awesome-typst) repository\n\nIf you had a bad experience in our community, please [reach out to us][contact].\n\n## Contributing\nWe would love to see contributions from the community. If you experience bugs,\nfeel free to open an issue. If you would like to implement a new feature or bug\nfix, please follow the steps outlined in the [contribution guide][contributing].\n\nTo build Typst yourself, first ensure that you have the\n[latest stable Rust][rust] installed. Then, clone this repository and build the\nCLI with the following commands:\n\n```sh\ngit clone https://github.com/typst/typst\ncd typst\ncargo build --release\n```\n\nThe optimized binary will be stored in `target/release/`.\n\nAnother good way to contribute is by [sharing packages][packages] with the\ncommunity.\n\n## Pronunciation and Spelling\nIPA: /ta\u026apst/. \"Ty\" like in **Ty**pesetting and \"pst\" like in Hi**pst**er. When\nwriting about Typst, capitalize its name as a proper noun, with a capital \"T\".\n\n## Design Principles\nAll of Typst has been designed with three key goals in mind: Power,\nsimplicity, and performance. We think it's time for a system that matches the\npower of LaTeX, is easy to learn and use, all while being fast enough to realize\ninstant preview. To achieve these goals, we follow three core design principles:\n\n- **Simplicity through Consistency:**\n  If you know how to do one thing in Typst, you should be able to transfer that\n  knowledge to other things. If there are multiple ways to do the same thing,\n  one of them should be at a different level of abstraction than the other. E.g.\n  it's okay that `= Introduction` and `#heading[Introduction]` do the same thing\n  because the former is just syntax sugar for the latter.\n\n- **Power through Composability:**\n  There are two ways to make something flexible: Have a knob for everything or\n  have a few knobs that you can combine in many ways. Typst is designed with the\n  second way in mind. We provide systems that you can compose in ways we've\n  never even thought of. TeX is also in the second category, but it's a bit\n  low-level and therefore people use LaTeX instead. But there, we don't really\n  have that much composability. Instead, there's a package for everything\n  (`\\usepackage{knob}`).\n\n- **Performance through Incrementality:**\n  All Typst language features must accommodate for incremental compilation.\n  Luckily we have [`comemo`], a system for incremental compilation which does\n  most of the hard work in the background.\n\n[docs]: https://typst.app/docs/\n[app]: https://typst.app/\n[discord]: https://discord.gg/2uDybryKPe\n[tutorial]: https://typst.app/docs/tutorial/\n[show]: https://typst.app/docs/reference/styling/#show-rules\n[math]: https://typst.app/docs/reference/math/\n[syntax]: https://typst.app/docs/reference/syntax/\n[scripting]: https://typst.app/docs/reference/scripting/\n[rust]: https://rustup.rs/\n[releases]: https://github.com/typst/typst/releases/\n[repology]: https://repology.org/project/typst/versions\n[contact]: https://typst.app/contact\n[architecture]: https://github.com/typst/typst/blob/main/docs/dev/architecture.md\n[contributing]: https://github.com/typst/typst/blob/main/CONTRIBUTING.md\n[packages]: https://github.com/typst/packages/\n[`comemo`]: https://github.com/typst/comemo/\n",
        "releases": [
            {
                "name": "Version 0.12.0 (October 18, 2024)",
                "date": "2024-10-18T21:41:48Z"
            },
            {
                "name": "Version 0.12.0, Release Candidate 2 (October 15, 2024)",
                "date": "2024-10-15T14:28:05Z"
            },
            {
                "name": "Version 0.12.0, Release Candidate 1 (October 3, 2024)",
                "date": "2024-10-03T21:52:10Z"
            },
            {
                "name": "Version 0.11.1 (May 17, 2024)",
                "date": "2024-05-17T15:33:15Z"
            },
            {
                "name": "Version 0.11.0 (March 15, 2024)",
                "date": "2024-03-15T18:05:50Z"
            },
            {
                "name": "Version 0.11.0, Release Candidate 1 (March 9, 2024)",
                "date": "2024-03-09T18:29:10Z"
            },
            {
                "name": "Version 0.10.0 (December 4, 2023)",
                "date": "2023-12-04T15:51:31Z"
            },
            {
                "name": "Version 0.9.0 (October 31, 2023)",
                "date": "2023-10-31T01:32:16Z"
            },
            {
                "name": "Version 0.8.0 (September 13, 2023)",
                "date": "2023-09-13T15:45:00Z"
            },
            {
                "name": "Version 0.7.0 (August 7, 2023)",
                "date": "2023-08-07T16:20:37Z"
            },
            {
                "name": "Version 0.6.0 (June 30, 2023)",
                "date": "2023-06-30T15:04:25Z"
            },
            {
                "name": "Version 0.5.0 (June 9, 2023)",
                "date": "2023-06-09T14:55:29Z"
            },
            {
                "name": "Version 0.4.0 (May 20, 2023)",
                "date": "2023-05-20T20:40:20Z"
            },
            {
                "name": "Version 0.3.0 (April 26, 2023)",
                "date": "2023-04-26T14:20:47Z"
            },
            {
                "name": "Version 0.2.0 (April 11, 2023)",
                "date": "2023-04-11T20:39:55Z"
            },
            {
                "name": "Version 0.1.0 (April 04, 2023)",
                "date": "2023-04-04T23:46:28Z"
            },
            {
                "name": "March 28, 2023",
                "date": "2023-03-28T07:46:54Z"
            },
            {
                "name": "March 21, 2023 / 2",
                "date": "2023-03-21T22:21:52Z"
            },
            {
                "name": "March 21, 2023",
                "date": "2023-03-21T17:23:21Z"
            }
        ]
    }
}