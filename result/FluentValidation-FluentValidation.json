{
    "https://api.github.com/repos/FluentValidation/FluentValidation": {
        "forks": 1217,
        "watchers": 9204,
        "stars": 9204,
        "languages": {
            "C#": 1100552,
            "PowerShell": 1392,
            "Batchfile": 81,
            "Shell": 31
        },
        "commits": [
            "2025-01-22T10:47:00Z",
            "2025-01-14T22:02:23Z",
            "2025-01-05T13:42:17Z",
            "2025-01-05T12:30:28Z",
            "2025-01-05T12:29:01Z",
            "2025-01-05T12:24:25Z",
            "2025-01-05T12:05:46Z",
            "2025-01-03T19:24:16Z",
            "2025-01-02T12:59:14Z",
            "2025-01-02T12:54:52Z",
            "2025-01-02T12:47:56Z",
            "2024-12-07T21:04:22Z",
            "2024-11-16T19:48:30Z",
            "2024-11-16T19:36:14Z",
            "2024-11-16T19:33:04Z",
            "2024-11-10T13:05:31Z",
            "2024-10-15T20:09:05Z",
            "2024-10-06T09:12:58Z",
            "2024-10-06T05:17:20Z",
            "2024-10-06T05:20:25Z",
            "2024-10-06T04:54:13Z",
            "2024-10-05T10:20:49Z",
            "2024-10-05T10:07:12Z",
            "2024-10-04T12:18:12Z",
            "2024-10-04T23:42:35Z",
            "2024-10-04T23:44:26Z",
            "2024-10-04T23:46:39Z",
            "2024-10-04T01:46:49Z",
            "2024-10-04T02:13:01Z",
            "2024-10-04T10:40:42Z"
        ],
        "creation_date": "2009-12-20T19:17:03Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 271,
        "readme": "<p>\r\n<img src=\"https://raw.githubusercontent.com/FluentValidation/FluentValidation/gh-pages/assets/images/logo/fluent-validation-logo.png\" alt=\"FluentValidation\" width=\"250px\" />\r\n</p>\r\n\r\n[![Build Status](https://github.com/FluentValidation/FluentValidation/workflows/CI/badge.svg)](https://github.com/FluentValidation/FluentValidation/actions?query=workflow%3ACI) [![NuGet](https://img.shields.io/nuget/v/FluentValidation.svg)](https://nuget.org/packages/FluentValidation) [![Nuget](https://img.shields.io/nuget/dt/FluentValidation.svg)](https://nuget.org/packages/FluentValidation)\r\n\r\n[Full Documentation](https://fluentvalidation.net)\r\n\r\nA validation library for .NET that uses a fluent interface\r\nand lambda expressions for building strongly-typed validation rules.\r\n\r\n---\r\n### Supporting the project\r\nIf you use FluentValidation in a commercial project, please sponsor the project financially. FluentValidation is developed and supported by [@JeremySkinner](https://github.com/JeremySkinner) for free in his spare time and financial sponsorship helps keep the project going. You can sponsor the project via either [GitHub sponsors](https://github.com/sponsors/JeremySkinner) or [OpenCollective](https://opencollective.com/FluentValidation).\r\n\r\n---\r\n\r\n### Get Started\r\n\r\nFluentValidation can be installed using the Nuget package manager or the `dotnet` CLI.\r\n\r\n```\r\ndotnet add package FluentValidation\r\n```\r\n\r\n[Review our documentation](https://docs.fluentvalidation.net) for instructions on how to use the package.\r\n\r\n---\r\n\r\n### Example\r\n```csharp\r\nusing FluentValidation;\r\n\r\npublic class CustomerValidator: AbstractValidator<Customer> {\r\n  public CustomerValidator() {\r\n    RuleFor(x => x.Surname).NotEmpty();\r\n    RuleFor(x => x.Forename).NotEmpty().WithMessage(\"Please specify a first name\");\r\n    RuleFor(x => x.Discount).NotEqual(0).When(x => x.HasDiscount);\r\n    RuleFor(x => x.Address).Length(20, 250);\r\n    RuleFor(x => x.Postcode).Must(BeAValidPostcode).WithMessage(\"Please specify a valid postcode\");\r\n  }\r\n\r\n  private bool BeAValidPostcode(string postcode) {\r\n    // custom postcode validating logic goes here\r\n  }\r\n}\r\n\r\nvar customer = new Customer();\r\nvar validator = new CustomerValidator();\r\n\r\n// Execute the validator\r\nValidationResult results = validator.Validate(customer);\r\n\r\n// Inspect any validation failures.\r\nbool success = results.IsValid;\r\nList<ValidationFailure> failures = results.Errors;\r\n```\r\n\r\n### License, Copyright etc\r\n\r\nFluentValidation has adopted the [Code of Conduct](https://github.com/FluentValidation/FluentValidation/blob/main/.github/CODE_OF_CONDUCT.md) defined by the Contributor Covenant to clarify expected behavior in our community.\r\nFor more information see the [.NET Foundation Code of Conduct](https://dotnetfoundation.org/code-of-conduct).\r\n\r\nFluentValidation is copyright &copy; 2008-2022 .NET Foundation, [Jeremy Skinner](https://jeremyskinner.co.uk) and other contributors and is licensed under the [Apache2 license](https://github.com/JeremySkinner/FluentValidation/blob/master/License.txt).\r\n\r\n### Sponsors\r\n\r\nThis project is sponsored by the following organisations whose support help keep this project going:\r\n\r\n- [Microsoft](https://microsoft.com) for their financial contribution \r\n- [JetBrains](https://www.jetbrains.com/?from=FluentValidation) for providing licenses to their developer tools\r\n\r\nThis project is part of the [.NET Foundation](https://dotnetfoundation.org).\r\n",
        "releases": [
            {
                "name": "",
                "date": "2024-11-16T19:45:47Z"
            },
            {
                "name": "",
                "date": "2024-09-19T13:49:20Z"
            },
            {
                "name": "",
                "date": "2024-06-10T12:22:45Z"
            },
            {
                "name": "",
                "date": "2024-04-23T12:29:32Z"
            },
            {
                "name": "",
                "date": "2023-12-21T11:55:45Z"
            },
            {
                "name": "",
                "date": "2023-11-22T09:46:17Z"
            },
            {
                "name": "",
                "date": "2023-10-19T12:13:00Z"
            },
            {
                "name": "",
                "date": "2023-08-12T19:35:47Z"
            },
            {
                "name": "",
                "date": "2023-08-11T13:51:16Z"
            },
            {
                "name": "",
                "date": "2023-07-04T17:31:00Z"
            },
            {
                "name": "",
                "date": "2023-04-07T18:08:30Z"
            },
            {
                "name": "",
                "date": "2023-02-20T12:49:38Z"
            },
            {
                "name": "",
                "date": "2023-02-13T12:48:39Z"
            },
            {
                "name": "",
                "date": "2022-11-23T18:02:15Z"
            },
            {
                "name": "",
                "date": "2022-11-10T17:26:33Z"
            },
            {
                "name": "",
                "date": "2022-09-11T11:03:19Z"
            },
            {
                "name": "",
                "date": "2022-08-28T12:13:23Z"
            },
            {
                "name": "",
                "date": "2022-08-08T18:36:41Z"
            },
            {
                "name": "",
                "date": "2022-08-06T10:53:11Z"
            },
            {
                "name": "",
                "date": "2022-06-22T15:20:39Z"
            },
            {
                "name": "",
                "date": "2022-06-10T17:05:40Z"
            },
            {
                "name": "",
                "date": "2022-05-27T09:43:35Z"
            },
            {
                "name": "",
                "date": "2022-05-07T11:13:31Z"
            },
            {
                "name": "",
                "date": "2022-04-30T14:12:33Z"
            },
            {
                "name": "",
                "date": "2022-03-11T09:41:28Z"
            },
            {
                "name": "",
                "date": "2021-12-13T14:55:25Z"
            },
            {
                "name": "",
                "date": "2021-11-30T21:18:40Z"
            },
            {
                "name": "10.3.4",
                "date": "2021-10-22T11:54:04Z"
            },
            {
                "name": "",
                "date": "2021-08-24T17:44:53Z"
            },
            {
                "name": "",
                "date": "2021-08-24T17:40:18Z"
            },
            {
                "name": "",
                "date": "2021-08-19T16:23:50Z"
            },
            {
                "name": "",
                "date": "2021-07-09T09:12:40Z"
            },
            {
                "name": "",
                "date": "2021-06-03T10:02:59Z"
            },
            {
                "name": "",
                "date": "2021-06-01T11:17:45Z"
            },
            {
                "name": "",
                "date": "2021-05-30T10:36:44Z"
            },
            {
                "name": "",
                "date": "2021-05-28T12:44:42Z"
            },
            {
                "name": "",
                "date": "2021-04-28T07:32:34Z"
            },
            {
                "name": "",
                "date": "2021-04-17T12:11:39Z"
            },
            {
                "name": "",
                "date": "2021-04-15T13:22:55Z"
            },
            {
                "name": "",
                "date": "2021-04-09T09:49:29Z"
            },
            {
                "name": "",
                "date": "2021-04-08T17:04:59Z"
            },
            {
                "name": "",
                "date": "2021-04-06T13:30:54Z"
            },
            {
                "name": "",
                "date": "2021-04-05T14:25:29Z"
            },
            {
                "name": "",
                "date": "2021-03-15T18:05:34Z"
            },
            {
                "name": "",
                "date": "2021-03-08T17:10:12Z"
            },
            {
                "name": "",
                "date": "2021-02-11T17:30:56Z"
            },
            {
                "name": "",
                "date": "2021-01-31T16:28:49Z"
            },
            {
                "name": "",
                "date": "2021-01-14T13:43:26Z"
            },
            {
                "name": "",
                "date": "2020-11-10T16:10:41Z"
            },
            {
                "name": "",
                "date": "2020-09-20T13:08:17Z"
            },
            {
                "name": "",
                "date": "2020-09-19T09:39:14Z"
            },
            {
                "name": "",
                "date": "2020-08-26T09:05:19Z"
            },
            {
                "name": "9.1.3",
                "date": "2020-08-19T08:41:45Z"
            },
            {
                "name": "9.1.2",
                "date": "2020-08-12T16:10:05Z"
            },
            {
                "name": "9.1.1",
                "date": "2020-08-08T17:04:46Z"
            },
            {
                "name": "9.1.0",
                "date": "2020-08-08T11:21:52Z"
            },
            {
                "name": "",
                "date": "2020-07-06T14:53:52Z"
            },
            {
                "name": "",
                "date": "2020-07-06T14:47:23Z"
            },
            {
                "name": "",
                "date": "2020-07-06T14:44:05Z"
            },
            {
                "name": "",
                "date": "2020-07-06T14:40:21Z"
            },
            {
                "name": "",
                "date": "2020-02-21T15:28:41Z"
            },
            {
                "name": "",
                "date": "2020-02-19T11:21:12Z"
            },
            {
                "name": "",
                "date": "2020-02-19T11:14:28Z"
            },
            {
                "name": "",
                "date": "2020-02-19T11:13:03Z"
            },
            {
                "name": "",
                "date": "2019-11-04T12:09:06Z"
            },
            {
                "name": "",
                "date": "2019-09-24T11:23:03Z"
            },
            {
                "name": "8.4.0",
                "date": "2019-09-24T10:44:15Z"
            },
            {
                "name": "8.3.0",
                "date": "2019-09-24T10:45:34Z"
            },
            {
                "name": "8.2.3",
                "date": "2019-09-24T10:46:08Z"
            },
            {
                "name": "",
                "date": "2019-09-24T10:46:39Z"
            },
            {
                "name": "",
                "date": "2019-09-24T10:47:24Z"
            },
            {
                "name": "",
                "date": "2019-09-24T10:52:18Z"
            },
            {
                "name": "",
                "date": "2019-09-24T10:53:25Z"
            },
            {
                "name": "",
                "date": "2019-09-24T10:54:04Z"
            },
            {
                "name": "",
                "date": "2019-09-24T10:56:06Z"
            },
            {
                "name": "",
                "date": "2019-09-24T10:56:31Z"
            },
            {
                "name": "",
                "date": "2019-09-24T10:56:45Z"
            },
            {
                "name": "",
                "date": "2019-09-24T10:58:36Z"
            }
        ]
    }
}