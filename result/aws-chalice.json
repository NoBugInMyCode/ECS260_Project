{
    "https://api.github.com/repos/aws/chalice": {
        "forks": 1004,
        "watchers": 10733,
        "stars": 10733,
        "languages": {
            "Python": 1737704,
            "Makefile": 1923,
            "Shell": 1584
        },
        "commits": [
            "2024-12-12T18:36:57Z",
            "2024-11-29T18:24:22Z",
            "2024-11-27T18:24:50Z",
            "2024-11-27T18:23:48Z",
            "2024-11-27T17:21:16Z",
            "2024-11-20T21:59:56Z",
            "2024-07-29T13:37:20Z",
            "2024-06-10T17:04:11Z",
            "2024-06-03T16:20:33Z",
            "2024-06-03T16:07:41Z",
            "2024-05-30T17:08:53Z",
            "2024-05-17T06:56:39Z",
            "2024-05-29T21:54:30Z",
            "2024-05-29T21:53:49Z",
            "2024-05-29T21:27:44Z",
            "2024-05-29T21:49:21Z",
            "2024-05-29T21:48:26Z",
            "2024-05-29T19:56:44Z",
            "2024-05-29T15:45:55Z",
            "2024-05-28T18:27:32Z",
            "2022-10-09T08:18:13Z",
            "2024-05-28T19:33:04Z",
            "2024-05-28T19:29:18Z",
            "2024-05-28T19:21:43Z",
            "2024-05-28T19:08:28Z",
            "2024-05-28T18:38:10Z",
            "2024-04-10T08:18:52Z",
            "2024-02-22T22:38:57Z",
            "2024-02-22T20:33:54Z",
            "2024-02-22T17:53:53Z"
        ],
        "creation_date": "2016-05-27T23:27:13Z",
        "contributors": 30,
        "topics": [
            "aws",
            "aws-apigateway",
            "aws-lambda",
            "cloud",
            "lambda",
            "python",
            "python27",
            "python3",
            "serverless",
            "serverless-framework"
        ],
        "subscribers": 236,
        "readme": "===========\nAWS Chalice\n===========\n\n.. image:: https://badges.gitter.im/awslabs/chalice.svg\n   :target: https://gitter.im/awslabs/chalice?utm_source=badge&utm_medium=badge\n   :alt: Gitter\n.. image:: https://readthedocs.org/projects/chalice/badge/?version=latest\n   :target: http://aws.github.io/chalice/?badge=latest\n   :alt: Documentation Status\n\n\n.. image:: https://aws.github.io/chalice/_images/chalice-logo-whitespace.png\n   :target: https://aws.github.io/chalice/\n   :alt: Chalice Logo\n\n\nChalice is a framework for writing serverless apps in python. It allows\nyou to quickly create and deploy applications that use AWS Lambda.  It provides:\n\n* A command line tool for creating, deploying, and managing your app\n* A decorator based API for integrating with Amazon API Gateway, Amazon S3,\n  Amazon SNS, Amazon SQS, and other AWS services.\n* Automatic IAM policy generation\n\n\nYou can create Rest APIs:\n\n.. code-block:: python\n\n    from chalice import Chalice\n\n    app = Chalice(app_name=\"helloworld\")\n\n    @app.route(\"/\")\n    def index():\n        return {\"hello\": \"world\"}\n\nTasks that run on a periodic basis:\n\n.. code-block:: python\n\n    from chalice import Chalice, Rate\n\n    app = Chalice(app_name=\"helloworld\")\n\n    # Automatically runs every 5 minutes\n    @app.schedule(Rate(5, unit=Rate.MINUTES))\n    def periodic_task(event):\n        return {\"hello\": \"world\"}\n\n\nYou can connect a lambda function to an S3 event:\n\n.. code-block:: python\n\n    from chalice import Chalice\n\n    app = Chalice(app_name=\"helloworld\")\n\n    # Whenever an object is uploaded to 'mybucket'\n    # this lambda function will be invoked.\n\n    @app.on_s3_event(bucket='mybucket')\n    def handler(event):\n        print(\"Object uploaded for bucket: %s, key: %s\"\n              % (event.bucket, event.key))\n\nAs well as an SQS queue:\n\n.. code-block:: python\n\n    from chalice import Chalice\n\n    app = Chalice(app_name=\"helloworld\")\n\n    # Invoke this lambda function whenever a message\n    # is sent to the ``my-queue-name`` SQS queue.\n\n    @app.on_sqs_message(queue='my-queue-name')\n    def handler(event):\n        for record in event:\n            print(\"Message body: %s\" % record.body)\n\n\nAnd several other AWS resources.\n\nOnce you've written your code, you just run ``chalice deploy``\nand Chalice takes care of deploying your app.\n\n::\n\n    $ chalice deploy\n    ...\n    https://endpoint/dev\n\n    $ curl https://endpoint/api\n    {\"hello\": \"world\"}\n\nUp and running in less than 30 seconds.\nGive this project a try and share your feedback with us here on Github.\n\nThe documentation is available\n`here <http://aws.github.io/chalice/>`__.\n\nQuickstart\n==========\n\n.. quick-start-begin\n\nIn this tutorial, you'll use the ``chalice`` command line utility\nto create and deploy a basic REST API.  This quickstart uses Python 3.7,\nbut AWS Chalice supports all versions of python supported by AWS Lambda,\nwhich includes Python 3.7 through python 3.12.\n\nYou can find the latest versions of python on the\n`Python download page <https://www.python.org/downloads/>`_.\n\nTo install Chalice, we'll first create and activate a virtual environment\nin python3.7::\n\n    $ python3 --version\n    Python 3.7.3\n    $ python3 -m venv venv37\n    $ . venv37/bin/activate\n\nNext we'll install Chalice using ``pip``::\n\n    $ python3 -m pip install chalice\n\nYou can verify you have chalice installed by running::\n\n    $ chalice --help\n    Usage: chalice [OPTIONS] COMMAND [ARGS]...\n    ...\n\n\nCredentials\n-----------\n\nBefore you can deploy an application, be sure you have\ncredentials configured.  If you have previously configured your\nmachine to run boto3 (the AWS SDK for Python) or the AWS CLI then\nyou can skip this section.\n\nIf this is your first time configuring credentials for AWS you\ncan follow these steps to quickly get started::\n\n    $ mkdir ~/.aws\n    $ cat >> ~/.aws/config\n    [default]\n    aws_access_key_id=YOUR_ACCESS_KEY_HERE\n    aws_secret_access_key=YOUR_SECRET_ACCESS_KEY\n    region=YOUR_REGION (such as us-west-2, us-west-1, etc)\n\nIf you want more information on all the supported methods for\nconfiguring credentials, see the\n`boto3 docs\n<http://boto3.readthedocs.io/en/latest/guide/configuration.html>`__.\n\n\nCreating Your Project\n---------------------\n\nThe next thing we'll do is use the ``chalice`` command to create a new\nproject::\n\n    $ chalice new-project helloworld\n\nThis will create a ``helloworld`` directory.  Cd into this\ndirectory.  You'll see several files have been created for you::\n\n    $ cd helloworld\n    $ ls -la\n    drwxr-xr-x   .chalice\n    -rw-r--r--   app.py\n    -rw-r--r--   requirements.txt\n\nYou can ignore the ``.chalice`` directory for now, the two main files\nwe'll focus on is ``app.py`` and ``requirements.txt``.\n\nLet's take a look at the ``app.py`` file:\n\n.. code-block:: python\n\n    from chalice import Chalice\n\n    app = Chalice(app_name='helloworld')\n\n\n    @app.route('/')\n    def index():\n        return {'hello': 'world'}\n\n\nThe ``new-project`` command created a sample app that defines a\nsingle view, ``/``, that when called will return the JSON body\n``{\"hello\": \"world\"}``.\n\n\nDeploying\n---------\n\nLet's deploy this app.  Make sure you're in the ``helloworld``\ndirectory and run ``chalice deploy``::\n\n    $ chalice deploy\n    Creating deployment package.\n    Creating IAM role: helloworld-dev\n    Creating lambda function: helloworld-dev\n    Creating Rest API\n    Resources deployed:\n      - Lambda ARN: arn:aws:lambda:us-west-2:12345:function:helloworld-dev\n      - Rest API URL: https://abcd.execute-api.us-west-2.amazonaws.com/api/\n\nYou now have an API up and running using API Gateway and Lambda::\n\n    $ curl https://qxea58oupc.execute-api.us-west-2.amazonaws.com/api/\n    {\"hello\": \"world\"}\n\nTry making a change to the returned dictionary from the ``index()``\nfunction.  You can then redeploy your changes by running ``chalice deploy``.\n\n.. quick-start-end\n\nNext Steps\n----------\n\nYou've now created your first app using ``chalice``.  You can make\nmodifications to your ``app.py`` file and rerun ``chalice deploy`` to\nredeploy your changes.\n\nAt this point, there are several next steps you can take.\n\n* `Tutorials <https://aws.github.io/chalice/tutorials/index.html>`__\n  - Choose from among several guided tutorials that will\n  give you step-by-step examples of various features of Chalice.\n* `Topics <https://aws.github.io/chalice/topics/index.html>`__ - Deep\n  dive into documentation on specific areas of Chalice.\n  This contains more detailed documentation than the tutorials.\n* `API Reference <https://aws.github.io/chalice/api.html>`__ - Low level\n  reference documentation on all the classes and methods that are part of the\n  public API of Chalice.\n\nIf you're done experimenting with Chalice and you'd like to cleanup, you can\nuse the ``chalice delete`` command, and Chalice will delete all the resources\nit created when running the ``chalice deploy`` command.\n\n::\n\n    $ chalice delete\n    Deleting Rest API: abcd4kwyl4\n    Deleting function aws:arn:lambda:region:123456789:helloworld-dev\n    Deleting IAM Role helloworld-dev\n\n\nFeedback\n========\n\nWe'd also love to hear from you.  Please create any Github issues for\nadditional features you'd like to see over at\nhttps://github.com/aws/chalice/issues.  You can also chat with us\non gitter: https://gitter.im/awslabs/chalice\n",
        "releases": []
    }
}