{
    "https://api.github.com/repos/apache/jmeter": {
        "forks": 2127,
        "watchers": 8528,
        "stars": 8528,
        "languages": {
            "Java": 9181031,
            "Kotlin": 583699,
            "HTML": 93440,
            "XSLT": 91403,
            "JavaScript": 36223,
            "Batchfile": 25552,
            "Shell": 24265,
            "CSS": 23066,
            "Less": 6310,
            "Groovy": 1083
        },
        "commits": [
            "2025-01-08T19:35:59Z",
            "2025-01-08T19:18:32Z",
            "2025-01-08T19:16:12Z",
            "2024-11-26T15:13:13Z",
            "2024-08-09T14:29:52Z",
            "2024-11-30T02:22:02Z",
            "2024-11-30T02:32:32Z",
            "2024-10-28T20:33:20Z",
            "2024-10-28T20:18:06Z",
            "2024-10-04T16:34:10Z",
            "2024-10-04T14:26:09Z",
            "2024-09-27T08:07:56Z",
            "2024-09-25T16:25:09Z",
            "2024-09-25T10:28:54Z",
            "2024-09-24T15:05:28Z",
            "2024-09-27T17:26:28Z",
            "2024-09-27T16:29:14Z",
            "2024-09-27T16:27:36Z",
            "2024-09-27T12:36:27Z",
            "2024-04-26T07:33:04Z",
            "2024-09-27T12:29:13Z",
            "2024-09-27T09:18:45Z",
            "2024-08-11T05:26:22Z",
            "2024-09-12T08:33:41Z",
            "2024-08-06T10:00:43Z",
            "2024-08-06T09:29:38Z",
            "2024-06-30T19:37:38Z",
            "2024-08-06T07:37:53Z",
            "2024-08-04T21:13:56Z",
            "2024-06-23T10:53:21Z"
        ],
        "creation_date": "2010-05-26T23:38:07Z",
        "contributors": 30,
        "topics": [
            "java",
            "performance",
            "test"
        ],
        "subscribers": 320,
        "readme": "<h1 align=\"center\"><img src=\"https://jmeter.apache.org/images/logo.svg\" alt=\"Apache JMeter logo\" /></h1>\n\nAn Open Source Java application designed to measure performance and load test applications.\n\nBy The Apache Software Foundation\n\n[![Build Status](https://api.travis-ci.com/apache/jmeter.svg?branch=master)](https://travis-ci.com/apache/jmeter/)\n[![codecov](https://codecov.io/gh/apache/jmeter/branch/master/graph/badge.svg)](https://codecov.io/gh/apache/jmeter)\n[![License](https://img.shields.io/:license-apache-brightgreen.svg)](https://www.apache.org/licenses/LICENSE-2.0.html)\n[![Stack Overflow](https://img.shields.io/:stack%20overflow-jmeter-brightgreen.svg)](https://stackoverflow.com/questions/tagged/jmeter)\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.apache.jmeter/ApacheJMeter/badge.svg)](https://maven-badges.herokuapp.com/maven-central/org.apache.jmeter/ApacheJMeter)\n[![Javadocs](https://www.javadoc.io/badge/org.apache.jmeter/ApacheJMeter_core.svg)](https://www.javadoc.io/doc/org.apache.jmeter/ApacheJMeter_core)\n[![Twitter](https://img.shields.io/twitter/url/https/github.com/apache/jmeter.svg?style=social)](https://twitter.com/intent/tweet?text=Powerful%20load%20testing%20with%20Apache%20JMeter:&url=https://jmeter.apache.org)\n\n## What Is It?\n\nApache JMeter can measure performance and load test static and dynamic web applications.\n\nIt can be used to simulate a heavy load on a server, group of servers,\nnetwork or object to test its strength or to analyze overall performance under different load types.\n\n![JMeter screen](https://raw.githubusercontent.com/apache/jmeter/master/xdocs/images/screenshots/jmeter_screen.png)\n\n## Features\n\nComplete portability and 100% Java.\n\nMulti-threading allows concurrent sampling by many threads and\nsimultaneous sampling of different functions by separate thread groups.\n\n### Protocols\n\nAbility to load and performance test many applications/server/protocol types:\n\n- Web - HTTP, HTTPS (Java, NodeJS, PHP, ASP.NET,...)\n- SOAP / REST Webservices\n- FTP\n- Database via JDBC\n- LDAP\n- Message-oriented Middleware (MOM) via JMS\n- Mail - SMTP(S), POP3(S) and IMAP(S)\n- Native commands or shell scripts\n- TCP\n- Java Objects\n\n### IDE\n\nFully featured Test IDE that allows fast Test Plan **recording**\n (from Browsers or native applications), **building** and **debugging**.\n\n### Command Line\n\n[Command-line mode (Non GUI / headless mode)](https://jmeter.apache.org/usermanual/get-started.html#non_gui)\nto load test from any Java compatible OS (Linux, Windows, Mac OSX, ...)\n\n### Reporting\n\nA complete and ready to present [dynamic HTML report](https://jmeter.apache.org/usermanual/generating-dashboard.html)\n\n![Dashboard screenshot](https://raw.githubusercontent.com/apache/jmeter/master/xdocs/images/screenshots/dashboard/response_time_percentiles_over_time.png)\n\n[Live reporting](https://jmeter.apache.org/usermanual/realtime-results.html)\ninto 3rd party databases like InfluxDB or Graphite\n\n![Live report](https://raw.githubusercontent.com/apache/jmeter/master/xdocs/images/screenshots/grafana_dashboard.png)\n\n### Correlation\n\nEasy correlation through ability to extract data from most popular response formats,\n[HTML](https://jmeter.apache.org/usermanual/component_reference.html#CSS/JQuery_Extractor),\n[JSON](https://jmeter.apache.org/usermanual/component_reference.html#JSON_Extractor),\n[XML](https://jmeter.apache.org/usermanual/component_reference.html#XPath_Extractor) or\n[any textual format](https://jmeter.apache.org/usermanual/component_reference.html#Regular_Expression_Extractor)\n\n### Highly Extensible Core\n\n- Pluggable Samplers allow unlimited testing capabilities.\n- **Scriptable Samplers** (JSR223-compatible languages like Groovy).\n- Several load statistics can be chosen with **pluggable tiers**.\n- Data analysis and **visualization plugins** allow great extensibility and personalization.\n- Functions can be used to provide dynamic input to a test or provide data manipulation.\n- Easy Continuous Integration via 3rd party Open Source libraries for Maven, Gradle and Jenkins.\n\n## The Latest Version\n\nDetails of the latest version can be found on the\n[JMeter Apache Project web site](https://jmeter.apache.org/)\n\n## Requirements\n\nThe following requirements exist for running Apache JMeter:\n\n- Java Interpreter:\n\n  A fully compliant Java 17 Runtime Environment is required\n  for Apache JMeter to execute. A JDK with `keytool` utility is better suited\n  for Recording HTTPS websites.\n\n- Optional jars:\n\n  Some jars are not included with JMeter.\n  If required, these should be downloaded and placed in the lib directory\n  - JDBC - available from the database supplier\n  - JMS - available from the JMS provider\n  - [Bouncy Castle](https://www.bouncycastle.org/) -\n  only needed for SMIME Assertion\n\n- Java Compiler (*OPTIONAL*):\n\n  A Java compiler is not needed since the distribution includes a\n  precompiled Java binary archive.\n  > **Note** that a compiler is required to build plugins for Apache JMeter.\n\n## Installation Instructions\n\n> **Note** that spaces in directory names can cause problems.\n\n- Release builds\n\n  Unpack the binary archive into a suitable directory structure.\n\n## Running JMeter\n\n1. Change to the `bin` directory\n2. Run the `jmeter` (Un\\*x) or `jmeter.bat` (Windows) file.\n\n### Windows\n\nFor Windows, there are also some other scripts which you can drag-and-drop\na JMX file onto:\n\n- `jmeter-n.cmd` - runs the file as a non-GUI test\n- `jmeter-n-r.cmd` - runs the file as a non-GUI remote (client-server) test\n- `jmeter-t.cmd` - loads the file ready to run it as a GUI test\n\n## Documentation\n\nThe documentation available as of the date of this release is\nalso included, in HTML format, in the [printable_docs](printable_docs) directory,\nand it may be browsed starting from the file called [index.html](printable_docs/index.html).\n\n## Reporting a bug/enhancement\n\nSee [Issue Tracking](https://jmeter.apache.org/issues.html).\n\n## Build instructions\n\n### Release builds\n\nUnpack the source archive into a suitable directory structure.\nMost of the 3rd party library files can be extracted from the binary archive\nby unpacking it into the same directory structure.\n\nAny optional jars (see above) should be placed in `lib/opt` and/or `lib`.\n\nJars in `lib/opt` will be used for building JMeter and running the unit tests,\nbut won't be used at run-time.\n\n_This is useful for testing what happens if the optional jars are not\ndownloaded by other JMeter users._\n\nIf you are behind a proxy, you can set a few build properties in\n`~/.gradle/gradle.properties` for Gradle to use the proxy:\n\n```properties\nsystemProp.http.proxyHost=proxy.example.invalid\nsystemProp.http.proxyPort=8080\nsystemProp.http.proxyUser=your_user_name\nsystemProp.http.proxyPassword=your_password\nsystemProp.https.proxyHost=proxy.example.invalid\nsystemProp.https.proxyPort=8080\nsystemProp.https.proxyUser=your_user_name\nsystemProp.https.proxyPassword=your_password\n```\n\n### Test builds\n\nJMeter is built using Gradle, and it uses [Gradle's Toolchains for JVM projects](https://docs.gradle.org/current/userguide/toolchains.html)\nfor provisioning JDKs. It means the code would search for the needed JDKs locally, or download them\nif they are not found.\n\nBy default, the code would use JDK 17 for build purposes, however it would set the target release to 8,\nso the resulting artifacts would be compatible with Java 8.\n\nThe following command builds and tests JMeter:\n\n```sh\n./gradlew build\n```\n\nIf you want to use a custom JDK for building you can set `-PjdkBuildVersion=11`,\nand you can select `-PjdkTestVersion=21` if you want to use a different JDK for testing.\n\nYou can list the available build parameters by executing\n\n```sh\n./gradlew parameters\n```\n\nIf the system does not have a GUI display then:\n\n```sh\n./gradlew build -Djava.awt.headless=true\n```\n\nThe output artifacts (jars, reports) are placed in the `build` folder.\nFor instance, binary artifacts can be found under `src/dist/build/distributions`.\n\nThe following command would compile the application and enable you to run `jmeter`\nfrom the `bin` directory.\n\n> **Note** that it completely refreshes `lib/` contents,\nso it would remove custom plugins should you have them installed to `lib/`. However, it would keep `lib/ext/` plugins intact.\n\n```sh\n./gradlew createDist\n```\n\nAlternatively, you could get Gradle to start the GUI:\n\n```sh\n./gradlew runGui\n```\n\n## Developer Information\n\nBuilding and contributing is explained in details at\n[building JMeter](https://jmeter.apache.org/building.html)\nand [CONTRIBUTING.md](CONTRIBUTING.md). More information on the tasks available for\nbuilding JMeter with Gradle is available in [gradle.md](gradle.md).\n\nThe code can be obtained from:\n\n- https://github.com/apache/jmeter\n- https://gitbox.apache.org/repos/asf/jmeter.git\n\n## Licensing and Legal Information\n\nFor legal and licensing information, please see the following files:\n\n- [LICENSE](LICENSE)\n- [NOTICE](NOTICE)\n\n## Cryptographic Software Notice\n\nThis distribution may include software that has been designed for use\nwith cryptographic software. The country in which you currently reside\nmay have restrictions on the import, possession, use, and/or re-export\nto another country, of encryption software. BEFORE using any encryption\nsoftware, please check your country's laws, regulations and policies\nconcerning the import, possession, or use, and re-export of encryption\nsoftware, to see if this is permitted. See <https://www.wassenaar.org/>\nfor more information.\n\nThe U.S. Government Department of Commerce, Bureau of Industry and\nSecurity (BIS), has classified this software as Export Commodity\nControl Number (ECCN) 5D002.C.1, which includes information security\nsoftware using or performing cryptographic functions with asymmetric\nalgorithms. The form and manner of this Apache Software Foundation\ndistribution makes it eligible for export under the License Exception\nENC Technology Software Unrestricted (TSU) exception (see the BIS\nExport Administration Regulations, Section 740.13) for both object\ncode and source code.\n\nThe following provides more details on the included software that\nmay be subject to export controls on cryptographic software:\n\nApache JMeter interfaces with the\nJava Secure Socket Extension (JSSE) API to provide\n\n- HTTPS support\n\nApache JMeter interfaces (via Apache HttpClient4) with the\nJava Cryptography Extension (JCE) API to provide\n\n- NTLM authentication\n\nApache JMeter does not include any implementation of JSSE or JCE.\n\n## Thanks\n\n**Thank you for using Apache JMeter.**\n\n### Third party notices\n\n* Notice for mxparser:\n\n  >  This product includes software developed by the Indiana\n  >  University Extreme! Lab.  For further information please visit\n  >  http://www.extreme.indiana.edu/\n",
        "releases": [
            {
                "name": "v5.6.3",
                "date": "2024-01-09T08:29:40Z"
            },
            {
                "name": "v5.6.2",
                "date": "2024-01-09T08:26:14Z"
            },
            {
                "name": "v5.6.1",
                "date": "2023-07-10T16:01:28Z"
            },
            {
                "name": "v5.6",
                "date": "2023-06-24T14:02:20Z"
            },
            {
                "name": "v5.5",
                "date": "2023-06-24T14:04:29Z"
            },
            {
                "name": "v5.4.3: Update log4j to 2.17.0 (fix CVE-2021-45105)",
                "date": "2023-06-24T14:07:33Z"
            },
            {
                "name": "v5.4.2: Update log4j2 to 2.16.0 to fix CVE-2021-44228",
                "date": "2023-06-24T14:06:25Z"
            },
            {
                "name": "v5.4.1",
                "date": "2023-06-24T14:15:15Z"
            },
            {
                "name": "v5.4",
                "date": "2023-06-24T14:15:42Z"
            },
            {
                "name": "v5.3",
                "date": "2023-06-24T14:18:30Z"
            }
        ]
    }
}