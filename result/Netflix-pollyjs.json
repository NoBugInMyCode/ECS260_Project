{
    "https://api.github.com/repos/Netflix/pollyjs": {
        "forks": 351,
        "watchers": 10219,
        "stars": 10219,
        "languages": {
            "JavaScript": 328635,
            "HTML": 1912,
            "Shell": 1311,
            "Mustache": 1219,
            "Handlebars": 72
        },
        "commits": [
            "2023-09-19T19:20:46Z",
            "2023-07-20T16:37:01Z",
            "2023-07-19T18:55:27Z",
            "2022-04-04T16:46:09Z",
            "2022-04-04T16:42:26Z",
            "2022-04-04T16:38:03Z",
            "2022-02-07T18:59:33Z",
            "2021-12-10T05:58:12Z",
            "2021-12-10T05:55:34Z",
            "2021-12-10T05:55:09Z",
            "2021-12-08T17:04:02Z",
            "2021-12-08T17:03:22Z",
            "2021-12-07T22:48:10Z",
            "2021-12-07T22:47:07Z",
            "2021-12-07T21:58:23Z",
            "2021-12-06T22:54:19Z",
            "2021-12-06T22:53:45Z",
            "2021-12-06T22:43:53Z",
            "2021-11-30T22:18:06Z",
            "2021-11-30T21:47:24Z",
            "2021-11-30T21:40:29Z",
            "2021-11-30T21:35:42Z",
            "2021-11-30T20:27:07Z",
            "2021-11-30T20:05:02Z",
            "2021-11-30T19:21:05Z",
            "2021-11-30T18:07:17Z",
            "2021-11-30T01:35:09Z",
            "2021-11-29T22:52:40Z",
            "2021-11-29T22:20:48Z",
            "2021-11-29T19:21:55Z"
        ],
        "creation_date": "2018-05-31T20:39:44Z",
        "contributors": 30,
        "topics": [
            "browser",
            "javascript",
            "netflix",
            "nodejs",
            "record",
            "replay",
            "testing"
        ],
        "subscribers": 373,
        "readme": "<p align=\"center\">\n  <img alt=\"Polly.JS\" width=\"400px\" src=\"https://netflix.github.io/pollyjs/assets/images/wordmark-logo-alt.png\" />\n</p>\n<h2 align=\"center\">Record, Replay, and Stub HTTP Interactions</h2>\n\n[![Build Status](https://travis-ci.com/Netflix/pollyjs.svg?branch=master)](https://travis-ci.com/Netflix/pollyjs)\n[![license](https://img.shields.io/github/license/Netflix/pollyjs.svg)](http://www.apache.org/licenses/LICENSE-2.0)\n\nPolly.JS is a standalone, framework-agnostic JavaScript library that enables recording, replaying, and stubbing of HTTP interactions. By tapping into multiple request APIs across both Node & the browser, Polly.JS is able to mock requests and responses with little to no configuration while giving you the ability to take full control of each request with a simple, powerful, and intuitive API.\n\n> Interested in contributing or just seeing Polly in action? Head over to [CONTRIBUTING.md](CONTRIBUTING.md) to learn how to spin up the project!\n\n## Why Polly?\n\nKeeping fixtures and factories in parity with your APIs can be a time consuming process.\nPolly alleviates this process by recording and maintaining actual server responses while also staying flexible.\n\n- Record your test suite's HTTP interactions and replay them during future test runs for fast, deterministic, accurate tests.\n- Use Polly's client-side server to modify or intercept requests and responses to simulate different application states (e.g. loading, error, etc.).\n\n## Features\n\n- \ud83d\ude80 Node & Browser Support\n- \u26a1\ufe0f\ufe0f Simple, Powerful, & Intuitive API\n- \ud83d\udc8e First Class Mocha & QUnit Test Helpers\n- \ud83d\udd25 Intercept, Pass-Through, and Attach Events\n- \ud83d\udcfc Record to Disk or Local Storage\n- \u23f1 Slow Down or Speed Up Time\n\n## Getting Started\n\nCheck out the [Quick Start](https://netflix.github.io/pollyjs/#/quick-start) documentation to get started.\n\n## Usage\n\nLet's take a look at what an example test case would look like using Polly.\n\n```js\nimport { Polly } from '@pollyjs/core';\nimport XHRAdapter from '@pollyjs/adapter-xhr';\nimport FetchAdapter from '@pollyjs/adapter-fetch';\nimport RESTPersister from '@pollyjs/persister-rest';\n\n/*\n  Register the adapters and persisters we want to use. This way all future\n  polly instances can access them by name.\n*/\nPolly.register(XHRAdapter);\nPolly.register(FetchAdapter);\nPolly.register(RESTPersister);\n\ndescribe('Netflix Homepage', function () {\n  it('should be able to sign in', async function () {\n    /*\n      Create a new polly instance.\n\n      Connect Polly to both fetch and XHR browser APIs. By default, it will\n      record any requests that it hasn't yet seen while replaying ones it\n      has already recorded.\n    */\n    const polly = new Polly('Sign In', {\n      adapters: ['xhr', 'fetch'],\n      persister: 'rest'\n    });\n    const { server } = polly;\n\n    /* Intercept all Google Analytic requests and respond with a 200 */\n    server\n      .get('/google-analytics/*path')\n      .intercept((req, res) => res.sendStatus(200));\n\n    /* Pass-through all GET requests to /coverage */\n    server.get('/coverage').passthrough();\n\n    /* start: pseudo test code */\n    await visit('/login');\n    await fillIn('email', 'polly@netflix.com');\n    await fillIn('password', '@pollyjs');\n    await submit();\n    /* end: pseudo test code */\n\n    expect(location.pathname).to.equal('/browse');\n\n    /*\n      Calling `stop` will persist requests as well as disconnect from any\n      connected browser APIs (e.g. fetch or XHR).\n    */\n    await polly.stop();\n  });\n});\n```\n\nThe above test case would generate the following [HAR](http://www.softwareishard.com/blog/har-12-spec/)\nfile which Polly will use to replay the sign-in response when the test is rerun:\n\n```json\n{\n  \"log\": {\n    \"_recordingName\": \"Sign In\",\n    \"browser\": {\n      \"name\": \"Chrome\",\n      \"version\": \"67.0\"\n    },\n    \"creator\": {\n      \"name\": \"Polly.JS\",\n      \"version\": \"0.5.0\",\n      \"comment\": \"persister:rest\"\n    },\n    \"entries\": [\n      {\n        \"_id\": \"06f06e6d125cbb80896c41786f9a696a\",\n        \"_order\": 0,\n        \"cache\": {},\n        \"request\": {\n          \"bodySize\": 51,\n          \"cookies\": [],\n          \"headers\": [\n            {\n              \"name\": \"content-type\",\n              \"value\": \"application/json; charset=utf-8\"\n            }\n          ],\n          \"headersSize\": 97,\n          \"httpVersion\": \"HTTP/1.1\",\n          \"method\": \"POST\",\n          \"postData\": {\n            \"mimeType\": \"application/json; charset=utf-8\",\n            \"text\": \"{\\\"email\\\":\\\"polly@netflix.com\\\",\\\"password\\\":\\\"@pollyjs\\\"}\"\n          },\n          \"queryString\": [],\n          \"url\": \"https://netflix.com/api/v1/login\"\n        },\n        \"response\": {\n          \"bodySize\": 0,\n          \"content\": {\n            \"mimeType\": \"text/plain; charset=utf-8\",\n            \"size\": 0\n          },\n          \"cookies\": [],\n          \"headers\": [],\n          \"headersSize\": 0,\n          \"httpVersion\": \"HTTP/1.1\",\n          \"redirectURL\": \"\",\n          \"status\": 200,\n          \"statusText\": \"OK\"\n        },\n        \"startedDateTime\": \"2018-06-29T17:31:55.348Z\",\n        \"time\": 11,\n        \"timings\": {\n          \"blocked\": -1,\n          \"connect\": -1,\n          \"dns\": -1,\n          \"receive\": 0,\n          \"send\": 0,\n          \"ssl\": -1,\n          \"wait\": 11\n        }\n      }\n    ],\n    \"pages\": [],\n    \"version\": \"1.2\"\n  }\n}\n```\n\n## Prior Art\n\nThe \"Client Server\" API of Polly is heavily influenced by the very popular mock server library [pretender](https://github.com/pretenderjs/pretender). Pretender supports XHR and Fetch stubbing and is a great lightweight alternative to Polly if your project does not require persisting capabilities or Node adapters.\n\nThank you to all contributors especially the maintainers: [trek](https://github.com/trek), [stefanpenner](https://github.com/stefanpenner), and [xg-wang](https://github.com/xg-wang).\n\n## Contributors\n\n[//]: contributor-faces\n\n<a href=\"https://github.com/offirgolan\"><img src=\"https://avatars.githubusercontent.com/u/575938?v=4\" title=\"offirgolan\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/jasonmit\"><img src=\"https://avatars.githubusercontent.com/u/3108309?v=4\" title=\"jasonmit\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/cibernox\"><img src=\"https://avatars.githubusercontent.com/u/265339?v=4\" title=\"cibernox\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/DenrizSusam\"><img src=\"https://avatars.githubusercontent.com/u/39295979?v=4\" title=\"DenrizSusam\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/dustinsoftware\"><img src=\"https://avatars.githubusercontent.com/u/942358?v=4\" title=\"dustinsoftware\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/silverchen\"><img src=\"https://avatars.githubusercontent.com/u/6683103?v=4\" title=\"silverchen\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/tombh\"><img src=\"https://avatars.githubusercontent.com/u/160835?v=4\" title=\"tombh\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/zkwentz\"><img src=\"https://avatars.githubusercontent.com/u/4832?v=4\" title=\"zkwentz\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/agraves\"><img src=\"https://avatars.githubusercontent.com/u/46964?v=4\" title=\"agraves\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/brandon-leapyear\"><img src=\"https://avatars.githubusercontent.com/u/27799541?v=4\" title=\"brandon-leapyear\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/swashcap\"><img src=\"https://avatars.githubusercontent.com/u/1858316?v=4\" title=\"swashcap\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/justsml\"><img src=\"https://avatars.githubusercontent.com/u/397632?v=4\" title=\"justsml\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/DanielRuf\"><img src=\"https://avatars.githubusercontent.com/u/827205?v=4\" title=\"DanielRuf\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/dciccale\"><img src=\"https://avatars.githubusercontent.com/u/539546?v=4\" title=\"dciccale\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/ericclemmons\"><img src=\"https://avatars.githubusercontent.com/u/15182?v=4\" title=\"ericclemmons\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/jamesgeorge007\"><img src=\"https://avatars.githubusercontent.com/u/25279263?v=4\" title=\"jamesgeorge007\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/woodenconsulting\"><img src=\"https://avatars.githubusercontent.com/u/4163029?v=4\" title=\"woodenconsulting\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/feinoujc\"><img src=\"https://avatars.githubusercontent.com/u/1733707?v=4\" title=\"feinoujc\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/josex2r\"><img src=\"https://avatars.githubusercontent.com/u/3719730?v=4\" title=\"josex2r\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/jomaxx\"><img src=\"https://avatars.githubusercontent.com/u/2747424?v=4\" title=\"jomaxx\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/karlhorky\"><img src=\"https://avatars.githubusercontent.com/u/1935696?v=4\" title=\"karlhorky\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/kennethlarsen\"><img src=\"https://avatars.githubusercontent.com/u/1408595?v=4\" title=\"kennethlarsen\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/poteto\"><img src=\"https://avatars.githubusercontent.com/u/1390709?v=4\" title=\"poteto\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/fastfrwrd\"><img src=\"https://avatars.githubusercontent.com/u/231133?v=4\" title=\"fastfrwrd\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/rwd\"><img src=\"https://avatars.githubusercontent.com/u/218337?v=4\" title=\"rwd\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/rmachielse\"><img src=\"https://avatars.githubusercontent.com/u/2470404?v=4\" title=\"rmachielse\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/ROpdebee\"><img src=\"https://avatars.githubusercontent.com/u/15186467?v=4\" title=\"ROpdebee\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/gribnoysup\"><img src=\"https://avatars.githubusercontent.com/u/5036933?v=4\" title=\"gribnoysup\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/shriyash\"><img src=\"https://avatars.githubusercontent.com/u/4494915?v=4\" title=\"shriyash\" width=\"80\" height=\"80\"></a>\n\n[//]: contributor-faces\n\n## License\n\nCopyright (c) 2018 Netflix, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\n[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n",
        "releases": []
    }
}