{
    "https://api.github.com/repos/ydataai/ydata-profiling": {
        "forks": 1686,
        "watchers": 12662,
        "stars": 12662,
        "languages": {
            "Python": 638564,
            "HTML": 25900,
            "Jupyter Notebook": 11758,
            "CSS": 4706,
            "JavaScript": 2344,
            "Makefile": 1425,
            "Batchfile": 1026,
            "Dockerfile": 261
        },
        "commits": [
            "2025-01-17T11:29:47Z",
            "2025-01-17T10:54:17Z",
            "2025-01-17T10:50:24Z",
            "2025-01-17T10:48:03Z",
            "2024-12-19T17:17:22Z",
            "2024-12-18T00:13:16Z",
            "2024-12-10T02:31:52Z",
            "2024-12-06T15:30:47Z",
            "2024-12-04T12:20:42Z",
            "2024-12-03T00:25:09Z",
            "2024-11-13T02:28:45Z",
            "2024-11-08T09:09:14Z",
            "2024-11-07T02:19:05Z",
            "2024-11-06T02:02:34Z",
            "2024-10-30T03:47:29Z",
            "2024-10-29T14:51:43Z",
            "2024-10-28T19:40:33Z",
            "2024-10-28T19:36:33Z",
            "2024-10-28T19:21:06Z",
            "2024-10-28T18:18:36Z",
            "2024-10-28T17:20:10Z",
            "2024-07-16T15:29:23Z",
            "2024-10-25T12:54:04Z",
            "2024-10-25T12:13:47Z",
            "2024-10-25T12:13:23Z",
            "2024-10-25T11:42:38Z",
            "2024-10-15T17:48:15Z",
            "2024-10-15T17:46:49Z",
            "2024-10-15T16:45:06Z",
            "2024-10-15T15:06:37Z"
        ],
        "creation_date": "2016-01-09T23:47:55Z",
        "contributors": 30,
        "topics": [
            "big-data-analytics",
            "data-analysis",
            "data-exploration",
            "data-profiling",
            "data-quality",
            "data-science",
            "deep-learning",
            "eda",
            "exploration",
            "exploratory-data-analysis",
            "hacktoberfest",
            "html-report",
            "jupyter",
            "jupyter-notebook",
            "machine-learning",
            "pandas",
            "pandas-dataframe",
            "pandas-profiling",
            "python",
            "statistics"
        ],
        "subscribers": 152,
        "readme": "# ydata-profiling\n\n[![Build Status](https://github.com/ydataai/pandas-profiling/actions/workflows/tests.yml/badge.svg?branch=master)](https://github.com/ydataai/pandas-profiling/actions/workflows/tests.yml)\n[![PyPI download month](https://img.shields.io/pypi/dm/ydata-profiling.svg)](https://pypi.python.org/pypi/ydata-profiling/)\n[![](https://pepy.tech/badge/pandas-profiling)](https://pypi.org/project/ydata-profiling/)\n[![Code Coverage](https://codecov.io/gh/ydataai/pandas-profiling/branch/master/graph/badge.svg?token=gMptB4YUnF)](https://codecov.io/gh/ydataai/pandas-profiling)\n[![Release Version](https://img.shields.io/github/release/ydataai/pandas-profiling.svg)](https://github.com/ydataai/pandas-profiling/releases)\n[![Python Version](https://img.shields.io/pypi/pyversions/ydata-profiling)](https://pypi.org/project/ydata-profiling/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n<img referrerpolicy=\"no-referrer-when-downgrade\" src=\"https://static.scarf.sh/a.png?x-pxid=cb7e69df-af81-4352-809a-d4251756affc\" />\n\n<p align=\"center\"><img width=\"300\" src=\"https://assets.ydata.ai/oss/ydata-profiling_black.png\" alt=\"YData Profiling Logo\"></p>\n\n<p align=\"center\">\n  <a href=\"https://ydata-profiling.ydata.ai/docs/master/\">Documentation</a>\n  |\n  <a href=\"https://tiny.ydata.ai/dcai-ydata-profiling\">Discord</a>\n  | \n  <a href=\"https://stackoverflow.com/questions/tagged/pandas-profiling+or+ydata-profiling\">Stack Overflow</a>\n  |\n  <a href=\"https://ydata-profiling.ydata.ai/docs/master/pages/reference/changelog.html#changelog\">Latest changelog</a>\n\n</p>\n\n<p align=\"center\">\n  Do you like this project? Show us your love and <a href=\"https://engage.ydata.ai\">give feedback!</a>\n</p>\n\n`ydata-profiling` primary goal is to provide a one-line Exploratory Data Analysis (EDA) experience in a consistent and fast solution. Like pandas `df.describe()` function, that is so handy, ydata-profiling delivers an extended analysis of a DataFrame while allowing the data analysis to be exported in different formats such as **html** and **json**.\n\nThe package outputs a simple and digested analysis of a dataset, including **time-series** and **text**.\n\n> **Looking for a scalable solution that can fully integrate with your database systems?**<br>\n> Leverage YData Fabric Data Catalog to connect to different databases and storages (Oracle, snowflake, PostGreSQL, GCS, S3, etc.) and leverage an interactive and guided profiling experience in Fabric. Check out the [Community Version](http://ydata.ai/register?utm_source=ydata-profiling&utm_medium=documentation&utm_campaign=YData%20Fabric%20Community).\n\n## \u25b6\ufe0f Quickstart\n\n### Install\n```cmd\npip install ydata-profiling\n```\nor\n```cmd\nconda install -c conda-forge ydata-profiling\n```\n### Start profiling\n\nStart by loading your pandas `DataFrame` as you normally would, e.g. by using:\n\n```python\nimport numpy as np\nimport pandas as pd\nfrom ydata_profiling import ProfileReport\n\ndf = pd.DataFrame(np.random.rand(100, 5), columns=[\"a\", \"b\", \"c\", \"d\", \"e\"])\n```\n\nTo generate the standard profiling report, merely run:\n\n```python\nprofile = ProfileReport(df, title=\"Profiling Report\")\n```\n\n## \ud83d\udcca Key features\n\n- **Type inference**: automatic detection of columns' data types (*Categorical*, *Numerical*, *Date*, etc.)\n- **Warnings**: A summary of the problems/challenges in the data that you might need to work on (*missing data*, *inaccuracies*, *skewness*, etc.)\n- **Univariate analysis**: including descriptive statistics (mean, median, mode, etc) and informative visualizations such as distribution histograms\n- **Multivariate analysis**: including correlations, a detailed analysis of missing data, duplicate rows, and visual support for variables pairwise interaction\n- **Time-Series**: including different statistical information relative to time dependent data such as auto-correlation and seasonality, along ACF and PACF plots.\n- **Text analysis**: most common categories (uppercase, lowercase, separator), scripts (Latin, Cyrillic) and blocks (ASCII, Cyrilic)\n- **File and Image analysis**: file sizes, creation dates, dimensions, indication of truncated images and existence of EXIF metadata\n- **Compare datasets**: one-line solution to enable a fast and complete report on the comparison of datasets\n- **Flexible output formats**: all analysis can be exported to an HTML report that can be easily shared with different parties, as JSON for an easy integration in automated systems and as a widget in a Jupyter Notebook.\n\nThe report contains three additional sections:\n\n- **Overview**: mostly global details about the dataset (number of records, number of variables, overall missigness and duplicates, memory footprint)\n- **Alerts**: a comprehensive and automatic list of potential data quality issues (high correlation, skewness, uniformity, zeros, missing values, constant values, between others)\n- **Reproduction**: technical details about the analysis (time, version and configuration)\n\n### \ud83c\udf81 Latest features\n\n- Want to scale? Check the latest release with \u2b50\u26a1[Spark support](https://ydata-profiling.ydata.ai/docs/master/pages/integrations/pypspark.html)! \n- Looking for how you can do an EDA for Time-Series \ud83d\udd5b ? Check [this blogpost](https://towardsdatascience.com/how-to-do-an-eda-for-time-series-cbb92b3b1913).\n- You want to compare 2 datasets and get a report? Check [this blogpost](https://medium.com/towards-artificial-intelligence/how-to-compare-2-dataset-with-pandas-profiling-2ae3a9d7695e)\n\n### \u2728 Spark\n\nSpark support has been released, but we are always looking for an extra pair of hands \ud83d\udc50.\n[Check current work in progress!](https://github.com/ydataai/ydata-profiling/projects/3).\n\n## \ud83d\udcdd Use cases\nYData-profiling can be used to deliver a variety of different use-case. The documentation includes guides, tips and tricks for tackling them:\n\n| Use case | Description                                                                                 |\n|----------|---------------------------------------------------------------------------------------------|\n| [Comparing datasets](https://docs.profiling.ydata.ai/latest/features/comparing_datasets)                        | Comparing multiple version of the same dataset                                              |\n| [Profiling a Time-Series dataset](https://docs.profiling.ydata.ai/latest/features/time_series_datasets)               | Generating a report for a time-series dataset with a single line of code                    |\n|[Profiling large datasets](https://docs.profiling.ydata.ai/latest/features/big_data)                            | Tips on how to prepare data and configure `ydata-profiling` for working with large datasets |\n| [Handling sensitive data](https://docs.profiling.ydata.ai/latest/features/sensitive_data)                       | Generating reports which are mindful about sensitive data in the input dataset              |\n| [Dataset metadata and data dictionaries](https://docs.profiling.ydata.ai/latest/features/metadata)               | Complementing the report with dataset details and column-specific data dictionaries         |\n| [Customizing the report's appearance](https://docs.profiling.ydata.ai/latest/features/custom_reports) | Changing the appearance of the report's page and of the contained visualizations            |\n| [Profiling Databases](https://docs.profiling.ydata.ai/latest/features/collaborative_data_profiling) | For a seamless profiling experience in your organization's databases, check [Fabric Data Catalog](https://ydata.ai/products/data_catalog), which allows to consume data from different types of storages such as RDBMs (Azure SQL, PostGreSQL, Oracle, etc.) and object storages (Google Cloud Storage, AWS S3, Snowflake, etc.), among others. |\n### Using inside Jupyter Notebooks\n\nThere are two interfaces to consume the report inside a Jupyter notebook: through widgets and through an embedded HTML report.\n\n<img alt=\"Notebook Widgets\" src=\"https://ydata-profiling.ydata.ai/docs/master/assets/widgets.gif\" width=\"800\" />\n\nThe above is achieved by simply displaying the report as a set of widgets. In a Jupyter Notebook, run:\n\n```python\nprofile.to_widgets()\n```\n\nThe HTML report can be directly embedded in a cell in a similar fashion:\n\n```python\nprofile.to_notebook_iframe()\n```\n\n<img alt=\"HTML\" src=\"https://ydata-profiling.ydata.ai/docs/master/assets/iframe.gif\" width=\"800\" />\n\n### Exporting the report to a file\n\nTo generate a HTML report file, save the `ProfileReport` to an object and use the `to_file()` function:\n\n```python\nprofile.to_file(\"your_report.html\")\n```\n\nAlternatively, the report's data can be obtained as a JSON file:\n\n```python\n# As a JSON string\njson_data = profile.to_json()\n\n# As a file\nprofile.to_file(\"your_report.json\")\n```\n\n### Using in the command line\n\nFor standard formatted CSV files (which can be read directly by pandas without additional settings), the `ydata_profiling` executable can be used in the command line. The example below generates a report named *Example Profiling Report*, using a configuration file called `default.yaml`, in the file `report.html` by processing a `data.csv` dataset.\n\n```sh\nydata_profiling --title \"Example Profiling Report\" --config_file default.yaml data.csv report.html\n```\n\nAdditional details on the CLI are available [on the documentation](https://ydata-profiling.ydata.ai/docs/master/pages/getting_started/quickstart.html#command-line-usage).\n\n## \ud83d\udc40 Examples\n\nThe following example reports showcase the potentialities of the package across a wide range of dataset and data types:\n\n* [Census Income](https://ydata-profiling.ydata.ai/examples/master/census/census_report.html) (US Adult Census data relating income with other demographic properties)\n* [NASA Meteorites](https://ydata-profiling.ydata.ai/examples/master/meteorites/meteorites_report.html) (comprehensive set of meteorite landing - object properties and locations) [![Open In Colab](https://camo.githubusercontent.com/52feade06f2fecbf006889a904d221e6a730c194/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667)](https://colab.research.google.com/github/ydataai/pandas-profiling/blob/master/examples/meteorites/meteorites_cloud.ipynb) [![Binder](https://camo.githubusercontent.com/483bae47a175c24dfbfc57390edd8b6982ac5fb3/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667)](https://mybinder.org/v2/gh/ydataai/pandas-profiling/master?filepath=examples%2Fmeteorites%2Fmeteorites%5Fcloud.ipynb)\n* [Titanic](https://ydata-profiling.ydata.ai/examples/master/titanic/titanic_report.html) (the \"Wonderwall\" of datasets) [![Open In Colab](https://camo.githubusercontent.com/52feade06f2fecbf006889a904d221e6a730c194/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667)](https://colab.research.google.com/github/ydataai/pandas-profiling/blob/master/examples/titanic/titanic_cloud.ipynb) [![Binder](https://camo.githubusercontent.com/483bae47a175c24dfbfc57390edd8b6982ac5fb3/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667)](https://mybinder.org/v2/gh/ydataai/pandas-profiling/master?filepath=examples%2Ftitanic%2Ftitanic%5Fcloud.ipynb)\n* [NZA](https://ydata-profiling.ydata.ai/examples/master/nza/nza_report.html) (open data from the Dutch Healthcare Authority)\n* [Stata Auto](https://ydata-profiling.ydata.ai/examples/master/stata_auto/stata_auto_report.html) (1978 Automobile data)\n* [Colors](https://ydata-profiling.ydata.ai/examples/master/colors/colors_report.html) (a simple colors dataset)\n* [Vektis](https://ydata-profiling.ydata.ai/examples/master/vektis/vektis_report.html) (Vektis Dutch Healthcare data)\n* [UCI Bank Dataset](https://ydata-profiling.ydata.ai/examples/master/bank_marketing_data/uci_bank_marketing_report.html) (marketing dataset from a bank)\n* [Russian Vocabulary](https://ydata-profiling.ydata.ai/examples/master/features/russian_vocabulary.html) (100 most common Russian words, showcasing unicode text analysis)\n* [Website Inaccessibility](https://ydata-profiling.ydata.ai/examples/master/features/website_inaccessibility_report.html) (website accessibility analysis, showcasing support for URL data)\n* [Orange prices](https://ydata-profiling.ydata.ai/examples/master/features/united_report.html) and \n* [Coal prices](https://ydata-profiling.ydata.ai/examples/master/features/flatly_report.html) (simple pricing evolution datasets, showcasing the theming options)\n* [USA Air Quality](https://github.com/ydataai/pandas-profiling/tree/master/examples/usaairquality) (Time-series air quality dataset EDA example)\n* [HCC](https://github.com/ydataai/pandas-profiling/tree/master/examples/hcc) (Open dataset from healthcare, showcasing compare between two sets of data, before and after preprocessing)\n\n## \ud83d\udee0\ufe0f Installation\nAdditional details, including information about widget support, are available [on the documentation](https://ydata-profiling.ydata.ai/docs/master/pages/getting_started/installation.html).\n\n### Using pip\n[![PyPi Downloads](https://pepy.tech/badge/ydata-profiling)](https://pepy.tech/project/ydata-profiling)\n[![PyPi Monthly Downloads](https://pepy.tech/badge/pandas-profiling/month)](https://pepy.tech/project/ydata-profiling/month)\n[![PyPi Version](https://badge.fury.io/py/ydata-profiling.svg)](https://pypi.org/project/ydata-profiling/)\n\nYou can install using the `pip` package manager by running:\n\n```sh\npip install -U ydata-profiling\n```\n\n#### Extras\n\nThe package declares \"extras\", sets of additional dependencies.\n\n* `[notebook]`: support for rendering the report in Jupyter notebook widgets.\n* `[unicode]`: support for more detailed Unicode analysis, at the expense of additional disk space.\n* `[pyspark]`: support for pyspark for big dataset analysis\n\nInstall these with e.g.\n\n```sh\npip install -U ydata-profiling[notebook,unicode,pyspark]\n```\n\n\n### Using conda\n[![Conda Downloads](https://img.shields.io/conda/dn/conda-forge/pandas-profiling.svg)](https://anaconda.org/conda-forge/pandas-profiling)\n[![Conda Version](https://img.shields.io/conda/vn/conda-forge/pandas-profiling.svg)](https://anaconda.org/conda-forge/pandas-profiling) \n\n\nYou can install using the `conda` package manager by running:\n\n```sh\nconda install -c conda-forge ydata-profiling\n```\n\n### From source (development)\n\nDownload the source code by cloning the repository or click on [Download ZIP](https://github.com/ydataai/pandas-profiling/archive/master.zip) to download the latest stable version.\n\nInstall it by navigating to the proper directory and running:\n\n```sh\npip install -e .\n```\n\nThe profiling report is written in HTML and CSS, which means a modern browser is required. \n\nYou need [Python 3](https://python3statement.github.io/) to run the package. Other dependencies can be found in the requirements files:\n\n| Filename | Requirements|\n|----------|-------------|\n| [requirements.txt](https://github.com/ydataai/pandas-profiling/blob/master/requirements.txt) | Package requirements|\n| [requirements-dev.txt](https://github.com/ydataai/pandas-profiling/blob/master/requirements-dev.txt)  |  Requirements for development|\n| [requirements-test.txt](https://github.com/ydataai/pandas-profiling/blob/master/requirements-test.txt) | Requirements for testing|\n| [setup.py](https://github.com/ydataai/pandas-profiling/blob/master/setup.py) | Requirements for widgets etc. |\n\n## \ud83d\udd17 Integrations\n\nTo maximize its usefulness in real world contexts, `ydata-profiling` has a set of implicit and explicit integrations with a variety of other actors in the Data Science ecosystem: \n\n| Integration type | Description |\n|---|---|\n| [Other DataFrame libraries](https://docs.profiling.ydata.ai/latest/integrations/other_dataframe_libraries) | How to compute the profiling of data stored in libraries other than pandas |\n| [Great Expectations](https://ydata-profiling.ydata.ai/docs/master/pages/integrations/great_expectations.html) | Generating [Great Expectations](https://greatexpectations.io) expectations suites directly from a profiling report |\n| [Interactive applications](https://docs.profiling.ydata.ai/latest/integrations/interactive_applications) | Embedding profiling reports in [Streamlit](http://streamlit.io), [Dash](http://dash.plotly.com) or [Panel](https://panel.holoviz.org) applications |\n| [Pipelines](https://ydata-profiling.ydata.ai/docs/master/pages/integrations/pipelines.html) | Integration with DAG workflow execution tools like [Airflow](https://airflow.apache.org) or [Kedro](https://kedro.org) |\n| [Cloud services](https://ydata-profiling.ydata.ai/docs/master/pages/integrations/cloud_services.html) | Using `ydata-profiling` in hosted computation services like [Lambda](https://lambdalabs.com), [Google Cloud](https://github.com/GoogleCloudPlatform/analytics-componentized-patterns/blob/master/retail/propensity-model/bqml/bqml_kfp_retail_propensity_to_purchase.ipynb) or [Kaggle](https://www.kaggle.com/code) |\n| [IDEs](https://ydata-profiling.ydata.ai/docs/master/pages/integrations/ides.html) | Using `ydata-profiling` directly from integrated development environments such as [PyCharm](https://www.jetbrains.com/pycharm/) |\n\n## \ud83d\ude4b Support\nNeed help? Want to share a perspective? Report a bug? Ideas for collaborations? Reach out via the following channels:\n\n- [Stack Overflow](https://stackoverflow.com/questions/tagged/pandas-profiling+or+ydata-profiling): ideal for asking questions on how to use the package\n- [GitHub Issues](https://github.com/ydataai/ydata-profiling/issues): bugs, proposals for changes, feature requests\n- [Discord](https://tiny.ydata.ai/dcai-ydata-profiling): ideal for projects discussions, ask questions, collaborations, general chat\n\n> **Need Help?**<br>\n> Get your questions answered with a product owner by [booking a Pawsome chat](https://meetings.hubspot.com/fabiana-clemente)! \ud83d\udc3c\n\n> \u2757 Before reporting an issue on GitHub, check out [Common Issues](https://docs.profiling.ydata.ai/latest/support-contribution/common_issues).\n\n## \ud83e\udd1d\ud83c\udffd Contributing\nLearn how to get involved in the [Contribution Guide](https://ydata-profiling.ydata.ai/docs/master/pages/support_contrib/contribution_guidelines.html).\n\nA low-threshold place to ask questions or start contributing is the [Data Centric AI Community's Discord](https://tiny.ydata.ai/dcai-ydata-profiling).\n\n\nA big thank you to all our amazing contributors! \n\n<a href=\"https://github.com/ydataai/ydata-profiling/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=ydataai/ydata-profiling\" />\n</a>\n\nContributors wall made with [contrib.rocks](https://contrib.rocks).\n",
        "releases": [
            {
                "name": "v4.12.2",
                "date": "2025-01-20T16:41:02Z"
            },
            {
                "name": "v4.12.1",
                "date": "2024-12-08T20:12:09Z"
            },
            {
                "name": "v4.12.0",
                "date": "2024-10-29T15:15:14Z"
            },
            {
                "name": "v4.11.0",
                "date": "2024-10-16T08:45:18Z"
            },
            {
                "name": "v4.10.0",
                "date": "2024-09-07T09:50:39Z"
            },
            {
                "name": "v4.9.0",
                "date": "2024-07-15T18:20:05Z"
            },
            {
                "name": "v4.8.3",
                "date": "2024-05-07T19:57:59Z"
            },
            {
                "name": "v4.8.2",
                "date": "2024-05-07T19:11:38Z"
            },
            {
                "name": "v4.8.1",
                "date": "2024-05-07T16:19:15Z"
            },
            {
                "name": "v4.8.0",
                "date": "2024-05-07T14:59:34Z"
            },
            {
                "name": "v4.7.0",
                "date": "2024-03-18T18:22:40Z"
            },
            {
                "name": "v4.6.5",
                "date": "2024-02-26T14:50:43Z"
            },
            {
                "name": "v4.6.4",
                "date": "2024-01-08T15:03:46Z"
            },
            {
                "name": "v4.6.3",
                "date": "2023-12-05T15:38:30Z"
            },
            {
                "name": "v4.6.2",
                "date": "2023-11-22T10:29:16Z"
            },
            {
                "name": "v4.6.1",
                "date": "2023-10-24T11:33:51Z"
            },
            {
                "name": "v4.6.0",
                "date": "2023-10-10T11:09:25Z"
            },
            {
                "name": "v4.5.1",
                "date": "2023-08-11T15:54:46Z"
            },
            {
                "name": "v4.5.0",
                "date": "2023-08-09T15:22:24Z"
            },
            {
                "name": "v4.4.0",
                "date": "2023-08-01T08:57:19Z"
            },
            {
                "name": "v4.3.2",
                "date": "2023-07-19T17:50:30Z"
            },
            {
                "name": "v4.3.1",
                "date": "2023-06-21T12:39:17Z"
            },
            {
                "name": "v4.3.0",
                "date": "2023-06-20T07:26:30Z"
            },
            {
                "name": "v4.2.0",
                "date": "2023-05-24T08:03:57Z"
            },
            {
                "name": "v4.1.2",
                "date": "2023-03-28T08:01:52Z"
            },
            {
                "name": "v4.1.1",
                "date": "2023-03-17T09:38:31Z"
            },
            {
                "name": "v4.1.0",
                "date": "2023-03-08T13:30:46Z"
            },
            {
                "name": "v4.0.0",
                "date": "2023-01-30T16:40:14Z"
            },
            {
                "name": "v3.6.3",
                "date": "2023-01-25T14:17:21Z"
            },
            {
                "name": "v3.6.2",
                "date": "2023-01-25T14:06:59Z"
            },
            {
                "name": "v3.6.1",
                "date": "2022-12-23T10:02:03Z"
            },
            {
                "name": "v3.6.0",
                "date": "2022-12-21T10:21:02Z"
            },
            {
                "name": "v3.5.0",
                "date": "2022-11-22T16:02:53Z"
            },
            {
                "name": "v3.4.0",
                "date": "2022-10-20T17:14:03Z"
            },
            {
                "name": "pandas-profiling v3.3.0",
                "date": "2022-09-07T14:31:12Z"
            },
            {
                "name": "pandas-profiling v3.2.0",
                "date": "2022-05-02T02:53:44Z"
            },
            {
                "name": "pandas-profiling v3.1.0",
                "date": "2021-09-27T23:08:38Z"
            },
            {
                "name": "pandas-profiling v3.0.0",
                "date": "2021-05-11T22:20:56Z"
            },
            {
                "name": "pandas-profiling v2.13.0",
                "date": "2021-05-08T23:00:42Z"
            },
            {
                "name": "pandas-profiling v2.12.0",
                "date": "2021-05-05T16:27:38Z"
            },
            {
                "name": "pandas-profiling v2.11.0",
                "date": "2021-02-20T14:18:35Z"
            },
            {
                "name": "pandas-profiling v2.10.1",
                "date": "2021-02-07T23:42:44Z"
            },
            {
                "name": "pandas-profiling v2.10.0rc1",
                "date": "2021-01-05T18:45:10Z"
            },
            {
                "name": "pandas-profiling v2.9.0",
                "date": "2020-09-03T10:09:06Z"
            },
            {
                "name": "pandas-profiling v2.9.0rc1",
                "date": "2020-07-12T22:44:32Z"
            },
            {
                "name": "pandas-profiling v2.8.0",
                "date": "2020-05-12T03:36:12Z"
            },
            {
                "name": "pandas-profiling v2.7.1",
                "date": "2020-05-11T17:47:46Z"
            },
            {
                "name": "pandas-profiling v2.7.0",
                "date": "2020-05-07T20:04:56Z"
            },
            {
                "name": "pandas-profiling v2.6.0",
                "date": "2020-04-13T22:49:13Z"
            },
            {
                "name": "pandas-profiling v2.5.0",
                "date": "2020-02-14T10:03:10Z"
            },
            {
                "name": "pandas-profiling v2.4.0",
                "date": "2020-01-08T03:13:44Z"
            },
            {
                "name": "pandas-profiling v2.3.0",
                "date": "2019-07-27T12:18:44Z"
            },
            {
                "name": "pandas-profiling v2.2.0",
                "date": "2019-07-22T09:26:09Z"
            },
            {
                "name": "pandas-profiling v2.1.2",
                "date": "2019-07-11T23:40:47Z"
            },
            {
                "name": "pandas-profiling v2.1.1",
                "date": "2019-07-11T07:30:27Z"
            },
            {
                "name": "pandas-profiling v2.1.0",
                "date": "2019-07-06T14:45:08Z"
            },
            {
                "name": "pandas-profiling v2.0.3",
                "date": "2019-06-23T10:08:56Z"
            },
            {
                "name": "pandas-profiling v2.0.2",
                "date": "2019-06-22T21:07:20Z"
            },
            {
                "name": "pandas-profiling v2.0.1",
                "date": "2019-06-21T14:32:52Z"
            },
            {
                "name": "pandas-profiling v2.0.0",
                "date": "2019-06-19T22:36:21Z"
            },
            {
                "name": "pandas-profiling v1.4.3",
                "date": "2019-06-19T07:41:51Z"
            },
            {
                "name": "pandas-profiling v1.4.2",
                "date": "2019-04-27T09:04:21Z"
            },
            {
                "name": "pandas-profiling v1.4.1",
                "date": "2018-01-10T15:09:19Z"
            },
            {
                "name": "Version 1.4",
                "date": "2017-02-05T17:20:53Z"
            },
            {
                "name": "pandas-profiling v1.3.0",
                "date": "2016-09-04T15:15:47Z"
            },
            {
                "name": "v1.2.0",
                "date": "2016-08-03T00:37:27Z"
            },
            {
                "name": "pandas-profiling 1.0.0a1",
                "date": "2016-01-26T16:17:33Z"
            }
        ]
    }
}