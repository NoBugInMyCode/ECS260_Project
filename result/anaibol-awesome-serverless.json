{
    "https://api.github.com/repos/anaibol/awesome-serverless": {
        "forks": 713,
        "watchers": 7472,
        "stars": 7472,
        "languages": {},
        "commits": [
            "2024-03-06T17:57:08Z",
            "2024-03-05T21:04:48Z",
            "2023-09-12T13:12:18Z",
            "2023-08-14T04:09:41Z",
            "2023-07-21T23:50:49Z",
            "2023-07-19T18:47:20Z",
            "2023-06-22T14:35:16Z",
            "2023-06-05T10:54:19Z",
            "2023-05-24T21:27:58Z",
            "2023-05-24T21:26:57Z",
            "2023-05-08T19:17:54Z",
            "2023-05-08T19:17:39Z",
            "2023-05-08T19:17:28Z",
            "2023-05-07T16:42:52Z",
            "2023-04-19T13:50:13Z",
            "2023-04-01T20:52:25Z",
            "2023-03-31T02:57:34Z",
            "2023-03-31T02:53:45Z",
            "2023-03-31T02:53:36Z",
            "2023-03-31T02:53:20Z",
            "2023-03-31T02:52:39Z",
            "2023-03-31T02:52:28Z",
            "2023-03-31T02:52:14Z",
            "2023-03-31T02:51:53Z",
            "2023-03-31T02:51:14Z",
            "2023-03-31T02:50:59Z",
            "2023-03-31T02:50:29Z",
            "2023-03-31T02:50:17Z",
            "2023-03-31T02:50:00Z",
            "2023-03-31T02:49:49Z"
        ],
        "creation_date": "2016-02-09T21:26:42Z",
        "contributors": 30,
        "topics": [
            "cloud",
            "cloud-computing",
            "microservice",
            "nobackend",
            "serverless-applications",
            "webservices"
        ],
        "subscribers": 252,
        "readme": "<img src=\"http://i.imgur.com/zq0LJAl.png\" align=\"right\" height=300>\n\n# :cloud: Awesome Serverless\n\nA curated list of awesome services, solutions and resources for serverless / nobackend applications.\n\n***\u201cNo server is easier to manage than no server\u201d***\n\n## Table of contents\n\n- [What is \"serverless\" computing?](#what-is-serverless-computing)\n- [All in one solutions](#all-in-one-solutions)\n- [Hosting and code execution in the cloud](#hosting-and-code-execution-in-the-cloud)\n- [Isomorphic Engines](#isomorphic-engines)\n- [Frameworks](#frameworks)\n- [Security](#security)\n- [CI/CD](#cicd)\n- [Cost calculators](#cost-calculators)\n- [Logging / Monitoring / Performance / Tracing](#logging--monitoring--performance--tracing)\n- [Authentication and authorization](#authentication-and-authorization)\n- [IAM](#iam)\n- [Payments](#payments)\n- [eCommerce](#ecommerce)\n- [Content Management Systems](#content-management-systems)\n- [Forms](#forms)\n- [Media management and File storage](#media-management-and-file-storage)\n- [Realtime](#realtime)\n- [Scheduling](#scheduling)\n- [Email sending, subscriptions and newsletters](#email-sending-subscriptions-and-newsletters)\n- [SMS sending](#sms-sending)\n- [Push notifications](#push-notifications)\n- [Databases](#databases)\n- [Others](#others)\n- [Related articles](#related-articles)\n- [Books](#books)\n- [Courses](#courses)\n- [Workshops](#workshops)\n- [Newsletters](#newsletters)\n- [AWS re:Invent videos](#aws-reinvent-videos)\n- [Videos from conferences](#videos-from-conferences)\n- [Contributing](#contributing)\n- [License](#license)\n\n## What is \"serverless\" computing?\n\n> The phrase \u201cserverless\u201d doesn\u2019t mean servers are no longer involved. It simply means that developers no longer have to think \"that much\" about them. Computing resources get used as services without having to manage around physical capacities or limits.\n> Let's take for example AWS Lambda. \"Lambda allows you to NOT think about servers. Which means you no longer have to deal with over/under capacity, deployments, scaling and fault tolerance, OS or language updates, metrics, and logging.\"\n\n[Quora: What is Serverless Computing?](https://www.quora.com/What-is-serverless-computing)\n\n## All in one solutions\n\n* [AppDrag](https://appdrag.com) - Cloud Backend with SQL database and serverless API builder, Cloud CMS with domain management and email marketing tools\n* [Firebase](https://www.firebase.com) - Realtime database, authentication, hosting. A powerful platform for your mobile or web application.\n* [Klotho](https://github.com/KlothoPlatform/klotho) - Serverless-enabled Infrastructure-from-Code tool that transforms plain code into cloud native code.\n* [Back4App](https://www.back4app.com) - A Backend as a Service platform powered by Parse Open Source which you can use to build your app faster, host it with no hassles and keep full control over your Backend.\n* [LeanCloud](https://leancloud.app) - Serverless cloud for lightning-fast development.\n* [Nitric](https://nitric.io) - An Open Source framework for rapidly building serverless applications.\n* [Backendless](https://backendless.com) - Realtime database, authentication, hosting.\n* [Kinvey](http://www.kinvey.com) - Build your digital business faster with mobile Backend as a Service.\n* [Substation](https://github.com/brexhq/substation) - Substation is a cloud native data pipeline and transformation toolkit written in Go.\n* [Syncano](https://syncano.io) - An all-in-one platform to create realtime apps without a server.\n* [Hoodie](http://hood.ie) - Hoodie is a complete backend for your apps: develop your frontend code.\n* [Para](https://paraio.com) - Flexible and lightweight backend service for rapid prototyping, based on open source software.\n* [Parse Server](https://parseplatform.org/) - Parse Server is an open source version of the Parse backend that can be deployed to any infrastructure that can run Node.js. You can find the source on the [GitHub repo](https://github.com/parse-community/parse-server).\n* [wolkenkit](https://www.wolkenkit.io) - wolkenkit is a CQRS and event-sourcing framework for JavaScript and Node.js which fits perfectly with domain-driven design (DDD).\n* [Kuzzle](https://kuzzle.io) - High performance cloud agnostic backend solution including persistence, authentication, realtime database and geofencing with a full featured cluster mode.\n* [serverless-cqrs](https://www.serverless-cqrs.com) - A collection tools to help you build a fully functioning backend based on the principles of CQRS, Event Sourcing, Domain Driven Design, and Onion Architecture.\n* [ops](https://ops.city) - A free open source tool that allows anyone to build, run and deploy normal linux applications as unikernels.\n\n## Hosting and code execution in the cloud\n\n* [Tau](https://github.com/taubyte/tau) - Easily Build Cloud Computing Platforms with features like Serverless WebAssembly Functions, Frontend Hosting, Object Storage, K/V Database, and Pub-Sub Messaging.\n* [FaaStRuby](https://faastruby.io) - Serverless Software Development Platform for Ruby and Crystal developers.\n* [AWS Lambda](https://aws.amazon.com/lambda) - Run code without thinking about servers. Pay for only the compute time you consume.\n* [Google Cloud Functions](https://cloud.google.com/functions/docs) - Lightweight, event-based, asynchronous compute solution that allows you to create small, single-purpose functions that respond to cloud events without the need to manage a server or a runtime environment.\n* [MongoDB Stitch](https://www.mongodb.com/cloud/stitch) - Serverless platform from MongoDB.\n* [Spotinst Functions](https://spotinst.com/products/spotinst-functions/) - Deploy serverless functions with our easy to use framework that launch onto the Spot Market for cheap and convenient use.\n* [Azure Functions](https://azure.microsoft.com/en-us/services/functions) - Listen and react to events across your stack.\n* [Fission](http://fission.io) - Fast, extensible, open source serverless functions on any Kubernetes cluster\n* [IBM Cloud Functions](https://console.bluemix.net/openwhisk/) - Distributed compute service to execute application logic in response to events.\n* [Knative](https://knative.dev/) - Kubernetes-based platform to build, deploy, and manage modern serverless workloads\n* [Kubeless](https://kubeless.io/) - is a Kubernetes-native serverless solution.\n* [iron.io](https://www.iron.io/platform/ironworker) - Isolates code and dependencies of individual tasks so they can be processed on demand.\n* [weblab.io](https://weblab.io) - Microservices at your fingertips.\n* [Peer5](https://www.peer5.com) - The serverless CDN. Limitless, affordable video delivery. More traffic means a stronger network.\n* [StdLib](https://stdlib.com) - Function as a service library and platform.\n* [Webscripts](https://www.webscript.io)~~ - Scripting on the web. (Shutting down December 15, 2017)\n* [Surge](http://surge.sh) - Deploy static sites from the command line.\n* [Netlify](https://netlify.com) - All-in-one platform for automating modern web projects. Build and host static sites, deploy AWS lambda functions, and more, all from git repositories.\n* [Aerobatic](https://www.aerobatic.com) - Deploy static sites from the command line with plugins including password protection, CORS proxy, and [more](https://www.aerobatic.com/docs/plugins).\n* [Effe](https://github.com/siscia/effe) - a simple Open Source building block to emulate AWS Lambda.\n* [Vercel](https://vercel.com) - Build and deploy 40 different web frameworks with zero configuration along with Node.js, Python, Go, and Ruby Serverless Functions\n* [OpenComponents](https://opencomponents.github.io) - Serverless microservices for front-end components.\n* [OpenFaaS Cloud](https://github.com/openfaas/openfaas-cloud) - OpenFaaS Cloud: multi-user serverless functions driven by git.\n* [Stackery](https://www.stackery.io/) - Stackery enables teams of developers to design, deploy, and monitor their serverless infrastructure on cloud services providers like AWS.\n* [Algorithmia](https://algorithmia.com/) - Automating the use of AI/ML models at every scale with the Serverless AI Layer.\n* [TriggerMesh](https://www.triggermesh.com) - Serverless Management Platform with advanced event triggers.\n* [Cloudflare Workers](https://www.cloudflareworkers.com) - Workers allow you to deploy Serverless apps to 165+ data centers across the globe simultaneously, along with the ability to agument or alter exsisting websites and APIs on the fly.\n* [fn](https://fnproject.io) - The container native, cloud agnostic serverless platform.\n* [TinyFunction](https://tinyfunction.com) - Fastest way to create cloud functions. Write your function, deploy and call them from anywhere.\n\n## Isomorphic Engines\n\n* [lychee.js](https://github.com/Artificial-Engineering/lycheejs) - Isomorphic adapters allow peer-to-peer event-graphed WebSockets and HTTP1.1, SPDY and HTTP2.0 sockets for node, node-sdl, html, html-nwjs and html-webview (both native and embedded).\n\n## Frameworks\n\n* [Aegis](https://github.com/tmaiaroto/aegis) - A Golang serverless application development framework for AWS with deploy tool.\n* [Apache OpenWhisk](https://openwhisk.apache.org) - Open source and enterprise-ready serverless platform that executes functions in any language (including Docker Containers) in response to events, powering IBM Cloud Functions, Adobe I/O Runtime and a number of on-prem deployments worldwide.\n* [Architect](http://arc.codes) - Provision and deploy from a super simple plaintext manifest.\n* [AWS Amplify](https://aws-amplify.github.io/) - A declarative JavaScript library for application development using cloud services.\n* [Booster](https://www.booster.cloud) - An Open Source framework for developing event-driven serverless applications with TypeScript.\n* [Browser Functions](https://github.com/IBM/browser-functions) - A lightweight serverless platform that uses Web Browsers as execution engines.\n* [Up](https://up.docs.apex.sh/) - Deploy infinitely scalable serverless apps, apis, and sites in seconds.\n* [Chalice](https://github.com/awslabs/chalice) - Python serverless microframework from Amazon for AWS lambda.\n* [CIM](https://github.com/thestackshack/cim) - A CloudFormation first approach to AWS Lambdas.\n* [ClaudiaJS](https://github.com/claudiajs/claudia) - Deploy Node.js microservices to AWS easily.\n* [DEEP](https://github.com/MitocGroup/deep-framework) - Full-stack Web Framework for Cloud-Native Applications and Platforms using Microservices Architecture.\n* [FaasJS](https://faasjs.com) - A Node.js Serverless Application Framework.\n* [flowbject](https://github.com/alex20465/flowbject) - A high-level library whose aim is to help with writing state-machine flows.\n* [FunctionShield](https://github.com/puresec/FunctionShield) - A security library that equips developers with the ability to easily enforce strict security controls on AWS Lambda function runtime by addressing 3 common use cases: 1) Disable outbound internet connectivity. 2) Disable read/write on the /tmp/ directory 3) Disable child process execution.\n* [genezio](https://genez.io/?utm_source=awesome-serverless-github&utm_medium=website&utm_campaign=awesome-serverless) - a platform for developers to write, deploy and use a serverless API.\n* [Gordon](https://github.com/jorgebastida/gordon) - \u03bb Gordon is a tool to create, wire and deploy AWS Lambdas using CloudFormation.\n* [IronFunctions](https://github.com/iron-io/functions) - The Serverless Microservices platform.\n* [Jets](https://rubyonjets.com) - Ruby Serverless Framework for AWS. Jets allows you to create serverless applications with a beautiful language: Ruby. It includes everything required to build an application and deploy it to AWS Lambda.\n* [Kappa](https://github.com/garnaat/kappa) - a command line tool that (hopefully) makes it easier to deploy, update, and test functions for AWS Lambda.\n* [Laconia](http://laconiajs.io) - A microframework for building Node.js serverless applications (AWS Lambda). Create well-crafted serverless applications, effortlessly!\n* [Lambda API](https://github.com/jeremydaly/lambda-api) - Lightweight web framework for your serverless applications.\n* [Lambda Forest](https://github.com/tdsis/lambda-forest) - Microframework that makes it easier to develop REST API's using AWS Lambda Function and API Gateway.\n* [Lambada Framework](https://github.com/lambadaframework/lambadaframework) - JAX-RS implementation for AWS Lambda.\n* [lambda-restify](https://github.com/kksharma1618/lambda-restify) - A restify/expressjs like interface for aws lamda with api gateway event.\n* [Lambdoku](https://github.com/kubek2k/lambdoku) - Heroku-like experience when using AWS Lambda.\n* [lgw](https://github.com/ebridges/lgw) - Simply & easily configure an AWS Gateway & domain name in front of a Lambda.\n* [Lovage](https://github.com/CloudSnorkel/lovage) - Python-only serverless framework that's more RPC-like and less HTTP service oriented.\n* [Mantil](https://github.com/mantil-io/mantil) - Golang serverless development kit for AWS Lambda. Tool for developers that removes ops work for them, not just another infrastructure tool.\n* [middy](https://middy.js.org/) - Node.js middleware engine for AWS Lambda.\n* [modofun](https://modofun.js.org) - A lightweight no-dependencies function router for both AWS Lambda and Google Cloud Functions, and that supports Connect/Express middleware.\n* [OpenFaaS](https://www.openfaas.com) - Serverless Functions Made Simple for Docker and Kubernetes.\n* [Pulumi](https://pulumi.io) - A cloud development platform for serverless, containers, infrastructure. Multi-cloud (and Kubernetes) and works with JS, TS, Python, Go\n* [Python-\u03bb](https://github.com/nficano/python-lambda) - A toolkit for developing and deploying serverless Python code in AWS Lambda.\n* [Serverless Framework](http://www.serverless.com) - Build and maintain web, mobile and IoT applications running on AWS Lambda, Azure Cloud Functions, IBM Cloud Functions, Apache OpenWhisk, and Google Cloud Functions (formerly known as JAWS).\n* [Serverless Compose](https://github.com/DavidJFelix/serverless-compose) - A lightweight, functional, composable, middleware framework for AWS lambda that stays out of the way.\n* [serverless.tf](https://serverless.tf) - A framework for developing, building, deploying, and securing serverless applications and infrastructures on AWS using Terraform ([read more](https://github.com/antonbabenko/serverless.tf)).\n* [Shep](https://github.com/bustlelabs/shep) - A framework for building APIs using AWS API Gateway and Lambda.\n* [Sigma](https://www.slappforge.com/sigma) - An all-in-one, browser-based IDE toolkit for drag-n-drop composing, testing and deploying of serverless applications, with fully automated configuration management.\n* [Sparta](http://gosparta.io) - A framework that transforms a Go application into an AWS Lambda powered microservice.\n* [Stacktape](https://stacktape.com) - DevOps-free cloud framework. Deploy lambdas, containers, databases & more to AWS with 98% less config.\n* [SAM Local](https://github.com/awslabs/aws-sam-local) - Is the AWS CLI tool for managing Serverless applications written with [AWS Serverless Application Model (SAM)](https://github.com/awslabs/serverless-application-model)\n* [Turtle](https://github.com/iopipe/turtle/) - library for building functional and actor-driven NodeJS apps on Lambda.\n* [Zappa](https://github.com/Miserlou/Zappa) - Serverless Python WSGI with AWS Lambda + API Gateway.\n* [\u03bbambdify](http://zhukovalexander.github.io/lambdify) - AWS Lambda automation and integration for Python\n* [Squeezer Framework](https://squeezer.io) - Event-driven APIs & Web apps on microservices, serverless.\n* [Spring Cloud Function](https://github.com/spring-cloud/spring-cloud-function) - Java framework for doing Functions using Spring ecosystem.\n* [Fission Workflows](https://github.com/fission/fission-workflows) - Fast workflow-based function composition for serverless functions.\n* [azure-functions-express](https://github.com/yvele/azure-function-express) - Allows Express.js usage with Azure Functions.\n* [Riff](https://projectriff.io/) - Kubernetes based serverless framework supporting multiple languages.\n* [FuseLess](https://fuseless.org/) - toolkit for running functions written in CFML (ColdFusion Markup Language) on AWS Lambda.\n* [DropFaaS](https://dropfaas.com/) - Serverless framework for running functions written in any languages.\n\n## Security\n\n* [PureSec](https://www.puresec.io) - Enabling Secure and Reliable Serverless Applications.\n* [Serverless Security Top 10 Guide](https://github.com/puresec/sas-top-10) - The Ten Most Critical Risks for Serverless Applications.\n* [AWS Lambda Security Best-Practices eBook](https://www.puresec.io/aws-lambda-security-best-practices) - An AWS Lambda security best-practices eBook\n* [AWS Lambda Security Quick-Start Guide](https://www.puresec.io/blog/aws-lambda-security-quick-guide) - A Quick-Start guide for AWS Lambda Security\n* [AWS Security Best Practices: Config Rules for AWS Lambda Security](https://www.puresec.io/blog/aws-security-best-practices-config-rules-lambda-security) - A guide on how to use AWS Config rules for governing and securing your Lambda functions, with a free set of 4 open source rules developed in SAM.\n* [Using AWS CloudTrail to enhance your serverless application security](https://serverless.com/blog/cloudtrail-security) - A guide on how to use CloudTrail to improve AWS Lambda security posture.\n* [OWASP ServerlessGoat](https://www.owasp.org/index.php/OWASP_Serverless_Goat) - OWASP ServerlessGoat is a deliberately insecure realistic AWS Lambda serverless application, maintained by OWASP and contributed by PureSec. Install ServerlessGoat and learn about the vulnerabilities, how to exploit them, and how to remediate each issue. Installation is just a 1-click through the [AWS Serverless Application Repository](https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:761130837472:applications~serverless-goat)\n* [Awesome-Serverless-Security](https://github.com/puresec/awesome-serverless-security/) - A curated list of awesome serverless security resources such as (e)books, articles, whitepapers, blogs and research papers.\n* [Protego](https://www.protego.io) - your apps became serverless. Your security also need to be serverless too.\n* [Nuweba](https://www.nuweba.com) - Unified solution for serverless security, monitoring and performance.\n\n## CI/CD\n\n* [seed.run](https://seed.run) - Seed manages pipelines, configures environments, and monitors deployments for Serverless Framework projects.\n* [AWS Lambda Test Runner](https://github.com/automatictester/lambda-test-runner) - Run your unit tests with Maven or SBT directly on AWS Lambda.\n* [LambCI](https://github.com/lambci/lambci) - A continuous integration system built on AWS Lambda\n* [Serverless Framework Pro](https://www.serverless.com/pro/) - Serverless Framework Pro provides CI/CD, troubleshooting and monitoring for serverless applications\n* [Stackery CICD](https://docs.stackery.io/docs/using-stackery/verification-pipeline/) - Stackery Verification and Deployment Pipelines\n\n## Cost calculators\n\n* [serverlesscalc](http://serverlesscalc.com) - Calculating cost for AWS Lambda, Azure Functions, Google Cloud Functions, and IBM Cloud Functions.\n* [servers.lol](https://servers.lol) - calculator to decide Lambda vs EC2.\n\n## Observability Tools (Logging / Monitoring / Performance / Tracing)\n\n* [AWS IoT Button logger to git](https://github.com/kachkaev/aws-iot-button-logger-to-git/) - A simple and customisable AWS Lambda function that logs events from IoT devices into a git repository of your choice.\n* [AWS Xray](https://aws.amazon.com/xray/) - Analyze and debug production, distributed applications.\n* [Axiom](https://axiom.co/) - Serverless first logging with a generous free tier.\n* [Dashbird](https://www.dashbird.io) - Performance Tracking and Error Alerting for serverless applications.\n* [functionmetric](https://functionmetric.com) - Unlimited AWS Lambda monitoring via a self hosted CloudFormation template. All metrics and logs remain in your own AWS account.\n* [New Relic](https://newrelic.com/products/serverless-aws-lambda) - Monitor, visualize, troubleshoot, and alert on all your AWS Lambda functions.\n* [Thundra](https://www.thundra.io) - Thundra brings observability into your AWS Lambda functions by bringing metrics, logs, distributed tracing, and alerting together.\n* [Epsagon](https://www.epsagon.com) - Epsagon automatically analyses your serverless application, identifies potential issues, and allows fast troubleshooting.\n* [Lumigo](https://www.lumigo.io) - Lumigo provides a visual debugging platform for serverless monitoring, tracing and troubleshooting (Free tier available).\n* [serverless-es-logger](https://github.com/ccverak/serverless-es-logger) - serverless-es-logger is a package which allows you to send logs directly to Elasticsearch.\n* [Serverless Framework Pro](https://www.serverless.com/pro/) - Serverless Framework Pro give you detailed invocation/request troubleshooting and monitoring tools for serverless applications\n* [SLIC Watch](https://github.com/fourTheorem/slic-watch) - Automatic alarms and dashboards for Lambda, Kinesis and more AWS services.\n* [sls-dev-tools](https://github.com/Theodo-UK/sls-dev-tools) - In terminal developer dashboard for AWS Serverless architectures. *(Does not replace your framework or logging/monitoring, it's used in addition)*\n* [SenseDeep](https://www.sensedeep.com) - SenseDeep serverless developer studio helps to quickly diagnose, debug and deliver reliable serverless apps.\n\n## Optimization and Management\n* [Epsagon](https://www.epsagon.com) - Epsagon automatically analyses your serverless application, identifies potential issues, and allows fast troubleshooting.\n* [Sedai] https://www.sedai.io) - Sedai autnonomously manages your serverless application, optimizing for performance and cost, remediating potential issues, and providing release intelligence on each new version.\n\n## Authentication and authorization\n\n* [Auth0](https://auth0.com) - Single Sign On & Token Based Authentication.\n* [Amazon Cognito](https://aws.amazon.com/cognito/) - Amazon Cognito lets you easily add user sign-up and sign-in to your mobile and web apps.\n* [DailyCred](https://www.dailycred.com/) - Registration, user management, single-sign-on.\n* [Firebase](https://firebase.com/).\n* [MojoAuth](https://mojoauth.com) - Passwordless authentication on your web, mobile or any application in minutes.\n* [OAuth.io](https://oauth.io/) - OAuth integration, user management, provides OAuth 2.0 layer to existing APIs.\n* [Okta](https://developer.okta.com/) - Provides authentication, authorization, and user management, merged with [Stormpath](https://stormpath.com/) in August 2017.\n* [Serverless Authentication Boilerplate with FaunaDB](https://serverless.com/blog/faunadb-serverless-authentication/) - Single sign on using Amazon API Gateway custom authorizer to provision database access tokens for your Lambda functions. [See TodoMVC integration in this meetup talk video.](https://fauna.com/blog/developing-serverless-authentication-and-persistence)\n\n## IAM\n\n* [PureSec CLI](https://github.com/puresec/serverless-puresec-cli) - Magically creates least privileged IAM roles for you.\n\n## Payments\n\n* [Stripe Serverless webhook](https://github.com/eahefnawy/serverless-stripe-webhook) - Serverless Module that creates a webhook for Stripe.\n* [Stripe Lambda function](https://github.com/TaylorBriggs/stripe-lambda) - A Lambda function for charging cards with Stripe.\n* [GCF-Stripe](https://github.com/rldaulton/GCF-Stripe) - serverless use of Stripe over Google Cloud Functions.\n* [Stripe Azure function](https://github.com/sdras/sample-stripe-handler) - An Azure Function that uses the Stripe api for a checkout process in a Vue application\n\n## eCommerce\n\n* [Snipcart](https://snipcart.com) - Fully customizable, HTML and JavaScript-based shopping cart for any website.\n* [CommerceJS](http://commercejs.com/) - Full-stack ecommerce api for developers & designers.\n* [EndlessCommerce](https://github.com/endless-commerce/endless) - Open source ecommerce platform based on Serverless framework.\n* [Medusa](https://medusajs.com/) - Medusa is an open-source headless commerce engine that enables developers to create amazing digital commerce experiences.\n\n\n\n## Content Management Systems\n\n* [Contentful](https://www.contentful.com/) - A content infrastructure that enables teams to power content in any digital product via a RESTful API.\n* [Cosmicjs](https://cosmicjs.com) - API-first CMS for building content-powered apps in any programming language.\n* [GraphCMS](https://graphcms.com/) - GraphQL based, no opinion CMS for your digital products.\n* [Sanity](https://sanity.io) - A hosted backend for structured content with a real-time API, globally distributed CDN, and a powerful, but simple query language.\n* [Storyblok](https://www.storyblok.com/) - API based & Headless CMS - Clean and structured JSON for you as developer and a CMS your editors will fall in love with. Unlimited extensibility through custom plugins.\n* [TakeShape](https://www.takeshape.io/) - Content-as-a-Service via a powerful GraphQL API and integrated SSG for teams that want to stay focused on their product.\n* [Tipe](https://tipe.io/) - Next generation serverless CMS. Create your content with powerful editing tools and access it from anywhere with a GraphQL or REST API.\n* [Webiny](https://www.webiny.com/) - Developer-friendly Serverless CMS powered by GraphQL and React.\n* [Stiva](https://github.com/anddimario/stiva) - Stiva is a headless CMS for multisite and dynamic multicontent, based on lambda, dynamodb and s3.\n* [Forestry](https://forestry.io/) - Git-backed CMS for Static Site Generators like Gatsby, Gridsome, Eleventy, Hugo, VuePress, Jekyll, etc.\n\n## Forms\n\n* [Airform.io](https://airform.io) - Functional HTML forms for Front-End Developers.\n* [Form.io](https://form.io) - JSON Powered Form and Data Management Platform for Serverless applications.\n* [Formcake](https://formcake.com) - Form backend built for developers with spam protection, Zapier integration, and API access.\n* [Formcarry](https://formcarry.com) - Hassle-free HTML form endpoints for your form, powerful dashboard, reliable spam blocking, attachment uploads and Zapier integrations.\n* [Formspark](https://formspark.io) - A backend for your HTML forms.\n* [Formspree](https://formspree.io) - Functional HTML forms.\n* [FormKeep](https://formkeep.com) - Form endpoints for designers and developers. No iframes, JavaScript embeds, or CSS overrides.\n* [Formplug](https://github.com/danielireson/formplug-serverless) - Form forwarding service for AWS Lambda.\n* [FormAssembly](http://www.formassembly.com/).\n* [Getform](http://getform.io/) - Free form backend platform for your HTML forms and static websites. Provides Zapier and Webhook support and submissions API.\n* [Google Forms](https://docs.google.com/forms/) - Create and analyze online forms and surveys.\n* [Pageclip](https://pageclip.co/) - A Server for your HTML Forms - Collect info from users without a server\u2014Pageclip is your server. Lead capture forms, surveys, newsletter forms, contact forms, etc. Setup any form in seconds.\n* [Typeform](https://www.typeform.com/) - Pretty, intuitive, slick forms for almost any use.\n* [Tectite FormMail](http://www.tectite.com/) - FormMail, form Encryption, hosted Forms.\n* [Wufoo](http://www.wufoo.com/).\n\n## Media management and File storage\n\n* [Filestack](https://www.filestack.com) - Image management system with Filestack - upload files, transform images, videos, and documents, store content and deliver fast via CDN.\n* [Kloudless](https://kloudless.com) - Integrate with one, universal API and connect to many file storage and CRM services.\n* [Letter Avatar](https://github.com/kevincolemaninc/letter-avatar-serverless) - Generates Google-like binary avatar images\n* [Mux](https://mux.com) - Streaming video infrastructure for developers. Add a live stream or upload a video file, then get thumbnails, animated gifs and more via simple API calls.\n* [Uploadcare](https://uploadcare.com) - HTML5 widget, API to manage files in cloud storage, smart and fast CDN to deliver them to your end users. Crop, resize and transform uploaded images using URL commands.\n\n## Realtime\n\n* [Ably](https://www.ably.io/) - Global distributed realtime data delivery platform with pub/sub, presence, device awareness, history, connection state recovery, authentication and encryption.\n* [Pusher](https://pusher.com/) - Build Apps, Not Infrastructure.\n* [Pubnub](https://www.pubnub.com/) - PubNub utilizes a Publish/Subscribe[2] model for realtime data streaming.\n\n## Scheduling\n\n* [Posthook](https://posthook.io/) - Run code only when you need to by scheduling webhooks for later. Set up workflows from your functions and run them on a repeating schedule.\n* [qStash](https://upstash.com/qstash) - Push based messaging and scheduling over HTTP for serverless and edge runtimes with 50 requests per day for free.\n\n## Email sending, subscriptions and newsletters\n\n* [Lambda Mailer](https://github.com/eahefnawy/lambda-mailer) - AWS Lambda for sending emails.\n* [Serverless Mailer](https://github.com/eahefnawy/serverless-mailer) - Serverless Module for sending emails.\n* [Mailchimp Lambda](https://github.com/TaylorBriggs/mailchimp-lambda) - A Lambda function for subscribing to a MailChimp list.\n* [Mailchimp Lambda Single Opt-in](https://github.com/anaibol/lambda-mailchimp-single-opt-in) - An Amazon Lambda function for creating MailChimp subscriptions with single opt-in.\n\n## SMS sending\n\n* [serverless-twilio](https://github.com/eahefnawy/serverless-twilio) - Serverless Module to send SMS via twilio.\n* [Amazon SNS](https://aws.amazon.com/sns) - A flexible, fully managed pub/sub messaging and mobile notifications service (including SMS) for coordinating the delivery of messages to subscribing endpoints and clients.\n\n## Push notifications\n\n* ~~[Ionic Push Service](http://docs.ionic.io/services/push/)~~ - Notifications for Android, iOS with Ionic Cloud.\n* [Pushover](https://pushover.net/) Notifications for Android, iOS, and Desktop.\n* [ZeroPush](https://zeropush.com) Transactional Push Notifications for Developers.\n* [PushWizard](https://pushwizard.com/) Multi-platform Push Notification Service.\n* [Pushed](https://pushed.co/) Send push notifications without developing your own app.\n* [Plot Projects](http://www.plotprojects.com/) Geofencing push notifications.\n* [XtremePush](https://xtremepush.com/) Web Push Notifications.\n\n## Databases\n\n* [Amazon DynamoDB](https://aws.amazon.com/dynamodb/) - Flexible NoSQL database service\n* [Amazon Aurora Serverless](https://aws.amazon.com/rds/aurora/serverless/) - Serverless MySQL Database service\n* [Algolia](https://www.algolia.com) - Hosted cloud search as a service.\n* [FaunaDB](https://fauna.com/) - Pay-as-you-go cloud database with ACID transactions and on-premise licensing available.\n* [Cloudant](https://cloudant.com/) - Based on the Apache-backed CouchDB, Cloudant is the distributed database as a service (DBaaS) built from the ground up to deliver fast-growing application data to the edge.\n* [Cloudflare Workers KV](https://developers.cloudflare.com/workers/reference/storage) - Global, low-latency, key-value data store for Cloudflare Workers.\n* [Azure CosmosDB](https://azure.microsoft.com/en-us/services/cosmos-db/) - Globally distributed, multi-model database service\n* [Cube.js](https://cube.dev/) - Hosted analytics platform for serverless apps.\n* [Google Cloud Datastore](https://cloud.google.com/datastore/) - Hosted NoSQL database service by Google\n* [ParanoidGuy Databunker](https://github.com/paranoidguy/databunker) - Personally identifiable information (PII) storage service built to comply with GDPR and CCPA\n* [Deta Base](https://deta.sh) - A super easy to use production-grade NoSQL database.that supports complex queries and search.\n* [Upstash](https://upstash.com/) - Serverless Database for Redis\n* [HarperDB](https://www.harperdb.io/) - Peer-to-peer database that is independent of hardware and network providers, accommodates both NoSQL and SQL workloads. \n* [Neon](https://neon.tech) - fully managed serverless PostgreSQL. Neon separates storage and compute to offer modern developer features such as serverless, branching, bottomless storage, and more.\n\n## Others\n\n* [Azure Function Library](http://functionlibrary.azurewebsites.net) - An open source set of common use cases for Azure Functions that are ready to deploy!\n* [Argonaut](https://argonaut.dev/) - Deploy apps and infrastructure on your cloud in minutes. Support for custom and third-party app deployments on Kubernetes and Lambda environments. Free tier allows unlimited apps and deployments for 5 environments and 2 users.\n* [Backstage Functions](https://github.com/backstage/functions) - An Open Source Serverless Platform able to store and execute code maintained by [Globo.com](http://www.globo.com)\n* [remoteStorage](https://remotestorage.io) - An open protocol for per-user storage.\n* [SCAR](https://github.com/grycap/scar) - Serverless Container-aware ARchitectures (e.g. run containers out of your Docker images in AWS Lambda).\n* [Sockethub](http://sockethub.org) - A polyglot (speaking many different protocols and APIs) messaging service for social and other interactive messaging applications.\n* [serverless-slack-webhook](https://github.com/eahefnawy/serverless-slack-webhook) - Serverless Module that creates a webhook for Slack.\n* [Daggy](https://github.com/synacker/daggy) - Data Aggregation Utility. Remote or local data aggregation and streaming\n* [Docker Lambda](https://github.com/lambci/docker-lambda) - Docker images and test runners that replicate the live AWS Lambda environment\n* [faas](https://github.com/alexellis/faas) - Run Docker containers as functions on Swarm Mode ([blog post](http://blog.alexellis.io/functions-as-a-service/))\n* [FunctionCI](https://github.com/rgfindl/functionci) - Continuous Integration for AWS Lambdas.\n* [gofn](https://github.com/nuveo/gofn) - Go package for function process via container provider (serverless minimalist)\n* [kube-fledged](https://github.com/senthilrch/kube-fledged) - A K8S add-on for creating and managing a cache of container images directly on cluster worker nodes\n* [Lambda Comments](https://github.com/jimpick/lambda-comments) - Blog commenting system built with AWS Lambda\n* [AWS Lambda Debugger](https://github.com/trek10inc/aws-lambda-debugger) - Remote debugging tool for Lambda functions running on Node 6.10\n* [Local stack](https://localstack.cloud/) - A fully functional local AWS cloud stack\n* [Project Flogo](https://github.com/TIBCOSoftware/flogo) - Project Flogo is an open source framework to simplify building efficient & modern serverless functions and edge microservices.\n* [Serverless Examples](https://www.serverless.com/examples/) - A collection of boilerplates and examples of serverless architectures built with the Serverless Framework\n* [serverless.tf playground](https://github.com/antonbabenko/serverless.tf-playground) - serverless.tf playground to show Terraform with Serverless in action.\n* [Terraform AWS Lambda module](https://github.com/terraform-aws-modules/terraform-aws-lambda/) - Terraform module, which takes care of a lot of AWS Lambda/serverless tasks (build dependencies, packages, updates, deployments) in countless combinations.\n* [Lambda Shim](https://github.com/ffleet/shim) - A node.js shim library to simplify Lambda function development\n* [Mutton](https://github.com/hmngwy/mutton) - A Python shim library for better AWS Lambda Handlers\n* [Serverless Permission Policy Generator](https://github.com/Open-SL/serverless-permission-generator) - An Online Application to generate AWS IAM permissions required for deploying a Serverless stack.\n* [DynamoDB Onetable](https://www.npmjs.com/package/dynamodb-onetable) - DynamoDB access library for single-table designs using NodeJS.\n\n## Related articles\n\n* [Serverless Framework (CloudAcademy)](http://cloudacademy.com/blog/serverless-framework-aws-lambda-api-gateway-python) -  A Deep Overview of the Best AWS Lambda + API Gateway Automation Solution\n* [AWS Lambda Microservices Architecture for Node.js](https://medium.com/getty-logs/a-aws-lambda-microservices-architecture-for-node-js-4513799101d4#.k99m6yvvz)\n* [Designing Teams around Microservices](https://www.nginx.com/blog/adopting-microservices-at-netflix-lessons-for-team-and-process-design/)\n* [The Serverless Start-Up - Down With Servers!](http://highscalability.com/blog/2015/12/7/the-serverless-start-up-down-with-servers.html)\n* [Think Serverless!](https://medium.com/think-serverless) - Publications encompassing a deep insight into the future of serverless application development\n* [Microservices without the Servers](https://aws.amazon.com/blogs/compute/microservices-without-the-servers)\n* [A startup journey on AWS: from bare metal monolith to serverless microservices](https://medium.com/@benorama/a-startup-journey-on-aws-from-bare-metal-monolith-to-serverless-microservices-80231624fbd9)\n* [nobackend.org](http://nobackend.org)\n* [unhosted.org](https://unhosted.org/) - unhosted web apps. freedom from web 2.0's monopoly platforms\n* [Static Web Applications](https://staticapps.org)\n* [Serverlesscode](https://serverlesscode.com)\n* [Serverless Architectures](http://martinfowler.com/articles/serverless.html)\n* [Serverless Stack](http://serverless-stack.com/) - A step-by-step guide to creating full-stack serverless apps.\n* [Migrating a Native JAVA REST API to a Serverless Architecture with the Lambada Framework for AWS](https://aws.amazon.com/blogs/compute/migrating-a-native-java-rest-api-to-a-serverless-architecture-with-the-lambada-framework-for-aws/)\n* [Using Kotlin with AWS Lambda](https://medium.com/tech-travelstart/using-kotlin-in-a-serverless-architecture-with-aws-lambda-part-1-setting-up-the-project-87033790e2f4) - Using Kotlin in a serverless architecture with AWS Lambda.\n* [Serverless Architectures Security Top 10](https://github.com/puresec/sas-top-10) - The Ten Most Critical Security Risks in Serverless Architectures.\n* [Continuous Delivery Patterns with Serverless Applications](https://semaphoreci.com/blog/2018/08/22/continuous-delivery-patterns-with-serverless.html) - patterns for effective Continuous Delivery when building Serverless applications.\n* [Level up your serverless game with a GraphQL data-as-a-service layer](https://hasura.io/blog/level-up-your-serverless-game-with-a-graphql-data-as-a-service-layer/)\n* [Serverless White Paper](https://www.unusual.vc/post/unusual-tech-serverless-white-paper) - Informative White Paper on Serverless with deep analysis by Unusual VC.\n* [Receiving Webhooks with Netlify Functions](https://www.svix.com/blog/receive-webhooks-with-netlify-functions/) - Using Netlify's serverless functions to receive webhooks and verify the signature.\n\n## Books\n\n* [Serverless](https://leanpub.com/serverless) - Patterns of Modern Application Design Using Microservices (Amazon Web Services Edition).\n* [Serverless Single Page Apps](https://pragprog.com/book/brapps/serverless-single-page-apps) - The Pragmatic Bookshelf.\n* [Going Serverless](https://www.goingserverless.co/) - Practical guide to building applications with the Serverless Framework.\n* [Serverless Architectures on AWS](https://www.manning.com/books/serverless-architectures-on-aws). Teaches you how to build, secure and manage serverless architectures that can power the most demanding web and mobile apps. Written by Peter Sbarski\n* [Building Serverless Architectures](https://www.amazon.co.uk/Building-Serverless-Architectures-Cagatay-Gurturk/dp/1787129195) Book about building serverless applications  in JAVA.\n* [AWS Lambda in Action](https://www.manning.com/books/aws-lambda-in-action) An example-driven tutorial that teaches you how to build applications that use an event-driven approach on the back end.\n* [The Pulumi Book](https://thepulumibook.com) - A book that shows you how to use Pulumi, an open-source infrastructure-as-code platform, to build serverless applications of all kinds using TypeScript and Amazon Web Services.\n* [Serverless Applications with Node.js](https://www.manning.com/books/serverless-apps-with-node-and-claudiajs) A book that walks you through building serverless apps on AWS using Node.js and Claudia.js.\n* [Agile Development for Serverless Platforms](https://www.manning.com/books/agile-development-for-serverless-platforms) free eBook: how to apply Agile practices in fully serverless architectures.\n* [Cloud Native Applications](https://www.manning.com/books/cloud-native-applications) free eBook: an introduction into the world of cloud computing and insights into what is possible with cloud services.\n* [Exploring Cloud Computing](https://www.manning.com/books/exploring-cloud-computing) free eBook: an introduction to the two most popular cloud providers, Amazon and Google, and insights to help you get started.\n* [Developing Serverless Applications - A Practical Introduction with Apache OpenWhisk](http://www.oreilly.com/programming/free/developing-serverless-applications.csp) free ebook focused on doing serverless with OpenWhisk.\n* [Docker in Action, Second Edition](https://www.manning.com/books/docker-in-action-second-edition) A book that teaches you the skills and knowledge you need to create, deploy, and manage applications hosted in Docker containers and it has been fully updated with new examples, best practices, and entirely new chapters.\n* [Docker in Practice, Second Edition](https://www.manning.com/books/docker-in-practice-second-edition) A book that teaches rock-solid, tested Docker techniques, enabling microservices architecture, efficient network modeling, offline productivity, and establishing a container-driven continuous delivery process.\n* [Azure Serverless Computing Cookbook](https://azure.microsoft.com/en-us/resources/azure-serverless-computing-cookbook) free eBook: Learn how to build scalable, serverless apps with these easy-to-follow recipes\n* [AI as a Service](https://www.manning.com/books/ai-as-a-service) A book that teaches you how to harness the power of cloud-based AI services and serverless computing. An engineering approach to serverless AI.\n* [Azure Data Engineering](https://www.manning.com/books/azure-data-engineering) - This book teaches you to build high-capacity data analytics systems using Azure cloud services for storing, collecting and analyzing data.\n* [Google Cloud Platform in Action](https://www.manning.com/books/google-cloud-platform-in-action) - A book that teaches you to to deploy scalable cloud applications on Google Cloud Platform.\n* [Cloud Native Patterns](https://www.manning.com/books/cloud-native-patterns) - A guide to developing cloud-native applications, along with the patterns, practices, and tooling that set them apart.\n* [Cloud Native Spring in Action](https://www.manning.com/books/cloud-native-spring-in-action) - A hands-on guide to cloud native application development using Spring Boot, Spring Cloud, Docker, and Kubernetes.\n* [Learn Azure in a Month of Lunches](https://www.manning.com/books/learn-azure-in-a-month-of-lunches) - A book that teaches you the foundational techniques for writing, deploying, and running cloud-based applications in Azure.\n* [Learn Amazon Web Services in a Month of Lunches](https://www.manning.com/books/learn-amazon-web-services-in-a-month-of-lunches) - A book that guides you through the process of building a robust and secure web application using the core AWS services you really need to know.\n* [Build a Serverless React Application](https://buttercms.com/blog/what-is-serverless-and-how-to-use-it-in-practice) - A full understanding of serverless architecture and how to use it in practice.\n* [Learn Azure in a Month of Lunches, Second Edition](https://www.manning.com/books/learn-azure-in-a-month-of-lunches-second-edition) - In this fully updated and new edition, you\u2019ll get hands-on practice with the basics, including setting up cloud-based virtual machines, deploying web servers, and using hosted data stores.\n* [Learn Docker in a Month of Lunches](https://www.manning.com/books/learn-docker-in-a-month-of-lunches) - A tutorial to get essential skills to use Docker in Linux, Windows, and Mac environments.\n* [Knative in Action](https://www.manning.com/books/knative-in-action) - A book on how to build more complex and capable serverless applications with Knative.\n* [Getting Started with Kubernetes](https://www.manning.com/books/getting-started-with-kubernetes) - A hands-on guide to Kubernetes using Google Kubernetes Engine service.\n* [Cloud Operations](https://www.manning.com/books/cloud-operations) - A book that provides a holistic approach to CloudOps.\n* [Serverless Machine Learning in Action](https://www.manning.com/books/serverless-machine-learning-in-action) - A book on how to build serverless machine learning applications on public clouds like AWS, Azure, and GCP.\n* [Spring Microservices in Action, Second Edition](https://www.manning.com/books/spring-microservices-in-action-second-edition) - A book on how to build microservice-based applications using Java and the Spring platform and how to efficiently monitor and log your microservices operations.\n* [Spring Quickly](https://www.manning.com/books/spring-quickly) - A book that teaches you how to build professional-quality applications using Spring and Spring Boot.\n* [Azure Data Engineering](https://www.manning.com/books/azure-data-engineering) - A book that teaches the architectural, operational, and data management techniques that power cloud-based data infrastructure built on the Microsoft Azure platform\n* [AWS Security](https://www.manning.com/books/aws-security) - A guide to solving common AWS security issues.\n* [Kubernetes Native Microservices with Quarkus, and MicroProfile](https://www.manning.com/books/kubernetes-native-microservices-with-quarkus-and-microprofile) - An introduction to a modern approach to enterprise Java development using new tools designed for cloud-native applications.\n* [Pipeline as Code](https://www.manning.com/books/pipeline-as-code) - A hands-on experience on how to build CI/CD pipelines with Jenkins for cloud-native applications (including Serverless apps).\n* [Serverless Security](https://ServerlessSecurityBook.com) - An Apress book that discusses serverless security on AWS, Azure and Google Cloud.\n* [Azure Infrastructure as Code](https://www.manning.com/books/azure-infrastructure-as-code) - Master ARM templates, Bicep scripting, and other Azure Infrastructure-as-Code tools, techniques, and practices to run application infrastructure on the Azure cloud.\n* [Securing Kubernetes Secrets](https://www.manning.com/books/securing-kubernetes-secrets) - Securing Kubernetes Secrets is a compact hands-on guide to storing and protecting sensitive data in a Kubernetes environment.\n* [Kubernets on Windows](https://www.manning.com/books/kubernetes-on-windows) - Guide to successfully running windows and .NET applications on a Kubernetes cluster.\n* [Serverless Architectures on AWS, Second Edition](https://www.manning.com/books/serverless-architectures-on-aws-second-edition) - Book that teaches you how to design, secure and manage serverless backends that can power the most demanding web and mobile apps.\n* [Designing Cloud Data Platforms](https://www.manning.com/books/designing-cloud-data-platforms) - A hands-on guide to envisioning and designing a modern scalable data platform that takes full advantage of the flexibility of the cloud.\n* [Terraform in Action](https://www.manning.com/books/terraform-in-action) - Use Terraform to programmatically create, test, and manage infrastructure using the efficient infrastructure-as-code approach.\n* [Securing Cloud Applications](https://www.manning.com/books/securing-cloud-applications) - This book demonstrates effective real-world practices to keep your cloud and Kubernetes-deployed applications safe and sound.\n* [Google Anthos in Action](https://www.manning.com/books/google-anthos-in-action) - A book about Google Anthos created by the Google development team.\n* [Kubernetes in Action, Second Edition](https://www.manning.com/books/kubernetes-in-action-second-edition) - A fully-updated and comprehensive guide to developing and running applications in a Kubernetes environment.\n* [Cloud Observability in Action](https://www.manning.com/books/cloud-observability-in-action) - A book that teaches you how to set up an observability system that learns from a cloud application\u2019s signals, logging, and monitoring using free and open source tools.\n* [Podman in Action](https://www.manning.com/books/podman-in-action) - A book about developing and managing rootless containers using Podman.\n\n## Courses\n\n* [Serverless JavaScript by Example](https://www.packtpub.com/web-development/serverless-javascript-example-video) - Become dexterous with live demonstrations on serverless web development.\n* [AWS Lambda in Motion](https://www.manning.com/livevideo/aws-lambda-in-motion) - An example-driven tutorial that focuses on helping you understand and tackle the operational challenges with running AWS Lambda in production.\n* [Serverless Applications with AWS](https://www.manning.com/livevideo/serverless-applications-with-AWS) - Serverless Applications with AWS teaches you to build serverless applications using AWS Lambda and other cloud-based services.\n* [Serverless-stack](https://serverless-stack.com) - Learn to Build complete Full-Stack Apps with Serverless and React on AWS.\n* [Develop a Serverless Backend using Node.js on AWS Lambda](https://egghead.io/courses/develop-a-serverless-backend-using-node-js-on-aws-lambda) - Learn how to create a serverless API and connecting it to DynamoDB using leveraging Lambda's new async/await syntax\n* [AWS in Motion](https://www.manning.com/livevideo/aws-in-motion) - A liveVideo course that guides you through your first steps of deploying a web application on AWS, teaching you the basics of the AWS ecosystem.\n* [Production-Ready Serverless](https://www.manning.com/livevideo/production-ready-serverless) - This liveVideo teaches you how to build applications that take advantage of AWS Lambda and other AWS platform features like API Gateway and Kinesis.\n\n## Workshops\n\n* [Apache OpenWhisk Workshop](https://www.npmjs.com/package/openwhisk-workshop) - Interactive workshop to learn about building serverless applications with OpenWhisk.\n\n## Newsletters\n\n* [Serverless Status](https://serverless.email/) - A weekly digest of the latest serverless news and articles.\n* [Serverless Insights](https://symphonia.us15.list-manage.com/subscribe?u=8fe3a0d260ada7ca9aafdbf14&id=d4b4244107) - Symphonia's Serverless Insights.\n* [Off-by-none](https://www.jeremydaly.com/newsletter/) - Weekly newsletter that focuses on using serverless technology to build products in the cloud\n* [Serverless Transformation](https://www.getrevue.co/profile/serverless-transformation) - Weekly newsletter of a limited set of articles about serverless. Each article is graded on complexity level.\n* [Shipped](https://faun.dev) - A weekly newsletter from FAUN: Hand-curated tutorials, news and stories from the Serverless space.\n\n## AWS re:Invent videos\n\n* [\u2191\u2191\u2193\u2193\u2190\u2192\u2190\u2192 BA Lambda Start](https://www.youtube.com/watch?v=iz90fHia-Wk&index=4&list=PLhr1KZpdzukcLUKD2ej8AKYR-nryjGGnF)\n* [Application Lifecycle Management in a Serverless World](https://www.youtube.com/watch?v=8Zd-8GV-1mY&index=11&list=PLhr1KZpdzukcLUKD2ej8AKYR-nryjGGnF)\n* [bots + serverless = \u2764](https://www.youtube.com/watch?v=rvi2Jm4eQdM&index=5&list=PLhr1KZpdzukcLUKD2ej8AKYR-nryjGGnF)\n* [Coca-Cola: Running Serverless Applications with Enterprise Requirements](https://www.youtube.com/watch?v=yErmil00DYs&index=10&list=PLhr1KZpdzukcLUKD2ej8AKYR-nryjGGnF)\n* [Content and Data Platforms at Vevo: Rebuilding and Scaling from Zero](https://www.youtube.com/watch?v=EI7pwRMc6zM&index=12&list=PLhr1KZpdzukcLUKD2ej8AKYR-nryjGGnF)\n* [Operating Your Production API](https://www.youtube.com/watch?v=tNIl_Wb12sE&index=8&list=PLhr1KZpdzukcLUKD2ej8AKYR-nryjGGnF)\n* [Optimizing the Data Tier in Serverless Web Applications](https://www.youtube.com/watch?v=n5Jf6Vi2whI&index=9&list=PLhr1KZpdzukcLUKD2ej8AKYR-nryjGGnF)\n* [Real-time Data Processing Using AWS Lambda](https://www.youtube.com/watch?v=VFLKOy4GKXQ)\n* [Serverless Apps with AWS Step Functions](https://www.youtube.com/watch?v=75MRve4nv8s&index=7&list=PLhr1KZpdzukcLUKD2ej8AKYR-nryjGGnF)\n* [Serverless Computing Patterns at Expedia](https://www.youtube.com/watch?v=gT9x9LnU_rE&index=3&list=PLhr1KZpdzukcLUKD2ej8AKYR-nryjGGnF)\n* [Using AWS Lambda to Build Control Systems for Your AWS Infrastructure](https://www.youtube.com/watch?v=vkWGZ3uY0p0&index=2&list=PLhr1KZpdzukcLUKD2ej8AKYR-nryjGGnF)\n* [What\u2019s New with AWS Lambda](https://www.youtube.com/watch?v=CwxWhyGteNc)\n\n## Videos from conferences\n\n* [Serverlessconf](https://www.youtube.com/channel/UCqlcVgk8SkUmve4Kw4xSlgw)\n* [ServerlessDays](https://www.youtube.com/channel/UCYzAnR_SebAmLRkKIbK_YoQ)\n* [GOTO Conferences](https://www.youtube.com/playlist?list=PLEx5khR4g7PJNproQQ4SZ96Qeu-kr-Xbn)\n\n## Contributing\n\nYou want to contribute to this project? [Please follow these recommendations](CONTRIBUTING.md).\n\n## License\n\n[![CC0](https://i.creativecommons.org/p/zero/1.0/88x31.png)](https://creativecommons.org/publicdomain/zero/1.0/)\n",
        "releases": []
    }
}