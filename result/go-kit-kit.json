{
    "https://api.github.com/repos/go-kit/kit": {
        "forks": 2444,
        "watchers": 26757,
        "stars": 26757,
        "languages": {
            "Go": 746422,
            "Shell": 588
        },
        "commits": [
            "2024-03-13T13:42:15Z",
            "2023-12-22T23:16:59Z",
            "2023-05-29T21:23:33Z",
            "2023-03-02T02:16:12Z",
            "2023-01-02T06:10:18Z",
            "2022-08-26T00:50:32Z",
            "2022-08-19T02:17:44Z",
            "2022-08-08T18:08:42Z",
            "2022-08-03T04:34:55Z",
            "2022-08-02T18:03:01Z",
            "2022-07-11T18:10:31Z",
            "2022-06-02T18:53:39Z",
            "2022-04-23T01:20:17Z",
            "2022-04-23T01:06:57Z",
            "2022-04-23T00:59:53Z",
            "2022-04-21T15:52:57Z",
            "2022-03-15T20:38:00Z",
            "2022-03-15T20:36:15Z",
            "2022-01-31T15:37:13Z",
            "2022-01-07T21:57:03Z",
            "2021-12-30T00:51:16Z",
            "2021-11-23T18:14:48Z",
            "2021-10-30T21:01:54Z",
            "2021-10-30T20:42:28Z",
            "2021-09-28T15:01:29Z",
            "2021-09-28T12:11:13Z",
            "2021-09-28T11:28:32Z",
            "2021-09-18T19:40:17Z",
            "2021-09-17T23:05:54Z",
            "2021-09-17T21:31:29Z"
        ],
        "creation_date": "2015-02-03T00:01:19Z",
        "contributors": 30,
        "topics": [
            "go",
            "golang",
            "metallica",
            "microservices"
        ],
        "subscribers": 675,
        "readme": "# Go kit\n\n![GitHub Workflow Status](https://github.com/go-kit/kit/workflows/CI/badge.svg)\n[![GoDev](https://img.shields.io/badge/go.dev-reference-007d9c?logo=go&logoColor=white&style=flat-square)](https://pkg.go.dev/github.com/go-kit/kit?tab=doc)\n[![codecov](https://codecov.io/gh/go-kit/kit/branch/master/graph/badge.svg)](https://codecov.io/gh/go-kit/kit)\n[![Go Report Card](https://goreportcard.com/badge/go-kit/kit)](https://goreportcard.com/report/go-kit/kit)\n[![Sourcegraph](https://sourcegraph.com/github.com/go-kit/kit/-/badge.svg)](https://sourcegraph.com/github.com/go-kit/kit?badge)\n\n**Go kit** is a **programming toolkit** for building microservices\n(or elegant monoliths) in Go. We solve common problems in distributed\nsystems and application architecture so you can focus on delivering\nbusiness value.\n\n- Website: [gokit.io](https://gokit.io)\n- Mailing list: [go-kit](https://groups.google.com/forum/#!forum/go-kit)\n- Slack: [gophers.slack.com](https://gophers.slack.com) **#go-kit** ([invite](https://gophersinvite.herokuapp.com/))\n\n## Sponsors\n\n<div>\n  <a href=\"https://encore.dev\" style=\"display: inline-flex; align-items: center; gap: 10px\">\n    <img src=\"https://user-images.githubusercontent.com/78424526/214602214-52e0483a-b5fc-4d4c-b03e-0b7b23e012df.svg\" height=\"28px\" alt=\"encore icon\"></img>\n  <b>Encore \u2013 the platform for building Go-based cloud backends.</b>\n    </a>\n</div>\n<br/>\n\nClick [here](https://github.com/sponsors/peterbourgon) or Sponsor, above, for more information on sponsorship.\n\n## Motivation\n\nGo has emerged as the language of the server, but it remains underrepresented\nin so-called \"modern enterprise\" companies like Facebook, Twitter, Netflix, and\nSoundCloud. Many of these organizations have turned to JVM-based stacks for\ntheir business logic, owing in large part to libraries and ecosystems that\ndirectly support their microservice architectures.\n\nTo reach its next level of success, Go needs more than simple primitives and\nidioms. It needs a comprehensive toolkit, for coherent distributed programming\nin the large. Go kit is a set of packages and best practices, which provide a\ncomprehensive, robust, and trustable way of building microservices for\norganizations of any size.\n\nFor more details, see\n [the website](https://gokit.io),\n [the motivating blog post](http://peter.bourgon.org/go-kit/) and\n [the video of the talk](https://www.youtube.com/watch?v=iFR_7AKkJFU).\nSee also the\n [Go kit talk at GopherCon 2015](https://www.youtube.com/watch?v=1AjaZi4QuGo).\n\n## Goals\n\n- Operate in a heterogeneous SOA \u2014 expect to interact with mostly non-Go-kit services\n- RPC as the primary messaging pattern\n- Pluggable serialization and transport \u2014 not just JSON over HTTP\n- Operate within existing infrastructures \u2014 no mandates for specific tools or technologies\n\n## Non-goals\n\n- Supporting messaging patterns other than RPC (for now) \u2014 e.g. MPI, pub/sub, CQRS, etc.\n- Re-implementing functionality that can be provided by adapting existing software\n- Having opinions on operational concerns: deployment, configuration, process supervision, orchestration, etc.\n\n## Contributing\n\nPlease see [CONTRIBUTING.md](/CONTRIBUTING.md).\nThank you, [contributors](https://github.com/go-kit/kit/graphs/contributors)!\n\n## Dependency management\n\nGo kit is [modules](https://github.com/golang/go/wiki/Modules) aware, and we\nencourage users to use the standard modules tooling. But Go kit is at major\nversion 0, so it should be compatible with non-modules environments.\n\n## Code generators\n\nThere are several third-party tools that can generate Go kit code based on\ndifferent starting assumptions.\n\n- [RecoLabs/microgen](https://github.com/RecoLabs/microgen)\n- [GrantZheng/kit](https://github.com/GrantZheng/kit)\n- [kujtimiihoxha/kit](https://github.com/kujtimiihoxha/kit) (unmaintained)\n- [nytimes/marvin](https://github.com/nytimes/marvin)\n- [sagikazarmark/mga](https://github.com/sagikazarmark/mga)\n- [sagikazarmark/protoc-gen-go-kit](https://github.com/sagikazarmark/protoc-gen-go-kit)\n- [metaverse/truss](https://github.com/metaverse/truss)\n- [goadesign/goakit](https://github.com/goadesign/plugins/tree/v3/goakit)\n\n## Related projects\n\nProjects with a \u2605 have had particular influence on Go kit's design (or vice-versa).\n\n### Service frameworks\n\n- [gizmo](https://github.com/nytimes/gizmo), a microservice toolkit from The New York Times \u2605\n- [go-micro](https://github.com/micro/go-micro), a distributed systems development framework \u2605\n- [gotalk](https://github.com/rsms/gotalk), async peer communication protocol &amp; library\n- [Kite](https://github.com/koding/kite), a micro-service framework\n- [gocircuit](https://github.com/gocircuit/circuit), dynamic cloud orchestration\n\n### Individual components\n\n- [afex/hystrix-go](https://github.com/afex/hystrix-go), client-side latency and fault tolerance library\n- [armon/go-metrics](https://github.com/armon/go-metrics), library for exporting performance and runtime metrics to external metrics systems\n- [codahale/lunk](https://github.com/codahale/lunk), structured logging in the style of Google's Dapper or Twitter's Zipkin\n- [eapache/go-resiliency](https://github.com/eapache/go-resiliency), resiliency patterns\n- [sasbury/logging](https://github.com/sasbury/logging), a tagged style of logging\n- [grpc/grpc-go](https://github.com/grpc/grpc-go), HTTP/2 based RPC\n- [inconshreveable/log15](https://github.com/inconshreveable/log15), simple, powerful logging for Go \u2605\n- [mailgun/vulcand](https://github.com/vulcand/vulcand), programmatic load balancer backed by etcd\n- [mattheath/phosphor](https://github.com/mondough/phosphor), distributed system tracing\n- [pivotal-golang/lager](https://github.com/pivotal-golang/lager), an opinionated logging library\n- [rubyist/circuitbreaker](https://github.com/rubyist/circuitbreaker), circuit breaker library\n- [sirupsen/logrus](https://github.com/sirupsen/logrus), structured, pluggable logging for Go \u2605\n- [sourcegraph/appdash](https://github.com/sourcegraph/appdash), application tracing system based on Google's Dapper\n- [spacemonkeygo/monitor](https://github.com/spacemonkeygo/monitor), data collection, monitoring, instrumentation, and Zipkin client library\n- [streadway/handy](https://github.com/streadway/handy), net/http handler filters\n- [vitess/rpcplus](https://godoc.org/github.com/youtube/vitess/go/rpcplus), package rpc + context.Context\n- [gdamore/mangos](https://github.com/gdamore/mangos), nanomsg implementation in pure Go\n\n### Web frameworks\n\n- [Gorilla](http://www.gorillatoolkit.org)\n- [Gin](https://gin-gonic.com/)\n- [Negroni](https://github.com/codegangsta/negroni)\n- [Goji](https://github.com/zenazn/goji)\n- [Martini](https://github.com/go-martini/martini)\n- [Beego](https://beego.vip/)\n- [Revel](https://revel.github.io/) (considered [harmful](https://github.com/go-kit/kit/issues/350))\n- [GoBuffalo](https://gobuffalo.io/)\n\n## Additional reading\n\n- [Architecting for the Cloud](https://slideshare.net/stonse/architecting-for-the-cloud-using-netflixoss-codemash-workshop-29852233) \u2014 Netflix\n- [Dapper, a Large-Scale Distributed Systems Tracing Infrastructure](http://research.google.com/pubs/pub36356.html) \u2014 Google\n- [Your Server as a Function](http://monkey.org/~marius/funsrv.pdf) (PDF) \u2014 Twitter\n",
        "releases": [
            {
                "name": "v0.13.0",
                "date": "2023-08-25T14:22:38Z"
            },
            {
                "name": "v0.12.0",
                "date": "2021-09-23T20:44:15Z"
            },
            {
                "name": "v0.11.0",
                "date": "2021-07-04T17:31:10Z"
            },
            {
                "name": "v0.10.0",
                "date": "2020-02-17T20:02:44Z"
            },
            {
                "name": "v0.9.0",
                "date": "2019-06-27T14:07:54Z"
            },
            {
                "name": "v0.8.0",
                "date": "2018-11-10T04:41:47Z"
            },
            {
                "name": "0.7.0",
                "date": "2018-03-19T18:53:16Z"
            },
            {
                "name": "0.6.0",
                "date": "2017-10-09T09:15:49Z"
            },
            {
                "name": "0.5.0",
                "date": "2017-06-20T07:54:14Z"
            },
            {
                "name": "0.4.0",
                "date": "2017-03-08T09:31:47Z"
            },
            {
                "name": "0.3.0",
                "date": "2016-11-15T01:40:53Z"
            },
            {
                "name": "0.2.0",
                "date": "2016-08-02T10:15:11Z"
            },
            {
                "name": "0.1.0",
                "date": "2016-06-07T16:46:04Z"
            }
        ]
    }
}