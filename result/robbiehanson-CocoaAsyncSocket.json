{
    "https://api.github.com/repos/robbiehanson/CocoaAsyncSocket": {
        "forks": 3004,
        "watchers": 12460,
        "stars": 12460,
        "languages": {
            "Objective-C": 508068,
            "Swift": 19243,
            "Ruby": 2271,
            "HTML": 1861,
            "Shell": 1609
        },
        "commits": [
            "2021-05-12T06:06:39Z",
            "2021-04-29T20:37:54Z",
            "2021-01-24T19:28:27Z",
            "2021-01-24T11:21:58Z",
            "2020-11-16T16:25:17Z",
            "2020-10-30T21:42:37Z",
            "2020-10-16T11:05:58Z",
            "2020-10-02T21:12:46Z",
            "2020-06-13T00:40:43Z",
            "2020-06-12T22:21:59Z",
            "2020-06-12T20:34:50Z",
            "2020-06-07T21:35:37Z",
            "2020-05-05T21:52:11Z",
            "2020-03-21T18:28:21Z",
            "2020-03-21T11:52:50Z",
            "2020-03-20T13:37:15Z",
            "2020-03-20T13:33:49Z",
            "2020-03-20T13:25:25Z",
            "2020-02-18T06:08:35Z",
            "2020-02-18T05:45:56Z",
            "2020-02-18T05:31:06Z",
            "2020-02-18T05:24:12Z",
            "2020-02-18T05:10:45Z",
            "2020-02-18T05:08:37Z",
            "2020-02-18T04:28:15Z",
            "2020-02-18T03:56:38Z",
            "2020-02-17T17:21:15Z",
            "2020-02-17T16:57:16Z",
            "2020-02-17T10:05:05Z",
            "2020-02-17T09:25:40Z"
        ],
        "creation_date": "2011-11-22T10:25:54Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 530,
        "readme": "# CocoaAsyncSocket\n[![Build Status](https://travis-ci.org/robbiehanson/CocoaAsyncSocket.svg?branch=master)](https://travis-ci.org/robbiehanson/CocoaAsyncSocket) [![Version Status](https://img.shields.io/cocoapods/v/CocoaAsyncSocket.svg?style=flat)](http://cocoadocs.org/docsets/CocoaAsyncSocket) [![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage) [![Platform](http://img.shields.io/cocoapods/p/CocoaAsyncSocket.svg?style=flat)](http://cocoapods.org/?q=CocoaAsyncSocket) [![license Public Domain](https://img.shields.io/badge/license-Public%20Domain-orange.svg?style=flat)](https://en.wikipedia.org/wiki/Public_domain)\n\n\nCocoaAsyncSocket provides easy-to-use and powerful asynchronous socket libraries for macOS, iOS, and tvOS. The classes are described below.\n\n## Installation\n\n#### CocoaPods\n\nInstall using [CocoaPods](https://cocoapods.org) by adding this line to your Podfile:\n\n````ruby\nuse_frameworks! # Add this if you are targeting iOS 8+ or using Swift\npod 'CocoaAsyncSocket'  \n````\n\n#### Carthage\n\nCocoaAsyncSocket is [Carthage](https://github.com/Carthage/Carthage) compatible. To include it add the following line to your `Cartfile`\n\n```bash\ngithub \"robbiehanson/CocoaAsyncSocket\" \"master\"\n```\n\nThe project is currently configured to build for **iOS**, **tvOS** and **Mac**.  After building with carthage the resultant frameworks will be stored in:\n\n* `Carthage/Build/iOS/CocoaAsyncSocket.framework`\n* `Carthage/Build/tvOS/CocoaAsyncSocket.framework`\n* `Carthage/Build/Mac/CocoaAsyncSocket.framework`\n\nSelect the correct framework(s) and drag it into your project.\n\n#### Swift Package Manager\n\nSimply add the package dependency to your Package.swift and depend on \"CocoaAsyncSocket\" in the necessary targets:\n```swift\ndependencies: [\n    .package(url: \"https://github.com/robbiehanson/CocoaAsyncSocket\", from: \"7.6.4\")\n]\n```\n\n#### Manual\n\nYou can also include it into your project by adding the source files directly, but you should probably be using a dependency manager to keep up to date.\n\n### Importing\n\nUsing Objective-C:\n\n```obj-c\n// When using Clang Modules:\n@import CocoaAsyncSocket; \n\n// or when not:\n#import \"GCDAsyncSocket.h\" // for TCP\n#import \"GCDAsyncUdpSocket.h\" // for UDP\n```\n\nUsing Swift:\n\n```swift\nimport CocoaAsyncSocket\n```\n\n## TCP\n\n**GCDAsyncSocket** is a TCP/IP socket networking library built atop Grand Central Dispatch. Here are the key features available:\n\n- Native Objective-C, fully self-contained in one class.<br/>\n  _No need to muck around with sockets or streams. This class handles everything for you._\n\n- Full delegate support<br/>\n  _Errors, connections, read completions, write completions, progress, and disconnections all result in a call to your delegate method._\n\n- Queued non-blocking reads and writes, with optional timeouts.<br/>\n  _You tell it what to read or write, and it handles everything for you. Queueing, buffering, and searching for termination sequences within the stream - all handled for you automatically._\n\n- Automatic socket acceptance.<br/>\n  _Spin up a server socket, tell it to accept connections, and it will call you with new instances of itself for each connection._\n\n- Support for TCP streams over IPv4 and IPv6.<br/>\n  _Automatically connect to IPv4 or IPv6 hosts. Automatically accept incoming connections over both IPv4 and IPv6 with a single instance of this class. No more worrying about multiple sockets._\n\n- Support for TLS / SSL<br/>\n  _Secure your socket with ease using just a single method call. Available for both client and server sockets._\n\n- Fully GCD based and Thread-Safe<br/>\n  _It runs entirely within its own GCD dispatch_queue, and is completely thread-safe. Further, the delegate methods are all invoked asynchronously onto a dispatch_queue of your choosing. This means parallel operation of your socket code, and your delegate/processing code._\n\n## UDP\n\n**GCDAsyncUdpSocket** is a UDP/IP socket networking library built atop Grand Central Dispatch. Here are the key features available:\n\n- Native Objective-C, fully self-contained in one class.<br/>\n  _No need to muck around with low-level sockets. This class handles everything for you._\n\n- Full delegate support.<br/>\n  _Errors, send completions, receive completions, and disconnections all result in a call to your delegate method._\n\n- Queued non-blocking send and receive operations, with optional timeouts.<br/>\n  _You tell it what to send or receive, and it handles everything for you. Queueing, buffering, waiting and checking errno - all handled for you automatically._\n\n- Support for IPv4 and IPv6.<br/>\n  _Automatically send/recv using IPv4 and/or IPv6. No more worrying about multiple sockets._\n\n- Fully GCD based and Thread-Safe<br/>\n  _It runs entirely within its own GCD dispatch_queue, and is completely thread-safe. Further, the delegate methods are all invoked asynchronously onto a dispatch_queue of your choosing. This means parallel operation of your socket code, and your delegate/processing code._\n\n***\n\nFor those new(ish) to networking, it's recommended you **[read the wiki](https://github.com/robbiehanson/CocoaAsyncSocket/wiki)**.<br/>_Sockets might not work exactly like you think they do..._\n\n**Still got questions?** Try the **[CocoaAsyncSocket Mailing List](https://groups.google.com/group/cocoaasyncsocket)**.\n***\n\nLove the project? Wanna buy me a \u2615\ufe0f&nbsp;&nbsp;? (or a \ud83c\udf7a&nbsp;&nbsp;\ud83d\ude00&nbsp;):\n\n[![donation-bitcoin](https://bitpay.com/img/donate-sm.png)](https://onename.com/robbiehanson)\n[![donation-paypal](https://www.paypal.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=2M8C699FQ8AW2)\n\n",
        "releases": [
            {
                "name": "Version 7.6.5",
                "date": "2020-12-13T17:09:11Z"
            },
            {
                "name": "Version 7.6.4",
                "date": "2020-02-18T05:55:27Z"
            },
            {
                "name": "Version 7.6.3",
                "date": "2018-03-30T22:54:17Z"
            },
            {
                "name": "Version 7.6.1",
                "date": "2017-05-11T19:08:51Z"
            },
            {
                "name": "Version 7.6.0",
                "date": "2017-02-22T00:21:14Z"
            },
            {
                "name": "Version 7.5.1",
                "date": "2016-11-09T18:57:07Z"
            },
            {
                "name": "Version 7.5.0",
                "date": "2016-07-07T21:49:04Z"
            },
            {
                "name": "Version 7.4.3",
                "date": "2016-02-18T00:03:40Z"
            },
            {
                "name": "7.4.2",
                "date": "2015-08-12T23:03:46Z"
            },
            {
                "name": "7.4.1",
                "date": "2014-08-31T09:44:31Z"
            },
            {
                "name": "7.3.4",
                "date": "2014-01-26T20:11:54Z"
            },
            {
                "name": "7.3.3",
                "date": "2013-12-27T22:29:41Z"
            }
        ]
    }
}