{
    "https://api.github.com/repos/zyedidia/micro": {
        "forks": 1188,
        "watchers": 25517,
        "stars": 25517,
        "languages": {
            "Go": 591110,
            "Lua": 22045,
            "Shell": 9158,
            "Roff": 3055,
            "Makefile": 2636
        },
        "commits": [
            "2025-01-20T19:28:38Z",
            "2025-01-19T12:07:48Z",
            "2025-01-14T17:20:37Z",
            "2025-01-06T06:07:41Z",
            "2025-01-05T12:20:53Z",
            "2025-01-05T12:18:03Z",
            "2025-01-05T11:19:11Z",
            "2025-01-05T11:13:21Z",
            "2025-01-01T10:31:46Z",
            "2025-01-01T10:30:13Z",
            "2025-01-04T14:55:46Z",
            "2025-01-03T12:09:22Z",
            "2025-01-01T10:11:39Z",
            "2024-12-31T12:32:34Z",
            "2023-11-01T20:17:26Z",
            "2023-10-12T23:56:52Z",
            "2023-10-13T00:15:48Z",
            "2024-12-29T12:22:35Z",
            "2023-10-12T23:56:16Z",
            "2024-12-27T23:03:56Z",
            "2024-12-27T22:59:12Z",
            "2024-12-17T17:52:44Z",
            "2024-12-17T17:44:48Z",
            "2024-12-09T18:42:19Z",
            "2024-12-04T20:23:40Z",
            "2024-12-03T20:07:30Z",
            "2024-11-30T15:51:13Z",
            "2024-12-02T20:21:29Z",
            "2024-11-30T14:25:14Z",
            "2024-11-26T19:30:43Z"
        ],
        "creation_date": "2016-03-11T02:06:28Z",
        "contributors": 30,
        "topics": [
            "command-line",
            "cross-platform",
            "editor",
            "go",
            "golang",
            "micro",
            "terminal",
            "text-editor"
        ],
        "subscribers": 271,
        "readme": "<img alt=\"micro logo\" src=\"./assets/micro-logo-drop.svg\" width=\"500px\"/>\n\n![Test Workflow](https://github.com/zyedidia/micro/actions/workflows/test.yaml/badge.svg)\n[![Go Report Card](https://goreportcard.com/badge/github.com/zyedidia/micro)](https://goreportcard.com/report/github.com/zyedidia/micro)\n[![Release](https://img.shields.io/github/release/zyedidia/micro.svg?label=Release)](https://github.com/zyedidia/micro/releases)\n[![MIT License](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/zyedidia/micro/blob/master/LICENSE)\n[![Join the chat at https://gitter.im/zyedidia/micro](https://badges.gitter.im/zyedidia/micro.svg)](https://gitter.im/zyedidia/micro?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Snap Status](https://snapcraft.io/micro/badge.svg)](https://snapcraft.io/micro)\n\n**micro** is a terminal-based text editor that aims to be easy to use and intuitive, while also taking advantage of the capabilities\nof modern terminals. It comes as a single, batteries-included, static binary with no dependencies; you can download and use it right now!\n\nAs its name indicates, micro aims to be somewhat of a successor to the nano editor by being easy to install and use.\nIt strives to be enjoyable as a full-time editor for people who prefer to work in a terminal, or those who regularly edit files over SSH.\n\nHere is a picture of micro editing its source code.\n\n![Screenshot](./assets/micro-solarized.png)\n\nTo see more screenshots of micro, showcasing some of the default color schemes, see [here](https://micro-editor.github.io).\n\nYou can also check out the website for Micro at https://micro-editor.github.io.\n\n- - -\n\n## Features\n\n- Easy to use and install.\n- No dependencies or external files are needed \u2014 just the binary you can download further down the page.\n- Multiple cursors.\n- Common keybindings (<kbd>Ctrl-s</kbd>, <kbd>Ctrl-c</kbd>, <kbd>Ctrl-v</kbd>, <kbd>Ctrl-z</kbd>, \u2026).\n  - Keybindings can be rebound to your liking.\n- Sane defaults.\n  - You shouldn't have to configure much out of the box (and it is extremely easy to configure).\n- Splits and tabs.\n- nano-like menu to help you remember the keybindings.\n- Extremely good mouse support.\n  - This means mouse dragging to create a selection, double click to select by word, and triple click to select by line.\n- Cross-platform (it should work on all the platforms Go runs on).\n  - Note that while Windows is supported, Mingw/Cygwin is not (see below).\n- Plugin system (plugins are written in Lua).\n  - micro has a built-in plugin manager to automatically install, remove, and update plugins.\n- Built-in diff gutter.\n- Simple autocompletion.\n- Persistent undo.\n- Automatic linting and error notifications.\n- Syntax highlighting for over [130 languages](runtime/syntax).\n- Color scheme support.\n  - By default, micro comes with 16, 256, and true color themes.\n- True color support (set the `MICRO_TRUECOLOR` environment variable to 1 to enable it).\n- Copy and paste with the system clipboard.\n- Small and simple.\n- Easily configurable.\n- Macros.\n- Smart highlighting of trailing whitespace and tab vs space errors.\n- Common editor features such as undo/redo, line numbers, Unicode support, soft wrapping, \u2026\n\n## Installation\n\nTo install micro, you can download a [prebuilt binary](https://github.com/zyedidia/micro/releases), or you can build it from source.\n\nIf you want more information about ways to install micro, see this [wiki page](https://github.com/zyedidia/micro/wiki/Installing-Micro).\n\nUse `micro -version` to get the version information after installing. It is only guaranteed that you are installing the most recent\nstable version if you install from the prebuilt binaries, Homebrew, or Snap.\n\nA desktop entry file and man page can be found in the [assets/packaging](https://github.com/zyedidia/micro/tree/master/assets/packaging) directory.\n\n### Pre-built binaries\n\nPre-built binaries are distributed in [releases](https://github.com/zyedidia/micro/releases).\n\nTo uninstall micro, simply remove the binary, and the configuration directory at `~/.config/micro`.\n\n#### Third-party quick-install script\n\n```bash\ncurl https://getmic.ro | bash\n```\n\nThe script will place the micro binary in the current directory. From there, you can move it to a directory on your path of your choosing (e.g. `sudo mv micro /usr/bin`). See its [GitHub repository](https://github.com/benweissmann/getmic.ro) for more information.\n\n#### Eget\n\nWith [Eget](https://github.com/zyedidia/eget) installed, you can easily get a pre-built binary:\n\n```\neget zyedidia/micro\n```\n\nUse `--tag VERSION` to download a specific tagged version.\n\n```\neget --tag nightly zyedidia/micro # download the nightly version (compiled every day at midnight UTC)\neget --tag v2.0.8 zyedidia/micro  # download version 2.0.8 rather than the latest release\n```\n\nYou can install `micro` by adding `--to /usr/local/bin` to the `eget` command, or move the binary manually to a directory on your `$PATH` after the download completes.\n\nSee [Eget](https://github.com/zyedidia/eget) for more information.\n\n### Package managers\n\nYou can install micro using Homebrew on Mac:\n\n```\nbrew install micro\n```\n\n**Note for Mac:** All micro keybindings use the control or alt (option) key, not the command\nkey. By default, macOS terminals do not forward alt key events. To fix this, please see\nthe section on [macOS terminals](https://github.com/zyedidia/micro#macos-terminal) further below.\n\nOn Linux, you can install micro through [snap](https://snapcraft.io/docs/core/install)\n\n```\nsnap install micro --classic\n```\n\nMicro is also available through other package managers on Linux such as dnf, AUR, Nix, and package managers\nfor other operating systems. These packages are not guaranteed to be up-to-date.\n\n<!-- * `apt install micro` (Ubuntu 20.04 `focal`, and Debian `unstable | testing | buster-backports`). At the moment, this package (2.0.1-1) is outdated and has a known bug where debug mode is enabled. -->\n\n* Linux:\n    * distro-specific package managers:\n        * `dnf install micro` (Fedora).\n        * `apt install micro` (Ubuntu and Debian).\n        * `pacman -S micro` (Arch Linux).\n        * `emerge app-editors/micro` (Gentoo).\n        * `zypper install micro-editor` (SUSE)\n        * `eopkg install micro` (Solus).\n        * `pacstall -I micro` (Pacstall).\n        * `apt-get install micro` (ALT Linux)\n        * See [wiki](https://github.com/zyedidia/micro/wiki/Installing-Micro) for details about CRUX, Termux.\n    * distro-agnostic package managers:\n        * `nix profile install nixpkgs#micro` (with [Nix](https://nixos.org/) and flakes enabled)\n        * `flox install micro` (with [Flox](https://flox.dev))\n* Windows: [Chocolatey](https://chocolatey.org), [Scoop](https://scoop.sh/) and [WinGet](https://learn.microsoft.com/en-us/windows/package-manager/winget/).\n    * `choco install micro`.\n    * `scoop install micro`.\n    * `winget install zyedidia.micro`\n* OpenBSD: Available in the ports tree and also available as a binary package.\n    * `pkg_add -v micro`.\n* NetBSD, macOS, Linux, Illumos, etc. with [pkgsrc](http://www.pkgsrc.org/)-current:\n    * `pkg_add micro`\n* macOS: Available in package managers.\n    * `sudo port install micro` (with [MacPorts](https://www.macports.org))\n    * `brew install micro` (with [Homebrew](https://brew.sh/))\n    * `nix profile install nixpkgs#micro` (with [Nix](https://nixos.org/) and flakes enabled)\n    * `flox install micro` (with [Flox](https://flox.dev))\n\n**Note for Linux desktop environments:**\n\nFor interfacing with the local system clipboard, the following tools need to be installed:\n* For X11, `xclip` or `xsel`\n* For [Wayland](https://wayland.freedesktop.org/), `wl-clipboard`\n\nWithout these tools installed, micro will use an internal clipboard for copy and paste, but it won't be accessible to external applications.\n\n### Building from source\n\nIf your operating system does not have a binary release, but does run Go, you can build from source.\n\nMake sure that you have Go version 1.19 or greater and Go modules are enabled.\n\n```\ngit clone https://github.com/zyedidia/micro\ncd micro\nmake build\nsudo mv micro /usr/local/bin # optional\n```\n\nThe binary will be placed in the current directory and can be moved to\nanywhere you like (for example `/usr/local/bin`).\n\nThe command `make install` will install the binary to `$GOPATH/bin` or `$GOBIN`.\n\nYou can install directly with `go get` (`go get github.com/zyedidia/micro/cmd/micro`) but this isn't\nrecommended because it doesn't build micro with version information (necessary for the plugin manager),\nand doesn't disable debug mode.\n\n### Fully static or dynamically linked binary\n\nBy default, the micro binary is linked statically to increase the portability of the prebuilt binaries.\nThis behavior can simply be overriden by providing `CGO_ENABLED=1` to the build target.\n\n```\nCGO_ENABLED=1 make build\n```\n\nAfterwards the micro binary will dynamically link with the present core system libraries.\n\n**Note for Mac:**\nNative macOS builds are done with `CGO_ENABLED=1` forced set to support adding the \"Information Property List\" in the linker step.\n\n### macOS terminal\n\nIf you are using macOS, you should consider using [iTerm2](http://iterm2.com/) instead of the default terminal (Terminal.app). The iTerm2 terminal has much better mouse support as well as better handling of key events. For best keybinding behavior, choose `xterm defaults` under `Preferences->Profiles->Keys->Presets...`, and select `Esc+` for `Left Option Key` in the same menu. The newest versions also support true color.\n\nIf you still insist on using the default Mac terminal, be sure to set `Use Option key as Meta key` under\n`Preferences->Profiles->Keyboard` to use <kbd>option</kbd> as <kbd>alt</kbd>.\n\n### WSL and Windows Console\n\nIf you use micro within WSL, it is highly recommended that you use the [Windows\nTerminal](https://apps.microsoft.com/store/detail/windows-terminal/9N0DX20HK701?hl=en-us&gl=us)\ninstead of the default Windows Console.\n\nIf you must use Windows Console for some reason, note that there is a bug in\nWindows Console WSL that causes a font change whenever micro tries to access\nthe external clipboard via powershell. To fix this, use an internal clipboard\nwith `set clipboard internal` (though your system clipboard will no longer be\navailable in micro).\n\n### Colors and syntax highlighting\n\nIf you open micro and it doesn't seem like syntax highlighting is working, this is probably because\nyou are using a terminal which does not support 256 color mode. Try changing the color scheme to `simple`\nby pressing <kbd>Ctrl-e</kbd> in micro and typing `set colorscheme simple`.\n\nIf you are using the default Ubuntu terminal, to enable 256 color mode make sure your `TERM` variable is set\nto `xterm-256color`.\n\nMany of the Windows terminals don't support more than 16 colors, which means\nthat micro's default color scheme won't look very good. You can either set\nthe color scheme to `simple`, or download and configure a better terminal emulator\nthan the Windows default.\n\n### Cygwin, Mingw, Plan9\n\nCygwin, Mingw, and Plan9 are unfortunately not officially supported. In Cygwin and Mingw, micro will often work when run using\nthe `winpty` utility:\n\n```\nwinpty micro.exe ...\n```\n\nMicro uses the amazing [tcell library](https://github.com/gdamore/tcell), but this\nmeans that micro is restricted to the platforms tcell supports. As a result, micro does not support\nPlan9 or Cygwin (although this may change in the future). Micro also doesn't support NaCl (which is deprecated anyway).\n\n## Usage\n\nOnce you have built the editor, start it by running `micro path/to/file.txt` or `micro` to open an empty buffer.\n\nmicro also supports creating buffers from `stdin`:\n\n```sh\nip a | micro\n```\n\nYou can move the cursor around with the arrow keys and mouse.\n\nYou can also use the mouse to manipulate the text. Simply clicking and dragging\nwill select text. You can also double click to enable word selection, and triple\nclick to enable line selection.\n\n## Documentation and Help\n\nmicro has a built-in help system which you can access by pressing <kbd>Ctrl-e</kbd> and typing `help`. Additionally, you can\nview the help files here:\n\n- [main help](https://github.com/zyedidia/micro/tree/master/runtime/help/help.md)\n- [keybindings](https://github.com/zyedidia/micro/tree/master/runtime/help/keybindings.md)\n- [commands](https://github.com/zyedidia/micro/tree/master/runtime/help/commands.md)\n- [colors](https://github.com/zyedidia/micro/tree/master/runtime/help/colors.md)\n- [options](https://github.com/zyedidia/micro/tree/master/runtime/help/options.md)\n- [plugins](https://github.com/zyedidia/micro/tree/master/runtime/help/plugins.md)\n\nI also recommend reading the [tutorial](https://github.com/zyedidia/micro/tree/master/runtime/help/tutorial.md) for\na brief introduction to the more powerful configuration features micro offers.\n\nThere is also an unofficial Discord, which you can join at https://discord.gg/nhWR6armnR.\n\n## Contributing\n\nIf you find any bugs, please report them! I am also happy to accept pull requests from anyone.\n\nYou can use the [GitHub issue tracker](https://github.com/zyedidia/micro/issues)\nto report bugs, ask questions, or suggest new features.\n\nFor a more informal setting to discuss the editor, you can join the [Gitter chat](https://gitter.im/zyedidia/micro) or the [Discord](https://discord.gg/nhWR6armnR). You can also use the [Discussions](https://github.com/zyedidia/micro/discussions) section on Github for a forum-like setting or for Q&A.\n\nSometimes I am unresponsive, and I apologize! If that happens, please ping me.\n",
        "releases": [
            {
                "name": "nightly",
                "date": "2020-07-05T20:43:25Z"
            },
            {
                "name": "2.0.14",
                "date": "2024-08-27T18:13:07Z"
            },
            {
                "name": "2.0.14-rc1",
                "date": "2024-08-19T20:33:17Z"
            },
            {
                "name": "2.0.13",
                "date": "2023-10-21T22:38:29Z"
            },
            {
                "name": "2.0.12",
                "date": "2023-09-06T20:16:56Z"
            },
            {
                "name": "2.0.11",
                "date": "2022-08-01T01:50:38Z"
            },
            {
                "name": "2.0.10",
                "date": "2021-08-07T00:57:40Z"
            },
            {
                "name": "2.0.9",
                "date": "2021-05-16T20:49:48Z"
            },
            {
                "name": "2.0.8",
                "date": "2020-10-06T21:44:00Z"
            },
            {
                "name": "2.0.7",
                "date": "2020-09-06T21:42:29Z"
            },
            {
                "name": "2.0.6",
                "date": "2020-06-24T21:34:54Z"
            },
            {
                "name": "2.0.5",
                "date": "2020-06-18T21:31:47Z"
            },
            {
                "name": "2.0.4",
                "date": "2020-05-23T19:01:00Z"
            },
            {
                "name": "2.0.3",
                "date": "2020-04-10T21:29:51Z"
            },
            {
                "name": "2.0.2",
                "date": "2020-02-26T02:09:20Z"
            },
            {
                "name": "2.0.1",
                "date": "2020-02-12T19:36:15Z"
            },
            {
                "name": "2.0.0",
                "date": "2020-02-11T22:03:54Z"
            },
            {
                "name": "2.0.0-rc3",
                "date": "2020-01-24T22:05:42Z"
            },
            {
                "name": "1.4.1",
                "date": "2018-08-10T02:01:43Z"
            },
            {
                "name": "1.4.0",
                "date": "2018-01-26T01:19:54Z"
            },
            {
                "name": "1.3.4",
                "date": "2017-11-24T23:53:38Z"
            },
            {
                "name": "1.3.3",
                "date": "2017-09-28T23:31:57Z"
            },
            {
                "name": "1.3.2",
                "date": "2017-09-15T20:14:48Z"
            },
            {
                "name": "1.3.1",
                "date": "2017-08-08T15:09:14Z"
            },
            {
                "name": "1.3.0",
                "date": "2017-07-29T18:31:39Z"
            },
            {
                "name": "1.2.0",
                "date": "2017-05-27T21:19:27Z"
            },
            {
                "name": "1.1.4",
                "date": "2017-02-10T15:51:34Z"
            },
            {
                "name": "1.1.3",
                "date": "2016-12-06T16:12:40Z"
            },
            {
                "name": "1.1.2",
                "date": "2016-10-24T13:09:17Z"
            },
            {
                "name": "1.1.1",
                "date": "2016-10-10T22:44:30Z"
            },
            {
                "name": "1.1.0",
                "date": "2016-10-07T01:04:04Z"
            },
            {
                "name": "1.0.3",
                "date": "2016-09-07T01:56:00Z"
            },
            {
                "name": "1.0.2",
                "date": "2016-09-04T17:35:27Z"
            },
            {
                "name": "1.0.1",
                "date": "2016-08-30T16:01:25Z"
            },
            {
                "name": "1.0",
                "date": "2016-08-29T14:25:21Z"
            },
            {
                "name": "1.0rc2",
                "date": "2016-08-28T00:25:00Z"
            },
            {
                "name": "1.0rc1",
                "date": "2016-08-27T01:04:09Z"
            }
        ]
    }
}