{
    "https://api.github.com/repos/flutter/samples": {
        "forks": 7620,
        "watchers": 17641,
        "stars": 17641,
        "languages": {
            "Dart": 5625568,
            "C": 995887,
            "C++": 560511,
            "CMake": 451336,
            "Swift": 89317,
            "Kotlin": 78378,
            "Ruby": 65602,
            "HTML": 41388,
            "Shell": 15808,
            "Objective-C": 13029,
            "SCSS": 9955,
            "TypeScript": 9633,
            "Java": 8802,
            "CSS": 6965,
            "GLSL": 6630,
            "JavaScript": 5903,
            "Nix": 5260,
            "Dockerfile": 566,
            "Makefile": 425
        },
        "commits": [
            "2025-01-20T00:45:10Z",
            "2025-01-06T13:59:20Z",
            "2025-01-06T13:58:52Z",
            "2025-01-03T20:24:59Z",
            "2024-12-20T07:27:06Z",
            "2024-12-18T07:25:36Z",
            "2024-12-18T06:54:06Z",
            "2024-12-17T13:49:17Z",
            "2024-12-16T07:31:28Z",
            "2024-12-14T20:00:04Z",
            "2024-12-11T19:34:29Z",
            "2024-12-09T06:51:46Z",
            "2024-12-09T06:46:10Z",
            "2024-12-09T06:36:07Z",
            "2024-12-09T06:34:42Z",
            "2024-12-09T06:34:40Z",
            "2024-12-05T18:16:04Z",
            "2024-12-05T13:39:35Z",
            "2024-12-05T13:39:19Z",
            "2024-12-05T13:38:44Z",
            "2024-12-05T13:38:14Z",
            "2024-12-04T07:25:14Z",
            "2024-12-03T18:07:36Z",
            "2024-12-02T07:55:28Z",
            "2024-12-02T07:29:28Z",
            "2024-12-02T07:04:29Z",
            "2024-12-02T07:04:26Z",
            "2024-12-02T07:03:04Z",
            "2024-11-28T13:28:16Z",
            "2024-11-25T08:14:15Z"
        ],
        "creation_date": "2018-06-08T21:28:03Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 459,
        "readme": "# Flutter samples\n\n[![Build Status](https://github.com/flutter/samples/workflows/Main%20Branch%20CI/badge.svg)](https://github.com/flutter/samples/actions?workflow=Main%20Branch%20CI)\n\nA collection of open source samples that illustrate best practices for\n[Flutter].\n\n## Index\n\n### Quickstarts\n\n* [`asset_transformation`] - Demonstrates how to transform images' color scales and formats. \n* [`background_isolate_channels`] - Demonstrates how to use long-lived isolates.\n* [`code_sharing`] - Demonstrates how to share business logic between Flutter client and Dart server using [`package:shelf`] )\n* [`context_menus`] - This sample shows how to create and customize cross-platform context menus, such as the text selection toolbar on mobile or the right click menu on desktop.\n* [`desktop_photo_search`] - Demonstrates desktop features in both Material and FluentUI design systems.\n* [`dynamic_theme`] - A developer sample demonstrating how to call on-device Flutter APIs based on output from the Gemini API.\n* [`form_app`] - A sample demonstrating different types of forms and best practices.\n* [`game_template`] - (**note: deprecated!**) A starter game in Flutter with all the bells and whistles of a mobile (iOS & Android) game.\n* [`gemini_tasks`] - A developer sample written in Flutter demonstrating how to interact with a to-do list in natural language using the Gemini API.\n* [`google_maps`] - Demonstrates the Google Maps for Flutter plugin.\n* [`infinite_list`] - A Flutter sample app that shows an implementation of the \"infinite list\" UX pattern.\n* [`isolate_example`] - A sample application that demonstrate best practices when using [isolates].\n* [`navigation_and_routing`] - A sample that shows how to use [go_router] API to handle common navigation scenarios.\n* [`place_tracker`] - A sample place tracking app that uses the [google_maps_flutter plugin].\n* [`platform_design`] - This sample project shows a Flutter app that maximizes application code reuse while adhering to different design patterns on Android and iOS.\n* [`provider_counter`] - The starter Flutter application, but using [package:provider] to manage state.\n* [`provider_shopper`] - A Flutter sample app that shows a state management approach using [package:provider].\n* [`simple_shader`] - A simple [Flutter fragment shaders] sample project.\n* [`simplistic_calculator`] - A calculator to demonstrate a simple start for a desktop Flutter app.\n* [`simplistic_editor`] - This sample text editor showcases the use of [TextEditingDeltas] and a DeltaTextInputClient to expand and contract styled ranges of text.\n* [`testing_app`] - A sample app that shows different types of testing in Flutter.\n* [`web_embedding`] - This directory contains examples of how to embed Flutter in web apps (without iframes).\n  * [`element_embedding_demo`] - Modifies the index.html of a flutter app so it is launched in a custom hostElement. This is the most basic embedding example.\n  * [`ng-flutter`] - A simple Angular app (and component) that replicates the above example, but in an Angular style.\n\n### Native platform samples\n\n* [`add-to-app`] - Collection of samples that demonstrate embedding Flutter a view into a native app.\n  * [`fullscreen`] \u2014 Embeds a full screen instance of\n  Flutter into an existing iOS or Android app.\n  * [`prebuilt_module`] \u2014 Embeds a full screen\n  instance of Flutter as a prebuilt library that can be loaded into an existing\n  iOS or Android app.\n  * [`plugin`] \u2014 Embeds a full screen Flutter instance that\n  is using plugins into an existing iOS or Android app.\n  * [`books`] \u2014 Mimics a real world use-case of embedding Flutter into an\n  existing Android app and demonstrates using [Pigeon] to communicate between Flutter and\n  the host application.\n  * [`multiple_flutters`] \u2014 Shows the usage of the Flutter\n  Engine Group APIs to embed multiple instances of Flutter into an existing app\n  with low memory cost.\n  * [`android_view`] \u2014 Shows how to integrate a Flutter\n  add-to-app module at a view level for Android.\n* [`android_splash_screen`]\n* [`ios_app_clip`]\n* [`platform_channels`] - A sample app which demonstrates how to use MethodChannel, EventChannel, BasicMessageChannel and MessageCodec in Flutter.\n* [`platform_view_swift`] - A Flutter sample app that combines a native iOS UIViewController with a full-screen Flutter view.\n\n### Demo galleries\n\n* [`animations`] - Showcases Flutter's animation features\n* [`material_3_demo`] - showcases [Material 3] features in the Flutter Material library.\n\n### Demo apps\n\n* [`compass_app`] - A sample application that implements MVVM architecture.\n* [`deeplink_store_example`] - A demo app that implements deep-linking with go_router.\n* [`veggie_seasons`] - A demo application.\n\n## Flutter sample code\n\nSamples are **correct and concise code** that developers \ncan **quickly understand** and **easily reuse** with minimal side effects. \nSamples teach developers how to be successful using Flutter and Dart. \nThey are maintained on an ongoing basis \nto reflect changing APIs and best practices.\n\n### Types of samples\n\nThere are two types of sample code in this repository:\n\n* **Quickstarts** provide a starting point to extend. They answer the question,\n  \"What is the minimal amount of code needed to implement this feature?\"\n* **Demo apps** are meant to be built and ran. They demo the _product_, \n   not how to write code.\n\nA majority of samples in this repository are quickstarts.\n\n## Usage\n\nEvery sample in this repo is fully runnable. To run an example, \nuse `flutter run` inside that example's directory. \nSee the [getting started guide] to install the `flutter` tool.\n\n> [!IMPORTANT]  \n> If you want to run an add-to-app sample, there are additional requirements.\n> We suggest reading the [add-to-app documentation].\n\n### Tip: minimize download size\n\nAs this repository is quite big, you can use \n[svn] to download a single example.\nFor example:\n\n```\nsvn co https://github.com/flutter/samples/trunk/provider_shopper\n```\n\nYou can also use a [partial clone] to skip blob objects \nthat aren't currently checked out, while including the full commit history:\n\n```\ngit clone --filter=blob:none https://github.com/flutter/samples.git\n```\n\n## Interested in contributing?\n\nSee the [contributor's guide]!\n\n## Questions or issues?\n\nIf you have a general question about one of these samples or how to adapt its\ntechniques for one of your own apps, try one of these resources:\n\n* [The FlutterDev Discord]\n* [The Flutter Community forum]\n\nIf you run into a bug in one of the samples, please file an issue in the\n[`flutter/samples` issue tracker].\n\n\n[`asset_transformation`]: ./asset_transformation\n[`background_isolate_channels`]: ./background_isolate_channels\n[`code_sharing`]: ./code_sharing\n[`context_menus`]: ./context_menus\n[`desktop_photo_search`]: ./desktop_photo_search\n[`dynamic_theme`]: ./dynamic_theme\n[`form_app`]: ./form_app\n[`game_template`]: ./game_template\n[`gemini_tasks`]: ./gemini_tasks\n[`google_maps`]: ./google_maps\n[`infinite_list`]: ./infinite_list\n[`isolate_example`]: ./isolate_example\n[`navigation_and_routing`]: ./navigation_and_routing\n[`place_tracker`]: ./place_tracker\n[`platform_design`]: ./platform_design\n[`provider_counter`]: ./provider_counter\n[`provider_shopper`]: ./provider_shopper\n[`simple_shader`]: ./simple_shader\n[`simplistic_calculator`]: ./simplistic_calculator\n[`simplistic_editor`]: ./simplistic_editor\n[`testing_app`]: ./testing_app\n[`web_embedding`]: ./web_embedding\n[`element_embedding_demo`]: ./web_embedding/element_embedding_demo\n[`ng-flutter`]: ./web_embedding/ng-flutter\n[`add-to-app`]: ./add_to_app\n[`fullscreen`]: ./add_to_app/fullscreen\n[`prebuilt_module`]: ./add_to_app/prebuilt_module\n[`plugin`]: ./add_to_app/plugin\n[`books`]: ./add_to_app/books\n[`multiple_flutters`]: ./add_to_app/multiple_flutters\n[`android_view`]: ./add_to_app/android_view\n[`android_splash_screen`]: ./android_splash_screen\n[`ios_app_clip`]: ./ios_app_clip\n[`platform_channels`]: ./platform_channels\n[`platform_view_swift`]: ./platform_view_swift\n[`animations`]: ./animations\n[`material_3_demo`]: ./material_3_demo\n[`compass_app`]: ./compass_app\n[`deeplink_store_example`]: ./deeplink_store_example\n[`veggie_seasons`]: ./veggieseasons\n\n[Flutter]: https://flutter.dev\n[getting started guide]: https://docs.flutter.dev/get-started/install\n[add-to-app documentation]: https://docs.flutter.dev/add-to-app\n[isolates]: https://api.dart.dev/dart-isolate/Isolate-class.html\n[Material 3]: https://m3.material.io\n[go_router]: https://pub.dev/packages/go_router\n[google_maps_flutter plugin]: https://github.com/flutter/plugins/tree/master/packages/google_maps_flutter\n[package:provider]: https://pub.dev/packages/provider\n[Flutter fragment shaders]: https://docs.flutter.dev/development/ui/advanced/shaders\n[TextEditingDeltas]: https://api.flutter.dev/flutter/services/TextEditingDelta-class.html\n[Pigeon]: https://pub.dev/packages/pigeon\n[`package:shelf`]: https://pub.dev/packages/shelf\n[svn]: https://subversion.apache.org/\n[partial clone]: https://github.blog/2020-12-21-get-up-to-speed-with-partial-clone-and-shallow-clone/\n[contributor's guide]: CONTRIBUTING.md\n[The FlutterDev Discord]: https://discord.gg/rflutterdev\n[The Flutter Community forum]: https://forum.itsallwidgets.com/latest\n[`flutter/samples` issue tracker]: https://github.com/flutter/samples/issues\n",
        "releases": []
    }
}