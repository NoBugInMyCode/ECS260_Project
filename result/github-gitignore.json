{
    "https://api.github.com/repos/github/gitignore": {
        "forks": 83121,
        "watchers": 163814,
        "stars": 163814,
        "languages": {},
        "commits": [
            "2025-01-17T21:20:13Z",
            "2025-01-17T21:19:34Z",
            "2025-01-09T22:49:50Z",
            "2025-01-06T22:14:32Z",
            "2024-12-23T11:16:03Z",
            "2024-12-22T16:59:00Z",
            "2024-12-22T15:10:41Z",
            "2024-12-18T18:15:09Z",
            "2024-12-17T21:32:38Z",
            "2024-12-17T21:31:44Z",
            "2024-12-17T21:14:38Z",
            "2024-12-17T21:08:43Z",
            "2024-12-17T18:46:58Z",
            "2024-12-14T17:23:27Z",
            "2024-12-06T20:03:00Z",
            "2024-12-06T20:01:34Z",
            "2024-12-03T06:25:58Z",
            "2024-12-02T17:16:34Z",
            "2024-12-02T08:51:56Z",
            "2024-12-02T00:24:39Z",
            "2024-12-01T15:47:36Z",
            "2024-11-27T19:10:03Z",
            "2024-11-27T02:40:25Z",
            "2024-11-24T00:51:50Z",
            "2024-11-22T02:14:01Z",
            "2024-11-19T23:10:04Z",
            "2024-11-19T20:36:20Z",
            "2023-01-13T23:36:43Z",
            "2024-10-17T21:03:32Z",
            "2024-10-16T15:20:16Z"
        ],
        "creation_date": "2010-11-08T20:17:14Z",
        "contributors": 30,
        "topics": [
            "git",
            "gitignore"
        ],
        "subscribers": 3381,
        "readme": "# A collection of `.gitignore` templates\n\nThis is GitHub\u2019s collection of [`.gitignore`][man] file templates.\nWe use this list to populate the `.gitignore` template choosers available\nin the GitHub.com interface when creating new repositories and files.\n\nFor more information about how `.gitignore` files work, and how to use them,\nthe following resources are a great place to start:\n\n- The [Ignoring Files chapter][chapter] of the [Pro Git][progit] book.\n- The [Ignoring Files article][help] on the GitHub Help site.\n- The [gitignore(5)][man] manual page.\n\n[man]: http://git-scm.com/docs/gitignore\n[help]: https://help.github.com/articles/ignoring-files\n[chapter]: https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository#_ignoring\n[progit]: http://git-scm.com/book\n\n## Folder structure\n\nWe support a collection of templates, organized in this way:\n\n- The root folder contains templates in common use, to help people get started\n  with popular programming languages and technologies. These define a meaningful\n  set of rules to help get started, and ensure you are not committing\n  unimportant files into your repository.\n- [`Global`](./Global) contains templates for various editors, tools and\n  operating systems that can be used in different situations. It is recommended\n  that you either [add these to your global template](https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files#configuring-ignored-files-for-all-repositories-on-your-computer)\n  or merge these rules into your project-specific templates if you want to use\n  them permanently.\n- [`community`](./community) contains specialized templates for other popular\n  languages, tools and project, which don't currently belong in the mainstream\n  templates. These should be added to your project-specific templates when you\n  decide to adopt the framework or tool.\n\n## What makes a good template?\n\nA template should contain a set of rules to help Git repositories work with a\nspecific programming language, framework, tool or environment.\n\nIf it's not possible to curate a small set of useful rules for this situation,\nthen the template is not a good fit for this collection.\n\nIf a template is mostly a list of files installed by a particular version of\nsome software (e.g. a PHP framework), it could live under the `community`\ndirectory. See [versioned templates](#versioned-templates) for more details.\n\nIf you have a small set of rules, or want to support a technology that is not\nwidely in use, and still believe this will be helpful to others, please read the\nsection about [specialized templates](#specialized-templates) for more details.\n\nInclude details when opening pull request if the template is important and visible. We\nmay not accept it immediately, but we can promote it to the root at a later date\nbased on interest.\n\nPlease also understand that we can\u2019t list every tool that ever existed.\nOur aim is to curate a collection of the _most common and helpful_ templates,\nnot to make sure we cover every project possible. If we choose not to\ninclude your language, tool, or project, it\u2019s not because it\u2019s not awesome.\n\n## Contributing guidelines\n\nWe\u2019d love for you to help us improve this project. To help us keep this collection\nhigh quality, we request that contributions adhere to the following guidelines.\n\n- **Provide a link to the application or project\u2019s homepage**. Unless it\u2019s\n  extremely popular, there\u2019s a chance the maintainers don\u2019t know about or use\n  the language, framework, editor, app, or project your change applies to.\n\n- **Provide links to documentation** supporting the change you\u2019re making.\n  Current, canonical documentation mentioning the files being ignored is best.\n  If documentation isn\u2019t available to support your change, do the best you can\n  to explain what the files being ignored are for.\n\n- **Explain why you\u2019re making a change**. Even if it seems self-evident, please\n  take a sentence or two to tell us why your change or addition should happen.\n  It\u2019s especially helpful to articulate why this change applies to _everyone_\n  who works with the applicable technology, rather than just you or your team.\n\n- **Please consider the scope of your change**. If your change is specific to a\n  certain language or framework, then make sure the change is made to the\n  template for that language or framework, rather than to the template for an\n  editor, tool, or operating system.\n\n- **Please only modify _one template_ per pull request**. This helps keep pull\n  requests and feedback focused on a specific project or technology.\n\nIn general, the more you can do to help us understand the change you\u2019re making,\nthe more likely we\u2019ll be to accept your contribution quickly.\n\n## Versioned templates\n\nSome templates can change greatly between versions, and if you wish to contribute\nto this repository we need to follow this specific flow:\n\n- the template at the root should be the current supported version\n- the template at the root should not have a version in the filename (i.e.\n  \"evergreen\")\n- previous versions of templates should live under `community/`\n- previous versions of the template should embed the version in the filename,\n  for readability\n\nThis helps ensure users get the latest version (because they'll use whatever is\nat the root) but helps maintainers support older versions still in the wild.\n\n## Specialized templates\n\nIf you have a template that you would like to contribute, but it isn't quite\nmainstream, please consider adding this to the `community` directory under a\nfolder that best suits where it belongs.\n\nThe rules in your specialized template should be specific to the framework or\ntool, and any additional templates should be mentioned in a comment in the\nheader of the template.\n\nFor example, this template might live at `community/DotNet/InforCRM.gitignore`:\n\n```\n# gitignore template for InforCRM (formerly SalesLogix)\n# website: https://www.infor.com/product-summary/cx/infor-crm/\n#\n# Recommended: VisualStudio.gitignore\n\n# Ignore model files that are auto-generated\nModelIndex.xml\nExportedFiles.xml\n\n# Ignore deployment files\n[Mm]odel/[Dd]eployment\n\n# Force include portal SupportFiles\n!Model/Portal/*/SupportFiles/[Bb]in/\n!Model/Portal/PortalTemplates/*/SupportFiles/[Bb]in\n```\n\n## Contributing workflow\n\nHere\u2019s how we suggest you go about proposing a change to this project:\n\n1. [Fork this project][fork] to your account.\n2. [Create a branch][branch] for the change you intend to make.\n3. Make your changes to your fork.\n4. [Send a pull request][pr] from your fork\u2019s branch to our `main` branch.\n\nUsing the web-based interface to make changes is fine too, and will help you\nby automatically forking the project and prompting to send a pull request too.\n\n[fork]: https://help.github.com/articles/fork-a-repo/\n[branch]: https://help.github.com/articles/creating-and-deleting-branches-within-your-repository\n[pr]: https://help.github.com/articles/using-pull-requests/\n\n## License\n\n[CC0-1.0](./LICENSE).\n",
        "releases": []
    }
}