{
    "https://api.github.com/repos/ipkn/crow": {
        "forks": 888,
        "watchers": 7535,
        "stars": 7535,
        "languages": {
            "C++": 278655,
            "C": 81030,
            "CMake": 4918,
            "Python": 3371,
            "Makefile": 110
        },
        "commits": [
            "2022-09-19T20:39:03Z",
            "2017-12-27T14:33:31Z",
            "2017-12-26T12:28:15Z",
            "2017-12-26T12:28:15Z",
            "2017-12-26T12:28:13Z",
            "2017-12-25T13:36:30Z",
            "2017-12-25T07:26:30Z",
            "2017-12-24T15:40:39Z",
            "2017-10-21T12:20:07Z",
            "2017-12-25T06:31:11Z",
            "2017-12-25T06:30:32Z",
            "2017-12-25T06:30:06Z",
            "2017-12-25T02:43:32Z",
            "2017-12-24T23:01:11Z",
            "2017-12-24T22:23:21Z",
            "2017-12-24T17:38:52Z",
            "2017-12-24T17:29:25Z",
            "2017-12-24T15:47:30Z",
            "2017-12-22T09:50:41Z",
            "2017-10-23T21:23:10Z",
            "2017-10-23T21:16:16Z",
            "2017-10-23T20:59:08Z",
            "2017-10-22T11:31:17Z",
            "2017-10-22T11:45:59Z",
            "2017-10-21T11:51:35Z",
            "2017-10-21T11:33:03Z",
            "2017-10-20T13:20:18Z",
            "2017-10-05T15:13:40Z",
            "2017-09-18T03:05:31Z",
            "2017-09-17T20:15:41Z"
        ],
        "creation_date": "2014-03-29T20:40:24Z",
        "contributors": 30,
        "topics": [
            "c-plus-plus",
            "crow",
            "header-only",
            "webserver"
        ],
        "subscribers": 298,
        "readme": "# IMPORTANT NOTICE\n\nNOT MAINTAINED ANYMORE.\n\nWorking fork is here: [CrowCpp/Crow](https://github.com/CrowCpp/Crow)\n\n  \n\n![Crow logo](http://i.imgur.com/wqivvjK.jpg)\n\nCrow is C++ microframework for web. (inspired by Python Flask)\n\n[![Travis Build](https://travis-ci.org/ipkn/crow.svg?branch=master)](https://travis-ci.org/ipkn/crow)\n[![Coverage Status](https://coveralls.io/repos/ipkn/crow/badge.svg?branch=master)](https://coveralls.io/r/ipkn/crow?branch=master)\n\n```c++\n#include \"crow.h\"\n\nint main()\n{\n    crow::SimpleApp app;\n\n    CROW_ROUTE(app, \"/\")([](){\n        return \"Hello world\";\n    });\n\n    app.port(18080).multithreaded().run();\n}\n```\n\n## Features\n\n - Easy routing\n   - Similiar to Flask\n   - Type-safe Handlers (see Example)\n - Very Fast\n   - ![Benchmark Result in one chart](https://docs.google.com/spreadsheets/d/1KidO9XpuwCRZ2p_JRDJj2aep61H8Sh_KDOhApizv4LE/pubchart?oid=2041467789&format=image)\n   - More data on [crow-benchmark](https://github.com/ipkn/crow-benchmark)\n - Fast built-in JSON parser (crow::json)\n   - You can also use [json11](https://github.com/dropbox/json11) or [rapidjson](https://github.com/miloyip/rapidjson) for better speed or readability\n - [Mustache](http://mustache.github.io/) based templating library (crow::mustache)\n - Header only\n - Provide an amalgamated header file [`crow_all.h`](https://github.com/ipkn/crow/releases/download/v0.1/crow_all.h) with every features ([Download from here](https://github.com/ipkn/crow/releases/download/v0.1/crow_all.h))\n - Middleware support\n - Websocket support\n\n## Still in development\n - ~~Built-in ORM~~\n   - Check [sqlpp11](https://github.com/rbock/sqlpp11) if you want one.\n\n## Examples\n\n#### JSON Response\n```c++\nCROW_ROUTE(app, \"/json\")\n([]{\n    crow::json::wvalue x;\n    x[\"message\"] = \"Hello, World!\";\n    return x;\n});\n```\n\n#### Arguments\n```c++\nCROW_ROUTE(app,\"/hello/<int>\")\n([](int count){\n    if (count > 100)\n        return crow::response(400);\n    std::ostringstream os;\n    os << count << \" bottles of beer!\";\n    return crow::response(os.str());\n});\n```\nHandler arguments type check at compile time\n```c++\n// Compile error with message \"Handler type is mismatched with URL paramters\"\nCROW_ROUTE(app,\"/another/<int>\")\n([](int a, int b){\n    return crow::response(500);\n});\n```\n\n#### Handling JSON Requests\n```c++\nCROW_ROUTE(app, \"/add_json\")\n.methods(\"POST\"_method)\n([](const crow::request& req){\n    auto x = crow::json::load(req.body);\n    if (!x)\n        return crow::response(400);\n    int sum = x[\"a\"].i()+x[\"b\"].i();\n    std::ostringstream os;\n    os << sum;\n    return crow::response{os.str()};\n});\n```\n\n## How to Build\n\nIf you just want to use crow, copy amalgamate/crow_all.h and include it.\n\n### Requirements\n\n - C++ compiler with good C++11 support (tested with g++>=4.8)\n - boost library\n - CMake for build examples\n - Linking with tcmalloc/jemalloc is recommended for speed.\n\n - Now supporting VS2013 with limited functionality (only run-time check for url is available.)\n\n### Building (Tests, Examples)\n\nOut-of-source build with CMake is recommended.\n\n```\nmkdir build\ncd build\ncmake ..\nmake\n```\n\nYou can run tests with following commands:\n```\nctest\n```\n\n\n### Installing missing dependencies\n\n#### Ubuntu\n    sudo apt-get install build-essential libtcmalloc-minimal4 && sudo ln -s /usr/lib/libtcmalloc_minimal.so.4 /usr/lib/libtcmalloc_minimal.so\n\n#### OSX\n    brew install boost google-perftools\n\n### Attributions\n\nCrow uses the following libraries.\n\n    http-parser\n\n    https://github.com/nodejs/http-parser\n\n    http_parser.c is based on src/http/ngx_http_parse.c from NGINX copyright\n    Igor Sysoev.\n\n    Additional changes are licensed under the same terms as NGINX and\n    copyright Joyent, Inc. and other Node contributors. All rights reserved.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to\n    deal in the Software without restriction, including without limitation the\n    rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n    sell copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n    IN THE SOFTWARE. \n\n\n    qs_parse\n\n    https://github.com/bartgrantham/qs_parse\n\n    Copyright (c) 2010 Bart Grantham\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n\n    TinySHA1\n\n    https://github.com/mohaps/TinySHA1\n\n    TinySHA1 - a header only implementation of the SHA1 algorithm. Based on the implementation in boost::uuid::details\n\n    Copyright (c) 2012-22 SAURAV MOHAPATRA mohaps@gmail.com\n    Permission to use, copy, modify, and distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n",
        "releases": [
            {
                "name": "crow 0.1",
                "date": "2017-09-17T20:36:18Z"
            }
        ]
    }
}