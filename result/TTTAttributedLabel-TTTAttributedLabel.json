{
    "https://api.github.com/repos/TTTAttributedLabel/TTTAttributedLabel": {
        "forks": 1684,
        "watchers": 8753,
        "stars": 8753,
        "languages": {
            "Objective-C": 187689,
            "Ruby": 1084
        },
        "commits": [
            "2020-08-11T02:29:17Z",
            "2020-05-05T12:38:56Z",
            "2017-01-11T21:11:31Z",
            "2016-11-18T13:06:26Z",
            "2016-11-17T16:21:33Z",
            "2016-11-17T14:49:43Z",
            "2016-11-03T23:36:45Z",
            "2016-10-26T19:38:31Z",
            "2016-10-26T19:38:01Z",
            "2016-09-23T21:06:07Z",
            "2016-09-23T21:00:09Z",
            "2016-09-23T20:17:41Z",
            "2016-10-22T17:02:17Z",
            "2016-08-24T20:09:03Z",
            "2016-08-22T20:36:53Z",
            "2016-05-10T15:58:19Z",
            "2016-05-10T15:58:07Z",
            "2016-05-10T15:48:27Z",
            "2016-05-10T15:41:03Z",
            "2016-05-10T02:48:27Z",
            "2016-05-10T02:36:24Z",
            "2016-05-10T02:31:48Z",
            "2016-05-10T02:28:42Z",
            "2016-05-10T01:53:26Z",
            "2016-05-10T00:01:25Z",
            "2016-05-09T23:50:15Z",
            "2016-05-09T23:37:12Z",
            "2016-05-09T22:58:30Z",
            "2016-05-09T03:11:50Z",
            "2016-05-08T18:43:09Z"
        ],
        "creation_date": "2011-05-06T23:37:12Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 211,
        "readme": "# TTTAttributedLabel\n\n[![Circle CI](https://circleci.com/gh/TTTAttributedLabel/TTTAttributedLabel.svg?style=svg)](https://circleci.com/gh/TTTAttributedLabel/TTTAttributedLabel) [![Version Status](https://img.shields.io/cocoapods/v/TTTAttributedLabel.svg)](https://cocoapods.org/pods/TTTAttributedLabel) [![codecov](https://codecov.io/gh/TTTAttributedLabel/TTTAttributedLabel/branch/master/graph/badge.svg)](https://codecov.io/gh/TTTAttributedLabel/TTTAttributedLabel) [![license MIT](https://img.shields.io/cocoapods/l/TTTAttributedLabel.svg)](http://opensource.org/licenses/MIT) [![Platform](https://img.shields.io/cocoapods/p/TTTAttributedLabel.svg)](http://cocoadocs.org/docsets/TTTAttributedLabel/)  [![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)\n\n\n**A drop-in replacement for `UILabel` that supports attributes, data detectors, links, and more**\n\n`TTTAttributedLabel` is a drop-in replacement for `UILabel` providing a simple way to performantly render [attributed strings](https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/Foundation/Classes/NSAttributedString_Class/Reference/Reference.html). As a bonus, it also supports link embedding, both automatically with `NSTextCheckingTypes` and manually by specifying a range for a URL, address, phone number, event, or transit information.\n\nEven though `UILabel` received support for `NSAttributedString` in iOS 6, `TTTAttributedLabel` has several unique features:\n\n- Automatic data detection\n- Manual link embedding\n- Label style inheritance for attributed strings\n- Custom styling for links within the label\n- Long-press gestures in addition to tap gestures for links\n\nIt also includes advanced paragraph style properties:\n\n- `attributedTruncationToken`\n- `firstLineIndent`\n- `highlightedShadowRadius`\n- `highlightedShadowOffset`\n- `highlightedShadowColor`\n- `lineHeightMultiple`\n- `lineSpacing`\n- `minimumLineHeight`\n- `maximumLineHeight`\n- `shadowRadius`\n- `textInsets`\n- `verticalAlignment`\n\n## Requirements\n\n- iOS 8+ / tvOS 9+\n- Xcode 7+\n\n### Accessibility\n\nAs of version 1.10.0, `TTTAttributedLabel` supports VoiceOver through the  `UIAccessibilityElement` protocol. Each link can be individually selected, with an `accessibilityLabel` equal to its string value, and a corresponding `accessibilityValue` for URL, phone number, and date links.  Developers who wish to change this behavior or provide custom values should create a subclass and override `accessibilityElements`.\n\n## Communication\n\n- If you **need help**, use [Stack Overflow](http://stackoverflow.com/questions/tagged/tttattributedlabel). (Tag `tttattributedlabel`)\n- If you'd like to **ask a general question**, use [Stack Overflow](http://stackoverflow.com/questions/tagged/tttattributedlabel).\n- If you **found a bug**, open an issue.\n- If you **have a feature request**, open an issue.\n- If you **want to contribute**, submit a pull request.\n\n## Installation\n\n[CocoaPods](https://cocoapods.org/) is the recommended method of installing `TTTAttributedLabel`. Simply add the following line to your `Podfile`:\n\n```ruby\n# Podfile\n\npod 'TTTAttributedLabel'\n```\n\n## Usage\n\n`TTTAttributedLabel` can display both plain and attributed text: just pass an `NSString` or `NSAttributedString` to the `setText:` setter. Never assign to the `attributedText` property.\n\n```objc\n// NSAttributedString\n\nTTTAttributedLabel *attributedLabel = [[TTTAttributedLabel alloc] initWithFrame:CGRectZero];\n\nNSAttributedString *attString = [[NSAttributedString alloc] initWithString:@\"Tom Bombadil\"\n                                                                attributes:@{\n        (id)kCTForegroundColorAttributeName : (id)[UIColor redColor].CGColor,\n        NSFontAttributeName : [UIFont boldSystemFontOfSize:16],\n        NSKernAttributeName : [NSNull null],\n        (id)kTTTBackgroundFillColorAttributeName : (id)[UIColor greenColor].CGColor\n}];\n\n// The attributed string is directly set, without inheriting any other text\n// properties of the label.\nattributedLabel.text = attString;\n```\n\n```objc\n// NSString\n\nTTTAttributedLabel *label = [[TTTAttributedLabel alloc] initWithFrame:CGRectZero];\nlabel.font = [UIFont systemFontOfSize:14];\nlabel.textColor = [UIColor darkGrayColor];\nlabel.lineBreakMode = NSLineBreakByWordWrapping;\nlabel.numberOfLines = 0;\n\n// If you're using a simple `NSString` for your text,\n// assign to the `text` property last so it can inherit other label properties.\nNSString *text = @\"Lorem ipsum dolor sit amet\";\n[label setText:text afterInheritingLabelAttributesAndConfiguringWithBlock:^ NSMutableAttributedString *(NSMutableAttributedString *mutableAttributedString) {\n  NSRange boldRange = [[mutableAttributedString string] rangeOfString:@\"ipsum dolor\" options:NSCaseInsensitiveSearch];\n  NSRange strikeRange = [[mutableAttributedString string] rangeOfString:@\"sit amet\" options:NSCaseInsensitiveSearch];\n\n  // Core Text APIs use C functions without a direct bridge to UIFont. See Apple's \"Core Text Programming Guide\" to learn how to configure string attributes.\n  UIFont *boldSystemFont = [UIFont boldSystemFontOfSize:14];\n  CTFontRef font = CTFontCreateWithName((__bridge CFStringRef)boldSystemFont.fontName, boldSystemFont.pointSize, NULL);\n  if (font) {\n    [mutableAttributedString addAttribute:(NSString *)kCTFontAttributeName value:(__bridge id)font range:boldRange];\n    [mutableAttributedString addAttribute:kTTTStrikeOutAttributeName value:@YES range:strikeRange];\n    CFRelease(font);\n  }\n\n  return mutableAttributedString;\n}];\n```\n\nFirst, we create and configure the label, the same way you would instantiate `UILabel`. Any text properties that are set on the label are inherited as the base attributes when using the `-setText:afterInheritingLabelAttributesAndConfiguringWithBlock:` method. In this example, the substring \"ipsum dolar\", would appear in bold, such that the label would read \"Lorem **ipsum dolar** sit amet\", in size 14 Helvetica, with a dark gray color.\n\n## `IBDesignable`\n\n`TTTAttributedLabel` includes `IBInspectable` and `IB_DESIGNABLE` annotations to enable configuring the label inside Interface Builder. However, if you see these warnings when building...\n\n```\nIB Designables: Failed to update auto layout status: Failed to load designables from path (null)\nIB Designables: Failed to render instance of TTTAttributedLabel: Failed to load designables from path (null)\n```\n\n...then you are likely using `TTTAttributedLabel` as a static library, which does not support IB annotations. Some workarounds include:\n\n- Install `TTTAttributedLabel` as a dynamic framework using CocoaPods with `use_frameworks!` in your `Podfile`, or with Carthage\n- Install `TTTAttributedLabel` by dragging its source files to your project\n\n### Links and Data Detection\n\nIn addition to supporting rich text, `TTTAttributedLabel` can automatically detect links for dates, addresses, URLs, phone numbers, transit information, and allows you to embed your own links.\n\n``` objective-c\nlabel.enabledTextCheckingTypes = NSTextCheckingTypeLink; // Automatically detect links when the label text is subsequently changed\nlabel.delegate = self; // Delegate methods are called when the user taps on a link (see `TTTAttributedLabelDelegate` protocol)\n\nlabel.text = @\"Fork me on GitHub! (https://github.com/mattt/TTTAttributedLabel/)\"; // Repository URL will be automatically detected and linked\n\nNSRange range = [label.text rangeOfString:@\"me\"];\n[label addLinkToURL:[NSURL URLWithString:@\"http://github.com/mattt/\"] withRange:range]; // Embedding a custom link in a substring\n```\n\n## Demo\n\n```bash\npod try TTTAttributedLabel\n```\n\n...or clone this repo and build and run/test the `Espressos` project in Xcode to see `TTTAttributedLabel` in action. If you don't have [CocoaPods](http://cocoapods.org) installed, grab it with `[sudo] gem install cocoapods`.\n\n```bash\ncd Example\npod install\nopen Espressos.xcworkspace\n```\n\n## License\n\n`TTTAttributedLabel` is available under the MIT license. See the LICENSE file for more info.\n",
        "releases": [
            {
                "name": "2.0.0",
                "date": "2016-05-10T02:49:54Z"
            },
            {
                "name": "",
                "date": "2015-06-15T19:31:57Z"
            },
            {
                "name": "",
                "date": "2015-03-18T17:22:44Z"
            },
            {
                "name": "",
                "date": "2015-02-17T20:42:10Z"
            },
            {
                "name": "",
                "date": "2015-01-20T18:24:44Z"
            },
            {
                "name": "",
                "date": "2014-12-21T01:01:36Z"
            }
        ]
    }
}