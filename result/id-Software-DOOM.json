{
    "https://api.github.com/repos/id-Software/DOOM": {
        "forks": 2484,
        "watchers": 14877,
        "stars": 14877,
        "languages": {
            "C++": 1283491,
            "C": 50233,
            "Makefile": 2386
        },
        "commits": [
            "2024-01-16T16:13:31Z",
            "2012-01-31T21:57:38Z",
            "2012-01-31T21:32:25Z",
            "2012-01-31T21:27:37Z"
        ],
        "creation_date": "2012-01-31T21:28:06Z",
        "contributors": 1,
        "topics": [],
        "subscribers": 419,
        "readme": "\nHere it is, at long last.  The DOOM source code is released for your\nnon-profit use.  You still need real DOOM data to work with this code.\nIf you don't actually own a real copy of one of the DOOMs, you should\nstill be able to find them at software stores.\n\nMany thanks to Bernd Kreimeier for taking the time to clean up the\nproject and make sure that it actually works.  Projects tends to rot if\nyou leave it alone for a few years, and it takes effort for someone to\ndeal with it again.\n\nThe bad news:  this code only compiles and runs on linux.  We couldn't\nrelease the dos code because of a copyrighted sound library we used\n(wow, was that a mistake -- I write my own sound code now), and I\nhonestly don't even know what happened to the port that microsoft did\nto windows.\n\nStill, the code is quite portable, and it should be straightforward to\nbring it up on just about any platform.\n\nI wrote this code a long, long time ago, and there are plenty of things\nthat seem downright silly in retrospect (using polar coordinates for\nclipping comes to mind), but overall it should still be a usefull base\nto experiment and build on.\n\nThe basic rendering concept -- horizontal and vertical lines of constant\nZ with fixed light shading per band was dead-on, but the implementation\ncould be improved dramatically from the original code if it were\nrevisited.  The way the rendering proceded from walls to floors to\nsprites could be collapsed into a single front-to-back walk of the bsp\ntree to collect information, then draw all the contents of a subsector\non the way back up the tree.  It requires treating floors and ceilings\nas polygons, rather than just the gaps between walls, and it requires\nclipping sprite billboards into subsector fragments, but it would be\nThe Right Thing.\n\nThe movement and line of sight checking against the lines is one of the\nbigger misses that I look back on.  It is messy code that had some\nfailure cases, and there was a vastly simpler (and faster) solution\nsitting in front of my face.  I used the BSP tree for rendering things,\nbut I didn't realize at the time that it could also be used for\nenvironment testing.  Replacing the line of sight test with a bsp line\nclip would be pretty easy.  Sweeping volumes for movement gets a bit\ntougher, and touches on many of the challenges faced in quake / quake2\nwith edge bevels on polyhedrons.\n\nSome project ideas:\n\nPort it to your favorite operating system.\n\nAdd some rendering features -- transparency, look up / down, slopes,\netc.\n\nAdd some game features -- weapons, jumping, ducking, flying, etc.\n\nCreate a packet server based internet game.\n\nCreate a client / server based internet game.\n\nDo a 3D accelerated version.  On modern hardware (fast pentium + 3DFX)\nyou probably wouldn't even need to be clever -- you could just draw the\nentire level and get reasonable speed.  With a touch of effort, it should\neasily lock at 60 fps (well, there are some issues with DOOM's 35 hz\ntimebase...).  The biggest issues would probably be the non-power of two\ntexture sizes and the walls composed of multiple textures.\n\n\nI don't have a real good guess at how many people are going to be\nplaying with this, but if significant projects are undertaken, it would\nbe cool to see a level of community cooperation.  I know that most early\nprojects are going to be rough hacks done in isolation, but I would be\nvery pleased to see a coordinated 'net release of an improved, backwards\ncompatable version of DOOM on multiple platforms next year.\n\nHave fun.\n\nJohn Carmack\n12-23-97\n\nCopyright (c) ZeniMax Media Inc.\nLicensed under the GNU General Public License 2.0.\n",
        "releases": []
    }
}