{
    "https://api.github.com/repos/MorvanZhou/PyTorch-Tutorial": {
        "forks": 3111,
        "watchers": 8201,
        "stars": 8201,
        "languages": {
            "Jupyter Notebook": 3029907,
            "Python": 62793
        },
        "commits": [
            "2022-05-16T03:32:56Z",
            "2022-05-14T12:12:49Z",
            "2022-05-13T02:08:03Z",
            "2022-05-12T15:41:39Z",
            "2020-10-29T13:41:31Z",
            "2020-10-29T12:36:21Z",
            "2020-06-08T02:43:02Z",
            "2020-06-08T02:34:41Z",
            "2020-06-08T02:32:58Z",
            "2020-06-06T21:53:16Z",
            "2018-12-03T06:32:44Z",
            "2018-11-30T13:49:23Z",
            "2018-11-19T02:41:11Z",
            "2018-11-13T02:43:19Z",
            "2018-11-13T02:33:47Z",
            "2018-11-13T02:33:26Z",
            "2018-11-13T02:32:26Z",
            "2018-11-13T02:26:34Z",
            "2018-11-13T02:22:41Z",
            "2018-11-13T02:05:44Z",
            "2018-11-13T01:34:19Z",
            "2018-11-13T01:13:44Z",
            "2018-11-12T06:24:09Z",
            "2018-11-12T06:18:49Z",
            "2018-11-12T01:46:32Z",
            "2018-11-09T09:26:27Z",
            "2018-11-08T11:43:20Z",
            "2018-11-08T11:42:52Z",
            "2018-11-08T11:40:27Z",
            "2018-11-08T06:14:35Z"
        ],
        "creation_date": "2017-05-05T15:12:04Z",
        "contributors": 9,
        "topics": [
            "autoencoder",
            "batch",
            "batch-normalization",
            "classification",
            "cnn",
            "dqn",
            "dropout",
            "gan",
            "generative-adversarial-network",
            "machine-learning",
            "neural-network",
            "python",
            "pytorch",
            "pytorch-tutorial",
            "pytorch-tutorials",
            "regression",
            "reinforcement-learning",
            "rnn",
            "tutorial"
        ],
        "subscribers": 214,
        "readme": "<p align=\"center\">\n    <a href=\"http://pytorch.org/\" target=\"_blank\">\n    <img width=\"40%\" src=\"logo.png\" style=\"max-width:100%;\">\n    </a>\n</p>\n\n\n<br>\n\n### If you'd like to use **Tensorflow**, no worries, I made a new **Tensorflow Tutorial** just like PyTorch. Here is the link: [https://github.com/MorvanZhou/Tensorflow-Tutorial](https://github.com/MorvanZhou/Tensorflow-Tutorial)\n\n# pyTorch Tutorials\n\nIn these tutorials for pyTorch, we will build our first Neural Network and try to build some advanced Neural Network architectures developed recent years.\n\nThanks for [liufuyang's](https://github.com/liufuyang) [**notebook files**](tutorial-contents-notebooks)\nwhich is a great contribution to this tutorial.\n\n* pyTorch basic\n  * [torch and numpy](tutorial-contents/201_torch_numpy.py)\n  * [Variable](tutorial-contents/202_variable.py)\n  * [Activation](tutorial-contents/203_activation.py)\n* Build your first network\n  * [Regression](tutorial-contents/301_regression.py)\n  * [Classification](tutorial-contents/302_classification.py)\n  * [An easy way](tutorial-contents/303_build_nn_quickly.py)\n  * [Save and reload](tutorial-contents/304_save_reload.py)\n  * [Train on batch](tutorial-contents/305_batch_train.py)\n  * [Optimizers](tutorial-contents/306_optimizer.py)\n* Advanced neural network\n  * [CNN](tutorial-contents/401_CNN.py)\n  * [RNN-Classification](tutorial-contents/402_RNN_classifier.py)\n  * [RNN-Regression](tutorial-contents/403_RNN_regressor.py)\n  * [AutoEncoder](tutorial-contents/404_autoencoder.py)\n  * [DQN Reinforcement Learning](tutorial-contents/405_DQN_Reinforcement_learning.py)\n  * [A3C Reinforcement Learning](https://github.com/MorvanZhou/pytorch-A3C)\n  * [GAN (Generative Adversarial Nets)](tutorial-contents/406_GAN.py) / [Conditional GAN](tutorial-contents/406_conditional_GAN.py)\n* Others (WIP)\n  * [Why torch dynamic](tutorial-contents/501_why_torch_dynamic_graph.py)\n  * [Train on GPU](tutorial-contents/502_GPU.py)\n  * [Dropout](tutorial-contents/503_dropout.py)\n  * [Batch Normalization](tutorial-contents/504_batch_normalization.py)\n\n**For Chinese speakers: All methods mentioned below have their video and text tutorial in Chinese.\nVisit [\u83ab\u70e6 Python](https://mofanpy.com/tutorials/) for more.\nYou can watch my [Youtube channel](https://www.youtube.com/channel/UCdyjiB5H8Pu7aDTNVXTTpcg) as well.**\n\n\n### [Regression](tutorial-contents/301_regression.py)\n\n<a href=\"tutorial-contents/301_regression.py\">\n    <img class=\"course-image\" src=\"https://mofanpy.com/static/results/torch/1-1-2.gif\">\n</a>\n\n### [Classification](tutorial-contents/302_classification.py)\n\n<a href=\"tutorial-contents/302_classification.py\">\n    <img class=\"course-image\" src=\"https://mofanpy.com/static/results/torch/1-1-3.gif\">\n</a>\n\n### [CNN](tutorial-contents/401_CNN.py)\n<a href=\"tutorial-contents/401_CNN.py\">\n    <img class=\"course-image\" src=\"https://mofanpy.com/static/results/torch/4-1-2.gif\" >\n</a>\n\n### [RNN](tutorial-contents/403_RNN_regressor.py)\n\n<a href=\"tutorial-contents/403_RNN_regressor.py\">\n    <img class=\"course-image\" src=\"https://mofanpy.com/static/results/torch/4-3-1.gif\" >\n</a>\n\n### [Autoencoder](tutorial-contents/404_autoencoder.py)\n\n<a href=\"tutorial-contents/403_RNN_regressor.py\">\n    <img class=\"course-image\" src=\"https://mofanpy.com/static/results/torch/4-4-1.gif\" >\n</a>\n\n<a href=\"tutorial-contents/403_RNN_regressor.py\">\n    <img class=\"course-image\" src=\"https://mofanpy.com/static/results/torch/4-4-2.gif\" >\n</a>\n\n### [GAN (Generative Adversarial Nets)](tutorial-contents/406_GAN.py)\n<a href=\"tutorial-contents/406_GAN.py\">\n    <img class=\"course-image\" src=\"https://mofanpy.com/static/results/torch/4-6-1.gif\" >\n</a>\n\n### [Dropout](tutorial-contents/503_dropout.py)\n<a href=\"tutorial-contents/503_dropout.py\">\n    <img class=\"course-image\" src=\"https://mofanpy.com/static/results/torch/5-3-1.gif\" >\n</a>\n\n### [Batch Normalization](tutorial-contents/504_batch_normalization.py)\n<a href=\"tutorial-contents/504_batch_normalization.py\">\n    <img class=\"course-image\" src=\"https://mofanpy.com/static/results/torch/5-4-2.gif\" >\n</a>\n\n# Donation\n\n*If this does help you, please consider donating to support me for better tutorials. Any contribution is greatly appreciated!*\n\n<div >\n  <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=morvanzhou%40gmail%2ecom&amp;lc=C2&amp;item_name=MorvanPython&amp;currency_code=AUD&amp;bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted\">\n    <img style=\"border-radius: 20px;  box-shadow: 0px 0px 10px 1px  #888888;\"\n         src=\"https://www.paypalobjects.com/webstatic/en_US/i/btn/png/silver-pill-paypal-44px.png\"\n         alt=\"Paypal\"\n         height=\"auto\" ></a>\n</div>\n\n<div>\n  <a href=\"https://www.patreon.com/morvan\">\n    <img src=\"https://mofanpy.com/static/img/support/patreon.jpg\"\n         alt=\"Patreon\"\n         height=120></a>\n</div>",
        "releases": []
    }
}