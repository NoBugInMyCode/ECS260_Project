{
    "https://api.github.com/repos/coturn/coturn": {
        "forks": 2053,
        "watchers": 11708,
        "stars": 11708,
        "languages": {
            "C": 1692374,
            "CMake": 62501,
            "Shell": 33188,
            "C++": 28234,
            "Makefile": 20215,
            "Dockerfile": 11566
        },
        "commits": [
            "2025-01-14T10:39:57Z",
            "2025-01-09T10:58:41Z",
            "2025-01-08T11:02:43Z",
            "2025-01-05T01:50:29Z",
            "2024-12-27T22:52:44Z",
            "2024-12-27T19:36:58Z",
            "2024-12-25T09:08:34Z",
            "2024-12-20T01:10:49Z",
            "2024-12-20T00:41:45Z",
            "2024-12-19T17:05:37Z",
            "2024-12-18T22:50:38Z",
            "2024-12-16T01:37:03Z",
            "2024-12-13T21:06:24Z",
            "2024-12-13T17:31:06Z",
            "2024-12-13T17:28:45Z",
            "2024-12-11T18:33:47Z",
            "2024-12-11T18:27:05Z",
            "2024-12-11T18:13:38Z",
            "2024-12-11T03:38:39Z",
            "2024-12-10T18:28:43Z",
            "2024-12-06T18:10:33Z",
            "2024-12-05T11:28:33Z",
            "2024-11-21T22:13:36Z",
            "2024-11-19T00:51:02Z",
            "2024-11-18T17:00:08Z",
            "2024-11-18T03:49:10Z",
            "2024-11-15T00:59:31Z",
            "2024-11-13T11:17:07Z",
            "2024-10-28T01:56:58Z",
            "2024-10-21T08:47:11Z"
        ],
        "creation_date": "2015-07-17T08:15:16Z",
        "contributors": 30,
        "topics": [
            "networking",
            "server",
            "turn"
        ],
        "subscribers": 323,
        "readme": "[![Docker CI](https://github.com/coturn/coturn/actions/workflows/docker.yml/badge.svg  \"Docker CI\")](https://github.com/coturn/coturn/actions/workflows/docker.yml)\n[![Docker Hub](https://img.shields.io/docker/pulls/coturn/coturn?label=Docker%20Hub%20pulls \"Docker Hub pulls\")](https://hub.docker.com/r/coturn/coturn)\n\n[Docker Hub](https://hub.docker.com/r/coturn/coturn)\n| [GitHub Container Registry](https://github.com/orgs/coturn/packages/container/package/coturn)\n| [Quay.io](https://quay.io/repository/coturn/coturn)\n\n# Coturn TURN server #\n\ncoturn is a free open source implementation of TURN and STUN Server.\nThe TURN Server is a VoIP media traffic NAT traversal server and gateway.\n\n## Installing / Getting started\n\nLinux distros may have a version of coturn which you can install by\n```\napt install coturn\nturnserver --log-file stdout\n```\n\nOr run coturn using docker container:\n```\ndocker run -d -p 3478:3478 -p 3478:3478/udp -p 5349:5349 -p 5349:5349/udp -p 49152-65535:49152-65535/udp coturn/coturn\n```\nSee more details about using docker container [Docker Readme](https://github.com/coturn/coturn/blob/master/docker/coturn/README.md)\n\n\n## Developing\n\n### Dependencies\n\ncoturn requires following dependencies to be installed first\n- libevent2\n\nOptional\n- openssl (to support TLS and DTLS, authorized STUN and TURN)\n- libmicrohttp and [prometheus-client-c](https://github.com/digitalocean/prometheus-client-c) (prometheus interface)\n- MariaDB/MySQL (user database)\n- [Hiredis](https://github.com/redis/hiredis) (user database, monitoring)\n- SQLite (user database)\n- PostgreSQL (user database)\n\n### Building\n```shell\ngit clone git@github.com:coturn/coturn.git\ncd coturn\n./configure\nmake\n```\n\n\n## Features\n\nSTUN specs:\n\n  * [RFC 3489](https://datatracker.ietf.org/doc/html/rfc3489) - \"classic\" STUN\n  * [RFC 5389](https://datatracker.ietf.org/doc/html/rfc5389) - base \"new\" STUN specs\n  * [RFC 5769](https://datatracker.ietf.org/doc/html/rfc5769) - test vectors for STUN protocol testing\n  * [RFC 5780](https://datatracker.ietf.org/doc/html/rfc5780) - NAT behavior discovery support\n  * [RFC 7443](https://datatracker.ietf.org/doc/html/rfc7443) - ALPN support for STUN & TURN\n  * [RFC 7635](https://datatracker.ietf.org/doc/html/rfc7635) - oAuth third-party TURN/STUN authorization\n  \nTURN specs:\n\n  * [RFC 5766](https://datatracker.ietf.org/doc/html/rfc5766) - base TURN specs\n  * [RFC 6062](https://datatracker.ietf.org/doc/html/rfc6062) - TCP relaying TURN extension\n  * [RFC 6156](https://datatracker.ietf.org/doc/html/rfc6156) - IPv6 extension for TURN\n  * [RFC 7443](https://datatracker.ietf.org/doc/html/rfc7443) - ALPN support for STUN & TURN\n  * [RFC 7635](https://datatracker.ietf.org/doc/html/rfc7635) - oAuth third-party TURN/STUN authorization\n  * DTLS support (http://tools.ietf.org/html/draft-petithuguenin-tram-turn-dtls-00)\n  * Mobile ICE (MICE) support (http://tools.ietf.org/html/draft-wing-tram-turn-mobility-02)\n  * TURN REST API (http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00)\n  * Origin field in TURN (Multi-tenant TURN Server) (https://tools.ietf.org/html/draft-ietf-tram-stun-origin-06)\n  * TURN Bandwidth draft specs (http://tools.ietf.org/html/draft-thomson-tram-turn-bandwidth-01)\n  * TURN-bis (with dual allocation) draft specs (http://tools.ietf.org/html/draft-ietf-tram-turnbis-04)\n\nICE and related specs:\n\n  * [RFC 5245](https://datatracker.ietf.org/doc/html/rfc5245) - ICE\n  * [RFC 5768](https://datatracker.ietf.org/doc/html/rfc5768) \u2013 ICE\u2013SIP\n  * [RFC 6336](https://datatracker.ietf.org/doc/html/rfc6336) \u2013 ICE\u2013IANA Registry\n  * [RFC 6544](https://datatracker.ietf.org/doc/html/rfc6544) \u2013 ICE\u2013TCP\n  * [RFC 5928](https://datatracker.ietf.org/doc/html/rfc5928) - TURN Resolution Mechanism\n\nThe implementation fully supports the following client-to-TURN-server protocols:\n\n  * UDP (per [RFC 5766](https://datatracker.ietf.org/doc/html/rfc5766))\n  * TCP (per [RFC 5766](https://datatracker.ietf.org/doc/html/rfc5766) and [RFC 6062](https://datatracker.ietf.org/doc/html/rfc6062))\n  * TLS (per [RFC 5766](https://datatracker.ietf.org/doc/html/rfc) and [RFC 6062](https://datatracker.ietf.org/doc/html/rfc6062)): including TLS1.3; ECDHE is supported.\n  * DTLS1.0 and DTLS1.2 (http://tools.ietf.org/html/draft-petithuguenin-tram-turn-dtls-00)\n  * SCTP (experimental implementation).\n\nRelay protocols:\n\n  * UDP (per [RFC 5766](https://datatracker.ietf.org/doc/html/rfc5766))\n  * TCP (per [RFC 6062](https://datatracker.ietf.org/doc/html/rfc6062))\n\nUser databases (for user repository, with passwords or keys, if authentication is required):\n\n  * SQLite\n  * MariaDB/MySQL\n  * PostgreSQL\n  * Redis\n  * MongoDB\n  \n  \nManagement interfaces:\n * telnet cli \n * HTTPS interface\n\n\nMonitoring:\n * Redis can be used for status and statistics storage and notification\n * [prometheus](https://prometheus.io/) interface (unavailable on apt package)\n\nMessage integrity digest algorithms:\n\n  * HMAC-SHA1, with MD5-hashed keys (as required by STUN and TURN standards)\n\nTURN authentication mechanisms:\n\n  * 'classic' long-term credentials mechanism;\n  * TURN REST API (a modification of the long-term mechanism, for time-limited secret-based authentication, for WebRTC applications: http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00);\n  * experimental third-party oAuth-based client authorization option;\n\nPerformance and Load Balancing:\n\nWhen used as a part of an ICE solution, for VoIP connectivity, this TURN server can handle thousands simultaneous calls per CPU (when TURN protocol is used) or tens of thousands calls when only STUN protocol is used. For virtually unlimited scalability a load balancing scheme can be used. The load balancing can be implemented with the following tools (either one or a combination of them):\n\n  * DNS SRV based load balancing;\n  * built-in 300 ALTERNATE-SERVER mechanism (requires 300 response support by the TURN client);\n  * network load-balancer server.\n\nTraffic bandwidth limitation and congestion avoidance algorithms implemented.\n\nTarget platforms:\n\n  * Linux (Debian, Ubuntu, Mint, CentOS, Fedora, Redhat, Amazon Linux, Arch Linux, OpenSUSE)\n  * BSD (FreeBSD, NetBSD, OpenBSD, DragonFlyBSD)\n  * Solaris 11\n  * Mac OS X\n  * Cygwin (for non-production R&D purposes)\n  * Windows (native with, e.g., MSVC toolchain)\n\nThis project can be successfully used on other `*NIX` platforms, too, but that is not officially supported.\n\nThe implementation is supposed to be simple, easy to install and configure. The project focuses on performance, scalability and simplicity. The aim is to provide an enterprise-grade TURN solution.\n\nTo achieve high performance and scalability, the TURN server is implemented with the following features:\n\n  * High-performance industrial-strength Network IO engine libevent2 is used\n  * Configurable multi-threading model implemented to allow full usage of available CPU resources (if OS allows multi-threading)\n  * Multiple listening and relay addresses can be configured\n  * Efficient memory model used\n  * The TURN project code can be used in a custom proprietary networking environment. In the TURN server code, an abstract networking API is used. Only couple files in the project have to be re-written to plug-in the TURN server into a proprietary environment. With this project, only implementation for standard UNIX Networking/IO API is provided, but the  user can implement any other environment. The TURN server code was originally developed for a high-performance proprietary corporate environment, then adopted for UNIX Networking API\n  * The TURN server works as a user space process, without imposing any special requirements on the system\n\n\n## Links\n\n- Project homepage: https://coturn.github.io/\n- Repository: https://github.com/coturn/coturn/\n- Issue tracker: https://github.com/coturn/coturn/issues\n- Google group: https://groups.google.com/forum/#!forum/turn-server-project-rfc5766-turn-server\n",
        "releases": [
            {
                "name": "docker/4.6.3-r2",
                "date": "2025-01-09T11:55:33Z"
            },
            {
                "name": "docker/4.6.3-r1",
                "date": "2025-01-08T11:47:15Z"
            },
            {
                "name": "4.6.3",
                "date": "2024-12-11T18:24:42Z"
            },
            {
                "name": "docker/4.6.3-r0",
                "date": "2024-12-11T19:15:07Z"
            },
            {
                "name": "docker/4.6.2-r13",
                "date": "2024-12-06T18:54:26Z"
            },
            {
                "name": "docker/4.6.2-r12",
                "date": "2024-09-09T10:32:05Z"
            },
            {
                "name": "docker/4.6.2-r11",
                "date": "2024-07-26T10:49:53Z"
            },
            {
                "name": "docker/4.6.2-r10",
                "date": "2024-06-21T06:25:17Z"
            },
            {
                "name": "docker/4.6.2-r9",
                "date": "2024-05-24T15:35:37Z"
            },
            {
                "name": "docker/4.6.2-r8",
                "date": "2024-01-29T10:43:59Z"
            },
            {
                "name": "docker/4.6.2-r7",
                "date": "2023-12-08T13:04:09Z"
            },
            {
                "name": "docker/4.6.2-r6",
                "date": "2023-12-01T13:07:30Z"
            },
            {
                "name": "docker/4.6.2-r5",
                "date": "2023-10-05T12:23:05Z"
            },
            {
                "name": "docker/4.6.2-r4",
                "date": "2023-07-04T13:35:05Z"
            },
            {
                "name": "docker/4.6.2-r3",
                "date": "2023-06-15T12:19:59Z"
            },
            {
                "name": "docker/4.6.2-r2",
                "date": "2023-06-13T16:02:30Z"
            },
            {
                "name": "docker/4.6.2-r1",
                "date": "2023-05-11T10:18:29Z"
            },
            {
                "name": "docker/4.6.2-r0",
                "date": "2023-04-12T12:40:33Z"
            },
            {
                "name": "4.6.2",
                "date": "2023-04-12T02:37:09Z"
            },
            {
                "name": "docker/4.6.1-r3",
                "date": "2023-03-31T14:43:09Z"
            },
            {
                "name": "docker/4.6.1-r2",
                "date": "2023-02-13T11:46:36Z"
            },
            {
                "name": "docker/4.6.1-r1",
                "date": "2023-01-31T18:13:26Z"
            },
            {
                "name": "docker/4.6.1-r0",
                "date": "2022-12-04T12:12:41Z"
            },
            {
                "name": "docker/4.6.0-r1",
                "date": "2022-11-16T18:16:26Z"
            },
            {
                "name": "docker/4.6.0-r0",
                "date": "2022-09-13T11:35:54Z"
            },
            {
                "name": "docker/4.5.2-r14",
                "date": "2022-09-13T10:51:48Z"
            },
            {
                "name": "docker/4.5.2-r13",
                "date": "2022-07-19T16:06:29Z"
            },
            {
                "name": "docker/4.5.2-r12",
                "date": "2022-05-24T09:44:14Z"
            },
            {
                "name": "docker/4.5.2-r11",
                "date": "2022-04-06T09:05:49Z"
            },
            {
                "name": "docker/4.5.2-r10",
                "date": "2022-03-29T14:33:29Z"
            },
            {
                "name": "docker/4.5.2-r9",
                "date": "2022-03-25T16:52:17Z"
            },
            {
                "name": "docker/4.5.2-r8",
                "date": "2021-12-03T11:48:34Z"
            },
            {
                "name": "docker/4.5.2-r7",
                "date": "2021-11-25T11:15:51Z"
            },
            {
                "name": "docker/4.5.2-r6",
                "date": "2021-11-15T10:06:17Z"
            },
            {
                "name": "docker/4.5.2-r5",
                "date": "2021-08-29T12:58:46Z"
            },
            {
                "name": "docker/4.5.2-r4",
                "date": "2021-08-28T21:54:00Z"
            },
            {
                "name": "docker/4.5.2-r3",
                "date": "2021-08-09T13:46:41Z"
            },
            {
                "name": "docker/4.5.2-r2",
                "date": "2021-06-21T12:52:32Z"
            },
            {
                "name": "docker/4.5.2-r1",
                "date": "2021-06-03T14:47:01Z"
            },
            {
                "name": "docker/4.5.2-r0",
                "date": "2021-04-15T19:33:33Z"
            },
            {
                "name": "4.5.2",
                "date": "2021-01-11T09:51:08Z"
            },
            {
                "name": "4.5.1.3",
                "date": "2020-06-29T11:24:43Z"
            },
            {
                "name": "4.5.1.2",
                "date": "2020-04-30T18:48:28Z"
            },
            {
                "name": "4.5.1.1",
                "date": "2019-03-03T00:26:07Z"
            },
            {
                "name": "4.5.1.0",
                "date": "2019-01-28T18:51:38Z"
            },
            {
                "name": "4.5.0.8",
                "date": "2018-09-27T20:30:55Z"
            },
            {
                "name": "",
                "date": "2017-12-11T07:54:19Z"
            }
        ]
    }
}