{
    "https://api.github.com/repos/diasurgical/devilution": {
        "forks": 920,
        "watchers": 8815,
        "stars": 8815,
        "languages": {
            "C++": 3337223,
            "C": 236195,
            "Makefile": 3467,
            "Assembly": 1986,
            "Shell": 1711
        },
        "commits": [
            "2024-12-01T21:33:06Z",
            "2024-11-29T20:12:27Z",
            "2024-04-17T06:58:32Z",
            "2024-03-06T04:27:53Z",
            "2024-01-02T20:24:34Z",
            "2023-07-21T15:31:27Z",
            "2023-02-12T17:10:18Z",
            "2023-02-11T13:10:56Z",
            "2023-02-02T17:39:15Z",
            "2023-01-01T23:27:05Z",
            "2022-10-20T22:55:01Z",
            "2022-10-15T21:47:24Z",
            "2021-10-23T11:46:10Z",
            "2022-10-02T00:38:38Z",
            "2022-08-26T16:23:29Z",
            "2022-08-26T15:27:29Z",
            "2022-08-05T22:52:51Z",
            "2022-08-04T20:49:01Z",
            "2022-08-04T20:47:51Z",
            "2022-05-14T00:40:18Z",
            "2022-05-14T00:39:40Z",
            "2022-05-09T00:30:47Z",
            "2022-03-24T02:51:47Z",
            "2022-02-20T21:06:47Z",
            "2022-01-18T00:38:37Z",
            "2021-11-20T18:34:25Z",
            "2021-09-07T14:07:25Z",
            "2021-11-14T23:45:01Z",
            "2021-10-25T16:09:02Z",
            "2021-10-21T09:00:50Z"
        ],
        "creation_date": "2018-04-02T01:01:47Z",
        "contributors": 30,
        "topics": [
            "devilution",
            "diablo",
            "game",
            "hellfire"
        ],
        "subscribers": 248,
        "readme": "[![Build Status](https://circleci.com/gh/diasurgical/devilution.svg?style=svg)](https://circleci.com/gh/diasurgical/devilution)\n[![Build Status](https://www.travis-ci.com/diasurgical/devilution.svg?branch=master)](https://www.travis-ci.com/diasurgical/devilution)\n[![Build status](https://ci.appveyor.com/api/projects/status/ce9wnf46gqqk6prp?svg=true)](https://ci.appveyor.com/project/AJenbo/devilution)\n[![Downloads](https://img.shields.io/github/downloads/diasurgical/devilution/total.svg)](https://github.com/diasurgical/devilution/releases)\n[![github stars](https://img.shields.io/github/stars/diasurgical/devilution.svg)](https://github.com/diasurgical/devilution/stargazers)\n\n![Discord Channel](https://avatars3.githubusercontent.com/u/1965106?s=16&v=4) [Discord Chat Channel](https://discord.gg/YQKCAYQ)\n\n# Devilution\nDiablo devolved - magic behind the 1996 computer game\n\n**Note**, Devilution requires an original copy of `diabdat.mpq`. None of the Diablo 1 game assets are provided by this project. To get a legitimate copy of the game assets, please refer to the [GoG release of Diablo 1](https://www.gog.com/game/diablo).\n\n# Introduction\nWhile most titles from Blizzard receive years of love and support, Diablo stayed in the shadows. Abandoned in favor of a sequel, it remained full of bugs and unfinished potential. The game was last patched in 2001 before being discontinued altogether, a problem I wanted to fix. I played Diablo extensively as a teenager, but as time passed it became difficult to run the game on newer hardware. The lack of many improvements made in Diablo II also laid it to rest. At first the game appeared to be a lost cause, but thankfully a little oversight in 1997 made it not so.\n\nDiablo's development team moved on to Diablo II while passing the source code down to **Synergistic Software** for Hellfire. Less known however is that it was also given to **Climax Studios** to create a PlayStation port. Now Sony has long been known for letting things slide; _especially_ in Japan. Anything from leaking prototypes to entire game source codes and Diablo was no exception. Symbolic information was accidentally left on the Japanese port. Normally used for debugging, a symbol file contains a map of everything generated during compile time. This includes file names, functions, structures, variables, and more! To top it all off a special build is hidden on the PC release in `DIABDAT.MPQ -> D1221A.MPQ -> DIABLO.EXE`! This build contains debug tools and assert strings further giving away code information.\n\nAfter months of piecing these mistakes together, Devilution was born. I present to you a reconstructed form of Diablo's original source code! Once more shall the heroes of Sanctuary return to the depths below!\n\n# Purpose\nHaving the source code makes Diablo much easier to update and maintain. For years mod-makers had to rely on tedious code editing and memory injection. A few even went further and reversed most or all of the game. The problem is that they rarely shared their work. Usually being a one-person job, they move on with their lives due to the amount of time required or lack of interest. This brings us back to square one having to do countless hours of work all over again. Devilution aims to fix this by finally making the source code open to the community.\n\nIn order to ensure that everything is preserved, Devilution keeps everything as it was originally designed. This goes as far as bugs and badly written code in the original game. With that it serves as a base for developers to work with making it much easier than before to update, fix, and port the game to other platforms.\n\nAs a side goal Devilution tries to document the unused and cut content from the final game. Development of Diablo was rushed near the end--many ideas were scrapped and multiplayer was quickly hacked in. By examining the source, we can see various quirks of planned development.\n\n# Compiling\nDiablo was developed on Windows 95 using Visual C++ 4.20 and later 5.10 and 6 for newer patches. Devilution aims to be compatible with both the original and modern tools, but will adhere to standards used for the original compiler.\n\n### Building with Visual C++ 6\n- Open the project workspace `Diablo.dsw`, choose `Debug` or `Release`, and then `Build Diablo.exe`.\n\nTo build a binary with functions compiled as close as possible to the original, use [Visual C++ 6](https://winworldpc.com/product/visual-c/6x) with Service Pack 5 and the [Processor Pack](https://download.microsoft.com/download/vb60ent/update/6/w9x2kxp/en-us/vcpp5.exe) (**important for proper code generation!**) You will also need [Visual C++ 5](https://winworldpc.com/product/visual-c/5x) with [Service Pack 3](http://www.mediafire.com/file/jw4j4sd5dnzze4p/VS97SP3.zip), since the original binary was linked with the older linker from that. Sadly, you cannot use the old linker right out of VC6, so you'll need to link manually or via the `MakefileVC` in the project root.\n\n### Building with Visual Studio 2010-2017\n- Open the project solution `Diablo.sln`, choose `Debug` or `Release`, and then `Build Solution`.\n\nMake sure to disable Data Execution Prevention. `Storm.dll` uses dynamic compilation to improve rendering performance but fails to mark the resulting memory page as executable, leading to a protection fault when trying to draw.\n- Configuration options -> Linker -> Advanced -> Data Execution Prevention (DEP).\n- Set this value to: No (/NXCOMPAT: NO).\n\nYou will also need the following dependencies installed if you are using Visual Studio 2017.\nMake sure to enable these when installing (or modify your installation):\n- Requires \"Windows 8.1 SDK\" (Target Platform)\n- Requires \"Visual C++ MFC for x86 and x64\" (For afxres.h)\n- Requires \"Windows Universal CRT SDK\" (For ctype.h)\n\n### Building with MinGW\n- Execute `make MINGW32=1` for **MinGW32** or `make` for **MinGW64**. Optionally add `debug` to build with debug features.\n\nTo compile with MinGW64 on different platforms, refer to the respective documentation: [Linux](docs/INSTALL_linux.md) | [Windows](docs/INSTALL_windows.md) | [Mac](docs/INSTALL_mac.md).\n\n[Debug Build Features](docs/debug.md)\n| [Compatibility Matrix](docs/compatibility_matrix.md)\n| [Troubleshooting](docs/troubleshooting.md)\n\n# Installing\nOnce compiled, the Devilution binary will serve as a replacement for `Diablo.exe`. The following files from the original game patched to 1.09(b) need to be present: `DIABDAT.MPQ`, `DiabloUI.dll`, `SmackW32.dll`, `Standard.snp`, and `Storm.dll`. If `COPYPROT` was defined when compiling, the Diablo CD will also be required.\n\nAdditionally, Strange Bytes' [DirectDraw patch](http://www.strangebytes.com/index.php/projects/1-diablo-1-windows-7-vista-patch) is recommended to help fix compatibility issues and run the game in windowed mode.\n\n# Multiplayer\nDevilution is functional over both GoG's Battle.net server and IPX using an ipx-wrapper. Additionally if `Standard.snp` from StarCraft 1.16.1 is used, local UDP play also becomes available. There are programs like ZeroTier to connect UDP globally.\n\n# Contributing\n[Guidelines](docs/CONTRIBUTING.md)\n\n# Modding\nBelow are a few examples of some simple improvements made to the game. It is planned in the future to create tools for designing dungeons and graphics.\n\n<details><summary>Example 1: Monster lifebar and item highlighting</summary>\n\n![Monster lifebar+items](https://github.com/diasurgical/scalpel/blob/master/screens/mod1.png)\n</details>\n<details><summary>Example 2: New Diablo 2-like trade screen</summary>\n\n![New trade screen](https://github.com/diasurgical/scalpel/blob/master/screens/mod2.png)\n</details>\n\n# F.A.Q.\n<details><summary>Click to reveal</summary>\n\n> Wow, does this mean I can download and play Diablo for free now?\n\nNo, you'll need access to the data from the original game. If you don't have an original CD then you can [buy Diablo from GoG.com](https://www.gog.com/game/diablo). Alternatively you can also use `spawn.mpq` from the [http://ftp.blizzard.com/pub/demos/diablosw.exe](shareware) version and compile the with the SPAWN flag defined.\n> Cool, so I fired your mod up, but there's no 1080p or new features?\n\nDevilution aims to keep the original code unaltered, for documentation purposes.\n> So will you ever add cross-platform support or new features in the future?\n\nYes! This has been done as a side project, please see [DevilutionX](https://github.com/diasurgical/devilutionX).\n> What about Hellfire?\n\nHellfire was a bit of a flop on the developer's part. Support may come in the future once the base game is finished.\n> I think that's about all, but is Devilution even legal?\n\nThat's a tricky question. Under the DMCA, reverse-engineering has exceptions for the purpose of documentation and interoperability. Devilution provides the necessary documentation needed to achieve the latter. However, it falls into an entirely gray area. The real question is whether or not Blizzard deems it necessary to take action.\n</details>\n\n# Credits\n- Reverse engineered by GalaXyHaXz in 2018\n- [sanctuary](https://github.com/sanctuary) - extensively documenting Diablo's game engine\n- [BWAPI Team](https://github.com/bwapi) - providing library API to work with Storm\n- [Ladislav Zezula](https://github.com/ladislav-zezula) - reversing PKWARE library, further documenting Storm\n- [fearedbliss](https://github.com/fearedbliss) - being awe-inspiring\n- Diablodin - providing additional info about the PSX release\n- Climax Studios & Sony - secretly helping with their undercover QA :P\n- Blizzard North - wait, this was a typo!\n- Depression - reason to waste four months of my life doing this ;)\n\nAnd a special thanks to all the support and people who work on this project to make it possible! <3\n\n# Changelog\n[From the beginning until release](docs/CHANGELOG.md)\n\n# Legal\nDevilution is made publicly available and released under the Sustainable Use License (see [LICENSE](LICENSE.md))\n\nThe source code in this repository is for non-commerical use only. If you use the source code you may not charge others for access to it or any derivative work thereof.\n\nBattle.net(R) - Copyright (C) 1996 Blizzard Entertainment, Inc. All rights reserved. Battle.net and Blizzard Entertainment are trademarks or registered trademarks of Blizzard Entertainment, Inc. in the U.S. and/or other countries.\n\nDiablo(R) - Copyright (C) 1996 Blizzard Entertainment, Inc. All rights reserved. Diablo and Blizzard Entertainment are trademarks or registered trademarks of Blizzard Entertainment, Inc. in the U.S. and/or other countries.\n\nDevilution and any of its' maintainers are in no way associated with or endorsed by Blizzard Entertainment(R).\n",
        "releases": [
            {
                "name": "0.10.0",
                "date": "2019-07-21T22:46:18Z"
            },
            {
                "name": "0.9.6",
                "date": "2019-05-19T12:57:18Z"
            },
            {
                "name": "0.9.0",
                "date": "2019-05-02T00:28:21Z"
            },
            {
                "name": "0.8.0",
                "date": "2019-04-12T20:51:10Z"
            },
            {
                "name": "0.7.0",
                "date": "2019-04-09T03:40:19Z"
            },
            {
                "name": "0.6.0",
                "date": "2019-03-19T22:21:43Z"
            },
            {
                "name": "0.5.0",
                "date": "2019-01-14T18:03:38Z"
            },
            {
                "name": "September 16, 2018",
                "date": "2018-09-16T23:48:18Z"
            },
            {
                "name": "June 28, 2018",
                "date": "2018-06-28T19:08:10Z"
            }
        ]
    }
}