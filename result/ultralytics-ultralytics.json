{
    "https://api.github.com/repos/ultralytics/ultralytics": {
        "forks": 6874,
        "watchers": 35638,
        "stars": 35638,
        "languages": {
            "Python": 2054612,
            "Shell": 4590,
            "Dockerfile": 4090
        },
        "commits": [
            "2025-01-21T10:41:05Z",
            "2025-01-21T10:39:53Z",
            "2025-01-21T01:25:54Z",
            "2025-01-21T01:20:26Z",
            "2025-01-21T00:38:20Z",
            "2025-01-21T00:38:00Z",
            "2025-01-21T00:09:32Z",
            "2025-01-20T16:12:13Z",
            "2025-01-19T22:44:56Z",
            "2025-01-19T16:33:02Z",
            "2025-01-19T16:19:57Z",
            "2025-01-19T16:12:09Z",
            "2025-01-19T13:47:55Z",
            "2025-01-19T13:47:15Z",
            "2025-01-18T17:28:30Z",
            "2025-01-18T17:28:09Z",
            "2025-01-17T13:56:47Z",
            "2025-01-17T13:48:15Z",
            "2025-01-17T11:48:49Z",
            "2025-01-17T11:18:49Z",
            "2025-01-17T00:57:50Z",
            "2025-01-16T21:45:49Z",
            "2025-01-16T21:27:27Z",
            "2025-01-16T17:59:11Z",
            "2025-01-16T10:18:19Z",
            "2025-01-15T18:33:16Z",
            "2025-01-15T17:53:38Z",
            "2025-01-15T14:36:11Z",
            "2025-01-15T12:53:06Z",
            "2025-01-15T12:52:26Z"
        ],
        "creation_date": "2022-09-11T16:39:45Z",
        "contributors": 30,
        "topics": [
            "cli",
            "computer-vision",
            "deep-learning",
            "hub",
            "image-classification",
            "instance-segmentation",
            "machine-learning",
            "object-detection",
            "pose-estimation",
            "python",
            "pytorch",
            "rotated-object-detection",
            "segment-anything",
            "tracking",
            "ultralytics",
            "yolo",
            "yolo-world",
            "yolo11",
            "yolov10",
            "yolov8"
        ],
        "subscribers": 188,
        "readme": "<div align=\"center\">\n  <p>\n    <a href=\"https://www.ultralytics.com/events/yolovision\" target=\"_blank\">\n      <img width=\"100%\" src=\"https://raw.githubusercontent.com/ultralytics/assets/main/yolov8/banner-yolov8.png\" alt=\"YOLO Vision banner\"></a>\n  </p>\n\n[\u4e2d\u6587](https://docs.ultralytics.com/zh) | [\ud55c\uad6d\uc5b4](https://docs.ultralytics.com/ko) | [\u65e5\u672c\u8a9e](https://docs.ultralytics.com/ja) | [\u0420\u0443\u0441\u0441\u043a\u0438\u0439](https://docs.ultralytics.com/ru) | [Deutsch](https://docs.ultralytics.com/de) | [Fran\u00e7ais](https://docs.ultralytics.com/fr) | [Espa\u00f1ol](https://docs.ultralytics.com/es) | [Portugu\u00eas](https://docs.ultralytics.com/pt) | [T\u00fcrk\u00e7e](https://docs.ultralytics.com/tr) | [Ti\u1ebfng Vi\u1ec7t](https://docs.ultralytics.com/vi) | [\u0627\u0644\u0639\u0631\u0628\u064a\u0629](https://docs.ultralytics.com/ar) <br>\n\n<div>\n    <a href=\"https://github.com/ultralytics/ultralytics/actions/workflows/ci.yml\"><img src=\"https://github.com/ultralytics/ultralytics/actions/workflows/ci.yml/badge.svg\" alt=\"Ultralytics CI\"></a>\n    <a href=\"https://pepy.tech/projects/ultralytics\"><img src=\"https://static.pepy.tech/badge/ultralytics\" alt=\"Ultralytics Downloads\"></a>\n    <a href=\"https://zenodo.org/badge/latestdoi/264818686\"><img src=\"https://zenodo.org/badge/264818686.svg\" alt=\"Ultralytics YOLO Citation\"></a>\n    <a href=\"https://discord.com/invite/ultralytics\"><img alt=\"Ultralytics Discord\" src=\"https://img.shields.io/discord/1089800235347353640?logo=discord&logoColor=white&label=Discord&color=blue\"></a>\n    <a href=\"https://community.ultralytics.com/\"><img alt=\"Ultralytics Forums\" src=\"https://img.shields.io/discourse/users?server=https%3A%2F%2Fcommunity.ultralytics.com&logo=discourse&label=Forums&color=blue\"></a>\n    <a href=\"https://reddit.com/r/ultralytics\"><img alt=\"Ultralytics Reddit\" src=\"https://img.shields.io/reddit/subreddit-subscribers/ultralytics?style=flat&logo=reddit&logoColor=white&label=Reddit&color=blue\"></a>\n    <br>\n    <a href=\"https://console.paperspace.com/github/ultralytics/ultralytics\"><img src=\"https://assets.paperspace.io/img/gradient-badge.svg\" alt=\"Run Ultralytics on Gradient\"></a>\n    <a href=\"https://colab.research.google.com/github/ultralytics/ultralytics/blob/main/examples/tutorial.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open Ultralytics In Colab\"></a>\n    <a href=\"https://www.kaggle.com/models/ultralytics/yolo11\"><img src=\"https://kaggle.com/static/images/open-in-kaggle.svg\" alt=\"Open Ultralytics In Kaggle\"></a>\n    <a href=\"https://mybinder.org/v2/gh/ultralytics/ultralytics/HEAD?labpath=examples%2Ftutorial.ipynb\"><img src=\"https://mybinder.org/badge_logo.svg\" alt=\"Open Ultralytics In Binder\"></a>\n</div>\n<br>\n\n[Ultralytics](https://www.ultralytics.com/) [YOLO11](https://github.com/ultralytics/ultralytics) is a cutting-edge, state-of-the-art (SOTA) model that builds upon the success of previous YOLO versions and introduces new features and improvements to further boost performance and flexibility. YOLO11 is designed to be fast, accurate, and easy to use, making it an excellent choice for a wide range of object detection and tracking, instance segmentation, image classification and pose estimation tasks.\n\nWe hope that the resources here will help you get the most out of YOLO. Please browse the Ultralytics <a href=\"https://docs.ultralytics.com/\">Docs</a> for details, raise an issue on <a href=\"https://github.com/ultralytics/ultralytics/issues/new/choose\">GitHub</a> for support, questions, or discussions, become a member of the Ultralytics <a href=\"https://discord.com/invite/ultralytics\">Discord</a>, <a href=\"https://reddit.com/r/ultralytics\">Reddit</a> and <a href=\"https://community.ultralytics.com/\">Forums</a>!\n\nTo request an Enterprise License please complete the form at [Ultralytics Licensing](https://www.ultralytics.com/license).\n\n<a href=\"https://docs.ultralytics.com/models/yolo11/\" target=\"_blank\">\n  <img width=\"100%\" src=\"https://raw.githubusercontent.com/ultralytics/assets/refs/heads/main/yolo/performance-comparison.png\" alt=\"YOLO11 performance plots\">\n</a>\n\n<div align=\"center\">\n  <a href=\"https://github.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-github.png\" width=\"2%\" alt=\"Ultralytics GitHub\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://www.linkedin.com/company/ultralytics/\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-linkedin.png\" width=\"2%\" alt=\"Ultralytics LinkedIn\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://twitter.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-twitter.png\" width=\"2%\" alt=\"Ultralytics Twitter\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://youtube.com/ultralytics?sub_confirmation=1\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-youtube.png\" width=\"2%\" alt=\"Ultralytics YouTube\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://www.tiktok.com/@ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-tiktok.png\" width=\"2%\" alt=\"Ultralytics TikTok\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://ultralytics.com/bilibili\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-bilibili.png\" width=\"2%\" alt=\"Ultralytics BiliBili\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://discord.com/invite/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-discord.png\" width=\"2%\" alt=\"Ultralytics Discord\"></a>\n</div>\n</div>\n\n## <div align=\"center\">Documentation</div>\n\nSee below for a quickstart install and usage examples, and see our [Docs](https://docs.ultralytics.com/) for full documentation on training, validation, prediction and deployment.\n\n<details open>\n<summary>Install</summary>\n\nPip install the Ultralytics package including all [requirements](https://github.com/ultralytics/ultralytics/blob/main/pyproject.toml) in a [**Python>=3.8**](https://www.python.org/) environment with [**PyTorch>=1.8**](https://pytorch.org/get-started/locally/).\n\n[![PyPI - Version](https://img.shields.io/pypi/v/ultralytics?logo=pypi&logoColor=white)](https://pypi.org/project/ultralytics/) [![Ultralytics Downloads](https://static.pepy.tech/badge/ultralytics)](https://www.pepy.tech/projects/ultralytics) [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/ultralytics?logo=python&logoColor=gold)](https://pypi.org/project/ultralytics/)\n\n```bash\npip install ultralytics\n```\n\nFor alternative installation methods including [Conda](https://anaconda.org/conda-forge/ultralytics), [Docker](https://hub.docker.com/r/ultralytics/ultralytics), and Git, please refer to the [Quickstart Guide](https://docs.ultralytics.com/quickstart/).\n\n[![Conda Version](https://img.shields.io/conda/vn/conda-forge/ultralytics?logo=condaforge)](https://anaconda.org/conda-forge/ultralytics) [![Docker Image Version](https://img.shields.io/docker/v/ultralytics/ultralytics?sort=semver&logo=docker)](https://hub.docker.com/r/ultralytics/ultralytics) [![Ultralytics Docker Pulls](https://img.shields.io/docker/pulls/ultralytics/ultralytics?logo=docker)](https://hub.docker.com/r/ultralytics/ultralytics)\n\n</details>\n\n<details open>\n<summary>Usage</summary>\n\n### CLI\n\nYOLO may be used directly in the Command Line Interface (CLI) with a `yolo` command:\n\n```bash\nyolo predict model=yolo11n.pt source='https://ultralytics.com/images/bus.jpg'\n```\n\n`yolo` can be used for a variety of tasks and modes and accepts additional arguments, e.g. `imgsz=640`. See the YOLO [CLI Docs](https://docs.ultralytics.com/usage/cli/) for examples.\n\n### Python\n\nYOLO may also be used directly in a Python environment, and accepts the same [arguments](https://docs.ultralytics.com/usage/cfg/) as in the CLI example above:\n\n```python\nfrom ultralytics import YOLO\n\n# Load a model\nmodel = YOLO(\"yolo11n.pt\")\n\n# Train the model\ntrain_results = model.train(\n    data=\"coco8.yaml\",  # path to dataset YAML\n    epochs=100,  # number of training epochs\n    imgsz=640,  # training image size\n    device=\"cpu\",  # device to run on, i.e. device=0 or device=0,1,2,3 or device=cpu\n)\n\n# Evaluate model performance on the validation set\nmetrics = model.val()\n\n# Perform object detection on an image\nresults = model(\"path/to/image.jpg\")\nresults[0].show()\n\n# Export the model to ONNX format\npath = model.export(format=\"onnx\")  # return path to exported model\n```\n\nSee YOLO [Python Docs](https://docs.ultralytics.com/usage/python/) for more examples.\n\n</details>\n\n## <div align=\"center\">Models</div>\n\nYOLO11 [Detect](https://docs.ultralytics.com/tasks/detect/), [Segment](https://docs.ultralytics.com/tasks/segment/) and [Pose](https://docs.ultralytics.com/tasks/pose/) models pretrained on the [COCO](https://docs.ultralytics.com/datasets/detect/coco/) dataset are available here, as well as YOLO11 [Classify](https://docs.ultralytics.com/tasks/classify/) models pretrained on the [ImageNet](https://docs.ultralytics.com/datasets/classify/imagenet/) dataset. [Track](https://docs.ultralytics.com/modes/track/) mode is available for all Detect, Segment and Pose models. All [Models](https://docs.ultralytics.com/models/) download automatically from the latest Ultralytics [release](https://github.com/ultralytics/assets/releases) on first use.\n\n<a href=\"https://docs.ultralytics.com/tasks/\" target=\"_blank\">\n    <img width=\"100%\" src=\"https://github.com/ultralytics/docs/releases/download/0/ultralytics-yolov8-tasks-banner.avif\" alt=\"Ultralytics YOLO supported tasks\">\n</a>\n<br>\n<br>\n\n<details open><summary>Detection (COCO)</summary>\n\nSee [Detection Docs](https://docs.ultralytics.com/tasks/detect/) for usage examples with these models trained on [COCO](https://docs.ultralytics.com/datasets/detect/coco/), which include 80 pre-trained classes.\n\n| Model                                                                                | size<br><sup>(pixels) | mAP<sup>val<br>50-95 | Speed<br><sup>CPU ONNX<br>(ms) | Speed<br><sup>T4 TensorRT10<br>(ms) | params<br><sup>(M) | FLOPs<br><sup>(B) |\n| ------------------------------------------------------------------------------------ | --------------------- | -------------------- | ------------------------------ | ----------------------------------- | ------------------ | ----------------- |\n| [YOLO11n](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n.pt) | 640                   | 39.5                 | 56.1 \u00b1 0.8                     | 1.5 \u00b1 0.0                           | 2.6                | 6.5               |\n| [YOLO11s](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11s.pt) | 640                   | 47.0                 | 90.0 \u00b1 1.2                     | 2.5 \u00b1 0.0                           | 9.4                | 21.5              |\n| [YOLO11m](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11m.pt) | 640                   | 51.5                 | 183.2 \u00b1 2.0                    | 4.7 \u00b1 0.1                           | 20.1               | 68.0              |\n| [YOLO11l](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11l.pt) | 640                   | 53.4                 | 238.6 \u00b1 1.4                    | 6.2 \u00b1 0.1                           | 25.3               | 86.9              |\n| [YOLO11x](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11x.pt) | 640                   | 54.7                 | 462.8 \u00b1 6.7                    | 11.3 \u00b1 0.2                          | 56.9               | 194.9             |\n\n- **mAP<sup>val</sup>** values are for single-model single-scale on [COCO val2017](https://cocodataset.org/) dataset. <br>Reproduce by `yolo val detect data=coco.yaml device=0`\n- **Speed** averaged over COCO val images using an [Amazon EC2 P4d](https://aws.amazon.com/ec2/instance-types/p4/) instance. <br>Reproduce by `yolo val detect data=coco.yaml batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>Segmentation (COCO)</summary>\n\nSee [Segmentation Docs](https://docs.ultralytics.com/tasks/segment/) for usage examples with these models trained on [COCO-Seg](https://docs.ultralytics.com/datasets/segment/coco/), which include 80 pre-trained classes.\n\n| Model                                                                                        | size<br><sup>(pixels) | mAP<sup>box<br>50-95 | mAP<sup>mask<br>50-95 | Speed<br><sup>CPU ONNX<br>(ms) | Speed<br><sup>T4 TensorRT10<br>(ms) | params<br><sup>(M) | FLOPs<br><sup>(B) |\n| -------------------------------------------------------------------------------------------- | --------------------- | -------------------- | --------------------- | ------------------------------ | ----------------------------------- | ------------------ | ----------------- |\n| [YOLO11n-seg](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n-seg.pt) | 640                   | 38.9                 | 32.0                  | 65.9 \u00b1 1.1                     | 1.8 \u00b1 0.0                           | 2.9                | 10.4              |\n| [YOLO11s-seg](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11s-seg.pt) | 640                   | 46.6                 | 37.8                  | 117.6 \u00b1 4.9                    | 2.9 \u00b1 0.0                           | 10.1               | 35.5              |\n| [YOLO11m-seg](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11m-seg.pt) | 640                   | 51.5                 | 41.5                  | 281.6 \u00b1 1.2                    | 6.3 \u00b1 0.1                           | 22.4               | 123.3             |\n| [YOLO11l-seg](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11l-seg.pt) | 640                   | 53.4                 | 42.9                  | 344.2 \u00b1 3.2                    | 7.8 \u00b1 0.2                           | 27.6               | 142.2             |\n| [YOLO11x-seg](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11x-seg.pt) | 640                   | 54.7                 | 43.8                  | 664.5 \u00b1 3.2                    | 15.8 \u00b1 0.7                          | 62.1               | 319.0             |\n\n- **mAP<sup>val</sup>** values are for single-model single-scale on [COCO val2017](https://cocodataset.org/) dataset. <br>Reproduce by `yolo val segment data=coco.yaml device=0`\n- **Speed** averaged over COCO val images using an [Amazon EC2 P4d](https://aws.amazon.com/ec2/instance-types/p4/) instance. <br>Reproduce by `yolo val segment data=coco.yaml batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>Classification (ImageNet)</summary>\n\nSee [Classification Docs](https://docs.ultralytics.com/tasks/classify/) for usage examples with these models trained on [ImageNet](https://docs.ultralytics.com/datasets/classify/imagenet/), which include 1000 pretrained classes.\n\n| Model                                                                                        | size<br><sup>(pixels) | acc<br><sup>top1 | acc<br><sup>top5 | Speed<br><sup>CPU ONNX<br>(ms) | Speed<br><sup>T4 TensorRT10<br>(ms) | params<br><sup>(M) | FLOPs<br><sup>(B) at 640 |\n| -------------------------------------------------------------------------------------------- | --------------------- | ---------------- | ---------------- | ------------------------------ | ----------------------------------- | ------------------ | ------------------------ |\n| [YOLO11n-cls](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n-cls.pt) | 224                   | 70.0             | 89.4             | 5.0 \u00b1 0.3                      | 1.1 \u00b1 0.0                           | 1.6                | 3.3                      |\n| [YOLO11s-cls](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11s-cls.pt) | 224                   | 75.4             | 92.7             | 7.9 \u00b1 0.2                      | 1.3 \u00b1 0.0                           | 5.5                | 12.1                     |\n| [YOLO11m-cls](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11m-cls.pt) | 224                   | 77.3             | 93.9             | 17.2 \u00b1 0.4                     | 2.0 \u00b1 0.0                           | 10.4               | 39.3                     |\n| [YOLO11l-cls](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11l-cls.pt) | 224                   | 78.3             | 94.3             | 23.2 \u00b1 0.3                     | 2.8 \u00b1 0.0                           | 12.9               | 49.4                     |\n| [YOLO11x-cls](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11x-cls.pt) | 224                   | 79.5             | 94.9             | 41.4 \u00b1 0.9                     | 3.8 \u00b1 0.0                           | 28.4               | 110.4                    |\n\n- **acc** values are model accuracies on the [ImageNet](https://www.image-net.org/) dataset validation set. <br>Reproduce by `yolo val classify data=path/to/ImageNet device=0`\n- **Speed** averaged over ImageNet val images using an [Amazon EC2 P4d](https://aws.amazon.com/ec2/instance-types/p4/) instance. <br>Reproduce by `yolo val classify data=path/to/ImageNet batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>Pose (COCO)</summary>\n\nSee [Pose Docs](https://docs.ultralytics.com/tasks/pose/) for usage examples with these models trained on [COCO-Pose](https://docs.ultralytics.com/datasets/pose/coco/), which include 1 pre-trained class, person.\n\n| Model                                                                                          | size<br><sup>(pixels) | mAP<sup>pose<br>50-95 | mAP<sup>pose<br>50 | Speed<br><sup>CPU ONNX<br>(ms) | Speed<br><sup>T4 TensorRT10<br>(ms) | params<br><sup>(M) | FLOPs<br><sup>(B) |\n| ---------------------------------------------------------------------------------------------- | --------------------- | --------------------- | ------------------ | ------------------------------ | ----------------------------------- | ------------------ | ----------------- |\n| [YOLO11n-pose](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n-pose.pt) | 640                   | 50.0                  | 81.0               | 52.4 \u00b1 0.5                     | 1.7 \u00b1 0.0                           | 2.9                | 7.6               |\n| [YOLO11s-pose](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11s-pose.pt) | 640                   | 58.9                  | 86.3               | 90.5 \u00b1 0.6                     | 2.6 \u00b1 0.0                           | 9.9                | 23.2              |\n| [YOLO11m-pose](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11m-pose.pt) | 640                   | 64.9                  | 89.4               | 187.3 \u00b1 0.8                    | 4.9 \u00b1 0.1                           | 20.9               | 71.7              |\n| [YOLO11l-pose](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11l-pose.pt) | 640                   | 66.1                  | 89.9               | 247.7 \u00b1 1.1                    | 6.4 \u00b1 0.1                           | 26.2               | 90.7              |\n| [YOLO11x-pose](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11x-pose.pt) | 640                   | 69.5                  | 91.1               | 488.0 \u00b1 13.9                   | 12.1 \u00b1 0.2                          | 58.8               | 203.3             |\n\n- **mAP<sup>val</sup>** values are for single-model single-scale on [COCO Keypoints val2017](https://cocodataset.org/) dataset. <br>Reproduce by `yolo val pose data=coco-pose.yaml device=0`\n- **Speed** averaged over COCO val images using an [Amazon EC2 P4d](https://aws.amazon.com/ec2/instance-types/p4/) instance. <br>Reproduce by `yolo val pose data=coco-pose.yaml batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>OBB (DOTAv1)</summary>\n\nSee [OBB Docs](https://docs.ultralytics.com/tasks/obb/) for usage examples with these models trained on [DOTAv1](https://docs.ultralytics.com/datasets/obb/dota-v2/#dota-v10/), which include 15 pre-trained classes.\n\n| Model                                                                                        | size<br><sup>(pixels) | mAP<sup>test<br>50 | Speed<br><sup>CPU ONNX<br>(ms) | Speed<br><sup>T4 TensorRT10<br>(ms) | params<br><sup>(M) | FLOPs<br><sup>(B) |\n| -------------------------------------------------------------------------------------------- | --------------------- | ------------------ | ------------------------------ | ----------------------------------- | ------------------ | ----------------- |\n| [YOLO11n-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n-obb.pt) | 1024                  | 78.4               | 117.6 \u00b1 0.8                    | 4.4 \u00b1 0.0                           | 2.7                | 17.2              |\n| [YOLO11s-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11s-obb.pt) | 1024                  | 79.5               | 219.4 \u00b1 4.0                    | 5.1 \u00b1 0.0                           | 9.7                | 57.5              |\n| [YOLO11m-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11m-obb.pt) | 1024                  | 80.9               | 562.8 \u00b1 2.9                    | 10.1 \u00b1 0.4                          | 20.9               | 183.5             |\n| [YOLO11l-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11l-obb.pt) | 1024                  | 81.0               | 712.5 \u00b1 5.0                    | 13.5 \u00b1 0.6                          | 26.2               | 232.0             |\n| [YOLO11x-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11x-obb.pt) | 1024                  | 81.3               | 1408.6 \u00b1 7.7                   | 28.6 \u00b1 1.0                          | 58.8               | 520.2             |\n\n- **mAP<sup>test</sup>** values are for single-model multiscale on [DOTAv1](https://captain-whu.github.io/DOTA/index.html) dataset. <br>Reproduce by `yolo val obb data=DOTAv1.yaml device=0 split=test` and submit merged results to [DOTA evaluation](https://captain-whu.github.io/DOTA/evaluation.html).\n- **Speed** averaged over DOTAv1 val images using an [Amazon EC2 P4d](https://aws.amazon.com/ec2/instance-types/p4/) instance. <br>Reproduce by `yolo val obb data=DOTAv1.yaml batch=1 device=0|cpu`\n\n</details>\n\n## <div align=\"center\">Integrations</div>\n\nOur key integrations with leading AI platforms extend the functionality of Ultralytics' offerings, enhancing tasks like dataset labeling, training, visualization, and model management. Discover how Ultralytics, in collaboration with [W&B](https://docs.wandb.ai/guides/integrations/ultralytics/), [Comet](https://bit.ly/yolov8-readme-comet), [Roboflow](https://roboflow.com/?ref=ultralytics) and [OpenVINO](https://docs.ultralytics.com/integrations/openvino/), can optimize your AI workflow.\n\n<a href=\"https://www.ultralytics.com/hub\" target=\"_blank\">\n    <img width=\"100%\" src=\"https://github.com/ultralytics/assets/raw/main/yolov8/banner-integrations.png\" alt=\"Ultralytics active learning integrations\">\n</a>\n<br>\n<br>\n\n<div align=\"center\">\n  <a href=\"https://www.ultralytics.com/hub\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-ultralytics-hub.png\" width=\"10%\" alt=\"Ultralytics HUB logo\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"15%\" height=\"0\" alt=\"space\">\n  <a href=\"https://docs.wandb.ai/guides/integrations/ultralytics/\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-wb.png\" width=\"10%\" alt=\"ClearML logo\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"15%\" height=\"0\" alt=\"space\">\n  <a href=\"https://bit.ly/yolov8-readme-comet\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-comet.png\" width=\"10%\" alt=\"Comet ML logo\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"15%\" height=\"0\" alt=\"space\">\n  <a href=\"https://bit.ly/yolov5-neuralmagic\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-neuralmagic.png\" width=\"10%\" alt=\"NeuralMagic logo\"></a>\n</div>\n\n|                                                         Ultralytics HUB \ud83d\ude80                                                         |                                                               W&B                                                               |                                                                       Comet \u2b50 NEW                                                                        |                                              Neural Magic                                              |\n| :--------------------------------------------------------------------------------------------------------------------------------: | :-----------------------------------------------------------------------------------------------------------------------------: | :-------------------------------------------------------------------------------------------------------------------------------------------------------: | :----------------------------------------------------------------------------------------------------: |\n| Streamline YOLO workflows: Label, train, and deploy effortlessly with [Ultralytics HUB](https://www.ultralytics.com/hub). Try now! | Track experiments, hyperparameters, and results with [Weights & Biases](https://docs.wandb.ai/guides/integrations/ultralytics/) | Free forever, [Comet](https://bit.ly/yolov5-readme-comet) lets you save YOLO11 models, resume training, and interactively visualize and debug predictions | Run YOLO11 inference up to 6x faster with [Neural Magic DeepSparse](https://bit.ly/yolov5-neuralmagic) |\n\n## <div align=\"center\">Ultralytics HUB</div>\n\nExperience seamless AI with [Ultralytics HUB](https://www.ultralytics.com/hub) \u2b50, the all-in-one solution for data visualization, YOLO11 \ud83d\ude80 model training and deployment, without any coding. Transform images into actionable insights and bring your AI visions to life with ease using our cutting-edge platform and user-friendly [Ultralytics App](https://www.ultralytics.com/app-install). Start your journey for **Free** now!\n\n<a href=\"https://www.ultralytics.com/hub\" target=\"_blank\">\n<img width=\"100%\" src=\"https://github.com/ultralytics/assets/raw/main/im/ultralytics-hub.png\" alt=\"Ultralytics HUB preview image\"></a>\n\n## <div align=\"center\">Contribute</div>\n\nWe love your input! Ultralytics YOLO would not be possible without help from our community. Please see our [Contributing Guide](https://docs.ultralytics.com/help/contributing/) to get started, and fill out our [Survey](https://www.ultralytics.com/survey?utm_source=github&utm_medium=social&utm_campaign=Survey) to send us feedback on your experience. Thank you \ud83d\ude4f to all our contributors!\n\n<!-- SVG image from https://opencollective.com/ultralytics/contributors.svg?width=990 -->\n\n<a href=\"https://github.com/ultralytics/ultralytics/graphs/contributors\">\n<img width=\"100%\" src=\"https://github.com/ultralytics/assets/raw/main/im/image-contributors.png\" alt=\"Ultralytics open-source contributors\"></a>\n\n## <div align=\"center\">License</div>\n\nUltralytics offers two licensing options to accommodate diverse use cases:\n\n- **AGPL-3.0 License**: This [OSI-approved](https://opensource.org/license) open-source license is ideal for students and enthusiasts, promoting open collaboration and knowledge sharing. See the [LICENSE](https://github.com/ultralytics/ultralytics/blob/main/LICENSE) file for more details.\n- **Enterprise License**: Designed for commercial use, this license permits seamless integration of Ultralytics software and AI models into commercial goods and services, bypassing the open-source requirements of AGPL-3.0. If your scenario involves embedding our solutions into a commercial offering, reach out through [Ultralytics Licensing](https://www.ultralytics.com/license).\n\n## <div align=\"center\">Contact</div>\n\nFor Ultralytics bug reports and feature requests please visit [GitHub Issues](https://github.com/ultralytics/ultralytics/issues). Become a member of the Ultralytics [Discord](https://discord.com/invite/ultralytics), [Reddit](https://www.reddit.com/r/ultralytics/), or [Forums](https://community.ultralytics.com/) for asking questions, sharing projects, learning discussions, or for help with all things Ultralytics!\n\n<br>\n<div align=\"center\">\n  <a href=\"https://github.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-github.png\" width=\"3%\" alt=\"Ultralytics GitHub\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://www.linkedin.com/company/ultralytics/\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-linkedin.png\" width=\"3%\" alt=\"Ultralytics LinkedIn\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://twitter.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-twitter.png\" width=\"3%\" alt=\"Ultralytics Twitter\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://youtube.com/ultralytics?sub_confirmation=1\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-youtube.png\" width=\"3%\" alt=\"Ultralytics YouTube\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://www.tiktok.com/@ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-tiktok.png\" width=\"3%\" alt=\"Ultralytics TikTok\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://ultralytics.com/bilibili\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-bilibili.png\" width=\"3%\" alt=\"Ultralytics BiliBili\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://discord.com/invite/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-discord.png\" width=\"3%\" alt=\"Ultralytics Discord\"></a>\n</div>\n",
        "releases": [
            {
                "name": "v8.3.65 - `ultralytics 8.3.65` Rockchip RKNN Integration for Ultralytics YOLO models (#16308)",
                "date": "2025-01-21T01:26:33Z"
            },
            {
                "name": "v8.3.64 - `ultralytics 8.3.64` new `torchvision.ops` access in model YAMLs (#18680)",
                "date": "2025-01-19T22:45:42Z"
            },
            {
                "name": "v8.3.63 - `ultralytics 8.3.63` IMX500 sudo install fix (#18714)",
                "date": "2025-01-17T11:49:33Z"
            },
            {
                "name": "v8.3.62 - `ultralytics 8.3.62` Fix non-deterministic transforms with `albumentations>=1.4.21` (#18701)",
                "date": "2025-01-16T10:19:02Z"
            },
            {
                "name": "v8.3.61 - `ultralytics 8.3.61` Restore Python 3.8 compatibility (#18666)",
                "date": "2025-01-13T20:14:06Z"
            },
            {
                "name": "v8.3.60 - `ultralytics 8.3.60` Fix CoreML Segment inference (#18649)",
                "date": "2025-01-13T12:16:25Z"
            },
            {
                "name": "v8.3.59 - `ultralytics 8.3.59` Add ability to load any `torchvision` model as module (#18564)",
                "date": "2025-01-09T12:58:41Z"
            },
            {
                "name": "v8.3.58 - `ultralytics 8.3.58` Use `uint8` type for TensorRT Profile (#18327)",
                "date": "2025-01-05T16:37:09Z"
            },
            {
                "name": "v8.3.57 - `ultralytics 8.3.57` Support `is_jetson()` and `is_raspberrypi()` in Docker images (#18449)",
                "date": "2025-01-02T20:35:14Z"
            },
            {
                "name": "v8.3.56 - `ultralytics 8.3.56` PaddlePaddle GPU Inference support (#18468)",
                "date": "2024-12-31T12:58:46Z"
            },
            {
                "name": "v8.3.55 - `ultralytics 8.3.55` New Medical-pills dataset (#18389)",
                "date": "2024-12-26T13:25:48Z"
            },
            {
                "name": "v8.3.54 - `ultralytics 8.3.54` New Streamlit inference Solution (#18316)",
                "date": "2024-12-24T11:27:42Z"
            },
            {
                "name": "v8.3.53 - `ultralytics 8.3.53` New Export argument validation (#18185)",
                "date": "2024-12-22T01:03:32Z"
            },
            {
                "name": "v8.3.52 - `ultralytics 8.3.52` AutoBatch CUDA computation improvements (#18291)",
                "date": "2024-12-20T12:52:05Z"
            },
            {
                "name": "v8.3.51 - `ultralytics 8.3.51` AutoBach logspace fit and checks (#18283)",
                "date": "2024-12-17T19:07:12Z"
            },
            {
                "name": "v8.3.50 - `ultralytics 8.3.50` Enhanced segment resample (#18171)",
                "date": "2024-12-16T11:22:35Z"
            },
            {
                "name": "v8.3.49 - `ultralytics 8.3.49` Docker images `uv pip install` (#18115)",
                "date": "2024-12-10T17:30:31Z"
            },
            {
                "name": "v8.3.48 - `ultralytics 8.3.48` split PyPI publish jobs for security (#18111)",
                "date": "2024-12-08T17:49:56Z"
            },
            {
                "name": "v8.3.47 - `ultralytics 8.3.47` fix softmax and Classify head commonality",
                "date": "2024-12-07T12:59:05Z"
            },
            {
                "name": "v8.3.44 - `ultralytics 8.3.44` improve Triton Inference Server metadata (#17921)",
                "date": "2024-12-06T12:11:33Z"
            },
            {
                "name": "v8.3.43 - PyPI publishing security fix",
                "date": "2024-12-05T19:49:54Z"
            },
            {
                "name": "v8.3.40 - `ultralytics 8.3.40` new `TrackZone` Solution (#17918)",
                "date": "2024-12-02T15:03:57Z"
            },
            {
                "name": "v8.3.39 - `ultralytics 8.3.39` fix classification validation loss scaling (#17851)",
                "date": "2024-11-28T22:09:40Z"
            },
            {
                "name": "v8.3.38 - `ultralytics 8.3.38` SAM 2 video inference (#14851)",
                "date": "2024-11-26T11:39:53Z"
            },
            {
                "name": "v8.3.37 - `ultralytics 8.3.37` TensorRT auto-workspace size (#17748)",
                "date": "2024-11-25T10:34:26Z"
            },
            {
                "name": "v8.3.36 - `ultralytics 8.3.36` unpin OpenVINO ARM install version (#16600)",
                "date": "2024-11-22T11:26:55Z"
            },
            {
                "name": "v8.3.35 - `ultralytics 8.3.35` enable `auto` letterbox if model is `dynamic` (#17687)",
                "date": "2024-11-21T12:03:58Z"
            },
            {
                "name": "v8.3.34 - `ultralytics 8.3.34` FastSAM non-detection fix (#17628)",
                "date": "2024-11-19T11:47:08Z"
            },
            {
                "name": "v8.3.33 - `ultralytics 8.3.33` Solutions counter direction fix (#17607)",
                "date": "2024-11-18T16:52:44Z"
            },
            {
                "name": "v8.3.32 - `ultralytics 8.3.32` New Dog-Pose dataset (#17556)",
                "date": "2024-11-16T19:13:21Z"
            },
            {
                "name": "v8.3.31 - `ultralytics 8.3.31` add `max_num_obj` factor for `AutoBatch` (#17514)",
                "date": "2024-11-13T22:52:29Z"
            },
            {
                "name": "v8.3.30 - `ultralytics 8.3.30` run TAL on CPU if `torch.OutOfMemoryError` (#17515)",
                "date": "2024-11-13T20:28:47Z"
            },
            {
                "name": "v8.3.29 - `ultralytics 8.3.29` Sony IMX500 export (#14878)",
                "date": "2024-11-11T13:22:00Z"
            },
            {
                "name": "v8.3.28 - `ultralytics 8.3.28` new Solutions CLI commands (#17233)",
                "date": "2024-11-06T23:45:19Z"
            },
            {
                "name": "v8.3.27 - `ultralytics 8.3.27` HUB timed training fix (#17298)",
                "date": "2024-11-01T00:44:27Z"
            },
            {
                "name": "v8.3.26 - `ultralytics 8.3.26` EdgeTPU Pose models fix (#17281)",
                "date": "2024-10-31T12:38:05Z"
            },
            {
                "name": "v8.3.25 - `ultralytics 8.3.25` Alibaba MNN export and predict support (#16802)",
                "date": "2024-10-30T13:01:31Z"
            },
            {
                "name": "v8.3.24 - `ultralytics 8.3.24` SAM fix `pred_boxes` when no objects segmented (#17215)",
                "date": "2024-10-28T22:07:27Z"
            },
            {
                "name": "v8.3.23 - `ultralytics 8.3.23` fix `bbox2segment` when no segments generated (#17157)",
                "date": "2024-10-25T13:59:35Z"
            },
            {
                "name": "v8.3.22 - `ultralytics 8.3.22` SAM2.1 integration (#17131)",
                "date": "2024-10-25T00:19:12Z"
            },
            {
                "name": "v8.3.21 - `ultralytics 8.3.21` NVIDIA DLA export support (#16449)",
                "date": "2024-10-23T17:01:56Z"
            },
            {
                "name": "v8.3.20 - `ultralytics 8.3.20` W&B `plots=False` logging fix (#17088)",
                "date": "2024-10-22T16:31:40Z"
            },
            {
                "name": "v8.3.19 - `ultralytics 8.3.19` TensorRT 10.5.0 support (#17076)",
                "date": "2024-10-21T23:36:06Z"
            },
            {
                "name": "v8.3.18 - Ultralytics Refactor https://ultralytics.com/actions (#17031)",
                "date": "2024-10-19T16:22:13Z"
            },
            {
                "name": "v8.3.17 - `ultralytics 8.3.17` accept spaces in CLI args (#16641)",
                "date": "2024-10-18T18:57:17Z"
            },
            {
                "name": "v8.3.16 - `ultralytics 8.3.16` PyTorch 2.5.0 support (#16998)",
                "date": "2024-10-18T11:56:24Z"
            },
            {
                "name": "v8.3.15 - `ultralytics 8.3.15` new TPU device-selection ability (#16576)",
                "date": "2024-10-17T00:58:39Z"
            },
            {
                "name": "v8.3.14 - `ultralytics 8.3.14` update TensorRT `dynamic` inference (#16953)",
                "date": "2024-10-16T12:26:11Z"
            },
            {
                "name": "v8.3.13 - `ultralytics 8.3.13` SAM prompt-inference refactor (#16894)",
                "date": "2024-10-14T15:50:21Z"
            },
            {
                "name": "v8.3.12 - `ultralytics 8.3.12` SAM and SAM2 multi-point prompts (#16643)",
                "date": "2024-10-13T15:22:03Z"
            },
            {
                "name": "v8.3.11 - `ultralytics 8.3.11` suppress `onnx2tf` INT8-FP16 act error (#16874)",
                "date": "2024-10-12T18:14:42Z"
            },
            {
                "name": "v8.3.10 - `ultralytics 8.3.10` Apple iPhone HEIC support (#16853)",
                "date": "2024-10-11T18:37:26Z"
            },
            {
                "name": "v8.3.9 - `ultralytics 8.3.9` add training `time` to results CSV (#16803)",
                "date": "2024-10-09T14:21:23Z"
            },
            {
                "name": "v8.3.8 - `ultralytics 8.3.8` replace `contextlib` with `try` for speed (#16782)",
                "date": "2024-10-08T19:04:12Z"
            },
            {
                "name": "v8.3.7 - `ultralytics 8.3.7` custom Predictor args fix (#16734)",
                "date": "2024-10-07T18:27:26Z"
            },
            {
                "name": "v8.3.6 - `ultralytics 8.3.6` improve `collect_system_info` (#16722)",
                "date": "2024-10-06T18:37:53Z"
            },
            {
                "name": "v8.3.5 - `ultralytics 8.3.5` add `cache=disk` space and writable checks (#16696)",
                "date": "2024-10-04T23:28:43Z"
            },
            {
                "name": "v8.3.4 - `ultralytics 8.3.4` unpin `numpy<2.0.0` (#16655)",
                "date": "2024-10-03T12:26:52Z"
            },
            {
                "name": "v8.3.3 - `ultralytics 8.3.3` update Streamlit app to YOLO11 (#16590)",
                "date": "2024-10-01T22:18:28Z"
            },
            {
                "name": "v8.3.2 - `ultralytics 8.3.2` fix AMP checks with `imgsz=256` (#16583)",
                "date": "2024-10-01T09:54:00Z"
            },
            {
                "name": "v8.3.1 - `ultralytics 8.3.1` update AMP checks for YOLO11n (#16560)",
                "date": "2024-09-30T14:43:55Z"
            },
            {
                "name": "v8.3.0 - New YOLO11 Models Release (#16539)",
                "date": "2024-09-30T01:00:15Z"
            },
            {
                "name": "v8.2.103 - `ultralytics 8.2.103` Windows Benchmarks CI (#16523)",
                "date": "2024-09-28T18:32:16Z"
            },
            {
                "name": "v8.2.102 - `ultralytics 8.2.102` new Hand-Keypoints Pose Estimation Dataset (#16489)",
                "date": "2024-09-27T00:43:04Z"
            },
            {
                "name": "v8.2.101 - `ultralytics 8.2.101` allow HUB public model downloads (#16488)",
                "date": "2024-09-25T13:18:23Z"
            },
            {
                "name": "v8.2.100 - `ultralytics 8.2.100` new YOLOv8-OBB object counting (#16437)",
                "date": "2024-09-23T22:41:03Z"
            },
            {
                "name": "v8.2.99 - `ultralytics 8.2.99` faster `JSONDict` settings (#16427)",
                "date": "2024-09-22T20:39:25Z"
            },
            {
                "name": "v8.2.98 - `ultralytics 8.2.98` faster `fuse()` operations (#16375)",
                "date": "2024-09-19T19:23:45Z"
            },
            {
                "name": "v8.2.97 - `ultralytics 8.2.97` robust HUB model downloads (#16347)",
                "date": "2024-09-18T23:20:11Z"
            },
            {
                "name": "v8.2.96 - `ultralytics 8.2.96` new `results[0].to_df` Pandas, XML and CSV methods (#16267)",
                "date": "2024-09-18T09:54:43Z"
            },
            {
                "name": "v8.2.95 - `ultralytics 8.2.95` faster checkpoint saving (#16311)",
                "date": "2024-09-16T19:38:06Z"
            },
            {
                "name": "v8.2.94 - `ultralytics 8.2.94` Apple MPS train memory display (#16272)",
                "date": "2024-09-15T17:35:45Z"
            },
            {
                "name": "v8.2.93 - `ultralytics 8.2.93` new SafeClass and SafeUnpickler classes (#16269)",
                "date": "2024-09-13T17:57:41Z"
            },
            {
                "name": "v8.2.92 - `ultralytics 8.2.92` vertical `line` counter fix (#16163)",
                "date": "2024-09-11T17:41:13Z"
            },
            {
                "name": "v8.2.91 - `ultralytics 8.2.91` fix `v10DetectLoss` module rename for YOLOv10 (#16148)",
                "date": "2024-09-09T21:53:27Z"
            },
            {
                "name": "v8.2.90 - `ultralytics 8.2.90` Apple MPS unified memory clearing (#16085)",
                "date": "2024-09-07T18:07:52Z"
            },
            {
                "name": "v8.2.89 - `ultralytics 8.2.89` Increased `line_counter` Solutions accuracy (#16033)",
                "date": "2024-09-06T15:35:15Z"
            },
            {
                "name": "v8.2.88 - `ultralytics 8.2.88` Update `distance-calculation` to pixels (#15984)",
                "date": "2024-09-05T21:01:39Z"
            },
            {
                "name": "v8.2.87 - `ultralytics 8.2.87` Ray `shutdown()` workers after tuning (#15976)",
                "date": "2024-09-03T10:44:18Z"
            },
            {
                "name": "v8.2.86 - `ultralytics 8.2.86` Windows `torch==2.4.0` patch (#15942)",
                "date": "2024-09-01T19:37:31Z"
            },
            {
                "name": "v8.2.85 - `ultralytics 8.2.85` YOLOv10 `max_det` arg fix (#15917)",
                "date": "2024-09-01T00:04:56Z"
            },
            {
                "name": "v8.2.84 - `ultralytics 8.2.84` new SAM flexible `imgsz` inference (#15882)",
                "date": "2024-08-30T12:59:50Z"
            },
            {
                "name": "v8.2.83 - `ultralytics 8.2.83` fix SAM2 CLI usage (#15871)",
                "date": "2024-08-28T21:12:23Z"
            },
            {
                "name": "v8.2.82 - `ultralytics 8.2.82` YOLOv10 CoreML, Edge TPU and TF.js export support (#15796)",
                "date": "2024-08-25T15:44:05Z"
            },
            {
                "name": "v8.2.81 - `ultralytics 8.2.81` fix HUB missing 'best.pt' resumed checkpoint upload (#15754)",
                "date": "2024-08-23T03:51:18Z"
            },
            {
                "name": "v8.2.80 - `ultralytics 8.2.80` add PIL type hints to `model()`  (#15719)",
                "date": "2024-08-22T12:09:11Z"
            },
            {
                "name": "v8.2.79 - `ultralytics 8.2.79` YOLOv10 CoreML and MPS training \"gather\" op error fix (#15672)",
                "date": "2024-08-19T08:55:35Z"
            },
            {
                "name": "v8.2.78 - `ultralytics 8.2.78` fix DDP training with pretrained weights (#15616)",
                "date": "2024-08-15T20:06:33Z"
            },
            {
                "name": "v8.2.77 - `ultralytics 8.2.77` new `color_mode=instance` plot arg (#15034)",
                "date": "2024-08-13T16:47:37Z"
            },
            {
                "name": "v8.2.76 - `ultralytics 8.2.76` Autobackend TensorRT/Triton Segment metadata fix (#15185)",
                "date": "2024-08-11T18:46:39Z"
            },
            {
                "name": "v8.2.75 - `ultralytics 8.2.75` new Docs author profiles (#15050)",
                "date": "2024-08-09T00:26:12Z"
            },
            {
                "name": "v8.2.74 - `ultralytics 8.2.74` add `fuse_score=True` BoT-SORT and ByteTrack arg (#14965)",
                "date": "2024-08-06T09:31:17Z"
            },
            {
                "name": "v8.2.73 - `ultralytics 8.2.73` Meta SAM2 Refactor  (#14867)",
                "date": "2024-08-05T00:55:46Z"
            },
            {
                "name": "v8.2.72 - `ultralytics 8.2.72` SAM 2 multiple-`bboxes` support (#14928)",
                "date": "2024-08-03T18:31:55Z"
            },
            {
                "name": "v8.2.71 - `ultralytics 8.2.71` Multinode DDP training (#14879)",
                "date": "2024-08-01T15:32:56Z"
            },
            {
                "name": "v8.2.70 - `ultralytics 8.2.70` Segment Anything Model 2 (SAM 2) (#14813)",
                "date": "2024-07-30T14:09:01Z"
            },
            {
                "name": "v8.2.69 - `ultralytics 8.2.69` FastSAM prompt inference refactor (#14724)",
                "date": "2024-07-29T23:19:05Z"
            },
            {
                "name": "v8.2.68 - `ultralytics 8.2.68` new HUB GCP region latency tests (#14753)",
                "date": "2024-07-28T16:17:40Z"
            },
            {
                "name": "v8.2.67 - `ultralytics 8.2.67` new NVIDIA Jetson Orin Jetpack 6 Docker image (#14740)",
                "date": "2024-07-27T15:12:47Z"
            },
            {
                "name": "v8.2.66 - `ultralytics 8.2.66` HUB model autodownload (#14702)",
                "date": "2024-07-25T22:33:11Z"
            },
            {
                "name": "v8.2.65 - `ultralytics 8.2.65` fix YouTube throttling bug (#14684)",
                "date": "2024-07-25T11:39:50Z"
            },
            {
                "name": "v8.2.64 - `ultralytics 8.2.64` YOLOv10 SavedModel, TFlite, and GraphDef export (#14572)",
                "date": "2024-07-23T22:39:00Z"
            },
            {
                "name": "v8.2.63 - `ultralytics 8.2.63` refactor `FastSAMPredictor` (#14582)",
                "date": "2024-07-22T18:01:52Z"
            },
            {
                "name": "v8.2.62 - `ultralytics 8.2.62` add Explorer CLI `model` and `data` args (#14581)",
                "date": "2024-07-22T01:31:30Z"
            },
            {
                "name": "v8.2.61 - `ultralytics 8.2.61` fix `num_threads` for CPU training (#14544)",
                "date": "2024-07-20T18:15:32Z"
            },
            {
                "name": "v8.2.60 - `ultralytics 8.2.60` refactor `process_mask_upsample` (#14474)",
                "date": "2024-07-18T17:27:15Z"
            },
            {
                "name": "v8.2.59 - `ultralytics 8.2.59` use `Results.save_txt` for validation (#14496)",
                "date": "2024-07-17T22:19:13Z"
            },
            {
                "name": "v8.2.58 - `ultralytics 8.2.58` FastSAM code refactor (#14450)",
                "date": "2024-07-15T23:26:01Z"
            },
            {
                "name": "v8.2.57 - `ultralytics 8.2.57` new Solutions Tests and Docs (#14408)",
                "date": "2024-07-14T18:01:56Z"
            },
            {
                "name": "v8.2.56 - `ultralytics 8.2.56` Streamlit tracking app (#14269)",
                "date": "2024-07-13T22:35:52Z"
            },
            {
                "name": "v8.2.55 - `ultralytics 8.2.55` adaptive `tflite_support` logic (#14385)",
                "date": "2024-07-12T12:06:51Z"
            },
            {
                "name": "v8.2.54 - `ultralytics 8.2.54` resolve YouTube bug with switch to `pytubefix` (#14354)",
                "date": "2024-07-11T07:34:17Z"
            },
            {
                "name": "v8.2.53 - `ultralytics 8.2.53` Heatmaps fix for empty images (#14329)",
                "date": "2024-07-10T21:40:06Z"
            },
            {
                "name": "v8.2.52 - `ultralytics 8.2.52` fix CenterCrop transforms for PIL Image inputs (#14308)",
                "date": "2024-07-10T01:01:56Z"
            },
            {
                "name": "v8.2.51 - `ultralytics 8.2.51` update YOLOv9 `GITHUB_ASSETS_NAMES` (#14261)",
                "date": "2024-07-08T08:33:08Z"
            },
            {
                "name": "v8.2.50 - `ultralytics 8.2.50` new Streamlit live inference Solution (#14210)",
                "date": "2024-07-05T20:04:24Z"
            },
            {
                "name": "v8.2.49 - `ultralytics 8.2.49` fix classification `setup_model` (#14199)",
                "date": "2024-07-04T16:59:46Z"
            },
            {
                "name": "v8.2.48 - `ultralytics 8.2.48` strip model `criterion` on save (#14106)",
                "date": "2024-06-29T19:52:32Z"
            },
            {
                "name": "v8.2.47 - `ultralytics 8.2.47` YOLOv8 zero-shot action recognition example (#13935)",
                "date": "2024-06-29T18:22:49Z"
            },
            {
                "name": "v8.2.46 - `ultralytics 8.2.46` fix OBB Results `xyxy` attribute (#14020)",
                "date": "2024-06-28T16:29:53Z"
            },
            {
                "name": "v8.2.45 - `ultralytics 8.2.45` Fix YOLOv8 `augment` inference (#14017)",
                "date": "2024-06-26T16:30:18Z"
            },
            {
                "name": "v8.2.44 - `ultralytics 8.2.44` Increase Predict dataloader robustness (#14005)",
                "date": "2024-06-26T14:44:38Z"
            },
            {
                "name": "v8.2.43 - `ultralytics 8.2.43` enable `classes` filter for end2end models (#13971)",
                "date": "2024-06-25T21:05:03Z"
            },
            {
                "name": "v8.2.42 - `ultralytics 8.2.42` NVIDIA TensorRT 10 default (#13943)",
                "date": "2024-06-24T19:06:42Z"
            },
            {
                "name": "v8.2.41 - `ultralytics 8.2.41` fix HUB unzip subdirectory bug (#13913)",
                "date": "2024-06-23T19:17:31Z"
            },
            {
                "name": "v8.2.40 - `ultralytics 8.2.40` refactor HUB code into callbacks (#13896)",
                "date": "2024-06-23T12:53:48Z"
            },
            {
                "name": "v8.2.39 - `ultralytics 8.2.39` update `onnxslim>=0.1.31` (#13883)",
                "date": "2024-06-22T11:42:51Z"
            },
            {
                "name": "v8.2.38 - `ultralytics 8.2.38` official YOLOv10 support (#13113)",
                "date": "2024-06-20T18:33:31Z"
            },
            {
                "name": "v8.2.37 - `ultralytics 8.2.37` update `temporary_modules` and Remove YOLOv9e `Silence` module (#13819)",
                "date": "2024-06-20T17:57:51Z"
            },
            {
                "name": "v8.2.36 - `ultralytics 8.2.36` update Ultralytics color palette (#13808)",
                "date": "2024-06-19T22:06:55Z"
            },
            {
                "name": "v8.2.35 - `ultralytics 8.2.35` add YOLOv9t/s/m models (#13504)",
                "date": "2024-06-17T16:55:24Z"
            },
            {
                "name": "v8.2.34 - `ultralytics 8.2.34` bump `ultralytics-thop>=2.0.0` (#13662)",
                "date": "2024-06-16T21:29:24Z"
            },
            {
                "name": "v8.2.33 - `ultralytics 8.2.33` pin `numpy<2.0.0` for compatibility (#13661)",
                "date": "2024-06-16T19:40:03Z"
            },
            {
                "name": "v8.2.32 - `ultralytics 8.2.32` Apple MPS device Autobatch handling (#13568)",
                "date": "2024-06-14T00:09:38Z"
            },
            {
                "name": "v8.2.31 - `ultralytics 8.2.31` NVIDIA Jetpack4 and Jetpack5 Dockerfile Images (#13496)",
                "date": "2024-06-11T01:05:58Z"
            },
            {
                "name": "v8.2.30 - Update publish.yml (#13464)",
                "date": "2024-06-10T01:14:44Z"
            },
            {
                "name": "v8.2.0 - YOLOv8-World and YOLOv9-C/E Models",
                "date": "2024-06-09T23:36:20Z"
            },
            {
                "name": "v8.1.0 - YOLOv8 Oriented Bounding Boxes (OBB)",
                "date": "2024-01-10T09:58:53Z"
            },
            {
                "name": "v8.0.4 - Initial Release",
                "date": "2024-07-11T19:44:07Z"
            }
        ]
    }
}