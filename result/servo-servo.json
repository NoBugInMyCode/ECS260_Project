{
    "https://api.github.com/repos/servo/servo": {
        "forks": 3065,
        "watchers": 28994,
        "stars": 28994,
        "languages": {
            "Rust": 13472128,
            "HTML": 9019925,
            "Python": 1021181,
            "WebIDL": 565546,
            "JavaScript": 83370,
            "PostScript": 43376,
            "CSS": 43054,
            "Java": 40440,
            "Shell": 9779,
            "TypeScript": 9269,
            "Nix": 6987,
            "Mako": 4665,
            "Kotlin": 3600,
            "C": 1847,
            "Makefile": 979,
            "IDL": 356,
            "CMake": 277,
            "Common Lisp": 86,
            "Batchfile": 60,
            "Ruby": 31,
            "RenderScript": 29
        },
        "commits": [
            "2025-01-22T05:46:15Z",
            "2025-01-22T03:33:13Z",
            "2025-01-21T22:06:50Z",
            "2025-01-21T17:37:46Z",
            "2025-01-21T17:33:59Z",
            "2025-01-21T17:28:14Z",
            "2025-01-21T15:14:17Z",
            "2025-01-21T14:34:05Z",
            "2025-01-21T13:29:55Z",
            "2025-01-21T13:10:27Z",
            "2025-01-21T02:21:16Z",
            "2025-01-21T00:11:36Z",
            "2025-01-21T00:03:47Z",
            "2025-01-20T22:45:47Z",
            "2025-01-20T17:18:20Z",
            "2025-01-20T17:02:55Z",
            "2025-01-20T16:59:55Z",
            "2025-01-20T16:59:07Z",
            "2025-01-20T16:57:41Z",
            "2025-01-20T16:53:52Z",
            "2025-01-20T16:53:38Z",
            "2025-01-20T16:53:16Z",
            "2025-01-20T16:52:18Z",
            "2025-01-20T13:25:00Z",
            "2025-01-20T13:07:54Z",
            "2025-01-20T09:41:23Z",
            "2025-01-19T23:06:28Z",
            "2025-01-19T14:05:05Z",
            "2025-01-19T07:55:26Z",
            "2025-01-19T04:39:31Z"
        ],
        "creation_date": "2012-02-08T19:07:25Z",
        "contributors": 30,
        "topics": [
            "browser",
            "rust",
            "servo",
            "webengine"
        ],
        "subscribers": 510,
        "readme": "# The Servo Parallel Browser Engine Project\n\nServo is a prototype web browser engine written in the\n[Rust](https://github.com/rust-lang/rust) language. It is currently developed on\n64-bit macOS, 64-bit Linux, 64-bit Windows, 64-bit OpenHarmony, and Android.\n\nServo welcomes contribution from everyone. Check out [The Servo Book](https://book.servo.org) to get started, or go to [servo.org](https://servo.org/) for news and guides.\n\n## Getting started\n\nFor more detailed build instructions, see the Servo book under [Setting up your environment], [Building Servo], [Building for Android] and [Building for OpenHarmony].\n\n[Setting up your environment]: https://book.servo.org/hacking/setting-up-your-environment.html\n[Building Servo]: https://book.servo.org/hacking/building-servo.html\n[Building for Android]: https://book.servo.org/hacking/building-for-android.html\n[Building for OpenHarmony]: https://book.servo.org/hacking/building-for-openharmony.html\n\n### macOS\n\n- Download and install [Xcode](https://developer.apple.com/xcode/) and [`brew`](https://brew.sh/).\n- Install `uv`: `curl -LsSf https://astral.sh/uv/install.sh | sh` \n- Install `rustup`: `curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh`\n- Restart your shell to make sure `cargo` is available\n- Install the other dependencies: `./mach bootstrap`\n- Build servoshell: `./mach build`\n\n### Linux\n\n- Install `curl`:\n  - Arch: `sudo pacman -S --needed curl`\n  - Debian, Ubuntu: `sudo apt install curl`\n  - Fedora: `sudo dnf install curl`\n  - Gentoo: `sudo emerge net-misc/curl`\n- Install `uv`: `curl -LsSf https://astral.sh/uv/install.sh | sh` \n- Install `rustup`: `curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh`\n- Restart your shell to make sure `cargo` is available\n- Install the other dependencies: `./mach bootstrap`\n- Build servoshell: `./mach build`\n\n### Windows\n\n- Download [`uv`](https://docs.astral.sh/uv/getting-started/installation/#standalone-installer), [`choco`](https://chocolatey.org/install#individual), and [`rustup`](https://win.rustup.rs/)\n  - Be sure to select *Quick install via the Visual Studio Community installer*\n- In the Visual Studio Installer, ensure the following components are installed:\n  - **Windows 10 SDK (10.0.19041.0)** (`Microsoft.VisualStudio.Component.Windows10SDK.19041`)\n  - **MSVC v143 - VS 2022 C++ x64/x86 build tools (Latest)** (`Microsoft.VisualStudio.Component.VC.Tools.x86.x64`)\n  - **C++ ATL for latest v143 build tools (x86 & x64)** (`Microsoft.VisualStudio.Component.VC.ATL`)\n  - **C++ MFC for latest v143 build tools (x86 & x64)** (`Microsoft.VisualStudio.Component.VC.ATLMFC`)\n- Restart your shell to make sure `cargo` is available\n- Install the other dependencies: `.\\mach bootstrap`\n- Build servoshell: `.\\mach build`\n\n### Android\n\n- Ensure that the following environment variables are set:\n  - `ANDROID_SDK_ROOT`\n  - `ANDROID_NDK_ROOT`: `$ANDROID_SDK_ROOT/ndk/26.2.11394342/`\n `ANDROID_SDK_ROOT` can be any directory (such as `~/android-sdk`).\n  All of the Android build dependencies will be installed there.\n- Install the latest version of the [Android command-line\n  tools](https://developer.android.com/studio#command-tools) to\n  `$ANDROID_SDK_ROOT/cmdline-tools/latest`.\n- Run the following command to install the necessary components:\n  ```shell\n  sudo $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --install \\\n   \"build-tools;34.0.0\" \\\n   \"emulator\" \\\n   \"ndk;26.2.11394342\" \\\n   \"platform-tools\" \\\n   \"platforms;android-33\" \\\n   \"system-images;android-33;google_apis;x86_64\"\n  ```\n- Follow the instructions above for the platform you are building on\n\n### OpenHarmony\n\n- Follow the instructions above for the platform you are building on to prepare the environment.\n- Depending on the target distribution (e.g. `HarmonyOS NEXT` vs pure `OpenHarmony`) the build configuration will differ slightly.\n- Ensure that the following environment variables are set\n  - `DEVECO_SDK_HOME` (Required when targeting `HarmonyOS NEXT`)\n  - `OHOS_BASE_SDK_HOME` (Required when targeting `OpenHarmony`)\n  - `OHOS_SDK_NATIVE` (e.g. `${DEVECO_SDK_HOME}/default/openharmony/native` or `${OHOS_BASE_SDK_HOME}/${API_VERSION}/native`)\n  - `SERVO_OHOS_SIGNING_CONFIG`: Path to json file containing a valid signing configuration for the demo app.\n- Review the detailed instructions at [Building for OpenHarmony].\n- The target distribution can be modified by passing `--flavor=<default|harmonyos>` to `mach <build|package|install>.\n",
        "releases": []
    }
}