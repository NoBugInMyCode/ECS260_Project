{
    "https://api.github.com/repos/tbruyelle/RxPermissions": {
        "forks": 1309,
        "watchers": 10477,
        "stars": 10477,
        "languages": {
            "Java": 47701
        },
        "commits": [
            "2021-07-27T22:20:06Z",
            "2020-07-12T12:40:51Z",
            "2020-07-12T12:37:35Z",
            "2020-07-09T08:23:48Z",
            "2020-07-09T07:04:15Z",
            "2020-03-05T09:48:15Z",
            "2018-11-19T08:58:32Z",
            "2018-07-17T21:19:16Z",
            "2018-07-10T21:14:41Z",
            "2018-07-06T20:15:31Z",
            "2018-07-06T19:32:41Z",
            "2018-07-06T17:13:01Z",
            "2018-07-06T08:26:31Z",
            "2018-06-28T14:31:33Z",
            "2018-06-27T23:18:47Z",
            "2018-01-23T11:43:43Z",
            "2018-01-23T11:37:30Z",
            "2018-01-09T08:22:41Z",
            "2018-01-09T08:22:31Z",
            "2018-01-09T08:09:07Z",
            "2017-11-08T13:04:56Z",
            "2017-09-14T11:41:40Z",
            "2017-09-14T11:40:59Z",
            "2017-05-03T17:03:18Z",
            "2017-04-25T20:14:29Z",
            "2017-04-18T15:22:52Z",
            "2017-04-18T15:22:52Z",
            "2017-04-18T15:20:34Z",
            "2017-04-18T15:20:34Z",
            "2017-03-04T21:08:27Z"
        ],
        "creation_date": "2015-09-29T13:55:09Z",
        "contributors": 22,
        "topics": [
            "android",
            "android-permissions",
            "rxjava"
        ],
        "subscribers": 208,
        "readme": "# RxPermissions\n\n[![](https://jitpack.io/v/tbruyelle/RxPermissions.svg)](https://jitpack.io/#tbruyelle/RxPermissions) [![BuildVersion](https://buildstats.info/nuget/RxPermissions)](https://www.nuget.org/packages/RxPermissions/) [![Build Status](https://api.travis-ci.org/tbruyelle/RxPermissions.svg?branch=master)](https://travis-ci.org/tbruyelle/RxPermissions)\n\nThis library allows the usage of RxJava with the new Android M permission model.\n\n## Setup\n\nTo use this library your `minSdkVersion` must be >= 14.\n\n```gradle\nallprojects {\n    repositories {\n        ...\n        maven { url 'https://jitpack.io' }\n    }\n}\n\ndependencies {\n    implementation 'com.github.tbruyelle:rxpermissions:0.12'\n}\n```\n\n## Usage\n\nCreate a `RxPermissions` instance :\n\n```java\nfinal RxPermissions rxPermissions = new RxPermissions(this); // where this is an Activity or Fragment instance\n```\n\n**NOTE:** `new RxPermissions(this)` the `this` parameter can be a FragmentActivity or a Fragment. If you are using `RxPermissions` inside of a fragment you should pass the fragment instance(`new RxPermissions(this)`) as constructor parameter rather than `new RxPermissions(fragment.getActivity())` or you could face a `java.lang.IllegalStateException: FragmentManager is already executing transactions`.  \n\nExample : request the CAMERA permission (with Retrolambda for brevity, but not required)\n\n```java\n// Must be done during an initialization phase like onCreate\nrxPermissions\n    .request(Manifest.permission.CAMERA)\n    .subscribe(granted -> {\n        if (granted) { // Always true pre-M\n           // I can control the camera now\n        } else {\n           // Oups permission denied\n        }\n    });\n```\n\nIf you need to trigger the permission request from a specific event, you need to setup your event\nas an observable inside an initialization phase.\n\nYou can use [JakeWharton/RxBinding](https://github.com/JakeWharton/RxBinding) to turn your view to\nan observable (not included in the library).\n\nExample :\n\n```java\n// Must be done during an initialization phase like onCreate\nRxView.clicks(findViewById(R.id.enableCamera))\n    .compose(rxPermissions.ensure(Manifest.permission.CAMERA))\n    .subscribe(granted -> {\n        // R.id.enableCamera has been clicked\n    });\n```\n\nIf multiple permissions at the same time, the result is combined :\n\n```java\nrxPermissions\n    .request(Manifest.permission.CAMERA,\n             Manifest.permission.READ_PHONE_STATE)\n    .subscribe(granted -> {\n        if (granted) {\n           // All requested permissions are granted\n        } else {\n           // At least one permission is denied\n        }\n    });\n```\n\nYou can also observe a detailed result with `requestEach` or `ensureEach` :\n\n```java\nrxPermissions\n    .requestEach(Manifest.permission.CAMERA,\n             Manifest.permission.READ_PHONE_STATE)\n    .subscribe(permission -> { // will emit 2 Permission objects\n        if (permission.granted) {\n           // `permission.name` is granted !\n        } else if (permission.shouldShowRequestPermissionRationale) {\n           // Denied permission without ask never again\n        } else {\n           // Denied permission with ask never again\n           // Need to go to the settings\n        }\n    });\n```\n\nYou can also get combined detailed result with `requestEachCombined` or `ensureEachCombined` :\n\n```java\nrxPermissions\n    .requestEachCombined(Manifest.permission.CAMERA,\n             Manifest.permission.READ_PHONE_STATE)\n    .subscribe(permission -> { // will emit 1 Permission object\n        if (permission.granted) {\n           // All permissions are granted !\n        } else if (permission.shouldShowRequestPermissionRationale)\n           // At least one denied permission without ask never again\n        } else {\n           // At least one denied permission with ask never again\n           // Need to go to the settings\n        }\n    });\n```\n\nLook at the `sample` app for more.\n\n## Important read\n\n**As mentioned above, because your app may be restarted during the permission request, the request\nmust be done during an initialization phase**. This may be `Activity.onCreate`, or\n`View.onFinishInflate`, but not *pausing* methods like `onResume`, because you'll potentially create an infinite request loop, as your requesting activity is paused by the framework during the permission request.\n\nIf not, and if your app is restarted during the permission request (because of a configuration\nchange for instance), the user's answer will never be emitted to the subscriber.\n\nYou can find more details about that [here](https://github.com/tbruyelle/RxPermissions/issues/69).\n\n## Status\n\nThis library is still beta, so contributions are welcome.\nI'm currently using it in production since months without issue.\n\n## Benefits\n\n- Avoid worrying about the framework version. If the sdk is pre-M, the observer will automatically\nreceive a granted result.\n\n- Prevents you to split your code between the permission request and the result handling.\nCurrently without this library you have to request the permission in one place and handle the result\nin `Activity.onRequestPermissionsResult()`.\n\n- All what RX provides about transformation, filter, chaining...\n\n# License\n\n```\nCopyright (C) 2015 Thomas Bruyelle\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
        "releases": [
            {
                "name": "v0.12",
                "date": "2020-07-12T12:40:01Z"
            },
            {
                "name": "v0.11",
                "date": "2020-07-09T08:21:16Z"
            },
            {
                "name": "V0.10.2",
                "date": "2018-07-10T21:15:23Z"
            },
            {
                "name": "V0.10.1",
                "date": "2018-07-06T19:33:56Z"
            },
            {
                "name": "V0.10.0",
                "date": "2018-07-06T17:13:49Z"
            },
            {
                "name": "0.5.0",
                "date": "2015-12-07T15:17:57Z"
            },
            {
                "name": "0.4.4",
                "date": "2015-12-01T14:13:40Z"
            },
            {
                "name": "0.4.3",
                "date": "2015-11-30T10:28:51Z"
            },
            {
                "name": "0.4.2",
                "date": "2015-11-02T15:11:19Z"
            },
            {
                "name": "0.3.0",
                "date": "2015-10-19T09:59:38Z"
            },
            {
                "name": "0.2.0",
                "date": "2015-10-02T15:03:58Z"
            }
        ]
    }
}