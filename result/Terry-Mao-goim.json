{
    "https://api.github.com/repos/Terry-Mao/goim": {
        "forks": 1793,
        "watchers": 7244,
        "stars": 7244,
        "languages": {
            "Go": 205171,
            "Shell": 5310,
            "Makefile": 923
        },
        "commits": [
            "2022-06-03T07:54:57Z",
            "2022-05-16T14:08:45Z",
            "2022-05-15T10:49:01Z",
            "2022-04-02T05:33:22Z",
            "2022-02-27T05:51:02Z",
            "2022-02-27T05:49:50Z",
            "2022-02-27T05:49:27Z",
            "2021-05-23T14:06:26Z",
            "2021-05-23T14:05:51Z",
            "2021-04-07T03:14:33Z",
            "2021-03-17T14:43:37Z",
            "2021-03-17T14:33:56Z",
            "2020-12-07T14:16:30Z",
            "2020-12-07T14:10:28Z",
            "2020-12-05T07:44:12Z",
            "2020-12-04T15:37:17Z",
            "2020-07-13T03:56:51Z",
            "2020-03-17T10:14:44Z",
            "2020-03-17T10:14:24Z",
            "2020-03-17T05:11:33Z",
            "2020-01-18T16:45:39Z",
            "2019-10-24T02:40:07Z",
            "2019-10-24T02:39:40Z",
            "2019-09-10T06:32:19Z",
            "2019-08-22T09:56:45Z",
            "2019-06-11T05:07:22Z",
            "2019-06-11T02:58:21Z",
            "2019-06-10T14:02:33Z",
            "2019-05-30T12:53:05Z",
            "2019-04-24T06:18:38Z"
        ],
        "creation_date": "2015-04-30T13:01:32Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 396,
        "readme": "goim v2.0\n==============\n\n[![Language](https://img.shields.io/badge/Language-Go-blue.svg)](https://golang.org/)\n[![Build Status](https://github.com/Terry-Mao/goim/workflows/Go/badge.svg)](https://github.com/Terry-Mao/goim/actions)\n[![GoDoc](https://godoc.org/github.com/go-kratos/kratos?status.svg)](https://pkg.go.dev/github.com/Terry-Mao/goim)\n[![Go Report Card](https://goreportcard.com/badge/github.com/Terry-Mao/goim)](https://goreportcard.com/report/github.com/Terry-Mao/goim)\n\ngoim is an im server writen in golang.\n\n## Features\n * Light weight\n * High performance\n * Pure Golang\n * Supports single push, multiple push and broadcasting\n * Supports one key to multiple subscribers (Configurable maximum subscribers count)\n * Supports heartbeats (Application heartbeats, TCP, KeepAlive, HTTP long pulling)\n * Supports authentication (Unauthenticated user can't subscribe)\n * Supports multiple protocols (WebSocket\uff0cTCP\uff0cHTTP\uff09\n * Scalable architecture (Unlimited dynamic job and logic modules)\n * Asynchronous push notification based on Kafka\n\n## Architecture\n![arch](./docs/arch.png)\n\n## Quick Start\n\n### Build\n```\n    make build\n```\n\n### Run\n```\n    make run\n    make stop\n\n    // or\n    nohup target/logic -conf=target/logic.toml -region=sh -zone=sh001 -deploy.env=dev -weight=10 2>&1 > target/logic.log &\n    nohup target/comet -conf=target/comet.toml -region=sh -zone=sh001 -deploy.env=dev -weight=10 -addrs=127.0.0.1 2>&1 > target/logic.log &\n    nohup target/job -conf=target/job.toml -region=sh -zone=sh001 -deploy.env=dev 2>&1 > target/logic.log &\n\n```\n### Environment\n```\n    env:\n    export REGION=sh\n    export ZONE=sh001\n    export DEPLOY_ENV=dev\n\n    supervisor:\n    environment=REGION=sh,ZONE=sh001,DEPLOY_ENV=dev\n\n    go flag:\n    -region=sh -zone=sh001 deploy.env=dev\n```\n### Configuration\nYou can view the comments in target/comet.toml,logic.toml,job.toml to understand the meaning of the config.\n\n### Dependencies\n[Discovery](https://github.com/bilibili/discovery)\n\n[Kafka](https://kafka.apache.org/quickstart)\n\n## Document\n[Protocol](./docs/protocol.png)\n\n[English](./README_en.md)\n\n[\u4e2d\u6587](./README_cn.md)\n\n## Examples\nWebsocket: [Websocket Client Demo](https://github.com/Terry-Mao/goim/tree/master/examples/javascript)\n\nAndroid: [Android](https://github.com/roamdy/goim-sdk)\n\niOS: [iOS](https://github.com/roamdy/goim-oc-sdk)\n\n## Benchmark\n![benchmark](./docs/benchmark.jpg)\n\n### Benchmark Server\n| CPU | Memory | OS | Instance |\n| :---- | :---- | :---- | :---- |\n| Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz  | DDR3 32GB | Debian GNU/Linux 8 | 1 |\n\n### Benchmark Case\n* Online: 1,000,000\n* Duration: 15min\n* Push Speed: 40/s (broadcast room)\n* Push Message: {\"test\":1}\n* Received calc mode: 1s per times, total 30 times\n\n### Benchmark Resource\n* CPU: 2000%~2300%\n* Memory: 14GB\n* GC Pause: 504ms\n* Network: Incoming(450MBit/s), Outgoing(4.39GBit/s)\n\n### Benchmark Result\n* Received: 35,900,000/s\n\n[\u4e2d\u6587](./docs/benchmark_cn.md)\n\n[English](./docs/benchmark_en.md)\n\n## LICENSE\ngoim is is distributed under the terms of the MIT License.\n",
        "releases": [
            {
                "name": "v2.0.0",
                "date": "2019-01-06T14:37:33Z"
            },
            {
                "name": "v1.2",
                "date": "2016-08-17T01:31:41Z"
            }
        ]
    }
}