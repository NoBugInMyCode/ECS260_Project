{
    "https://api.github.com/repos/openalpr/openalpr": {
        "forks": 2501,
        "watchers": 11095,
        "stars": 11095,
        "languages": {
            "C++": 2002191,
            "C": 376182,
            "Java": 95682,
            "C#": 30449,
            "CMake": 25917,
            "Python": 12808,
            "Objective-C": 7096,
            "Shell": 6082,
            "Go": 4174,
            "Makefile": 3057,
            "Dockerfile": 614
        },
        "commits": [
            "2020-07-30T20:47:33Z",
            "2020-07-22T12:31:38Z",
            "2020-04-08T14:08:23Z",
            "2020-04-06T10:31:47Z",
            "2020-03-11T07:52:25Z",
            "2018-09-18T13:51:18Z",
            "2018-09-18T13:51:04Z",
            "2018-09-18T13:45:07Z",
            "2018-09-18T13:44:49Z",
            "2018-09-18T13:41:31Z",
            "2018-09-04T19:29:25Z",
            "2018-06-15T14:02:56Z",
            "2018-06-15T14:02:32Z",
            "2018-06-15T14:01:55Z",
            "2018-06-14T07:18:47Z",
            "2018-06-15T09:06:56Z",
            "2018-06-13T16:15:37Z",
            "2018-06-12T21:42:10Z",
            "2018-06-12T21:41:06Z",
            "2018-05-01T19:55:46Z",
            "2018-05-01T19:55:26Z",
            "2018-05-01T16:29:02Z",
            "2018-05-01T16:24:20Z",
            "2018-05-01T16:21:43Z",
            "2018-05-01T16:19:32Z",
            "2018-04-16T06:34:47Z",
            "2018-02-01T14:45:37Z",
            "2018-02-01T09:31:14Z",
            "2018-01-30T14:35:59Z",
            "2018-01-30T13:53:15Z"
        ],
        "creation_date": "2013-11-09T15:26:01Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 525,
        "readme": "openalpr\n========\n\nOpenALPR is an open source *Automatic License Plate Recognition* library written in C++ with bindings in C#, Java, Node.js, Go, and Python.  The library analyzes images and video streams to identify license plates.  The output is the text representation of any license plate characters.\n\nCheck out a live online demo here: http://www.openalpr.com/demo-image.html\n\nUser Guide\n-----------\n\n\nOpenALPR includes a command line utility.  Simply typing \"alpr [image file path]\" is enough to get started recognizing license plate images.\n\nFor example, the following output is created by analyzing this image:\n![Plate Image](http://www.openalpr.com/images/demoscreenshots/plate3.png \"Input image\")\n\n\n\n```\nuser@linux:~/openalpr$ alpr ./samplecar.png\n\nplate0: top 10 results -- Processing Time = 58.1879ms.\n    - PE3R2X     confidence: 88.9371\n    - PE32X      confidence: 78.1385\n    - PE3R2      confidence: 77.5444\n    - PE3R2Y     confidence: 76.1448\n    - P63R2X     confidence: 72.9016\n    - FE3R2X     confidence: 72.1147\n    - PE32       confidence: 66.7458\n    - PE32Y      confidence: 65.3462\n    - P632X      confidence: 62.1031\n    - P63R2      confidence: 61.5089\n\n```\n\nDetailed command line usage:\n\n```\nuser@linux:~/openalpr$ alpr --help\n\nUSAGE: \n\n   alpr  [-c <country_code>] [--config <config_file>] [-n <topN>] [--seek\n         <integer_ms>] [-p <pattern code>] [--clock] [-d] [-j] [--]\n         [--version] [-h] <image_file_path>\n\n\nWhere: \n\n   -c <country_code>,  --country <country_code>\n     Country code to identify (either us for USA or eu for Europe). \n     Default=us\n\n   --config <config_file>\n     Path to the openalpr.conf file\n\n   -n <topN>,  --topn <topN>\n     Max number of possible plate numbers to return.  Default=10\n\n   --seek <integer_ms>\n     Seek to the specified millisecond in a video file. Default=0\n\n   -p <pattern code>,  --pattern <pattern code>\n     Attempt to match the plate number against a plate pattern (e.g., md\n     for Maryland, ca for California)\n\n   --clock\n     Measure/print the total time to process image and all plates. \n     Default=off\n\n   -d,  --detect_region\n     Attempt to detect the region of the plate image.  [Experimental] \n     Default=off\n\n   -j,  --json\n     Output recognition results in JSON format.  Default=off\n\n   --,  --ignore_rest\n     Ignores the rest of the labeled arguments following this flag.\n\n   --version\n     Displays version information and exits.\n\n   -h,  --help\n     Displays usage information and exits.\n\n   <image_file_path>\n     Image containing license plates\n\n\n   OpenAlpr Command Line Utility\n\n```\n\n\nBinaries\n----------\n\nPre-compiled Windows binaries can be downloaded on the [releases page](https://github.com/openalpr/openalpr/releases)\n\nInstall OpenALPR on Ubuntu 16.04 with the following commands:\n\n    sudo apt-get update && sudo apt-get install -y openalpr openalpr-daemon openalpr-utils libopenalpr-dev\n\nDocumentation\n---------------\n\nDetailed documentation is available at [doc.openalpr.com](http://doc.openalpr.com/)\n\nIntegrating the Library\n-----------------------\n\nOpenALPR is written in C++ and has bindings in C#, Python, Node.js, Go, and Java.  Please see this guide for examples showing how to run OpenALPR in your application: http://doc.openalpr.com/bindings.html\n\nCompiling\n-----------\n\n[![Build Status](https://travis-ci.org/openalpr/openalpr.svg?branch=master)](https://travis-ci.org/openalpr/openalpr)\n\nOpenALPR compiles and runs on Linux, Mac OSX and Windows.\n\nOpenALPR requires the following additional libraries:\n\n    - Tesseract OCR v3.0.4 (https://github.com/tesseract-ocr/tesseract)\n    - OpenCV v2.4.8+ (http://opencv.org/)\n\nAfter cloning this GitHub repository, you should download and extract Tesseract and OpenCV source code into their own directories.  Compile both libraries.\n\nPlease follow these detailed compilation guides for your respective operating system:\n\n* [Windows](https://github.com/openalpr/openalpr/wiki/Compilation-instructions-(Windows))\n* [Ubuntu Linux](https://github.com/openalpr/openalpr/wiki/Compilation-instructions-(Ubuntu-Linux))\n* [OS X](https://github.com/openalpr/openalpr/wiki/Compilation-instructions-(OS-X))\n* [Android Library](https://github.com/SandroMachado/openalpr-android)\n* [Android Application Sample](https://github.com/sujaybhowmick/OpenAlprDroidApp)\n* [iOS](https://github.com/twelve17/openalpr-ios)\n* [iOS React Native](https://github.com/cardash/react-native-openalpr)\n* [Xamarin](https://github.com/kevinjpetersen/openalpr-xamarin)\n\nIf all went well, there should be an executable named *alpr* along with *libopenalpr-static.a* and *libopenalpr.so* that can be linked into your project.\n\nDocker\n------\n\n``` shell\n# Build docker image\ndocker build -t openalpr https://github.com/openalpr/openalpr.git\n# Download test image\nwget http://plates.openalpr.com/h786poj.jpg\n# Run alpr on image\ndocker run -it --rm -v $(pwd):/data:ro openalpr -c eu h786poj.jpg\n```\n\nQuestions\n---------\nPlease post questions or comments to the Google group list: https://groups.google.com/forum/#!forum/openalpr\n\n\nContributions\n-------------\nImprovements to the OpenALPR library are always welcome.  Please review the [OpenALPR design description](https://github.com/openalpr/openalpr/wiki/OpenALPR-Design) and get started.\n\nCode contributions are not the only way to help out.  Do you have a large library of license plate images?  If so, please upload your data to the anonymous FTP located at upload.openalpr.com.  Do you have time to \"tag\" plate images in an input image or help in other ways?  Please let everyone know by posting a note in the forum.\n\n\nLicense\n-------\n\nAffero GPLv3\nhttp://www.gnu.org/licenses/agpl-3.0.html\n\nCommercial-friendly licensing available.  Contact: info@openalpr.com\n",
        "releases": [
            {
                "name": "OpenALPR 2.3.0",
                "date": "2016-07-17T20:25:44Z"
            },
            {
                "name": "OpenALPR 2.2.0",
                "date": "2015-10-20T03:16:01Z"
            },
            {
                "name": "OpenALPR 2.1.0",
                "date": "2015-06-19T03:42:31Z"
            },
            {
                "name": "OpenALPR 2.0.1",
                "date": "2015-03-13T04:26:47Z"
            },
            {
                "name": "OpenALPR 1.2.0",
                "date": "2014-08-20T02:55:49Z"
            },
            {
                "name": "OpenALPR 1.1.0",
                "date": "2014-05-01T02:47:53Z"
            },
            {
                "name": "OpenALPR v1.0.0",
                "date": "2014-05-03T00:26:56Z"
            }
        ]
    }
}