{
    "https://api.github.com/repos/airbnb/visx": {
        "forks": 724,
        "watchers": 19692,
        "stars": 19692,
        "languages": {
            "TypeScript": 1902329,
            "CSS": 24996,
            "JavaScript": 24049
        },
        "commits": [
            "2025-01-09T20:02:06Z",
            "2024-12-18T23:53:14Z",
            "2024-12-16T22:01:38Z",
            "2024-12-16T20:56:35Z",
            "2024-12-16T20:17:23Z",
            "2024-12-16T20:11:00Z",
            "2024-12-16T19:52:53Z",
            "2024-12-16T19:47:00Z",
            "2024-12-16T19:24:38Z",
            "2024-12-16T19:18:20Z",
            "2024-11-07T18:38:03Z",
            "2024-11-07T18:37:35Z",
            "2024-11-07T18:37:28Z",
            "2024-11-07T18:31:18Z",
            "2024-07-29T19:50:24Z",
            "2024-05-29T23:51:26Z",
            "2024-05-29T23:51:18Z",
            "2024-05-29T23:51:11Z",
            "2024-05-29T23:45:19Z",
            "2024-05-24T13:52:34Z",
            "2024-05-24T13:52:27Z",
            "2024-05-24T13:52:20Z",
            "2024-05-24T13:46:21Z",
            "2024-05-20T18:47:49Z",
            "2024-05-20T18:47:40Z",
            "2024-05-20T18:47:33Z",
            "2024-05-20T18:41:21Z",
            "2024-03-09T00:30:26Z",
            "2024-03-09T00:30:12Z",
            "2024-03-09T00:30:04Z"
        ],
        "creation_date": "2017-03-15T16:25:41Z",
        "contributors": 30,
        "topics": [
            "chart",
            "d3",
            "data-visualization",
            "react",
            "svg",
            "visualization",
            "visx",
            "vx"
        ],
        "subscribers": 138,
        "readme": "<p align=\"center\">\n  <img src=\"./assets/visx-geometry.png\" />\n</p>\n\n<p align=\"center\">\n  <a title=\"npm version\" href=\"https://www.npmjs.com/~visx\">\n    <img src=\"https://img.shields.io/npm/v/@visx/demo.svg?style=flat-square\" />\n  </a>\n  <a title=\"build status\" href=\"https://travis-ci.org/airbnb/visx\">\n    <img src=\"https://travis-ci.org/airbnb/visx.svg?branch=master\" />\n  </a>\n  <a href='https://coveralls.io/github/airbnb/visx?branch=master'>\n    <img src='https://coveralls.io/repos/github/airbnb/visx/badge.svg?branch=master' alt='Coverage Status' />\n  </a>\n  <a title=\"@visx/shape npm downloads\" href=\"https://www.npmjs.com/package/@visx/shape\">\n    <img src=\"https://img.shields.io/npm/dm/@visx/shape.svg?style=flat-square\" />\n  </a>\n  <a href=\"https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fhshoff%2Fvx?ref=badge_shield\" alt=\"FOSSA Status\">     <img src=\"https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fhshoff%2Fvx.svg?type=shield\"/>\n  </a>\n  <a href=\"https://lernajs.io/\" alt=\"lerna\">\n     <img src=\"https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg\"/>\n  </a>\n</p>\n\n### visx\n\nvisx is a collection of reusable low-level visualization components. visx combines the power of d3\nto generate your visualization with the benefits of react for updating the DOM.\n\n<br />\n\n<p align=\"center\">\n  <strong>\n    <a href=\"https://airbnb.io/visx\">Docs</a>\n  </strong>\n  &bull;\n  <strong>\n    <a href=\"https://airbnb.io/visx/gallery\">Gallery</a>\n  </strong>\n  &bull;\n  <strong>\n    <a href=\"https://medium.com/vx-code/getting-started-with-vx-1756bb661410\">Blog</a>\n  </strong>\n  &bull;\n  <strong>\n    <a href=\"https://github.com/airbnb/visx/discussions\">Discussions</a>\n  </strong>\n  &bull;\n  <strong>\n    <a href=\"./CHANGELOG.md\">Changelog</a>\n  </strong>\n  &bull;\n  <strong>\n    <a href=\"https://medium.com/vx-code/getting-started-with-vx-1756bb661410\">Getting started tutorial</a>\n  </strong>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://airbnb.io/visx/gallery\">\n    <img src=\"./assets/visx-gallery.png\" />\n  </a>\n</p>\n\n## Usage\n\n[![Remix on Glitch](https://cdn.glitch.com/2703baf2-b643-4da7-ab91-7ee2a2d00b5b%2Fremix-button.svg)](https://glitch.com/edit/#!/remix/kind-modem)\n\nLet's make a simple bar graph.\n\nFirst we'll install the relevant packages:\n\n```bash\nnpm install --save @visx/mock-data @visx/group @visx/shape @visx/scale\n```\n\n<img src=\"./assets/simplebar.png\" height=\"150\" />\n\n```javascript\nimport React from 'react';\nimport { letterFrequency } from '@visx/mock-data';\nimport { Group } from '@visx/group';\nimport { Bar } from '@visx/shape';\nimport { scaleLinear, scaleBand } from '@visx/scale';\n\n// We'll use some mock data from `@visx/mock-data` for this.\nconst data = letterFrequency;\n\n// Define the graph dimensions and margins\nconst width = 500;\nconst height = 500;\nconst margin = { top: 20, bottom: 20, left: 20, right: 20 };\n\n// Then we'll create some bounds\nconst xMax = width - margin.left - margin.right;\nconst yMax = height - margin.top - margin.bottom;\n\n// We'll make some helpers to get at the data we want\nconst x = d => d.letter;\nconst y = d => +d.frequency * 100;\n\n// And then scale the graph by our data\nconst xScale = scaleBand({\n  range: [0, xMax],\n  round: true,\n  domain: data.map(x),\n  padding: 0.4,\n});\nconst yScale = scaleLinear({\n  range: [yMax, 0],\n  round: true,\n  domain: [0, Math.max(...data.map(y))],\n});\n\n// Compose together the scale and accessor functions to get point functions\nconst compose = (scale, accessor) => data => scale(accessor(data));\nconst xPoint = compose(xScale, x);\nconst yPoint = compose(yScale, y);\n\n// Finally we'll embed it all in an SVG\nfunction BarGraph(props) {\n  return (\n    <svg width={width} height={height}>\n      {data.map((d, i) => {\n        const barHeight = yMax - yPoint(d);\n        return (\n          <Group key={`bar-${i}`}>\n            <Bar\n              x={xPoint(d)}\n              y={yMax - barHeight}\n              height={barHeight}\n              width={xScale.bandwidth()}\n              fill=\"#fc2e1c\"\n            />\n          </Group>\n        );\n      })}\n    </svg>\n  );\n}\n\n// ... somewhere else, render it ...\n// <BarGraph />\n```\n\nFor more examples using `visx`, check out the [gallery](https://airbnb.io/visx/gallery).\n\n## Motivation\n\n**Goal**\n\nThe goal is to create a library of components you can use to make both your own reusable chart\nlibrary or your slick custom one-off chart. visx is largely unopinionated and is meant to be built\nupon. Keep your bundle sizes down and use only the packages you need.\n\n**How?**\n\nUnder the hood, visx is using d3 for the calculations and math. If you're creating your own awesome\nchart library on top of visx, it's easy to create a component api that hides d3 entirely. Meaning\nyour team could create charts as easily as using reusable react components.\n\n**But why?**\n\nMixing two mental models for updating the DOM is never a good time. Copy and pasting d3 code into\n`componentDidMount()` is just that. This collection of components lets you easily build your own\nreusable visualization charts or library without having to learn d3. No more selections or\n`enter()`/`exit()`/`update()`.\n\n## In the wild\n\n- [williaster/data-ui](https://github.com/williaster/data-ui)\n  ([Demo](https://williaster.github.io/data-ui/))\n- [dylanmoz/trello](https://github.com/DylanMoz/dylanmoz.github.io/blob/source/src/pages/trello/TrelloGraph.js)\n  ([Demo](http://dylanmoz.github.io/trello/))\n  ([How to Make Beautiful Graphs With vx and React-Motion](https://devblog.classy.org/how-to-make-beautiful-graphs-with-vx-and-react-motion-6ffe7aecf6f3))\n- [gkunthara/Crypto-Chart](https://github.com/gkunthara/Crypto-Chart)\n  ([Tutorial](https://medium.com/@georgekunthara/after-the-tutorial-the-first-react-app-4dce6645634e))\n- Collapsible tree with [`react-move`](https://github.com/react-tools/react-move) by\n  [@techniq](https://github.com/techniq) ([Demo](https://codesandbox.io/s/n3w687vmqj))\n  ([Radial demo](https://codesandbox.io/s/vmqwrkl395))\n  ([More info](https://github.com/airbnb/visx/issues/162#issuecomment-335029517))\n- Bitcoin 30-day price by [@hshoff](https://github.com/hshoff)\n  ([Github](https://github.com/hshoff/viewsource#1-bitcoin-price-chart))\n  ([YouTube](https://www.youtube.com/watch?v=oeE2tuspdHg))\n- Ethereum candlestick chart by [@hshoff](https://github.com/hshoff)\n  ([Github](https://github.com/hshoff/viewsource#2-ethereum-candlestick-chart))\n- Song data visualization through spotify by [@bother7](https://github.com/bother7)\n  ([Github](https://github.com/bother7/spotalyzer_frontend))\n- Investment Calculator ([website](https://investmentcalculator.io/))\n- Animation with [`react-spring`](https://github.com/drcmda/react-spring/) by\n  [@drcmda](https://github.com/drcmda) ([Demo](https://codesandbox.io/embed/j3x61vjz5v))\n- Code Coverage Dashboard by [@ezy](https://github.com/ezy)\n  ([Github](https://github.com/ezy/code-coverage-dashboard))\n- Ethereum Portfolio Toolkit by [@JayWelsh](https://github.com/JayWelsh)\n  ([Demo](https://cryptocape.com/)) ([Github](https://github.com/JayWelsh/CryptoCape))\n- Family tree by [@vkallore](https://github.com/vkallore)\n  ([Github](https://github.com/vkallore/d3-vx-family-tree))\n- South African Coronavirus Data Visuals by [@JayWelsh](https://github.com/JayWelsh)\n  ([Demo](https://coronamap.co.za/)) ([Github](https://github.com/JayWelsh/coronamap))\n- [CNN: Tracking America's Recovery](https://www.cnn.com/business/us-economic-recovery-coronavirus)\n- [Wall Street Journal: Americans Familiarize Themselves with the Word \u2018Forbearance\u2019](https://blogs.wsj.com/dailyshot/2020/04/13/the-daily-shot-americans-familiarize-themselves-with-the-word-forbearance/)\n  by [@rayshan](https://github.com/rayshan)\n  ([Demo](https://finance.shan.io/recessions-bear-markets-compared))\n- Dollar to food emoji caculator by [@gmlwo530](https://github.com/gmlwo530)\n  ([Demo](https://dollar-to-food-emoji.web.app/))\n  ([Github](https://github.com/gmlwo530/dollar-to-food-emoji))\n- [zh-TW] Taiwan Real-time Air Quality Index by\n  [@ArvinH](https://github.com/ArvinH)([Demo](https://codesandbox.io/s/simpleradar-aqi-with-tooltip-select-data-react-spring-item3?file=/Radar.tsx))([Tutorial](https://blog.arvinh.info/tech/datavis-visx))\n- tokenized BTC on ethereum stacked chart with brush by\n  [@sakulstra](https://github.com/sakulstra)\n- [Escape From Tarkov Ammo Chart](https://eft.monster/) by\n  [@codenomial](https://github.com/codenomial)\n- [Pry](https://pry.co) Finance for Founders (dashboard by [@valtism](https://github.com/valtism))\n- [Data 2 the People](https://www.data2thepeople.org/) Donation Efficacy Analysis for Downballot Races ([Demo](https://donate.data2thepeople.org/)) ([Github](https://github.com/Data-2-the-People/skyfall/blob/master/components/Scatterplot.jsx))\n- [Augora](https://augora.fr) Display information of french deputies ([Demo](https://augora.fr/statistiques))([Github](https://github.com/Augora/Augora))\n- WHO Coronavirus (COVID-19) Dashboard is built on top of `vx`, earlier version of `visx`. ([Demo](https://covid19.who.int/))\n- [Fig Stats](https://fig-stats.com) - Figma community plugin & widget analytics\n- [Physician.FYI](https://physician.fyi) - Explore physicians' disciplinary history\n- [Index by Superstardle](https://index.superstardle.com), [Salaries by Superstardle](https://salaries.superstardle.com), & [Pack'Em by Superstardle](https://playoffs.superstardle.com) - Explore professional sports teams and superstars in the world of underdogs, salaries, and playoff performances.\n- Ridgeline chart visualizing shuffling probabilities by [@jmssnr](https://github.com/jmssnr) ([Demo](https://shuffling-probability.vercel.app/)) ([Github](https://github.com/jmssnr/shuffling-probability))\n- [UCSF Data Library](https://datalibrary.ucsf.edu) - Landing page for disease research tools ([Github](https://github.com/mountetna/monoetna/tree/master/vesta/ui))\n\nHave a project that's using `visx`? Open a pull request and we'll add it to the list.\n\n## FAQ\n\n1. What does `visx` stand for?\n\n   > visx stands for visualization components.\n\n1. Do you plan on supporting animation/transitions?\n\n   > A common criticism of visx is it doesn't have animation baked in, but this was a conscious\n   > choice. It's a powerful feature to not bake it in.\n   >\n   > Imagine your app already bundles `react-motion`, adding a hypothetical `@visx/animation` is\n   > bloat. Since visx is react, it already supports all react animation libs.\n   >\n   > Charting libraries are like style guides. Each org or app will eventually want full control\n   > over their own implementation.\n   >\n   > visx makes this easier for everyone. No need to reinvent the wheel each time.\n   >\n   > more info: https://github.com/airbnb/visx/issues/6\n   >\n   > examples:\n   >\n   > - Collapsible tree with [`react-move`](https://github.com/react-tools/react-move) by\n   >   [@techniq](https://github.com/techniq) ([Demo](https://codesandbox.io/s/n3w687vmqj))\n   >   ([Radial demo](https://codesandbox.io/s/vmqwrkl395))\n   > - Animation with `react-spring` by [@drcmda](https://github.com/drcmda)\n   >   ([Demo](https://codesandbox.io/embed/j3x61vjz5v))\n\n1. Do I have to use every package to make a chart?\n\n   > nope! pick and choose the packages you need.\n\n1. Can I use this to create my own library of charts for my team?\n\n   > Please do.\n\n1. Does visx work with [preact](https://preactjs.com/)?\n\n   > yup! need to alias `react` + `react-dom` and use `preact-compat`.\n\n1. I like using d3.\n\n   > Me too.\n\n## Development\n\nPlease see [CONTRIBUTING.md](./CONTRIBUTING.md)\n\n:v:\n\n[MIT](./LICENSE)\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fhshoff%2Fvx.svg?type=large)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fhshoff%2Fvx?ref=badge_large)\n",
        "releases": [
            {
                "name": "v3.12.0",
                "date": "2024-11-07T18:38:04Z"
            },
            {
                "name": "v3.11.0",
                "date": "2024-05-29T23:51:27Z"
            },
            {
                "name": "v3.10.4",
                "date": "2024-05-24T13:52:35Z"
            },
            {
                "name": "v3.10.3",
                "date": "2024-05-20T18:47:50Z"
            },
            {
                "name": "v3.10.2",
                "date": "2024-03-09T00:30:27Z"
            },
            {
                "name": "v3.10.1",
                "date": "2024-03-08T22:22:31Z"
            },
            {
                "name": "v3.10.0",
                "date": "2024-03-08T19:02:30Z"
            },
            {
                "name": "v3.9.0",
                "date": "2024-03-04T17:54:34Z"
            },
            {
                "name": "v3.8.0",
                "date": "2024-01-25T23:01:12Z"
            },
            {
                "name": "v3.7.0",
                "date": "2024-01-23T21:29:53Z"
            },
            {
                "name": "v3.6.1",
                "date": "2023-12-15T21:16:09Z"
            },
            {
                "name": "v3.6.0",
                "date": "2023-12-07T22:54:10Z"
            },
            {
                "name": "v3.5.1",
                "date": "2023-11-17T20:35:57Z"
            },
            {
                "name": "v3.5.0",
                "date": "2023-11-13T20:13:31Z"
            },
            {
                "name": "v3.4.1",
                "date": "2023-10-26T17:34:23Z"
            },
            {
                "name": "v3.4.0",
                "date": "2023-10-10T18:38:09Z"
            },
            {
                "name": "v3.3.0",
                "date": "2023-07-11T20:47:31Z"
            },
            {
                "name": "v3.2.1",
                "date": "2023-07-06T17:23:18Z"
            },
            {
                "name": "v3.2.0",
                "date": "2023-06-29T00:32:01Z"
            },
            {
                "name": "v3.1.3",
                "date": "2023-06-28T17:03:55Z"
            },
            {
                "name": "v3.1.2",
                "date": "2023-03-22T21:43:05Z"
            },
            {
                "name": "v3.1.1",
                "date": "2023-03-22T20:09:54Z"
            },
            {
                "name": "v3.1.0",
                "date": "2023-03-08T00:37:40Z"
            },
            {
                "name": "v3.0.2",
                "date": "2023-03-07T00:53:31Z"
            },
            {
                "name": "v3.0.1",
                "date": "2023-02-13T20:17:07Z"
            },
            {
                "name": "v3.0.0",
                "date": "2023-01-06T22:21:39Z"
            },
            {
                "name": "v2.18.0",
                "date": "2023-01-03T21:28:21Z"
            },
            {
                "name": "v2.17.0",
                "date": "2022-12-22T00:51:01Z"
            },
            {
                "name": "v2.16.1",
                "date": "2022-12-20T23:32:26Z"
            },
            {
                "name": "v2.10.0",
                "date": "2022-05-09T12:58:44Z"
            },
            {
                "name": "",
                "date": "2021-03-08T20:16:56Z"
            },
            {
                "name": "",
                "date": "2021-02-18T22:22:00Z"
            },
            {
                "name": "",
                "date": "2021-02-12T23:55:14Z"
            },
            {
                "name": "",
                "date": "2021-01-11T20:50:05Z"
            },
            {
                "name": "",
                "date": "2020-12-15T02:05:31Z"
            },
            {
                "name": "",
                "date": "2020-11-25T05:13:46Z"
            },
            {
                "name": "",
                "date": "2020-10-17T00:40:42Z"
            },
            {
                "name": "",
                "date": "2020-09-22T04:03:13Z"
            },
            {
                "name": "",
                "date": "2020-09-09T19:58:34Z"
            },
            {
                "name": "",
                "date": "2020-07-06T21:41:45Z"
            },
            {
                "name": "",
                "date": "2020-06-04T19:11:51Z"
            },
            {
                "name": "",
                "date": "2020-05-02T21:54:32Z"
            },
            {
                "name": "",
                "date": "2020-02-27T05:31:40Z"
            },
            {
                "name": "",
                "date": "2020-02-14T21:39:22Z"
            },
            {
                "name": "",
                "date": "2020-01-30T05:42:30Z"
            },
            {
                "name": "",
                "date": "2019-10-03T22:57:30Z"
            },
            {
                "name": "",
                "date": "2019-09-06T19:51:25Z"
            },
            {
                "name": "",
                "date": "2019-07-17T16:05:08Z"
            },
            {
                "name": "",
                "date": "2019-05-16T20:43:44Z"
            },
            {
                "name": "",
                "date": "2019-03-15T14:19:24Z"
            },
            {
                "name": "",
                "date": "2019-03-14T16:22:36Z"
            },
            {
                "name": "",
                "date": "2019-02-28T16:05:54Z"
            },
            {
                "name": "",
                "date": "2019-01-31T01:01:35Z"
            },
            {
                "name": "",
                "date": "2019-01-28T17:41:24Z"
            },
            {
                "name": "",
                "date": "2019-01-04T21:13:01Z"
            },
            {
                "name": "",
                "date": "2018-12-12T00:56:50Z"
            },
            {
                "name": "",
                "date": "2018-11-26T16:14:48Z"
            },
            {
                "name": "",
                "date": "2018-11-13T22:08:24Z"
            },
            {
                "name": "",
                "date": "2018-10-08T19:41:06Z"
            },
            {
                "name": "",
                "date": "2018-10-07T01:27:49Z"
            },
            {
                "name": "",
                "date": "2018-09-28T16:03:38Z"
            },
            {
                "name": "",
                "date": "2018-09-19T00:58:10Z"
            },
            {
                "name": "",
                "date": "2018-09-19T00:08:32Z"
            },
            {
                "name": "",
                "date": "2018-08-27T18:37:48Z"
            },
            {
                "name": "",
                "date": "2018-08-25T23:06:57Z"
            },
            {
                "name": "",
                "date": "2018-08-16T14:25:48Z"
            },
            {
                "name": "",
                "date": "2018-08-07T16:15:19Z"
            },
            {
                "name": "",
                "date": "2018-07-17T19:12:28Z"
            },
            {
                "name": "",
                "date": "2018-06-26T17:50:19Z"
            },
            {
                "name": "",
                "date": "2018-06-22T04:52:41Z"
            },
            {
                "name": "",
                "date": "2018-06-19T22:08:10Z"
            },
            {
                "name": "",
                "date": "2018-06-19T22:08:49Z"
            },
            {
                "name": "",
                "date": "2018-06-09T20:36:40Z"
            },
            {
                "name": "",
                "date": "2018-06-09T20:37:06Z"
            },
            {
                "name": "",
                "date": "2018-06-09T20:37:35Z"
            },
            {
                "name": "",
                "date": "2018-06-03T00:03:13Z"
            },
            {
                "name": "",
                "date": "2018-06-03T00:04:20Z"
            },
            {
                "name": "",
                "date": "2018-04-30T01:42:27Z"
            },
            {
                "name": "",
                "date": "2018-04-28T21:51:54Z"
            },
            {
                "name": "",
                "date": "2018-04-08T19:06:10Z"
            },
            {
                "name": "",
                "date": "2018-03-29T15:17:13Z"
            },
            {
                "name": "",
                "date": "2018-03-29T15:17:43Z"
            },
            {
                "name": "",
                "date": "2018-03-29T15:18:23Z"
            },
            {
                "name": "",
                "date": "2018-01-17T21:15:25Z"
            },
            {
                "name": "",
                "date": "2018-01-17T21:15:55Z"
            },
            {
                "name": "",
                "date": "2018-01-12T20:19:08Z"
            },
            {
                "name": "",
                "date": "2018-01-12T18:17:12Z"
            },
            {
                "name": "",
                "date": "2018-01-10T19:16:25Z"
            },
            {
                "name": "",
                "date": "2018-01-10T19:16:55Z"
            },
            {
                "name": "",
                "date": "2017-12-14T16:42:48Z"
            },
            {
                "name": "",
                "date": "2017-12-01T21:05:02Z"
            },
            {
                "name": "",
                "date": "2017-11-29T03:24:55Z"
            },
            {
                "name": "",
                "date": "2017-11-13T21:03:44Z"
            },
            {
                "name": "",
                "date": "2017-11-02T04:18:41Z"
            },
            {
                "name": "",
                "date": "2017-11-01T03:22:00Z"
            },
            {
                "name": "",
                "date": "2017-10-25T22:39:08Z"
            },
            {
                "name": "",
                "date": "2017-10-24T19:07:35Z"
            },
            {
                "name": "",
                "date": "2017-10-07T06:32:32Z"
            },
            {
                "name": "",
                "date": "2017-10-06T22:36:29Z"
            },
            {
                "name": "",
                "date": "2017-09-26T21:26:06Z"
            },
            {
                "name": "",
                "date": "2017-09-26T21:26:32Z"
            },
            {
                "name": "",
                "date": "2017-09-26T21:26:52Z"
            },
            {
                "name": "",
                "date": "2017-09-26T21:27:12Z"
            },
            {
                "name": "",
                "date": "2017-09-26T21:27:27Z"
            },
            {
                "name": "",
                "date": "2017-09-26T21:27:45Z"
            },
            {
                "name": "",
                "date": "2017-09-26T21:27:57Z"
            }
        ]
    }
}