{
    "https://api.github.com/repos/eugenp/tutorials": {
        "forks": 54436,
        "watchers": 36953,
        "stars": 36953,
        "languages": {
            "Java": 31109973,
            "JavaScript": 2608179,
            "TypeScript": 1530936,
            "HTML": 1321459,
            "CSS": 518459,
            "Groovy": 190318,
            "AspectJ": 71030,
            "Shell": 58122,
            "SCSS": 55343,
            "FreeMarker": 41336,
            "RAML": 38085,
            "ANTLR": 31940,
            "Mustache": 30095,
            "Dockerfile": 16873,
            "Python": 14778,
            "HCL": 13943,
            "Gherkin": 11743,
            "Lua": 11459,
            "Batchfile": 10331,
            "Scala": 8794,
            "Vue": 6847,
            "XSLT": 6692,
            "Less": 6310,
            "C++": 4361,
            "Kotlin": 3353,
            "PLpgSQL": 2127,
            "Clojure": 1892,
            "Starlark": 1638,
            "Solidity": 1542,
            "Smarty": 1142,
            "Open Policy Agent": 1042,
            "Rich Text Format": 810,
            "Thrift": 609,
            "C": 512,
            "Perl": 485,
            "CLIPS": 383,
            "Go": 369,
            "Pug": 297,
            "Makefile": 221,
            "Procfile": 142,
            "Smalltalk": 109,
            "R": 48,
            "Handlebars": 12,
            "Fluent": 1
        },
        "commits": [
            "2025-01-21T20:14:11Z",
            "2025-01-21T19:53:56Z",
            "2025-01-21T19:47:21Z",
            "2025-01-21T19:45:09Z",
            "2025-01-20T17:31:24Z",
            "2025-01-20T16:19:15Z",
            "2025-01-20T03:58:54Z",
            "2025-01-19T21:40:44Z",
            "2025-01-19T01:51:58Z",
            "2025-01-19T01:43:59Z",
            "2025-01-18T12:27:53Z",
            "2025-01-17T22:03:16Z",
            "2025-01-17T17:51:36Z",
            "2025-01-17T16:51:45Z",
            "2025-01-17T13:51:09Z",
            "2025-01-17T11:14:32Z",
            "2025-01-16T21:34:03Z",
            "2025-01-16T21:32:42Z",
            "2025-01-16T21:20:15Z",
            "2025-01-16T17:44:34Z",
            "2025-01-16T08:15:49Z",
            "2025-01-16T08:14:28Z",
            "2025-01-16T08:08:49Z",
            "2025-01-16T08:06:28Z",
            "2025-01-16T08:04:16Z",
            "2025-01-16T08:02:31Z",
            "2025-01-16T07:58:11Z",
            "2025-01-16T07:53:47Z",
            "2025-01-16T07:47:38Z",
            "2025-01-16T07:42:50Z"
        ],
        "creation_date": "2013-04-29T18:26:36Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 1502,
        "readme": "# Cloning the repository\n\nIf you are getting an error while cloning the repository, try running:\ngit config --global http.postBuffer 5000000\n\nThis will increase the buffer size from the default 1MiB to 5MiB.\n\nTo revert this value to the default, use:\ngit config --global http.postBuffer 1000000\n \n\nThe Courses\n==============================\n\n\n\"Learn Spring\" Course: <br/>\n**[>> LEARN SPRING - THE MASTER CLASS](https://www.baeldung.com/learn-spring-course?utm_source=github&utm_medium=social&utm_content=tutorials&utm_campaign=ls#master-class)**\n\n\"REST With Spring\" Course: <br/>\n**[>> THE REST WITH SPRING - MASTER CLASS](https://www.baeldung.com/rest-with-spring-course?utm_source=github&utm_medium=social&utm_content=tutorials&utm_campaign=rws#master-class)**\n\n\"Learn Spring Security\" Course: <br/>\n**[>> LEARN SPRING SECURITY - MASTER CLASS](https://www.baeldung.com/learn-spring-security-course?utm_source=github&utm_medium=social&utm_content=tutorials&utm_campaign=lss#master-class)**\n\n\n\nJava and Spring Tutorials\n================\n\nThis project is **a collection of small and focused tutorials** - each covering a single and well-defined area of development in the Java ecosystem. \nA strong focus of these is the Spring Framework - Spring, Spring Boot and Spring Security. \nIn addition to Spring, the modules here cover several aspects of Java. \n\nProfile-based segregation\n====================\n\nWe use Maven build profiles to segregate the huge list of individual projects in our repository.\n\nThe projects are broadly divided into 4 lists: default, default-jdk17, default-jdk8 and default-heavy. \n\nNext, they are segregated further based on the tests that we want to execute.\n\nWe also have a parents profile to build only parent modules.\n\nTherefore, we have a total of 9 profiles:\n\n| Profile            | Includes                    | Type of test enabled         |\n|--------------------|-----------------------------|------------------------------|\n| default            | JDK21 projects              | *UnitTest                    |\n| integration        | JDK21 projects              | *IntegrationTest             |\n| default-jdk17      | JDK17 projects              | *UnitTest                    |\n| integration-jdk17  | JDK17 projects              | *IntegrationTest             |\n| profile-jdk22      | JDK22 projects              | *UnitTest & *IntegrationTest |\n| profile-jdk23      | JDK23 projects              | *UnitTest & *IntegrationTest |\n| default-heavy      | Heavy/long running projects | *UnitTest                    |\n| integration-heavy  | Heavy/long running projects | *IntegrationTest             |\n| default-jdk8       | JDK8  projects              | *UnitTest                    |\n| integration-jdk8   | JDK8  projects              | *IntegrationTest             |\n| parents            | Set of parent modules       | None                         |\n\nBuilding the project\n====================\n\nThough it should not be needed often to build the entire repository at once because we are usually concerned with a specific module.\n\nBut if we want to, we can invoke the below command from the root of the repository if we want to build the entire repository with only Unit Tests enabled:\n\n`mvn clean install -Pdefault,default-heavy`\n\nor if we want to build the entire repository with Integration Tests enabled, we can do:\n\n`mvn clean install -Pintegration,integration-heavy`\n\nAnalogously, for the JDK8 projects the commands are:\n\n`mvn clean install -Pdefault-jdk8`\n\nand\n\n`mvn clean install -Pintegration-jdk8`\n\nBuilding a single module\n====================\nTo build a specific module, run the command: `mvn clean install` in the module directory.\n\nIt can happen that your module is part of a parent module e.g. `parent-boot-1`,`parent-spring-5` etc, then you will need to build the parent module first so that you can build your module.\nWe have created a `parents` profile that you can use to build just the parent modules, just run the profile as:\n`mvn clean install -Pparents`\n\n\nBuilding modules from the root of the repository\n====================\nTo build specific modules from the root of the repository, run the command: `mvn clean install --pl akka-modules,algorithms-modules -Pdefault` in the root directory.\n\nHere `akka-modules` and `algorithms-modules` are the modules that we want to build and `default` is the maven profile in which these modules are present.\n\n\nRunning a Spring Boot module\n====================\nTo run a Spring Boot module, run the command: `mvn spring-boot:run` in the module directory.\n\n\nWorking with the IDE\n====================\nThis repo contains a large number of modules. \nWhen you're working with an individual module, there's no need to import all of them (or build all of them) - you can simply import that particular module in either Eclipse or IntelliJ. \n\n\nRunning Tests\n=============\nThe command `mvn clean install` from within a module will run the unit tests in that module.\nFor Spring modules this will also run the `SpringContextTest` if present.\n\nTo run the integration tests, use the command:\n\n`mvn clean install -Pintegration` or\n\n`mvn clean install -Pintegration-heavy` or\n\n`mvn clean install -Pintegration-jdk8`\n\ndepending on the list where our module exists\n",
        "releases": []
    }
}