{
    "https://api.github.com/repos/onevcat/VVDocumenter-Xcode": {
        "forks": 1538,
        "watchers": 8296,
        "stars": 8296,
        "languages": {
            "Objective-C": 180827
        },
        "commits": [
            "2017-02-04T06:47:22Z",
            "2017-02-01T09:37:35Z",
            "2016-08-17T02:19:58Z",
            "2016-08-17T02:18:02Z",
            "2016-06-03T04:15:52Z",
            "2016-06-02T09:24:27Z",
            "2016-05-30T14:45:57Z",
            "2016-05-27T16:14:18Z",
            "2016-05-27T15:21:36Z",
            "2016-05-27T13:38:29Z",
            "2016-05-23T03:14:06Z",
            "2016-03-22T02:43:02Z",
            "2016-03-21T22:31:37Z",
            "2016-02-01T02:01:24Z",
            "2016-01-31T16:53:02Z",
            "2016-01-13T02:36:43Z",
            "2015-12-09T10:47:11Z",
            "2015-12-09T10:43:36Z",
            "2015-12-03T03:39:03Z",
            "2015-12-03T02:24:26Z",
            "2015-12-03T02:20:50Z",
            "2015-11-26T10:12:35Z",
            "2015-11-26T09:37:04Z",
            "2015-11-03T12:27:39Z",
            "2015-11-03T03:06:04Z",
            "2015-11-03T02:46:25Z",
            "2015-10-28T07:32:22Z",
            "2015-10-28T07:13:10Z",
            "2015-10-22T03:03:20Z",
            "2015-10-22T02:10:39Z"
        ],
        "creation_date": "2013-07-16T09:58:02Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 392,
        "readme": "# VVDocumenter-Xcode [![Build Status](https://api.travis-ci.org/onevcat/VVDocumenter-Xcode.svg)](https://travis-ci.org/onevcat/VVDocumenter-Xcode) <a href=\"https://flattr.com/submit/auto?user_id=onevcat&url=https%3A%2F%2Fgithub.com%2Fonevcat%2FVVDocumenter-Xcode\" target=\"_blank\"><img src=\"http://api.flattr.com/button/flattr-badge-large.png\" alt=\"Flattr this\" title=\"Flattr this\" border=\"0\"></a>\n---\n\n# Goodbye World\n\nIn Xcode 8, Apple integrated a comment documentation generator plugin, which is built on top of VVDocumenter. Now this project is proud to be a part of Apple. It means you could just use the shortcut (\u2325 Option + \u2318 Command + /) to add a documentation comment to your code if you are using Xcode 8 or above!\n\nVVDocumenter is one of my hobby projects [from 2013](https://github.com/onevcat/VVDocumenter-Xcode/commit/6a2b604713c9fb573e229daece8286dac68ac24a), back to the age of Xcode 4. It serves well for these years and I am so glad that it helps a lot of developers to improve their productivity. Since there is no need to install this plugin anymore, the development of VVDocumenter will not continue. Yes, it's time to say goodbye, with a happy ending.\n\nThank you all for your selfless support to this project. Let's build more great things and make the world better in future!\n\n## What is this?\n\nWriting documentation is so important for developing, but it is really painful with Xcode. Think about how much time you are wasting in pressing '*' or '/', and typing the parameters again and again. Now, you can find the method (or any code) you want to document to, and type in `///`, the document will be generated for you and all params and return will be extracted into a Javadoc style, which is compatible with [appledoc](https://github.com/tomaz/appledoc), [Doxygen](http://www.stack.nl/~dimitri/doxygen/) and [HeaderDoc](https://developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/HeaderDoc/intro/intro.html). You can just fill the inline placeholder tokens to finish your document.\n\nHere is an image which can show what it exactly does. \n\n![Screenshot](https://raw.github.com/onevcat/VVDocumenter-Xcode/master/ScreenShot.gif)\n\n> By the way, it also supports [Swift](https://developer.apple.com/swift/) now. Cheers!\n\n![Screenshot](https://raw.github.com/onevcat/VVDocumenter-Xcode/master/vvdocumenter-swift.gif)\n\n## How to install and use?\n\nThe best way of installing is by [Alcatraz](http://alcatraz.io). Install Alcatraz followed by the instruction, restart your Xcode and press `\u21e7\u23189`. You can find `VVDocumenter-Xcode` in the list and click the icon on left to install.\n\nIf you do not like the Alcatraz way, you can also clone the repo. Then build the `VVDocumenter-Xcode` target in the Xcode project and the plug-in will automatically be installed in `~/Library/Application Support/Developer/Shared/Xcode/Plug-ins`. Relaunch Xcode and type in `///` above any code you want to write a document to.\n\nIf you want to use other text beside of `///` to trigger the document insertion, you can find a setting panel by clicking `VVDocument` in the Window menu of Xcode. You can also find some other useful options there, including setting using spaces instead of tab in the panel or changing the format of generated documentation.\n\n## Xcode version?\n\nThis plug-in is supported in Xcode 5, 6 and 7. From Xcode 5, Apple added a UUID-verification to all plugins to ensure the stability when Xcode gets updated. The value of `DVTPlugInCompatibilityUUIDs` in project plist should contains current UUID of Xcode version, or the plugin does not work. And from Xcode 6.3, you will be prompt to \"Load third party bundle\" if you are using a plugin. You should always select \"Load bundles\" to enable this plugin.\n\nAll plugins will be disabled once you update your Xcode, since the supported UUIDs in the plugins do not contain the one. You should try to clean your plugins folder (`~/Library/Application Support/Developer/Shared/Xcode/Plug-ins` by default) and clone/build the latest version from master branch. If you happened to skip the bundle loading, you can use this to reset the prompt:\n\n```bash\ndefaults delete com.apple.dt.Xcode DVTPlugInManagerNonApplePlugIns-Xcode-{your_xcode_version}\n```\n\n**Please do not open an issue if this plugin not work in your newly updated Xcode.** Pull request for new `DVTPlugInCompatibilityUUIDs` is welcome, and if UUID of your Xcode version is already there, please try to reinstall the plugin from a clean state.\n\nThe default deployment target is 10.8. If you want to use it in a earlier OS version, you should change OS X Deployment Target (in project info setting) to your system version.\n\n## Swift Support\n\nYes, this plugin supports documentation for Swift 2 now. Check [this post](http://ericasadun.com/2015/06/14/swift-header-documentation-in-xcode-7/) to see how to write the documentation for swift. By using `VVDocumenter-Xcode`, you can just type `///` to make the magic happen.\n\nThe documentation format changed from Swift 1.x to 2. If you are using Swift 1.x, you could build from branch [Xcode6](https://github.com/onevcat/VVDocumenter-Xcode/tree/Xcode6) to get the support for the earlier format.\n\n## Limitations and Future\n\nThe plugin is using simulation of keyboard event to insert the doc comments for you. So it is depending the keyboard shortcut of Xcode. These two kinds of operation are being used:\n\n* Delete to Beginning of the Line (\u2318\u232b)\n* Paste (\u2318V)\n\nIf you have modified these two shortcuts in your Xcode, the newset version of the plugin would not work correctly. Instead, you can use a earlier version such as [this one(commit 03c4169ff7)](https://github.com/onevcat/VVDocumenter-Xcode/tree/03c4169ff79b618b9fd3db93dd96652a522ad3e0). Be causion you may suffer an [undo and redo issue ](https://github.com/onevcat/VVDocumenter-Xcode/issues/3).\n\n`VVDocumenter-Xcode` is now using regular expression to extract things needed, which is not the best way to do such thing. A better approach could be using the AST, and I also have a plan to do it later if I have some more time :)\n\n## License\n\nVVDocumenter is published under MIT License. See the LICENSE file for more.\n\n\n",
        "releases": [
            {
                "name": "Swift support",
                "date": "2014-07-31T13:33:05Z"
            },
            {
                "name": "Version 0.5",
                "date": "2014-02-09T04:28:22Z"
            }
        ]
    }
}