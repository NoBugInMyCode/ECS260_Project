{
    "https://api.github.com/repos/gitleaks/gitleaks": {
        "forks": 1521,
        "watchers": 18662,
        "stars": 18662,
        "languages": {
            "Go": 508173,
            "Python": 769,
            "Makefile": 530,
            "Dockerfile": 459
        },
        "commits": [
            "2025-01-22T01:52:05Z",
            "2025-01-22T01:17:26Z",
            "2025-01-21T14:29:24Z",
            "2025-01-21T14:25:27Z",
            "2025-01-21T03:37:19Z",
            "2025-01-20T16:45:31Z",
            "2025-01-20T15:30:59Z",
            "2025-01-19T21:17:07Z",
            "2025-01-19T20:03:57Z",
            "2025-01-19T13:37:39Z",
            "2025-01-18T01:24:22Z",
            "2025-01-18T01:17:49Z",
            "2025-01-18T01:13:33Z",
            "2025-01-17T15:37:50Z",
            "2025-01-16T00:21:44Z",
            "2025-01-15T21:12:07Z",
            "2025-01-15T12:47:08Z",
            "2025-01-15T12:45:37Z",
            "2025-01-15T01:14:21Z",
            "2025-01-15T00:52:57Z",
            "2025-01-14T22:42:07Z",
            "2025-01-14T01:57:25Z",
            "2025-01-13T16:21:29Z",
            "2025-01-13T14:49:12Z",
            "2025-01-13T14:40:20Z",
            "2025-01-13T14:21:45Z",
            "2025-01-13T14:09:22Z",
            "2025-01-02T16:24:13Z",
            "2024-12-30T16:15:51Z",
            "2024-12-30T16:08:24Z"
        ],
        "creation_date": "2018-01-27T18:19:31Z",
        "contributors": 30,
        "topics": [
            "ci-cd",
            "cicd",
            "cli",
            "data-loss-prevention",
            "devsecops",
            "dlp",
            "git",
            "gitleaks",
            "go",
            "golang",
            "hacktoberfest",
            "open-source",
            "secret",
            "security",
            "security-tools"
        ],
        "subscribers": 162,
        "readme": "# Gitleaks\n\n```\n\u250c\u2500\u25cb\u2500\u2500\u2500\u2510\n\u2502 \u2502\u2572  \u2502\n\u2502 \u2502 \u25cb \u2502\n\u2502 \u25cb \u2591 \u2502\n\u2514\u2500\u2591\u2500\u2500\u2500\u2518\n```\n\n<p align=\"left\">\n  <p align=\"left\">\n\t  <a href=\"https://github.com/gitleaks/gitleaks/actions/workflows/test.yml\">\n\t\t  <img alt=\"Github Test\" src=\"https://github.com/gitleaks/gitleaks/actions/workflows/test.yml/badge.svg\">\n\t  </a>\n\t  <a href=\"https://hub.docker.com/r/zricethezav/gitleaks\">\n\t\t  <img src=\"https://img.shields.io/docker/pulls/zricethezav/gitleaks.svg\" />\n\t  </a>\n\t  <a href=\"https://github.com/gitleaks/gitleaks-action\">\n        \t<img alt=\"gitleaks badge\" src=\"https://img.shields.io/badge/protected%20by-gitleaks-blue\">\n    \t </a>\n  </p>\n</p>\n\n### Join our Discord! [![Discord](https://img.shields.io/discord/1102689410522284044.svg?label=&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)](https://discord.gg/8Hzbrnkr7E)\n\nGitleaks is a tool for **detecting** secrets like passwords, API keys, and tokens in git repos, files, and whatever else you wanna throw at it via `stdin`.\n\n```\n\u279c  ~/code(master) gitleaks git -v\n\n    \u25cb\n    \u2502\u2572\n    \u2502 \u25cb\n    \u25cb \u2591\n    \u2591    gitleaks\n\n\nFinding:     \"export BUNDLE_ENTERPRISE__CONTRIBSYS__COM=cafebabe:deadbeef\",\nSecret:      cafebabe:deadbeef\nRuleID:      sidekiq-secret\nEntropy:     2.609850\nFile:        cmd/generate/config/rules/sidekiq.go\nLine:        23\nCommit:      cd5226711335c68be1e720b318b7bc3135a30eb2\nAuthor:      John\nEmail:       john@users.noreply.github.com\nDate:        2022-08-03T12:31:40Z\nFingerprint: cd5226711335c68be1e720b318b7bc3135a30eb2:cmd/generate/config/rules/sidekiq.go:sidekiq-secret:23\n```\n\n## Getting Started\n\nGitleaks can be installed using Homebrew, Docker, or Go. Gitleaks is also available in binary form for many popular platforms and OS types on the [releases page](https://github.com/gitleaks/gitleaks/releases). In addition, Gitleaks can be implemented as a pre-commit hook directly in your repo or as a GitHub action using [Gitleaks-Action](https://github.com/gitleaks/gitleaks-action).\n\n### Installing\n\n```bash\n# MacOS\nbrew install gitleaks\n\n# Docker (DockerHub)\ndocker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\ndocker pull ghcr.io/gitleaks/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# From Source (make sure `go` is installed)\ngit clone https://github.com/gitleaks/gitleaks.git\ncd gitleaks\nmake build\n```\n\n### GitHub Action\n\nCheck out the official [Gitleaks GitHub Action](https://github.com/gitleaks/gitleaks-action)\n\n```\nname: gitleaks\non: [pull_request, push, workflow_dispatch]\njobs:\n  scan:\n    name: gitleaks\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          fetch-depth: 0\n      - uses: gitleaks/gitleaks-action@v2\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts.\n```\n\n### Pre-Commit\n\n1. Install pre-commit from https://pre-commit.com/#install\n2. Create a `.pre-commit-config.yaml` file at the root of your repository with the following content:\n\n   ```\n   repos:\n     - repo: https://github.com/gitleaks/gitleaks\n       rev: v8.23.1\n       hooks:\n         - id: gitleaks\n   ```\n\n   for a [native execution of GitLeaks](https://github.com/gitleaks/gitleaks/releases) or use the [`gitleaks-docker` pre-commit ID](https://github.com/gitleaks/gitleaks/blob/master/.pre-commit-hooks.yaml) for executing GitLeaks using the [official Docker images](#docker)\n\n3. Auto-update the config to the latest repos' versions by executing `pre-commit autoupdate`\n4. Install with `pre-commit install`\n5. Now you're all set!\n\n```\n\u279c git commit -m \"this commit contains a secret\"\nDetect hardcoded secrets.................................................Failed\n```\n\nNote: to disable the gitleaks pre-commit hook you can prepend `SKIP=gitleaks` to the commit command\nand it will skip running gitleaks\n\n```\n\u279c SKIP=gitleaks git commit -m \"skip gitleaks check\"\nDetect hardcoded secrets................................................Skipped\n```\n\n## Usage\n\n```\nUsage:\n  gitleaks [command]\n\nAvailable Commands:\n  completion  generate the autocompletion script for the specified shell\n  dir         scan directories or files for secrets\n  git         scan git repositories for secrets\n  help        Help about any command\n  stdin       detect secrets from stdin\n  version     display gitleaks version\n\nFlags:\n  -b, --baseline-path string          path to baseline with issues that can be ignored\n  -c, --config string                 config file path\n                                      order of precedence:\n                                      1. --config/-c\n                                      2. env var GITLEAKS_CONFIG\n                                      3. (target path)/.gitleaks.toml\n                                      If none of the three options are used, then gitleaks will use the default config\n      --enable-rule strings           only enable specific rules by id\n      --exit-code int                 exit code when leaks have been encountered (default 1)\n  -i, --gitleaks-ignore-path string   path to .gitleaksignore file or folder containing one (default \".\")\n  -h, --help                          help for gitleaks\n      --ignore-gitleaks-allow         ignore gitleaks:allow comments\n  -l, --log-level string              log level (trace, debug, info, warn, error, fatal) (default \"info\")\n      --max-decode-depth int          allow recursive decoding up to this depth (default \"0\", no decoding is done)\n      --max-target-megabytes int      files larger than this will be skipped\n      --no-banner                     suppress banner\n      --no-color                      turn off color for verbose output\n      --redact uint[=100]             redact secrets from logs and stdout. To redact only parts of the secret just apply a percent value from 0..100. For example --redact=20 (default 100%)\n  -f, --report-format string          output format (json, csv, junit, sarif) (default \"json\")\n  -r, --report-path string            report file\n      --report-template string        template file used to generate the report (implies --report-format=template)\n  -v, --verbose                       show verbose output from scan\n      --version                       version for gitleaks\n\nUse \"gitleaks [command] --help\" for more information about a command.\n```\n\n### Commands\n\n\u26a0\ufe0f v8.19.0 introduced a change that deprecated `detect` and `protect`. Those commands are still available but\nare hidden in the `--help` menu. Take a look at this [gist](https://gist.github.com/zricethezav/b325bb93ebf41b9c0b0507acf12810d2) for easy command translations.\nIf you find v8.19.0 broke an existing command (`detect`/`protect`), please open an issue.\n\nThere are three scanning modes: `git`, `dir`, and `stdin`.\n\n#### Git\nThe `git` command lets you scan local git repos. Under the hood, gitleaks uses the `git log -p` command to scan patches.\nYou can configure the behavior of `git log -p` with the `log-opts` option.\nFor example, if you wanted to run gitleaks on a range of commits you could use the following\ncommand: `gitleaks git -v --log-opts=\"--all commitA..commitB\" path_to_repo`. See the [git log](https://git-scm.com/docs/git-log) documentation for more information.\nIf there is no target specified as a positional argument, then gitleaks will attempt to scan the current working directory as a git repo.\n\n#### Dir\nThe `dir` (aliases include `files`, `directory`) command lets you scan directories and files. Example: `gitleaks dir -v path_to_directory_or_file`.\nIf there is no target specified as a positional argument, then gitleaks will scan the current working directory.\n\n#### Stdin\nYou can also stream data to gitleaks with the `stdin` command. Example: `cat some_file | gitleaks -v stdin`\n\n### Creating a baseline\n\nWhen scanning large repositories or repositories with a long history, it can be convenient to use a baseline. When using a baseline,\ngitleaks will ignore any old findings that are present in the baseline. A baseline can be any gitleaks report. To create a gitleaks report, run gitleaks with the `--report-path` parameter.\n\n```\ngitleaks git --report-path gitleaks-report.json # This will save the report in a file called gitleaks-report.json\n```\n\nOnce as baseline is created it can be applied when running the detect command again:\n\n```\ngitleaks git --baseline-path gitleaks-report.json --report-path findings.json\n```\n\nAfter running the detect command with the --baseline-path parameter, report output (findings.json) will only contain new issues.\n\n## Pre-Commit hook\n\nYou can run Gitleaks as a pre-commit hook by copying the example `pre-commit.py` script into\nyour `.git/hooks/` directory.\n\n## Configuration\n\nGitleaks offers a configuration format you can follow to write your own secret detection rules:\n\n```toml\n# Title for the gitleaks configuration file.\ntitle = \"Gitleaks title\"\n\n# Extend the base (this) configuration. When you extend a configuration\n# the base rules take precedence over the extended rules. I.e., if there are\n# duplicate rules in both the base configuration and the extended configuration\n# the base rules will override the extended rules.\n# Another thing to know with extending configurations is you can chain together\n# multiple configuration files to a depth of 2. Allowlist arrays are appended\n# and can contain duplicates.\n# useDefault and path can NOT be used at the same time. Choose one.\n[extend]\n# useDefault will extend the base configuration with the default gitleaks config:\n# https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml\nuseDefault = true\n# or you can supply a path to a configuration. Path is relative to where gitleaks\n# was invoked, not the location of the base config.\npath = \"common_config.toml\"\n# If there are any rules you don't want to inherit, they can be specified here.\ndisabledRules = [ \"generic-api-key\"]\n\n# An array of tables that contain information that define instructions\n# on how to detect secrets\n[[rules]]\n\n# Unique identifier for this rule\nid = \"awesome-rule-1\"\n\n# Short human readable description of the rule.\ndescription = \"awesome rule 1\"\n\n# Golang regular expression used to detect secrets. Note Golang's regex engine\n# does not support lookaheads.\nregex = '''one-go-style-regex-for-this-rule'''\n\n# Int used to extract secret from regex match and used as the group that will have\n# its entropy checked if `entropy` is set.\nsecretGroup = 3\n\n# Float representing the minimum shannon entropy a regex group must have to be considered a secret.\nentropy = 3.5\n\n# Golang regular expression used to match paths. This can be used as a standalone rule or it can be used\n# in conjunction with a valid `regex` entry.\npath = '''a-file-path-regex'''\n\n# Keywords are used for pre-regex check filtering. Rules that contain\n# keywords will perform a quick string compare check to make sure the\n# keyword(s) are in the content being scanned. Ideally these values should\n# either be part of the identiifer or unique strings specific to the rule's regex\n# (introduced in v8.6.0)\nkeywords = [\n  \"auth\",\n  \"password\",\n  \"token\",\n]\n\n# Array of strings used for metadata and reporting purposes.\ntags = [\"tag\",\"another tag\"]\n\n    # \u26a0\ufe0f In v8.21.0 `[rules.allowlist]` was replaced with `[[rules.allowlists]]`.\n    # This change was backwards-compatible: instances of `[rules.allowlist]` still  work.\n    #\n    # You can define multiple allowlists for a rule to reduce false positives.\n    # A finding will be ignored if _ANY_ `[[rules.allowlists]]` matches.\n    [[rules.allowlists]]\n    description = \"ignore commit A\"\n    # When multiple criteria are defined the default condition is \"OR\".\n    # e.g., this can match on |commits| OR |paths| OR |stopwords|.\n    condition = \"OR\"\n    commits = [ \"commit-A\", \"commit-B\"]\n    paths = [\n      '''go\\.mod''',\n      '''go\\.sum'''\n    ]\n    # note: stopwords targets the extracted secret, not the entire regex match\n    # like 'regexes' does. (stopwords introduced in 8.8.0)\n    stopwords = [\n      '''client''',\n      '''endpoint''',\n    ]\n\n    [[rules.allowlists]]\n    # The \"AND\" condition can be used to make sure all criteria match.\n    # e.g., this matches if |regexes| AND |paths| are satisfied.\n    condition = \"AND\"\n    # note: |regexes| defaults to check the _Secret_ in the finding.\n    # Acceptable values for |regexTarget| are \"secret\" (default), \"match\", and \"line\".\n    regexTarget = \"match\"\n    regexes = [ '''(?i)parseur[il]''' ]\n    paths = [ '''package-lock\\.json''' ]\n\n# You can extend a particular rule from the default config. e.g., gitlab-pat\n# if you have defined a custom token prefix on your GitLab instance\n[[rules]]\nid = \"gitlab-pat\"\n# all the other attributes from the default rule are inherited\n\n    [[rules.allowlists]]\n    regexTarget = \"line\"\n    regexes = [ '''MY-glpat-''' ]\n\n# This is a global allowlist which has a higher order of precedence than rule-specific allowlists.\n# If a commit listed in the `commits` field below is encountered then that commit will be skipped and no\n# secrets will be detected for said commit. The same logic applies for regexes and paths.\n[allowlist]\ndescription = \"global allow list\"\ncommits = [ \"commit-A\", \"commit-B\", \"commit-C\"]\npaths = [\n  '''gitleaks\\.toml''',\n  '''(.*?)(jpg|gif|doc)'''\n]\n\n# note: (global) regexTarget defaults to check the _Secret_ in the finding.\n# if regexTarget is not specified then _Secret_ will be used.\n# Acceptable values for regexTarget are \"match\" and \"line\"\nregexTarget = \"match\"\nregexes = [\n  '''219-09-9999''',\n  '''078-05-1120''',\n  '''(9[0-9]{2}|666)-\\d{2}-\\d{4}''',\n]\n# note: stopwords targets the extracted secret, not the entire regex match\n# like 'regexes' does. (stopwords introduced in 8.8.0)\nstopwords = [\n  '''client''',\n  '''endpoint''',\n]\n```\n\nRefer to the default [gitleaks config](https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml) for examples or follow the [contributing guidelines](https://github.com/gitleaks/gitleaks/blob/master/CONTRIBUTING.md) if you would like to contribute to the default configuration. Additionally, you can check out [this gitleaks blog post](https://blog.gitleaks.io/stop-leaking-secrets-configuration-2-3-aeed293b1fbf) which covers advanced configuration setups.\n\n### Additional Configuration\n\n#### gitleaks:allow\n\nIf you are knowingly committing a test secret that gitleaks will catch you can add a `gitleaks:allow` comment to that line which will instruct gitleaks\nto ignore that secret. Ex:\n\n```\nclass CustomClass:\n    discord_client_secret = '8dyfuiRyq=vVc3RRr_edRk-fK__JItpZ'  #gitleaks:allow\n\n```\n\n#### .gitleaksignore\n\nYou can ignore specific findings by creating a `.gitleaksignore` file at the root of your repo. In release v8.10.0 Gitleaks added a `Fingerprint` value to the Gitleaks report. Each leak, or finding, has a Fingerprint that uniquely identifies a secret. Add this fingerprint to the `.gitleaksignore` file to ignore that specific secret. See Gitleaks' [.gitleaksignore](https://github.com/gitleaks/gitleaks/blob/master/.gitleaksignore) for an example. Note: this feature is experimental and is subject to change in the future.\n\n#### Decoding\n\nSometimes secrets are encoded in a way that can make them difficult to find\nwith just regex. Now you can tell gitleaks to automatically find and decode\nencoded text. The flag `--max-decode-depth` enables this feature (the default\nvalue \"0\" means the feature is disabled by default).\n\nRecursive decoding is supported since decoded text can also contain encoded\ntext.  The flag `--max-decode-depth` sets the recursion limit. Recursion stops\nwhen there are no new segments of encoded text to decode, so setting a really\nhigh max depth doesn't mean it will make that many passes. It will only make as\nmany as it needs to decode the text. Overall, decoding only minimally increases\nscan times.\n\nThe findings for encoded text differ from normal findings in the following\nways:\n\n- The location points the bounds of the encoded text\n  - If the rule matches outside the encoded text, the bounds are adjusted to\n    include that as well\n- The match and secret contain the decoded value\n- Two tags are added `decoded:<encoding>` and `decode-depth:<depth>`\n\nCurrently supported encodings:\n\n- `base64` (both standard and base64url)\n\n#### Reporting\n\nGitleaks has built-in support for several report formats: [`json`](https://github.com/gitleaks/gitleaks/blob/master/testdata/expected/report/json_simple.json), [`csv`](https://github.com/gitleaks/gitleaks/blob/master/testdata/expected/report/csv_simple.csv?plain=1), [`junit`](https://github.com/gitleaks/gitleaks/blob/master/testdata/expected/report/junit_simple.xml), and [`sarif`](https://github.com/gitleaks/gitleaks/blob/master/testdata/expected/report/sarif_simple.sarif).\n\nIf none of these formats fit your need, you can create your own report format with a [Go `text/template` .tmpl file](https://www.digitalocean.com/community/tutorials/how-to-use-templates-in-go#step-4-writing-a-template) and the `--report-template` flag. The template can use [extended functionality from the `Masterminds/sprig` template library](https://masterminds.github.io/sprig/).\n\nFor example, the following template provides a custom JSON output:\n```gotemplate\n# jsonextra.tmpl\n[{{ $lastFinding := (sub (len . ) 1) }}\n{{- range $i, $finding := . }}{{with $finding}}\n    {\n        \"Description\": {{ quote .Description }},\n        \"StartLine\": {{ .StartLine }},\n        \"EndLine\": {{ .EndLine }},\n        \"StartColumn\": {{ .StartColumn }},\n        \"EndColumn\": {{ .EndColumn }},\n        \"Line\": {{ quote .Line }},\n        \"Match\": {{ quote .Match }},\n        \"Secret\": {{ quote .Secret }},\n        \"File\": \"{{ .File }}\",\n        \"SymlinkFile\": {{ quote .SymlinkFile }},\n        \"Commit\": {{ quote .Commit }},\n        \"Entropy\": {{ .Entropy }},\n        \"Author\": {{ quote .Author }},\n        \"Email\": {{ quote .Email }},\n        \"Date\": {{ quote .Date }},\n        \"Message\": {{ quote .Message }},\n        \"Tags\": [{{ $lastTag := (sub (len .Tags ) 1) }}{{ range $j, $tag := .Tags }}{{ quote . }}{{ if ne $j $lastTag }},{{ end }}{{ end }}],\n        \"RuleID\": {{ quote .RuleID }},\n        \"Fingerprint\": {{ quote .Fingerprint }}\n    }{{ if ne $i $lastFinding }},{{ end }}\n{{- end}}{{ end }}\n]\n```\n\nUsage:\n```sh\n$ gitleaks dir ~/leaky-repo/ --report-path \"report.json\" --report-format template --report-template testdata/report/jsonextra.tmpl\n```\n\n## Sponsorships\n\n<p align=\"left\">\n\t<h3><a href=\"https://coderabbit.ai/?utm_source=oss&utm_medium=sponsorship&utm_campaign=gitleaks\">coderabbit.ai</h3>\n\t  <a href=\"https://coderabbit.ai/?utm_source=oss&utm_medium=sponsorship&utm_campaign=gitleaks\">\n\t\t  <img alt=\"CodeRabbit.ai Sponsorship\" src=\"https://github.com/gitleaks/gitleaks/assets/15034943/76c30a85-887b-47ca-9956-17a8e55c6c41\" width=200>\n\t  </a>\n</p>\n\n\n## Exit Codes\n\nYou can always set the exit code when leaks are encountered with the --exit-code flag. Default exit codes below:\n\n```\n0 - no leaks present\n1 - leaks or error encountered\n126 - unknown flag\n```\n",
        "releases": [
            {
                "name": "v8.23.1",
                "date": "2025-01-15T12:51:08Z"
            },
            {
                "name": "v8.23.0",
                "date": "2025-01-13T15:04:20Z"
            },
            {
                "name": "v8.22.1",
                "date": "2024-12-30T16:25:05Z"
            },
            {
                "name": "v8.22.0",
                "date": "2024-12-20T16:12:19Z"
            },
            {
                "name": "v8.21.4",
                "date": "2024-12-20T15:36:58Z"
            },
            {
                "name": "v8.21.3",
                "date": "2024-12-19T20:38:30Z"
            },
            {
                "name": "v8.21.2",
                "date": "2024-10-28T13:32:54Z"
            },
            {
                "name": "v8.21.1",
                "date": "2024-10-18T11:37:06Z"
            },
            {
                "name": "v8.21.0",
                "date": "2024-10-15T02:13:58Z"
            },
            {
                "name": "v8.20.1",
                "date": "2024-10-07T16:56:54Z"
            },
            {
                "name": "v8.20.0",
                "date": "2024-10-03T15:06:56Z"
            },
            {
                "name": "v8.19.3",
                "date": "2024-09-26T14:22:39Z"
            },
            {
                "name": "v8.19.2",
                "date": "2024-09-16T13:44:21Z"
            },
            {
                "name": "v8.19.1",
                "date": "2024-09-14T09:02:52Z"
            },
            {
                "name": "v8.19.0",
                "date": "2024-09-14T00:46:13Z"
            },
            {
                "name": "v8.18.4",
                "date": "2024-06-14T15:38:27Z"
            },
            {
                "name": "v8.18.3",
                "date": "2024-06-01T13:45:59Z"
            },
            {
                "name": "v8.18.2",
                "date": "2024-02-01T17:08:03Z"
            },
            {
                "name": "v8.18.1",
                "date": "2023-11-17T20:58:58Z"
            },
            {
                "name": "v8.18.0",
                "date": "2023-08-22T19:33:19Z"
            },
            {
                "name": "v8.17.0",
                "date": "2023-06-15T12:50:40Z"
            },
            {
                "name": "v8.16.4",
                "date": "2023-06-06T18:32:34Z"
            },
            {
                "name": "v8.16.3",
                "date": "2023-04-19T17:32:08Z"
            },
            {
                "name": "v8.16.2",
                "date": "2023-03-30T13:24:23Z"
            },
            {
                "name": "v8.16.1",
                "date": "2023-03-14T17:18:20Z"
            },
            {
                "name": "v8.16.0",
                "date": "2023-02-26T15:04:12Z"
            },
            {
                "name": "v8.15.4",
                "date": "2023-02-25T15:13:29Z"
            },
            {
                "name": "v8.15.3",
                "date": "2023-01-22T02:25:08Z"
            },
            {
                "name": "v8.15.2",
                "date": "2022-12-02T01:19:35Z"
            },
            {
                "name": "v8.15.1-test3",
                "date": "2022-11-28T16:35:49Z"
            },
            {
                "name": "v8.15.1-test2",
                "date": "2022-11-28T16:18:13Z"
            },
            {
                "name": "v8.15.1-test",
                "date": "2022-11-28T15:56:03Z"
            },
            {
                "name": "v8.15.1",
                "date": "2022-11-20T18:43:55Z"
            },
            {
                "name": "v8.15.0",
                "date": "2022-10-13T14:15:42Z"
            },
            {
                "name": "v8.14.1",
                "date": "2022-10-11T12:13:34Z"
            },
            {
                "name": "v8.14.0",
                "date": "2022-10-10T21:14:35Z"
            },
            {
                "name": "v8.13.0",
                "date": "2022-09-22T01:04:09Z"
            },
            {
                "name": "v8.12.0",
                "date": "2022-09-04T14:13:02Z"
            },
            {
                "name": "v8.11.2",
                "date": "2022-08-26T15:01:46Z"
            },
            {
                "name": "v8.11.1",
                "date": "2022-08-24T22:57:10Z"
            },
            {
                "name": "v8.11.0",
                "date": "2022-08-17T00:45:43Z"
            },
            {
                "name": "v8.10.3",
                "date": "2022-08-12T14:26:26Z"
            },
            {
                "name": "v8.10.2",
                "date": "2022-08-08T19:51:14Z"
            },
            {
                "name": "v8.10.1",
                "date": "2022-08-08T12:57:31Z"
            },
            {
                "name": "v8.10.0",
                "date": "2022-08-07T18:51:44Z"
            },
            {
                "name": "v8.9.0",
                "date": "2022-07-27T23:30:43Z"
            },
            {
                "name": "v8.8.12",
                "date": "2022-07-11T15:52:53Z"
            },
            {
                "name": "v8.8.11",
                "date": "2022-06-28T11:15:04Z"
            },
            {
                "name": "v8.8.10",
                "date": "2022-06-27T22:08:26Z"
            },
            {
                "name": "v8.8.9",
                "date": "2022-06-27T18:43:59Z"
            },
            {
                "name": "v8.8.8",
                "date": "2022-06-20T20:11:47Z"
            },
            {
                "name": "v8.8.7",
                "date": "2022-06-02T21:52:16Z"
            },
            {
                "name": "v8.8.6",
                "date": "2022-05-28T16:56:25Z"
            },
            {
                "name": "v8.8.5",
                "date": "2022-05-25T13:22:03Z"
            },
            {
                "name": "v8.8.4",
                "date": "2022-04-28T02:51:59Z"
            },
            {
                "name": "v8.8.3",
                "date": "2022-04-27T12:30:38Z"
            },
            {
                "name": "v8.8.2",
                "date": "2022-04-23T16:19:48Z"
            },
            {
                "name": "v8.8.1",
                "date": "2022-04-21T22:02:18Z"
            },
            {
                "name": "v8.8.0",
                "date": "2022-04-21T13:34:03Z"
            },
            {
                "name": "v8.7.2",
                "date": "2022-04-20T23:36:00Z"
            },
            {
                "name": "v8.7.1",
                "date": "2022-04-19T02:04:17Z"
            },
            {
                "name": "v8.7.0",
                "date": "2022-04-16T22:44:14Z"
            },
            {
                "name": "v8.6.1",
                "date": "2022-04-06T15:33:57Z"
            },
            {
                "name": "v8.6.0",
                "date": "2022-04-05T16:53:00Z"
            },
            {
                "name": "v8.5.3",
                "date": "2022-03-29T16:56:10Z"
            },
            {
                "name": "v8.5.2",
                "date": "2022-03-28T13:23:09Z"
            },
            {
                "name": "v8.5.1",
                "date": "2022-03-22T19:36:08Z"
            },
            {
                "name": "v8.5.0",
                "date": "2022-03-21T14:29:04Z"
            },
            {
                "name": "v8.4.0",
                "date": "2022-03-12T17:56:14Z"
            },
            {
                "name": "v8.3.0",
                "date": "2022-02-22T23:15:26Z"
            },
            {
                "name": "v8.2.7",
                "date": "2022-01-07T17:01:34Z"
            },
            {
                "name": "v8.2.6",
                "date": "2022-01-07T15:02:14Z"
            },
            {
                "name": "v8.2.5",
                "date": "2021-12-29T01:26:29Z"
            },
            {
                "name": "v8.2.4",
                "date": "2021-12-22T00:12:12Z"
            },
            {
                "name": "v8.2.3",
                "date": "2021-12-17T23:30:15Z"
            },
            {
                "name": "v8.2.2",
                "date": "2021-12-17T16:22:31Z"
            },
            {
                "name": "v8.2.1",
                "date": "2021-12-12T18:27:07Z"
            },
            {
                "name": "v8.2.0",
                "date": "2021-12-09T15:26:23Z"
            },
            {
                "name": "v8.1.3",
                "date": "2021-12-08T21:12:23Z"
            },
            {
                "name": "v8.1.2",
                "date": "2021-12-08T01:13:43Z"
            },
            {
                "name": "v8.1.1",
                "date": "2021-12-06T17:12:35Z"
            },
            {
                "name": "v8.1.0",
                "date": "2021-12-03T02:07:56Z"
            },
            {
                "name": "v8.0.7",
                "date": "2021-12-02T17:20:17Z"
            },
            {
                "name": "v8.0.6",
                "date": "2021-11-30T18:32:44Z"
            },
            {
                "name": "v8.0.5",
                "date": "2021-11-30T15:54:23Z"
            },
            {
                "name": "v8.0.4",
                "date": "2021-11-25T17:40:54Z"
            },
            {
                "name": "v8.0.3",
                "date": "2021-11-25T02:32:02Z"
            },
            {
                "name": "v8.0.2",
                "date": "2021-11-24T14:07:56Z"
            },
            {
                "name": "v8.0.1",
                "date": "2021-11-24T13:53:19Z"
            },
            {
                "name": "v8.0.0",
                "date": "2021-11-22T18:20:33Z"
            },
            {
                "name": "v7.6.1",
                "date": "2021-09-09T16:53:15Z"
            },
            {
                "name": "v7.6.0",
                "date": "2021-09-04T00:45:35Z"
            },
            {
                "name": "v7.5.0",
                "date": "2021-05-05T13:12:37Z"
            },
            {
                "name": "v7.4.1",
                "date": "2021-04-22T22:12:13Z"
            },
            {
                "name": "v7.4.0",
                "date": "2021-04-09T18:13:58Z"
            },
            {
                "name": "v7.3.0",
                "date": "2021-03-05T21:27:44Z"
            },
            {
                "name": "v7.2.2",
                "date": "2021-02-03T18:57:45Z"
            },
            {
                "name": "v7.2.1",
                "date": "2021-01-22T17:06:37Z"
            },
            {
                "name": "v7.2.0",
                "date": "2020-12-12T01:48:19Z"
            },
            {
                "name": "v7.1.2",
                "date": "2020-12-09T21:06:52Z"
            },
            {
                "name": "v7.1.1",
                "date": "2020-12-09T18:27:38Z"
            },
            {
                "name": "v7.1.0",
                "date": "2020-12-08T23:09:34Z"
            },
            {
                "name": "v7.0.2",
                "date": "2020-12-05T17:00:36Z"
            },
            {
                "name": "v7.0.1",
                "date": "2020-12-03T22:05:47Z"
            },
            {
                "name": "v7.0.0",
                "date": "2020-12-02T22:25:06Z"
            },
            {
                "name": "v6.2.0",
                "date": "2020-11-03T20:54:19Z"
            },
            {
                "name": "v6.1.2",
                "date": "2020-09-02T12:40:37Z"
            },
            {
                "name": "v6.1.1",
                "date": "2020-09-02T00:50:38Z"
            },
            {
                "name": "v6.1.0",
                "date": "2020-08-31T14:32:24Z"
            },
            {
                "name": "v6.0.0",
                "date": "2020-08-12T22:17:45Z"
            },
            {
                "name": "v5.0.1",
                "date": "2020-07-25T19:03:15Z"
            },
            {
                "name": "v5.0.0",
                "date": "2020-07-24T16:14:23Z"
            },
            {
                "name": "v4.3.1",
                "date": "2020-06-03T12:56:48Z"
            },
            {
                "name": "v4.3.0",
                "date": "2020-05-31T21:57:04Z"
            },
            {
                "name": "v4.2.0",
                "date": "2020-05-09T15:47:33Z"
            },
            {
                "name": "v4.1.1",
                "date": "2020-04-05T16:27:22Z"
            },
            {
                "name": "v4.1.0",
                "date": "2020-03-03T01:34:45Z"
            },
            {
                "name": "v4.0.1",
                "date": "2020-02-27T01:43:38Z"
            },
            {
                "name": "v4.0.0",
                "date": "2020-02-27T00:14:35Z"
            },
            {
                "name": "v3.3.0",
                "date": "2020-02-01T22:09:59Z"
            },
            {
                "name": "v3.2.2",
                "date": "2020-01-23T01:43:54Z"
            },
            {
                "name": "v3.2.1",
                "date": "2020-01-22T23:14:56Z"
            },
            {
                "name": "v3.2.0",
                "date": "2020-01-19T17:49:12Z"
            },
            {
                "name": "v3.1.0",
                "date": "2020-01-12T14:42:19Z"
            },
            {
                "name": "v3.0.3",
                "date": "2019-11-30T15:52:10Z"
            },
            {
                "name": "v3.0.2",
                "date": "2019-11-23T15:30:43Z"
            },
            {
                "name": "v3.0.1",
                "date": "2019-11-17T18:17:03Z"
            },
            {
                "name": "v3.0.0",
                "date": "2019-11-15T20:06:17Z"
            },
            {
                "name": "Sam's Release",
                "date": "2019-08-01T23:09:10Z"
            },
            {
                "name": "v2.0.0",
                "date": "2019-04-17T01:58:32Z"
            },
            {
                "name": "v1.25.1",
                "date": "2019-03-30T23:28:50Z"
            },
            {
                "name": "v1.25.0",
                "date": "2019-03-30T01:01:33Z"
            },
            {
                "name": "v1.24.0",
                "date": "2019-02-07T02:11:29Z"
            },
            {
                "name": "v1.23.0",
                "date": "2019-01-07T14:11:50Z"
            },
            {
                "name": "v1.22.0",
                "date": "2018-12-10T16:02:17Z"
            },
            {
                "name": "v1.21.0",
                "date": "2018-11-18T15:05:57Z"
            },
            {
                "name": "v1.20.0",
                "date": "2018-11-13T03:51:35Z"
            },
            {
                "name": "v1.19.3",
                "date": "2018-11-08T01:45:05Z"
            },
            {
                "name": "v1.19.2",
                "date": "2018-11-07T04:40:01Z"
            },
            {
                "name": "v1.19.1",
                "date": "2018-11-06T00:26:47Z"
            },
            {
                "name": "v1.19.0",
                "date": "2018-11-03T16:41:16Z"
            },
            {
                "name": "v1.18.0",
                "date": "2018-10-28T00:39:32Z"
            },
            {
                "name": "v1.17.0",
                "date": "2018-10-26T19:51:44Z"
            },
            {
                "name": "v1.16.1",
                "date": "2018-10-25T17:52:39Z"
            },
            {
                "name": "v1.16.0",
                "date": "2018-10-24T22:03:15Z"
            },
            {
                "name": "v1.15.0",
                "date": "2018-10-23T22:21:55Z"
            },
            {
                "name": "v1.14.0",
                "date": "2018-10-22T23:59:23Z"
            },
            {
                "name": "v1.13.0",
                "date": "2018-10-20T22:55:23Z"
            },
            {
                "name": "v1.12.1",
                "date": "2018-10-17T13:21:11Z"
            },
            {
                "name": "v1.12.0",
                "date": "2018-10-13T00:00:55Z"
            },
            {
                "name": "v1.11.1",
                "date": "2018-10-10T14:53:22Z"
            },
            {
                "name": "v1.11.0",
                "date": "2018-10-10T02:15:56Z"
            },
            {
                "name": "v1.10.0",
                "date": "2018-10-09T23:50:03Z"
            },
            {
                "name": "v1.9.0",
                "date": "2018-10-07T23:45:12Z"
            },
            {
                "name": "v1.8.0",
                "date": "2018-10-07T23:30:16Z"
            },
            {
                "name": "v1.7.3",
                "date": "2018-10-07T00:34:43Z"
            },
            {
                "name": "v1.7.2",
                "date": "2018-10-04T14:48:49Z"
            },
            {
                "name": "v1.7.1",
                "date": "2018-10-02T17:36:32Z"
            },
            {
                "name": "v1.7.0",
                "date": "2018-10-02T14:54:52Z"
            },
            {
                "name": "v1.6.1",
                "date": "2018-10-02T03:47:07Z"
            },
            {
                "name": "v1.6.0",
                "date": "2018-10-02T02:27:46Z"
            },
            {
                "name": "v1.5.0",
                "date": "2018-09-30T03:25:10Z"
            },
            {
                "name": "v1.4.0",
                "date": "2018-09-26T19:32:01Z"
            },
            {
                "name": "v1.3.0",
                "date": "2018-09-13T00:35:18Z"
            },
            {
                "name": "v1.2.1 ",
                "date": "2018-08-13T22:57:39Z"
            },
            {
                "name": "v1.2.0 -- github enterprise support",
                "date": "2018-08-10T20:07:54Z"
            },
            {
                "name": "v1.1.2",
                "date": "2018-07-23T01:21:39Z"
            },
            {
                "name": "v1.1.1",
                "date": "2018-07-21T18:31:16Z"
            },
            {
                "name": "v1.1.0",
                "date": "2018-07-21T16:08:03Z"
            },
            {
                "name": "v1.0.0 -- The \"First\" Release",
                "date": "2018-07-21T01:21:32Z"
            },
            {
                "name": "v0.4.0",
                "date": "2018-03-10T19:36:05Z"
            },
            {
                "name": "v0.3.0",
                "date": "2018-03-05T03:01:28Z"
            },
            {
                "name": "v0.2.0",
                "date": "2018-02-25T22:27:05Z"
            },
            {
                "name": "Version 0.1.0",
                "date": "2018-02-06T15:18:56Z"
            }
        ]
    }
}