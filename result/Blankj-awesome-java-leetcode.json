{
    "https://api.github.com/repos/Blankj/awesome-java-leetcode": {
        "forks": 1727,
        "watchers": 8706,
        "stars": 8706,
        "languages": {
            "Java": 92264
        },
        "commits": [
            "2020-12-10T15:20:20Z",
            "2020-07-08T05:37:41Z",
            "2020-07-07T11:25:03Z",
            "2020-07-06T05:32:03Z",
            "2020-06-29T13:24:51Z",
            "2020-06-18T03:39:06Z",
            "2019-10-12T07:16:18Z",
            "2019-08-15T14:06:23Z",
            "2019-06-29T12:30:11Z",
            "2019-04-25T09:12:22Z",
            "2019-04-25T09:04:00Z",
            "2019-01-31T18:19:50Z",
            "2019-01-31T18:12:15Z",
            "2018-10-31T10:01:33Z",
            "2018-10-23T11:46:20Z",
            "2018-05-17T03:40:08Z",
            "2018-03-15T09:39:07Z",
            "2018-03-06T03:48:41Z",
            "2018-02-01T17:47:57Z",
            "2018-02-01T17:42:07Z",
            "2018-01-31T09:54:43Z",
            "2018-01-31T08:17:43Z",
            "2018-01-31T06:21:38Z",
            "2018-01-31T06:18:49Z",
            "2018-01-30T17:58:33Z",
            "2018-01-30T17:56:19Z",
            "2018-01-30T07:52:56Z",
            "2018-01-30T03:35:45Z",
            "2018-01-29T18:20:21Z",
            "2018-01-29T18:19:59Z"
        ],
        "creation_date": "2017-04-17T15:51:41Z",
        "contributors": 2,
        "topics": [
            "algorithm",
            "algorithms",
            "datastructure",
            "datastructures",
            "facebook",
            "leetcode",
            "leetcode-java",
            "leetcode-solutions"
        ],
        "subscribers": 373,
        "readme": "# awesome-java-leetcode\n\n\u6211\u5982\u4eca\u662f\u4e00\u540d Android Developer\uff0c\u5927\u5b66\u7684\u6211\u66fe\u662f\u4e00\u540d ACMer\uff0c\u6211\u4e00\u76f4\u8ba4\u4e3a\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u662f\u4f5c\u4e3a\u4e00\u540d\u7a0b\u5e8f\u5458\u5fc5\u987b\u638c\u63e1\u548c\u5584\u4e8e\u5229\u7528\u7684\uff0c\u4e3a\u4e86\u4e0d\u8ba9\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6de1\u51fa\u6211\u7684\u8bb0\u5fc6\uff0c\u6240\u4ee5\u6211\u6253\u7b97\u91cd\u62fe LeetCode \u4e4b Algorithm\uff0c\u8bed\u8a00\u9009\u62e9\u7684\u662f Java\uff0c\u9898\u5e93\u4f1a\u4e00\u70b9\u70b9\u5b8c\u5584\u8d77\u6765\uff0c\u6309\u7b80\u5355\uff0c\u4e2d\u7b49\uff0c\u56f0\u96be\u5206\u7c7b\uff0c\u76f8\u5e94\u96be\u5ea6\u4e0b\u6309\u9898\u53f7\u6392\u5e8f\uff0c\u6e90\u4ee3\u7801\u5728 [src][src] \u76ee\u5f55\u4e2d\uff0c\u76f8\u5173\u89e3\u9898\u90fd\u5728 [note][note] \u76ee\u5f55\u4e2d\uff0c\u60f3\u8981\u5b66\u4e60\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6216\u6253\u7b97\u5237 LeetCode \u7684\u5c0f\u4f19\u4f34\u4eec\u6b22\u8fce star \u54e6\u3002\n\n\u5982\u4eca\u6709\u673a\u4f1a\u9762\u8bd5 Facebook\uff0c\u9644\u4e0a LeetCode \u4e0a Facebook \u7684\u9762\u8bd5\u9898\u76ee\u5e8f\u53f7\uff0c\u5e0c\u671b\u53ef\u4ee5\u5e2e\u52a9\u5230\u4ee5\u540e\u60f3\u5165 Facebook \u7684\u5c0f\u4f19\u4f34:-)\n\n```\n1,10,13,15,17,20,23,25,26,28,33,38,43,44,49,50,56,57,67,68,69,71,75,76\n78,79,80,85,88,90,91,98,102,117,121,125,127,128,133,139,146,157,158,161\n168,173,200,206,208,209,210,211,215,218,221,234,235,236,238,252,253,257\n261,265,269,273,274,275,277,278,282,283,285,286,297,301,311,314,325,334\n341,377,380,398,404,410,461,477,494,523,525,534,535,543,554\n```\n\n\u5982\u679c\u60f3\u77e5\u9053\u66f4\u591a\u516c\u53f8 LeetCode \u9762\u8bd5\u9898\uff0c\u53ef\u4ee5\u53c2\u770b [Companies.md][companies]\u3002\n\n\u9644\u4e0a\u9547\u697c\u8bd7\uff1a\n\n> \u660e\u6709\u79d1\u4e3e\u516b\u80a1\uff0c\u4eca\u6709 LeetCode\u3002  \n> \u516b\u80a1\u5b9a\u683c\u5f0f\u800c\u53d6\u6587\u91c7\u5fc3\u610f\uff0cLeetCode \u5b9a\u9898\u76ee\u4e14\u91cd\u7b54\u6848\u80cc\u8bf5\u3002  \n> \u7f8e\u5176\u540d\u66f0\uff1a\"practice makes perfect.\"  \n> \u4e3a\u4f55\u4eca\u4e0d\u5982\u53e4\uff1f  \n> \u975e\u4e5f\u975e\u4e5f\uff0c  \n> \u79d1\u4e3e\u4e3a\u56fd\u53d6\u58eb\uff0cLeetCode \u4e3a Google \u7b5b\u7801\u5de5\uff0c\u5404\u53d6\u6240\u9700\u4e5f\u3002  \n\n## Easy\n\n| #    | Title                                                             | Tag                                               |\n| :--- | :---------------------------------------------------------------- | :------------------------------------------------ |\n| 1    | [Two Sum][0001]                                                   | Array, Hash Table                                 |\n| 7    | [Reverse Integer][0007]                                           | Math                                              |\n| 9    | [Palindrome Number][0009]                                         | Math                                              |\n| 13   | [Roman to Integer][0013]                                          | Math, String                                      |\n| 14   | [Longest Common Prefix][0014]                                     | String                                            |\n| 16.11| [\u8df3\u6c34\u677f(Diving Board LCCI)][16_11]                                 | \u9012\u5f52\u3001\u8bb0\u5fc6\u5316                                       |\n| 20   | [Valid Parentheses][0020]                                         | Stack, String                                     |\n| 21   | [Merge Two Sorted Lists][0021]                                    | Linked List                                       |\n| 26   | [Remove Duplicates from Sorted Array][0026]                       | Array, Two Pointers                               |\n| 27   | [Remove Element][0027]                                            | Array, Two Pointers                               |\n| 28   | [Implement strStr()][0028]                                        | Two Pointers, String                              |\n| 35   | [Search Insert Position][0035]                                    | String                                            |\n| 38   | [Count and Say][0038]                                             | String                                            |\n| 53   | [Maximum Subarray][0053]                                          | Array, Divide and Conquer, Dynamic Programming    |\n| 58   | [Length of Last Word][0058]                                       | String                                            |\n| 66   | [Plus One][0066]                                                  | Array, Math                                       |\n| 67   | [Add Binary][0067]                                                | Math, String                                      |\n| 69   | [Sqrt(x)][0069]                                                   | Binary Search, Math                               |\n| 70   | [Climbing Stairs][0070]                                           | Dynamic Programming                               |\n| 83   | [Remove Duplicates from Sorted List][0083]                        | Linked List                                       |\n| 88   | [Merge Sorted Array][0088]                                        | Array, Two Pointers                               |\n| 100  | [Same Tree][0100]                                                 | Tree, Depth-first Search                          |\n| 101  | [Symmetric Tree][0101]                                            | Tree, Depth-first Search, Breadth-first Search    |\n| 104  | [Maximum Depth of Binary Tree][0104]                              | Tree, Depth-first Search                          |\n| 107  | [Binary Tree Level Order Traversal II][107]                       | Tree, Breadth-first Search                        |\n| 108  | [Convert Sorted Array to Binary Search Tree][0108]                | Tree, Depth-first Search                          |\n| 110  | [Balanced Binary Tree][0110]                                      | Tree, Depth-first Search                          |\n| 111  | [Minimum Depth of Binary Tree][0111]                              | Tree, Depth-first Search, Breadth-first Search    |\n| 112  | [Path Sum][0112]                                                  | Tree, Depth-first Search                          |\n| 118  | [Pascal's Triangle][0118]                                         | Array                                             |\n| 119  | [Pascal's Triangle II][0119]                                      | Array                                             |\n| 121  | [Best Time to Buy and Sell Stock][0121]                           | Array, Dynamic Programmin                         |\n| 122  | [Best Time to Buy and Sell Stock II][0122]                        | Array, Greedy                                     |\n| 543  | [Diameter of Binary Tree][0543]                                   | Tree                                              |\n\n## Medium\n\n| #    | Title                                                             | Tag                                               |\n| :--- | :---------------------------------------------------------------- | :------------------------------------------------ |\n| 2    | [Add Two Numbers][0002]                                           | Linked List, Math                                 |\n| 3    | [Longest Substring Without Repeating Characters][0003]            | Hash Table, Two Pointers, String                  |\n| 5    | [Longest Palindromic Substring][0005]                             | String, Dynamic Programming                       |\n| 6    | [ZigZag Conversion][0006]                                         | String                                            |\n| 8    | [String to Integer (atoi)][0008]                                  | Math, String                                      |\n| 11   | [Container With Most Water][0011]                                 | Array, Two Pointers                               |\n| 12   | [Integer to Roman][0012]                                          | Math, String                                      |\n| 15   | [3Sum][0015]                                                      | Array, Two Pointers                               |\n| 15   | [3Sum Closest][0016]                                              | Array, Two Pointers                               |\n| 17   | [Letter Combinations of a Phone Number][0017]                     | String, Backtracking                              |\n| 18   | [4Sum][0018]                                                      | Array, Hash Table, Two Pointers                   |\n| 19   | [Remove Nth Node From End of List][0019]                          | Linked List, Two Pointers                         |\n| 22   | [Generate Parentheses][0022]                                      | String, Backtracking                              |\n| 24   | [Swap Nodes in Pairs][0024]                                       | Linked List                                       |\n| 29   | [Divide Two Integers][0029]                                       | Math, Binary Search                               |\n| 33   | [Search in Rotated Sorted Array][0033]                            | Arrays, Binary Search                             |\n| 43   | [Multiply Strings][0043]                                          | Math, String                                      |\n| 49   | [Group Anagrams][0049]                                            | Hash Table, String                                |\n| 50   | [Pow(x, n)][0050]                                                 | Math, Binary Search                               |\n| 56   | [Merge Intervals][0056]                                           | Array, Sort                                       |\n| 63   | [\u4e0d\u540c\u8def\u5f84 II(Unique Paths II)][0063]                               | \u6570\u7ec4\u3001\u52a8\u6001\u89c4\u5212                                      |\n| 209  | [\u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4(Minimum Size Subarray Sum)][0209]                 | \u6570\u7ec4\u3001\u53cc\u6307\u9488\u3001\u4e8c\u5206\u67e5\u627e                               |\n| 215  | [\u6570\u7ec4\u4e2d\u7684\u7b2cK\u4e2a\u6700\u5927\u5143\u7d20(Kth Largest Element in an Array)][0215]       | \u5806\u3001\u5206\u6cbb\u7b97\u6cd5                                       |\n| 554  | [Brick Wall][0554]                                                | Hash Table                                        |\n| 1014 | [\u6700\u4f73\u89c2\u5149\u7ec4\u5408(Best Sightseeing Pair)][1014]                         | \u6570\u7ec4                                              |\n\n## Hard\n\n| #    | Title                                                             | Tag                                               |\n| :--- | :---------------------------------------------------------------- | :------------------------------------------------ |\n| 4    | [Median of Two Sorted Arrays][0004]                               | Array, Binary Search, Divide and Conquer          |\n| 10   | [Regular Expression Matching][0010]                               | String, Dynamic Programming, Backtracking         |\n| 23   | [Merge k Sorted Lists][0023]                                      | Linked List, Divide and Conquer, Heap             |\n| 25   | [Reverse Nodes in k-Group][0025]                                  | Linked List                                       |\n| 30   | [Substring with Concatenation of All Words][0030]                 | Hash Table, Two Pointers, String                  |\n| 44   | [Wildcard Matching][0044]                                         | String, Dynamic Programming, Backtracking, Greedy |\n| 57   | [Insert Interval][0057]                                           | Array, Sort                                       |\n| 68   | [Text Justification][0068]                                        | String                                            |\n| 1028 | [\u4ece\u5148\u5e8f\u904d\u5386\u8fd8\u539f\u4e8c\u53c9\u6811(Recover a Tree From Preorder Traversal)][1028] | \u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22                                    |\n\n## \u6253\u4e2a\u5c0f\u5e7f\u544a\n\n\u6b22\u8fce\u52a0\u5165\u6211\u7684\u5c0f\u4e13\u680f\u300c**[\u57fa\u4f60\u592a\u7f8e](https://xiaozhuanlan.com/Blankj)**\u300d\u4e00\u8d77\u5b66\u4e60\u3002\n\n\n[src]: https://github.com/Blankj/awesome-java-leetcode/tree/master/src\n[note]: https://github.com/Blankj/awesome-java-leetcode/tree/master/note\n[companies]: https://github.com/Blankj/awesome-java-leetcode/blob/master/Companies.md\n\n[0001]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0001/README.md\n[0007]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0007/README.md\n[0009]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0009/README.md\n[0013]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0013/README.md\n[0014]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0014/README.md\n[16_11]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/16_11/README.md\n[0020]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0020/README.md\n[0021]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0021/README.md\n[0026]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0026/README.md\n[0027]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0027/README.md\n[0028]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0028/README.md\n[0035]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0035/README.md\n[0038]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0038/README.md\n[0053]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0053/README.md\n[0058]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0058/README.md\n[0066]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0066/README.md\n[0067]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0067/README.md\n[0069]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0069/README.md\n[0070]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0070/README.md\n[0083]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0083/README.md\n[0088]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0088/README.md\n[0100]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0100/README.md\n[0101]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0101/README.md\n[0104]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0104/README.md\n[0107]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0107/README.md\n[0108]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0108/README.md\n[0110]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0110/README.md\n[0111]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0111/README.md\n[0112]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0112/README.md\n[0118]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0118/README.md\n[0119]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0119/README.md\n[0121]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0121/README.md\n[0122]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0122/README.md\n[0543]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0543/README.md\n\n[0002]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0002/README.md\n[0003]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0003/README.md\n[0005]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0005/README.md\n[0006]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0006/README.md\n[0008]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0008/README.md\n[0011]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0011/README.md\n[0012]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0012/README.md\n[0015]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0015/README.md\n[0016]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0016/README.md\n[0017]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0017/README.md\n[0018]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0018/README.md\n[0019]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0019/README.md\n[0022]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0022/README.md\n[0024]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0024/README.md\n[0029]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0029/README.md\n[0033]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0033/README.md\n[0043]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0043/README.md\n[0049]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0049/README.md\n[0050]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0050/README.md\n[0056]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0056/README.md\n[0063]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0063/README.md\n[0209]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0209/README.md\n[0215]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0215/README.md\n[0554]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0554/README.md\n[1014]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/1014/README.md\n\n[0004]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0004/README.md\n[0010]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0010/README.md\n[0023]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0023/README.md\n[0025]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0025/README.md\n[0030]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0030/README.md\n[0044]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0044/README.md\n[0057]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0057/README.md\n[0068]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0068/README.md\n[1028]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/1028/README.md\n",
        "releases": []
    }
}