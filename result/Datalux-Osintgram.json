{
    "https://api.github.com/repos/Datalux/Osintgram": {
        "forks": 2240,
        "watchers": 10071,
        "stars": 10071,
        "languages": {
            "Python": 69373,
            "Makefile": 1806,
            "Dockerfile": 757
        },
        "commits": [
            "2024-02-13T14:55:32Z",
            "2024-02-13T14:52:03Z",
            "2023-09-15T06:31:46Z",
            "2022-11-17T20:33:34Z",
            "2022-09-05T07:34:53Z",
            "2021-10-18T12:51:51Z",
            "2021-07-05T07:07:13Z",
            "2021-07-04T19:16:21Z",
            "2021-06-03T10:49:35Z",
            "2021-05-17T15:28:05Z",
            "2021-05-17T15:26:28Z",
            "2021-05-16T10:00:28Z",
            "2021-05-12T16:24:45Z",
            "2021-05-12T15:54:28Z",
            "2021-05-12T12:05:44Z",
            "2021-05-12T11:58:49Z",
            "2021-05-12T11:33:32Z",
            "2021-05-12T10:48:14Z",
            "2021-05-12T08:25:37Z",
            "2021-05-12T07:39:55Z",
            "2021-05-12T07:11:18Z",
            "2021-05-12T06:58:32Z",
            "2021-05-11T09:23:33Z",
            "2021-05-09T21:50:04Z",
            "2021-05-09T21:48:29Z",
            "2021-05-09T21:15:54Z",
            "2021-04-30T11:29:32Z",
            "2021-04-08T12:44:05Z",
            "2021-04-08T12:40:55Z",
            "2021-04-05T22:24:08Z"
        ],
        "creation_date": "2019-06-07T23:23:40Z",
        "contributors": 19,
        "topics": [
            "analysis",
            "hacking",
            "information-gathering",
            "instagram",
            "instagram-account",
            "instagram-api",
            "nickname",
            "osint",
            "osint-python",
            "penetration-testing",
            "python",
            "python3",
            "tool"
        ],
        "subscribers": 202,
        "readme": "# Osintgram \ud83d\udd0e\ud83d\udcf8\n\n[![version-1.3](https://img.shields.io/badge/version-1.3-green)](https://github.com/Datalux/Osintgram/releases/tag/1.3)\n[![GPLv3](https://img.shields.io/badge/license-GPLv3-blue)](https://img.shields.io/badge/license-GPLv3-blue)\n[![Python3](https://img.shields.io/badge/language-Python3-red)](https://img.shields.io/badge/language-Python3-red)\n[![Telegram](https://img.shields.io/badge/Telegram-Channel-blue.svg)](https://t.me/osintgram)\n[![Docker](https://img.shields.io/badge/Docker-Supported-blue)](https://img.shields.io/badge/Docker-Supported-blue)\n\nOsintgram is an **OSINT** tool on Instagram to collect, analyze, and run reconnaissance.\n\n<p align=\"center\">\n<img align=\"center\" src=\".img/carbon.png\" width=\"900\">\n</p>\n\nDisclaimer: **FOR EDUCATIONAL PURPOSE ONLY! The contributors do not assume any responsibility for the use of this tool.**\n\nWarning: It is advisable to **not** use your own/primary account when using this tool.\n\n## Tools and Commands \ud83e\uddf0\n\nOsintgram offers an interactive shell to perform analysis on Instagram account of any users by its nickname. You can get:\n\n```text\n- addrs           Get all registered addressed by target photos\n- captions        Get user's photos captions\n- comments        Get total comments of target's posts\n- followers       Get target followers\n- followings      Get users followed by target\n- fwersemail      Get email of target followers\n- fwingsemail     Get email of users followed by target\n- fwersnumber     Get phone number of target followers\n- fwingsnumber    Get phone number of users followed by target\n- hashtags        Get hashtags used by target\n- info            Get target info\n- likes           Get total likes of target's posts\n- mediatype       Get user's posts type (photo or video)\n- photodes        Get description of target's photos\n- photos          Download user's photos in output folder\n- propic          Download user's profile picture\n- stories         Download user's stories  \n- tagged          Get list of users tagged by target\n- wcommented      Get a list of user who commented target's photos\n- wtagged         Get a list of user who tagged target\n```\n\nYou can find detailed commands usage [here](doc/COMMANDS.md).\n\n[**Latest version**](https://github.com/Datalux/Osintgram/releases/tag/1.3) |\n[Commands](doc/COMMANDS.md) |\n[CHANGELOG](doc/CHANGELOG.md)\n\n## FAQ\n1. **Can I access the contents of a private profile?** No, you cannot get information on private profiles. You can only get information from a public profile or a profile you follow. The tools that claim to be successful are scams!\n2. **What is and how I can bypass the `challenge_required` error?** The `challenge_required` error means that Instagram notice a suspicious behavior on your profile, so needs to check if you are a real person or a bot. To avoid this you should follow the suggested link and complete the required operation (insert a code, confirm email, etc)\n\n\n## Installation \u2699\ufe0f\n\n1. Fork/Clone/Download this repo\n\n    `git clone https://github.com/Datalux/Osintgram.git`\n\n2. Navigate to the directory\n\n    `cd Osintgram`\n\n3. Create a virtual environment for this project\n\n    `python3 -m venv venv`\n\n4. Load the virtual environment\n   - On Windows Powershell: `.\\venv\\Scripts\\activate.ps1`\n   - On Linux and Git Bash: `source venv/bin/activate`\n  \n5. Run `pip install -r requirements.txt`\n\n6. Open the `credentials.ini` file in the `config` folder and write your Instagram account username and password in the corresponding fields\n    \n    Alternatively, you can run the `make setup` command to populate this file for you.\n\n7. Run the main.py script in one of two ways\n\n    * As an interactive prompt `python3 main.py <target username>`\n    * Or execute your command straight away `python3 main.py <target username> --command <command>`\n    \n### Use Osintgram v2 (beta)\nYou can use Osintgram2 beta just switching to `v2` [branch](https://github.com/Datalux/Osintgram/tree/v2).\nThe v2 has some improvements and is faster with a new command execution interface. Try it just running `git checkout v2`.\n\n## Docker Quick Start \ud83d\udc33\n\nThis section will explain how you can quickly use this image with `Docker` or `Docker-compose`.\n\n### Prerequisites\n\nBefore you can use either `Docker` or `Docker-compose`, please ensure you do have the following prerequisites met.\n\n1. **Docker** installed - [link](https://docs.docker.com/get-docker/)\n2. **Docker-composed** installed (if using Docker-compose) - [link](https://docs.docker.com/compose/install/)\n3. **Credentials** configured - This can be done manually or by running the `make setup` command from the root of this repo\n\n**Important**: Your container will fail if you do not do step #3 and configure your credentials\n\n### Docker\n\nIf docker is installed you can build an image and run this as a container.\n\nBuild:\n\n```bash\ndocker build -t osintgram .\n```\n\nRun:\n\n```bash\ndocker run --rm -it -v \"$PWD/output:/home/osintgram/output\" osintgram <target>\n```\n\n- The `<target>` is the Instagram account you wish to use as your target for recon.\n- The required `-i` flag enables an interactive terminal to use commands within the container. [docs](https://docs.docker.com/engine/reference/commandline/run/#assign-name-and-allocate-pseudo-tty---name--it)\n- The required `-v` flag mounts a volume between your local filesystem and the container to save to the `./output/` folder. [docs](https://docs.docker.com/engine/reference/commandline/run/#mount-volume--v---read-only)\n- The optional `--rm` flag removes the container filesystem on completion to prevent cruft build-up. [docs](https://docs.docker.com/engine/reference/run/#clean-up---rm)\n- The optional `-t` flag allocates a pseudo-TTY which allows colored output. [docs](https://docs.docker.com/engine/reference/run/#foreground)\n\n### Using `docker-compose`\n\nYou can use the `docker-compose.yml` file this single command:\n\n```bash\ndocker-compose run osintgram <target>\n```\n\nWhere `target` is the Instagram target for recon.\n\nAlternatively, you may run `docker-compose` with the `Makefile`:\n\n`make run` - Builds and Runs with compose. Prompts for a `target` before running.\n\n### Makefile (easy mode)\n\nFor ease of use with Docker-compose, a `Makefile` has been provided.\n\nHere is a sample work flow to spin up a container and run `osintgram` with just two commands!\n\n1. `make setup`   - Sets up your Instagram credentials\n2. `make run`     - Builds and Runs a osintgram container and prompts for a target\n\nSample workflow for development:\n\n1. `make setup`          - Sets up your Instagram credentials\n2. `make build-run-testing`   - Builds an Runs a container without invoking the `main.py` script. Useful for an `it` Docker session for development\n3. `make cleanup-testing`     - Cleans up the testing container created from `build-run-testing`\n\n## Development version \ud83d\udcbb\n\nTo use the development version with the latest feature and fixes just switch to `development` branch using Git:\n\n`git checkout development`\n\nand update to last version using:\n\n`git pull origin development`\n\n\n## Updating \u2b07\ufe0f\n\nTo update Osintgram with the stable release just pull the latest commit using Git.\n\n1. Make sure you are in the master branch running: `git checkout master`\n2. Download the latest version: `git pull origin master`\n\n\n## Contributing \ud83d\udca1\n\nYou can propose a feature request opening an issue or a pull request.\n\nHere is a list of Osintgram's contributors:\n\n<a href=\"https://github.com/Datalux/Osintgram/graphs/contributors\">\n  <img src=\"https://contributors-img.web.app/image?repo=Datalux/Osintgram\" />\n</a>\n\n## External library \ud83d\udd17\n\n[Instagram API](https://github.com/ping/instagram_private_api)\n",
        "releases": [
            {
                "name": "1.3",
                "date": "2021-05-17T15:28:28Z"
            },
            {
                "name": "1.2",
                "date": "2021-04-03T16:40:25Z"
            },
            {
                "name": "1.1",
                "date": "2021-03-31T06:33:03Z"
            },
            {
                "name": "1.0.1",
                "date": "2021-03-16T08:51:51Z"
            },
            {
                "name": "1.0",
                "date": "2021-03-15T12:00:01Z"
            },
            {
                "name": "0.9",
                "date": "2020-09-08T09:05:38Z"
            },
            {
                "name": "0.8",
                "date": "2020-08-30T14:51:44Z"
            },
            {
                "name": "0.7",
                "date": "2020-08-26T10:07:12Z"
            },
            {
                "name": "0.6",
                "date": "2020-08-07T11:55:49Z"
            },
            {
                "name": "0.5",
                "date": "2020-07-24T07:07:08Z"
            },
            {
                "name": "0.4",
                "date": "2020-05-28T10:43:17Z"
            },
            {
                "name": "",
                "date": "2020-05-14T16:30:20Z"
            }
        ]
    }
}