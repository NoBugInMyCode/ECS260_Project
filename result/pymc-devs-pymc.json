{
    "https://api.github.com/repos/pymc-devs/pymc": {
        "forks": 2046,
        "watchers": 8833,
        "stars": 8833,
        "languages": {
            "Python": 3223234,
            "Shell": 1580,
            "Makefile": 1468,
            "Dockerfile": 1304
        },
        "commits": [
            "2025-01-20T21:44:45Z",
            "2025-01-20T17:48:47Z",
            "2024-12-22T18:11:18Z",
            "2024-12-22T17:59:18Z",
            "2024-12-22T17:05:45Z",
            "2024-12-22T14:37:20Z",
            "2025-01-15T14:12:52Z",
            "2025-01-17T12:47:19Z",
            "2025-01-14T09:57:05Z",
            "2024-12-22T22:26:38Z",
            "2024-12-21T10:19:28Z",
            "2024-11-07T21:50:57Z",
            "2024-11-06T14:42:59Z",
            "2024-10-23T09:24:45Z",
            "2024-10-16T09:51:46Z",
            "2024-10-23T09:24:10Z",
            "2025-01-09T20:28:00Z",
            "2025-01-09T20:18:10Z",
            "2024-12-21T11:27:09Z",
            "2024-11-07T12:23:32Z",
            "2024-11-07T12:21:21Z",
            "2025-01-07T19:54:48Z",
            "2024-11-08T10:23:53Z",
            "2025-01-07T19:35:08Z",
            "2025-01-07T18:40:06Z",
            "2025-01-07T17:50:26Z",
            "2024-12-26T08:26:41Z",
            "2024-12-24T14:05:48Z",
            "2024-12-24T13:36:46Z",
            "2024-12-23T22:57:38Z"
        ],
        "creation_date": "2009-05-05T09:43:50Z",
        "contributors": 30,
        "topics": [
            "bayesian-inference",
            "mcmc",
            "probabilistic-programming",
            "pytensor",
            "python",
            "statistical-analysis",
            "variational-inference"
        ],
        "subscribers": 225,
        "readme": ".. image:: https://cdn.rawgit.com/pymc-devs/pymc/main/docs/logos/svg/PyMC_banner.svg\n    :height: 100px\n    :alt: PyMC logo\n    :align: center\n\n|Build Status| |Coverage| |NumFOCUS_badge| |Binder| |Dockerhub| |DOIzenodo| |Conda Downloads|\n\nPyMC (formerly PyMC3) is a Python package for Bayesian statistical modeling\nfocusing on advanced Markov chain Monte Carlo (MCMC) and variational inference (VI)\nalgorithms. Its flexibility and extensibility make it applicable to a\nlarge suite of problems.\n\nCheck out the `PyMC overview <https://docs.pymc.io/en/latest/learn/core_notebooks/pymc_overview.html>`__,  or\none of `the many examples <https://www.pymc.io/projects/examples/en/latest/gallery.html>`__!\nFor questions on PyMC, head on over to our `PyMC Discourse <https://discourse.pymc.io/>`__ forum.\n\nFeatures\n========\n\n-  Intuitive model specification syntax, for example, ``x ~ N(0,1)``\n   translates to ``x = Normal('x',0,1)``\n-  **Powerful sampling algorithms**, such as the `No U-Turn\n   Sampler <http://www.jmlr.org/papers/v15/hoffman14a.html>`__, allow complex models\n   with thousands of parameters with little specialized knowledge of\n   fitting algorithms.\n-  **Variational inference**: `ADVI <http://www.jmlr.org/papers/v18/16-107.html>`__\n   for fast approximate posterior estimation as well as mini-batch ADVI\n   for large data sets.\n-  Relies on `PyTensor <https://pytensor.readthedocs.io/en/latest/>`__ which provides:\n    *  Computation optimization and dynamic C or JAX compilation\n    *  NumPy broadcasting and advanced indexing\n    *  Linear algebra operators\n    *  Simple extensibility\n-  Transparent support for missing value imputation\n\n\nLinear Regression Example\n==========================\n\n\nPlant growth can be influenced by multiple factors, and understanding these relationships is crucial for optimizing agricultural practices.\n\nImagine we conduct an experiment to predict the growth of a plant based on different environmental variables.\n\n.. code-block:: python\n\n   import pymc as pm\n\n   # Taking draws from a normal distribution\n   seed = 42\n   x_dist = pm.Normal.dist(shape=(100, 3))\n   x_data = pm.draw(x_dist, random_seed=seed)\n\n   # Independent Variables:\n   # Sunlight Hours: Number of hours the plant is exposed to sunlight daily.\n   # Water Amount: Daily water amount given to the plant (in milliliters).\n   # Soil Nitrogen Content: Percentage of nitrogen content in the soil.\n\n\n   # Dependent Variable:\n   # Plant Growth (y): Measured as the increase in plant height (in centimeters) over a certain period.\n\n\n   # Define coordinate values for all dimensions of the data\n   coords={\n    \"trial\": range(100),\n    \"features\": [\"sunlight hours\", \"water amount\", \"soil nitrogen\"],\n   }\n\n   # Define generative model\n   with pm.Model(coords=coords) as generative_model:\n      x = pm.Data(\"x\", x_data, dims=[\"trial\", \"features\"])\n\n      # Model parameters\n      betas = pm.Normal(\"betas\", dims=\"features\")\n      sigma = pm.HalfNormal(\"sigma\")\n\n      # Linear model\n      mu = x @ betas\n\n      # Likelihood\n      # Assuming we measure deviation of each plant from baseline\n      plant_growth = pm.Normal(\"plant growth\", mu, sigma, dims=\"trial\")\n\n\n   # Generating data from model by fixing parameters\n   fixed_parameters = {\n    \"betas\": [5, 20, 2],\n    \"sigma\": 0.5,\n   }\n   with pm.do(generative_model, fixed_parameters) as synthetic_model:\n      idata = pm.sample_prior_predictive(random_seed=seed) # Sample from prior predictive distribution.\n      synthetic_y = idata.prior[\"plant growth\"].sel(draw=0, chain=0)\n\n\n   # Infer parameters conditioned on observed data\n   with pm.observe(generative_model, {\"plant growth\": synthetic_y}) as inference_model:\n      idata = pm.sample(random_seed=seed)\n\n      summary = pm.stats.summary(idata, var_names=[\"betas\", \"sigma\"])\n      print(summary)\n\n\nFrom the summary, we can see that the mean of the inferred parameters are very close to the fixed parameters\n\n=====================  ======  =====  ========  =========  ===========  =========  ==========  ==========  =======\nParams                  mean     sd    hdi_3%    hdi_97%    mcse_mean    mcse_sd    ess_bulk    ess_tail    r_hat\n=====================  ======  =====  ========  =========  ===========  =========  ==========  ==========  =======\nbetas[sunlight hours]   4.972  0.054     4.866      5.066        0.001      0.001        3003        1257        1\nbetas[water amount]    19.963  0.051    19.872     20.062        0.001      0.001        3112        1658        1\nbetas[soil nitrogen]    1.994  0.055     1.899      2.107        0.001      0.001        3221        1559        1\nsigma                   0.511  0.037     0.438      0.575        0.001      0            2945        1522        1\n=====================  ======  =====  ========  =========  ===========  =========  ==========  ==========  =======\n\n.. code-block:: python\n\n   # Simulate new data conditioned on inferred parameters\n   new_x_data = pm.draw(\n      pm.Normal.dist(shape=(3, 3)),\n      random_seed=seed,\n   )\n   new_coords = coords | {\"trial\": [0, 1, 2]}\n\n   with inference_model:\n      pm.set_data({\"x\": new_x_data}, coords=new_coords)\n      pm.sample_posterior_predictive(\n         idata,\n         predictions=True,\n         extend_inferencedata=True,\n         random_seed=seed,\n      )\n\n   pm.stats.summary(idata.predictions, kind=\"stats\")\n\nThe new data conditioned on inferred parameters would look like:\n\n================ ======== ======= ======== =========\nOutput            mean     sd      hdi_3%   hdi_97%\n================ ======== ======= ======== =========\nplant growth[0]   14.229   0.515   13.325   15.272\nplant growth[1]   24.418   0.511   23.428   25.326\nplant growth[2]   -6.747   0.511   -7.740   -5.797\n================ ======== ======= ======== =========\n\n.. code-block:: python\n\n   # Simulate new data, under a scenario where the first beta is zero\n   with pm.do(\n    inference_model,\n    {inference_model[\"betas\"]: inference_model[\"betas\"] * [0, 1, 1]},\n   ) as plant_growth_model:\n      new_predictions = pm.sample_posterior_predictive(\n         idata,\n         predictions=True,\n         random_seed=seed,\n      )\n\n   pm.stats.summary(new_predictions, kind=\"stats\")\n\nThe new data, under the above scenario would look like:\n\n================ ======== ======= ======== =========\nOutput            mean     sd      hdi_3%   hdi_97%\n================ ======== ======= ======== =========\nplant growth[0]   12.149   0.515   11.193   13.135\nplant growth[1]   29.809   0.508   28.832   30.717\nplant growth[2]   -0.131   0.507   -1.121    0.791\n================ ======== ======= ======== =========\n\nGetting started\n===============\n\nIf you already know about Bayesian statistics:\n----------------------------------------------\n\n-  `API quickstart guide <https://www.pymc.io/projects/examples/en/latest/introductory/api_quickstart.html>`__\n-  The `PyMC tutorial <https://docs.pymc.io/en/latest/learn/core_notebooks/pymc_overview.html>`__\n-  `PyMC examples <https://www.pymc.io/projects/examples/en/latest/gallery.html>`__ and the `API reference <https://docs.pymc.io/en/stable/api.html>`__\n\nLearn Bayesian statistics with a book together with PyMC\n--------------------------------------------------------\n\n-  `Bayesian Analysis with Python  <http://bap.com.ar/>`__ (third edition) by Osvaldo Martin: Great introductory book.\n-  `Probabilistic Programming and Bayesian Methods for Hackers <https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers>`__: Fantastic book with many applied code examples.\n-  `PyMC port of the book \"Doing Bayesian Data Analysis\" by John Kruschke <https://github.com/cluhmann/DBDA-python>`__ as well as the `first edition <https://github.com/aloctavodia/Doing_bayesian_data_analysis>`__.\n-  `PyMC port of the book \"Statistical Rethinking A Bayesian Course with Examples in R and Stan\" by Richard McElreath <https://github.com/pymc-devs/resources/tree/master/Rethinking>`__\n-  `PyMC port of the book \"Bayesian Cognitive Modeling\" by Michael Lee and EJ Wagenmakers <https://github.com/pymc-devs/resources/tree/master/BCM>`__: Focused on using Bayesian statistics in cognitive modeling.\n\nAudio & Video\n-------------\n\n- Here is a `YouTube playlist <https://www.youtube.com/playlist?list=PL1Ma_1DBbE82OVW8Fz_6Ts1oOeyOAiovy>`__ gathering several talks on PyMC.\n- You can also find all the talks given at **PyMCon 2020** `here <https://discourse.pymc.io/c/pymcon/2020talks/15>`__.\n- The `\"Learning Bayesian Statistics\" podcast <https://www.learnbayesstats.com/>`__ helps you discover and stay up-to-date with the vast Bayesian community. Bonus: it's hosted by Alex Andorra, one of the PyMC core devs!\n\nInstallation\n============\n\nTo install PyMC on your system, follow the instructions on the `installation guide <https://www.pymc.io/projects/docs/en/latest/installation.html>`__.\n\nCiting PyMC\n===========\nPlease choose from the following:\n\n- |DOIpaper| *PyMC: A Modern and Comprehensive Probabilistic Programming Framework in Python*, Abril-Pla O, Andreani V, Carroll C, Dong L, Fonnesbeck CJ, Kochurov M, Kumar R, Lao J, Luhmann CC, Martin OA, Osthege M, Vieira R, Wiecki T, Zinkov R. (2023)\n- |DOIzenodo| A DOI for all versions.\n- DOIs for specific versions are shown on Zenodo and under `Releases <https://github.com/pymc-devs/pymc/releases>`_\n\n.. |DOIpaper| image:: https://img.shields.io/badge/DOI-10.7717%2Fpeerj--cs.1516-blue.svg\n     :target: https://doi.org/10.7717/peerj-cs.1516\n.. |DOIzenodo| image:: https://zenodo.org/badge/DOI/10.5281/zenodo.4603970.svg\n   :target: https://doi.org/10.5281/zenodo.4603970\n\nContact\n=======\n\nWe are using `discourse.pymc.io <https://discourse.pymc.io/>`__ as our main communication channel.\n\nTo ask a question regarding modeling or usage of PyMC we encourage posting to our Discourse forum under the `\u201cQuestions\u201d Category <https://discourse.pymc.io/c/questions>`__. You can also suggest feature in the `\u201cDevelopment\u201d Category <https://discourse.pymc.io/c/development>`__.\n\nYou can also follow us on these social media platforms for updates and other announcements:\n\n- `LinkedIn @pymc <https://www.linkedin.com/company/pymc/>`__\n- `YouTube @PyMCDevelopers <https://www.youtube.com/c/PyMCDevelopers>`__\n- `X @pymc_devs <https://x.com/pymc_devs>`__\n- `Mastodon @pymc@bayes.club <https://bayes.club/@pymc>`__\n\nTo report an issue with PyMC please use the `issue tracker <https://github.com/pymc-devs/pymc/issues>`__.\n\nFinally, if you need to get in touch for non-technical information about the project, `send us an e-mail <info@pymc-devs.org>`__.\n\nLicense\n=======\n\n`Apache License, Version\n2.0 <https://github.com/pymc-devs/pymc/blob/main/LICENSE>`__\n\n\nSoftware using PyMC\n===================\n\nGeneral purpose\n---------------\n\n- `Bambi <https://github.com/bambinos/bambi>`__: BAyesian Model-Building Interface (BAMBI) in Python.\n- `calibr8 <https://calibr8.readthedocs.io>`__: A toolbox for constructing detailed observation models to be used as likelihoods in PyMC.\n- `gumbi <https://github.com/JohnGoertz/Gumbi>`__: A high-level interface for building GP models.\n- `SunODE <https://github.com/aseyboldt/sunode>`__: Fast ODE solver, much faster than the one that comes with PyMC.\n- `pymc-learn <https://github.com/pymc-learn/pymc-learn>`__: Custom PyMC models built on top of pymc3_models/scikit-learn API\n\nDomain specific\n---------------\n\n- `Exoplanet <https://github.com/dfm/exoplanet>`__: a toolkit for modeling of transit and/or radial velocity observations of exoplanets and other astronomical time series.\n- `beat <https://github.com/hvasbath/beat>`__: Bayesian Earthquake Analysis Tool.\n- `CausalPy <https://github.com/pymc-labs/CausalPy>`__: A package focussing on causal inference in quasi-experimental settings.\n\nPlease contact us if your software is not listed here.\n\nPapers citing PyMC\n==================\n\nSee Google Scholar `here <https://scholar.google.com/scholar?cites=6357998555684300962>`__ and `here <https://scholar.google.com/scholar?cites=6936955228135731011>`__ for a continuously updated list.\n\nContributors\n============\n\nSee the `GitHub contributor\npage <https://github.com/pymc-devs/pymc/graphs/contributors>`__. Also read our `Code of Conduct <https://github.com/pymc-devs/pymc/blob/main/CODE_OF_CONDUCT.md>`__ guidelines for a better contributing experience.\n\nSupport\n=======\n\nPyMC is a non-profit project under NumFOCUS umbrella. If you want to support PyMC financially, you can donate `here <https://numfocus.salsalabs.org/donate-to-pymc3/index.html>`__.\n\nProfessional Consulting Support\n===============================\n\nYou can get professional consulting support from `PyMC Labs <https://www.pymc-labs.io>`__.\n\nSponsors\n========\n\n|NumFOCUS|\n\n|PyMCLabs|\n\n|Mistplay|\n\n|ODSC|\n\nThanks to our contributors\n==========================\n\n|contributors|\n\n.. |Binder| image:: https://mybinder.org/badge_logo.svg\n   :target: https://mybinder.org/v2/gh/pymc-devs/pymc/main?filepath=%2Fdocs%2Fsource%2Fnotebooks\n.. |Build Status| image:: https://github.com/pymc-devs/pymc/workflows/pytest/badge.svg\n   :target: https://github.com/pymc-devs/pymc/actions\n.. |Coverage| image:: https://codecov.io/gh/pymc-devs/pymc/branch/main/graph/badge.svg\n   :target: https://codecov.io/gh/pymc-devs/pymc\n.. |Dockerhub| image:: https://img.shields.io/docker/automated/pymc/pymc.svg\n   :target: https://hub.docker.com/r/pymc/pymc\n.. |NumFOCUS_badge| image:: https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A\n   :target: http://www.numfocus.org/\n.. |NumFOCUS| image:: https://github.com/pymc-devs/brand/blob/main/sponsors/sponsor_logos/sponsor_numfocus.png?raw=true\n   :target: http://www.numfocus.org/\n.. |PyMCLabs| image:: https://github.com/pymc-devs/brand/blob/main/sponsors/sponsor_logos/sponsor_pymc_labs.png?raw=true\n   :target: https://pymc-labs.io\n.. |Mistplay| image:: https://github.com/pymc-devs/brand/blob/main/sponsors/sponsor_logos/sponsor_mistplay.png?raw=true\n   :target: https://www.mistplay.com/\n.. |ODSC| image:: https://github.com/pymc-devs/brand/blob/main/sponsors/sponsor_logos/odsc/sponsor_odsc.png?raw=true\n   :target: https://odsc.com/california/?utm_source=pymc&utm_medium=referral\n.. |contributors| image:: https://contrib.rocks/image?repo=pymc-devs/pymc\n   :target: https://github.com/pymc-devs/pymc/graphs/contributors\n.. |Conda Downloads| image:: https://anaconda.org/conda-forge/pymc/badges/downloads.svg\n   :target: https://anaconda.org/conda-forge/pymc\n",
        "releases": [
            {
                "name": "v5.20.0",
                "date": "2025-01-07T20:55:33Z"
            },
            {
                "name": "v5.19.1",
                "date": "2024-12-05T17:01:07Z"
            },
            {
                "name": "v5.19.0",
                "date": "2024-12-03T15:06:59Z"
            },
            {
                "name": "v5.18.2",
                "date": "2024-11-18T08:02:10Z"
            },
            {
                "name": "v5.18.1",
                "date": "2024-11-14T21:40:21Z"
            },
            {
                "name": "v5.18.0",
                "date": "2024-11-04T09:19:29Z"
            },
            {
                "name": "v5.17.0",
                "date": "2024-10-03T09:11:52Z"
            },
            {
                "name": "v5.16.2",
                "date": "2024-07-11T13:49:51Z"
            },
            {
                "name": "v5.16.1",
                "date": "2024-06-26T09:43:43Z"
            },
            {
                "name": "v5.16.0",
                "date": "2024-06-25T16:34:03Z"
            },
            {
                "name": "v3.11.6",
                "date": "2024-05-31T12:34:58Z"
            },
            {
                "name": "v5.15.1",
                "date": "2024-05-30T11:59:48Z"
            },
            {
                "name": "v5.15.0",
                "date": "2024-05-13T14:33:39Z"
            },
            {
                "name": "v5.14.0",
                "date": "2024-04-30T14:58:33Z"
            },
            {
                "name": "v5.13.1",
                "date": "2024-04-15T09:11:30Z"
            },
            {
                "name": "v5.13.0",
                "date": "2024-04-08T17:07:49Z"
            },
            {
                "name": "v5.12.0",
                "date": "2024-03-28T18:52:49Z"
            },
            {
                "name": "v5.11.0",
                "date": "2024-03-15T12:40:06Z"
            },
            {
                "name": "v5.10.4",
                "date": "2024-02-14T10:23:42Z"
            },
            {
                "name": "v5.10.3",
                "date": "2023-12-21T11:15:57Z"
            },
            {
                "name": "v5.10.2",
                "date": "2023-12-13T14:06:59Z"
            },
            {
                "name": "v5.10.1",
                "date": "2023-12-10T11:54:33Z"
            },
            {
                "name": "v5.10.0",
                "date": "2023-11-25T07:47:10Z"
            },
            {
                "name": "v5.9.2",
                "date": "2023-11-12T10:34:43Z"
            },
            {
                "name": "v5.9.1",
                "date": "2023-10-26T09:24:12Z"
            },
            {
                "name": "v5.9.0",
                "date": "2023-10-04T10:21:32Z"
            },
            {
                "name": "v5.8.2",
                "date": "2023-09-21T12:47:28Z"
            },
            {
                "name": "v5.8.1",
                "date": "2023-09-14T07:30:31Z"
            },
            {
                "name": "v5.8.0",
                "date": "2023-09-04T09:43:05Z"
            },
            {
                "name": "v5.7.2",
                "date": "2023-08-09T08:31:31Z"
            },
            {
                "name": "v5.7.1",
                "date": "2023-08-04T07:14:04Z"
            },
            {
                "name": "v5.7.0",
                "date": "2023-07-31T08:56:31Z"
            },
            {
                "name": "v5.6.1",
                "date": "2023-07-14T07:22:39Z"
            },
            {
                "name": "v5.6.0",
                "date": "2023-07-04T12:10:52Z"
            },
            {
                "name": "v5.5.0",
                "date": "2023-06-09T14:56:03Z"
            },
            {
                "name": "v5.4.1",
                "date": "2023-05-30T09:43:35Z"
            },
            {
                "name": "v5.4.0",
                "date": "2023-05-23T08:46:22Z"
            },
            {
                "name": "v5.3.1",
                "date": "2023-04-26T17:34:17Z"
            },
            {
                "name": "v5.3.0",
                "date": "2023-04-14T03:08:32Z"
            },
            {
                "name": "v5.2.0",
                "date": "2023-03-30T10:39:02Z"
            },
            {
                "name": "v5.1.2",
                "date": "2023-03-13T20:59:15Z"
            },
            {
                "name": "v5.1.1",
                "date": "2023-03-08T13:30:39Z"
            },
            {
                "name": "v5.1.0",
                "date": "2023-03-03T08:40:03Z"
            },
            {
                "name": "v5.0.2",
                "date": "2023-01-19T17:42:27Z"
            },
            {
                "name": "v5.0.1",
                "date": "2022-12-21T09:52:07Z"
            },
            {
                "name": "v5.0.0",
                "date": "2022-12-12T19:42:32Z"
            },
            {
                "name": "v4.4.0",
                "date": "2022-11-19T21:05:20Z"
            },
            {
                "name": "v4.3.0",
                "date": "2022-10-31T09:04:40Z"
            },
            {
                "name": "v4.2.2",
                "date": "2022-10-10T19:32:09Z"
            },
            {
                "name": "v4.2.1",
                "date": "2022-09-30T13:53:26Z"
            },
            {
                "name": "v4.2.0",
                "date": "2022-09-19T08:54:38Z"
            },
            {
                "name": "v4.1.7",
                "date": "2022-08-26T06:51:02Z"
            },
            {
                "name": "v4.1.6",
                "date": "2022-08-25T10:36:57Z"
            },
            {
                "name": "v4.1.5",
                "date": "2022-08-17T12:14:26Z"
            },
            {
                "name": "v4.1.4",
                "date": "2022-07-26T16:21:52Z"
            },
            {
                "name": "v4.1.3",
                "date": "2022-07-15T10:37:05Z"
            },
            {
                "name": "v4.1.2",
                "date": "2022-07-08T10:59:26Z"
            },
            {
                "name": "v4.1.1",
                "date": "2022-07-04T15:48:28Z"
            },
            {
                "name": "v4.1.0",
                "date": "2022-07-03T18:19:47Z"
            },
            {
                "name": "v4.0.1",
                "date": "2022-06-20T12:53:39Z"
            },
            {
                "name": "PyMC 4.0.0",
                "date": "2022-06-03T15:55:47Z"
            },
            {
                "name": "4.0.0 beta 6",
                "date": "2022-03-30T11:39:08Z"
            },
            {
                "name": "4.0.0 beta 5",
                "date": "2022-03-22T09:52:40Z"
            },
            {
                "name": "v4.0.0 beta 4",
                "date": "2022-03-17T11:22:43Z"
            },
            {
                "name": "PyMC 3.11.5",
                "date": "2022-03-15T10:09:50Z"
            },
            {
                "name": "PyMC 4.0.0 beta 3",
                "date": "2022-03-08T12:25:17Z"
            },
            {
                "name": "v4.0.0b2",
                "date": "2022-01-14T14:20:29Z"
            },
            {
                "name": "",
                "date": "2021-12-16T10:14:47Z"
            },
            {
                "name": " PyMC3 3.11.4 (20 August 2021) ",
                "date": "2021-08-24T01:16:57Z"
            },
            {
                "name": " PyMC3 3.11.3 (19 August 2021) ",
                "date": "2021-08-20T16:14:18Z"
            },
            {
                "name": "PyMC3 3.11.2 (14 March 2021)",
                "date": "2021-03-14T22:30:42Z"
            },
            {
                "name": "PyMC3 3.11.1 (12 February 2021)",
                "date": "2021-02-12T18:39:44Z"
            },
            {
                "name": "PyMC3 3.11.0 (21 January 2021)",
                "date": "2021-01-21T08:36:54Z"
            },
            {
                "name": "PyMC3 v3.10.0 (7 December 2020)",
                "date": "2020-12-07T15:59:43Z"
            },
            {
                "name": "PyMC3 v3.9.3 (August 11, 2020)",
                "date": "2020-08-11T03:30:24Z"
            },
            {
                "name": "PyMC3 v3.9.2 (24 June 2020)",
                "date": "2020-06-24T12:08:12Z"
            },
            {
                "name": "PyMC3 v3.9.1 (16 June, 2020)",
                "date": "2020-06-16T18:47:39Z"
            },
            {
                "name": "PyMC3 v3.9.0 (16 June, 2020)",
                "date": "2020-06-16T16:38:33Z"
            },
            {
                "name": "PyMC3 v3.8 (29 November, 2019)",
                "date": "2019-11-30T18:21:35Z"
            },
            {
                "name": "PyMC3 3.7 (May 29 2019)",
                "date": "2019-05-29T14:47:43Z"
            },
            {
                "name": "",
                "date": "2018-12-20T18:04:31Z"
            },
            {
                "name": "v3.5 Final",
                "date": "2018-07-21T20:58:15Z"
            },
            {
                "name": "v3.4.1 Final",
                "date": "2018-04-19T02:51:08Z"
            },
            {
                "name": "v3.3 Final",
                "date": "2018-01-25T00:58:54Z"
            },
            {
                "name": "v3.2 Final",
                "date": "2017-10-10T19:11:56Z"
            },
            {
                "name": "v3.1 Final",
                "date": "2017-06-25T15:26:59Z"
            },
            {
                "name": "v3.0 Final",
                "date": "2017-01-09T14:19:16Z"
            },
            {
                "name": "v3.0 Release Candidate 6",
                "date": "2017-01-02T00:38:13Z"
            },
            {
                "name": "v3.0 Release Candidate 5",
                "date": "2017-01-01T20:16:51Z"
            },
            {
                "name": "v3.0 Release Candidate 4",
                "date": "2016-12-01T22:47:32Z"
            },
            {
                "name": "",
                "date": "2016-12-01T22:26:27Z"
            },
            {
                "name": "v3.0 Release Candidate 2",
                "date": "2016-10-04T16:51:28Z"
            },
            {
                "name": "v3.0 Release Candidate 1",
                "date": "2016-09-06T19:43:59Z"
            },
            {
                "name": "",
                "date": "2015-06-18T08:51:48Z"
            },
            {
                "name": "",
                "date": "2015-06-18T08:52:08Z"
            }
        ]
    }
}