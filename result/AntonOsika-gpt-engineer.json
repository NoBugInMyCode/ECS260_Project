{
    "https://api.github.com/repos/AntonOsika/gpt-engineer": {
        "forks": 6894,
        "watchers": 52910,
        "stars": 52910,
        "languages": {
            "Python": 342877,
            "Makefile": 2087,
            "HTML": 954,
            "Dockerfile": 600,
            "Shell": 517
        },
        "commits": [
            "2024-11-17T22:42:12Z",
            "2024-11-17T22:42:04Z",
            "2024-09-12T13:16:32Z",
            "2024-09-12T13:13:50Z",
            "2024-09-12T13:13:39Z",
            "2024-09-12T13:13:06Z",
            "2024-09-12T13:11:30Z",
            "2024-09-05T16:17:40Z",
            "2024-09-05T16:02:12Z",
            "2024-08-08T17:27:39Z",
            "2024-08-08T17:26:11Z",
            "2024-08-05T16:33:43Z",
            "2024-08-05T16:31:41Z",
            "2024-08-05T15:26:31Z",
            "2024-08-05T15:26:07Z",
            "2024-08-05T12:52:50Z",
            "2024-08-04T11:59:25Z",
            "2024-08-04T11:58:44Z",
            "2024-07-27T19:24:40Z",
            "2024-07-27T18:22:25Z",
            "2024-07-25T15:42:53Z",
            "2024-07-25T15:39:50Z",
            "2024-07-25T12:14:45Z",
            "2024-07-25T12:08:52Z",
            "2024-07-23T19:49:03Z",
            "2024-07-23T19:32:36Z",
            "2024-07-23T19:27:59Z",
            "2024-07-23T18:56:10Z",
            "2024-07-23T18:48:04Z",
            "2024-07-18T17:44:22Z"
        ],
        "creation_date": "2023-04-29T12:52:15Z",
        "contributors": 30,
        "topics": [
            "ai",
            "autonomous-agent",
            "code-generation",
            "codebase-generation",
            "codegen",
            "coding-assistant",
            "gpt-4",
            "gpt-engineer",
            "openai",
            "python"
        ],
        "subscribers": 519,
        "readme": "# gpt-engineer\n\n[![GitHub Repo stars](https://img.shields.io/github/stars/gpt-engineer-org/gpt-engineer?style=social)](https://github.com/gpt-engineer-org/gpt-engineer)\n[![Discord Follow](https://dcbadge.vercel.app/api/server/8tcDQ89Ej2?style=flat)](https://discord.gg/8tcDQ89Ej2)\n[![License](https://img.shields.io/github/license/gpt-engineer-org/gpt-engineer)](https://github.com/gpt-engineer-org/gpt-engineer/blob/main/LICENSE)\n[![GitHub Issues or Pull Requests](https://img.shields.io/github/issues/gpt-engineer-org/gpt-engineer)](https://github.com/gpt-engineer-org/gpt-engineer/issues)\n![GitHub Release](https://img.shields.io/github/v/release/gpt-engineer-org/gpt-engineer)\n[![Twitter Follow](https://img.shields.io/twitter/follow/antonosika?style=social)](https://twitter.com/antonosika)\n\nThe OG code genereation experimentation platform!\n\nIf you are looking for the evolution that is an opinionated, managed service \u2013 check out gptengineer.app.\n\nIf you are looking for a well maintained hackable CLI for \u2013 check out aider.\n\n\ngpt-engineer lets you:\n- Specify software in natural language\n- Sit back and watch as an AI writes and executes the code\n- Ask the AI to implement improvements\n\n## Getting Started\n\n### Install gpt-engineer\n\nFor **stable** release:\n\n- `python -m pip install gpt-engineer`\n\nFor **development**:\n- `git clone https://github.com/gpt-engineer-org/gpt-engineer.git`\n- `cd gpt-engineer`\n- `poetry install`\n- `poetry shell` to activate the virtual environment\n\nWe actively support Python 3.10 - 3.12. The last version to support Python 3.8 - 3.9 was [0.2.6](https://pypi.org/project/gpt-engineer/0.2.6/).\n\n### Setup API key\n\nChoose **one** of:\n- Export env variable (you can add this to .bashrc so that you don't have to do it each time you start the terminal)\n    - `export OPENAI_API_KEY=[your api key]`\n- .env file:\n    - Create a copy of `.env.template` named `.env`\n    - Add your OPENAI_API_KEY in .env\n- Custom model:\n    - See [docs](https://gpt-engineer.readthedocs.io/en/latest/open_models.html), supports local model, azure, etc.\n\nCheck the [Windows README](./WINDOWS_README.md) for Windows usage.\n\n**Other ways to run:**\n- Use Docker ([instructions](docker/README.md))\n- Do everything in your browser:\n[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://github.com/gpt-engineer-org/gpt-engineer/codespaces)\n\n### Create new code (default usage)\n- Create an empty folder for your project anywhere on your computer\n- Create a file called `prompt` (no extension) inside your new folder and fill it with instructions\n- Run `gpte <project_dir>` with a relative path to your folder\n  - For example: `gpte projects/my-new-project` from the gpt-engineer directory root with your new folder in `projects/`\n\n### Improve existing code\n- Locate a folder with code which you want to improve anywhere on your computer\n- Create a file called `prompt` (no extension) inside your new folder and fill it with instructions for how you want to improve the code\n- Run `gpte <project_dir> -i` with a relative path to your folder\n  - For example: `gpte projects/my-old-project -i` from the gpt-engineer directory root with your folder in `projects/`\n\n### Benchmark custom agents\n- gpt-engineer installs the binary 'bench', which gives you a simple interface for benchmarking your own agent implementations against popular public datasets.\n- The easiest way to get started with benchmarking is by checking out the [template](https://github.com/gpt-engineer-org/gpte-bench-template) repo, which contains detailed instructions and an agent template.\n- Currently supported benchmark:\n  - [APPS](https://github.com/hendrycks/apps)\n  - [MBPP](https://github.com/google-research/google-research/tree/master/mbpp)\n\nThe community has started work with different benchmarking initiatives, as described in [this Loom](https://www.loom.com/share/206805143fbb4302b5455a5329eaab17?sid=f689608f-8e49-44f7-b55f-4c81e9dc93e6) video.\n\n### Research\nSome of our community members have worked on different research briefs that could be taken further. See [this document](https://docs.google.com/document/d/1qmOj2DvdPc6syIAm8iISZFpfik26BYw7ZziD5c-9G0E/edit?usp=sharing) if you are interested.\n\n## Terms\nBy running gpt-engineer, you agree to our [terms](https://github.com/gpt-engineer-org/gpt-engineer/blob/main/TERMS_OF_USE.md).\n\n\n## Relation to gptengineer.app (GPT Engineer)\n[gptengineer.app](https://gptengineer.app/) is a commercial project for the automatic generation of web apps.\nIt features a UI for non-technical users connected to a git-controlled codebase.\nThe gptengineer.app team is actively supporting the open source community.\n\n\n## Features\n\n### Pre Prompts\nYou can specify the \"identity\" of the AI agent by overriding the `preprompts` folder with your own version of the `preprompts`. You can do so via the `--use-custom-preprompts` argument.\n\nEditing the `preprompts` is how you make the agent remember things between projects.\n\n### Vision\n\nBy default, gpt-engineer expects text input via a `prompt` file. It can also accept image inputs for vision-capable models. This can be useful for adding UX or architecture diagrams as additional context for GPT Engineer. You can do this by specifying an image directory with the `\u2014-image_directory` flag and setting a vision-capable model in the second CLI argument.\n\nE.g. `gpte projects/example-vision gpt-4-vision-preview --prompt_file prompt/text --image_directory prompt/images -i`\n\n### Open source, local and alternative models\n\nBy default, gpt-engineer supports OpenAI Models via the OpenAI API or Azure OpenAI API, as well as Anthropic models.\n\nWith a little extra setup, you can also run with open source models like WizardCoder. See the [documentation](https://gpt-engineer.readthedocs.io/en/latest/open_models.html) for example instructions.\n\n## Mission\n\nThe gpt-engineer community mission is to **maintain tools that coding agent builders can use and facilitate collaboration in the open source community**.\n\nIf you are interested in contributing to this, we are interested in having you.\n\nIf you want to see our broader ambitions, check out the [roadmap](https://github.com/gpt-engineer-org/gpt-engineer/blob/main/ROADMAP.md), and join\n[discord](https://discord.gg/8tcDQ89Ej2)\nto learn how you can [contribute](.github/CONTRIBUTING.md) to it.\n\ngpt-engineer is [governed](https://github.com/gpt-engineer-org/gpt-engineer/blob/main/GOVERNANCE.md) by a board of long-term contributors. If you contribute routinely and have an interest in shaping the future of gpt-engineer, you will be considered for the board.\n\n## Significant contributors\n<ul style=\"list-style-type: none; padding: 0; display: flex; flex-wrap: wrap;\"> <li style=\"margin-right: 10px; margin-bottom: 10px;\"> <a href=\"https://github.com/ATheorell\"> <img src=\"https://avatars.githubusercontent.com/u/143704446?s=64&v=4\" alt=\"@ATheorell\" width=\"32\" height=\"32\" style=\"border-radius: 50%;\"> @ATheorell </a> </li> <li style=\"margin-right: 10px; margin-bottom: 10px;\"> <a href=\"https://github.com/similato87\"> <img src=\"https://avatars.githubusercontent.com/u/71301573?s=64&v=4\" alt=\"@similato87\" width=\"32\" height=\"32\" style=\"border-radius: 50%;\"> @similato87 </a> </li> <li style=\"margin-right: 10px; margin-bottom: 10px;\"> <a href=\"https://github.com/TheoMcCabe\"> <img src=\"https://avatars.githubusercontent.com/u/9841960?s=64&v=4\" alt=\"@TheoMcCabe\" width=\"32\" height=\"32\" style=\"border-radius: 50%;\"> @TheoMcCabe </a> </li> <li style=\"margin-right: 10px; margin-bottom: 10px;\"> <a href=\"https://github.com/captivus\"> <img src=\"https://avatars.githubusercontent.com/u/366332?s=64&v=4\" alt=\"@captivus\" width=\"32\" height=\"32\" style=\"border-radius: 50%;\"> @captivus </a> </li> </ul>\n\n\n## Example\n\n\n\nhttps://github.com/gpt-engineer-org/gpt-engineer/assets/4467025/40d0a9a8-82d0-4432-9376-136df0d57c99\n",
        "releases": [
            {
                "name": "v0.3.1",
                "date": "2024-06-06T18:25:22Z"
            },
            {
                "name": "v0.3.0",
                "date": "2024-04-27T18:40:01Z"
            },
            {
                "name": "v0.2.9",
                "date": "2024-04-12T09:05:29Z"
            },
            {
                "name": "v0.2.7",
                "date": "2024-02-10T12:59:59Z"
            },
            {
                "name": "v0.2.6",
                "date": "2024-01-05T12:30:01Z"
            },
            {
                "name": "v.0.2.5",
                "date": "2023-12-21T09:13:54Z"
            },
            {
                "name": "Patch regain compatibility with python 3.8-9",
                "date": "2023-12-19T10:21:46Z"
            },
            {
                "name": "Fix to main path problem",
                "date": "2023-12-13T13:53:34Z"
            },
            {
                "name": "Changes to build system",
                "date": "2023-12-13T13:33:22Z"
            },
            {
                "name": "Rerelease on pypi",
                "date": "2023-12-11T18:35:24Z"
            },
            {
                "name": "Significant strides for open codegen innovation \u2013 v0.2.0 is live \ud83d\ude80",
                "date": "2023-12-08T18:20:51Z"
            },
            {
                "name": "v0.1.0 \ud83d\ude80",
                "date": "2023-10-17T14:59:18Z"
            },
            {
                "name": "v0.0.9 is live \ud83d\ude80",
                "date": "2023-09-04T07:09:58Z"
            },
            {
                "name": "v0.0.8 is live \ud83d\ude80",
                "date": "2023-08-12T11:53:29Z"
            },
            {
                "name": "v0.0.7 is live \ud83d\ude80",
                "date": "2023-06-25T13:56:29Z"
            },
            {
                "name": "v0.0.6 is live \ud83d\ude80",
                "date": "2023-06-22T09:31:15Z"
            },
            {
                "name": "v0.0.5 is live \ud83d\ude80",
                "date": "2023-06-22T08:47:15Z"
            },
            {
                "name": "v0.0.4 is live \ud83d\ude80",
                "date": "2023-06-20T23:16:51Z"
            },
            {
                "name": "v0.0.3 is live \ud83d\ude80",
                "date": "2023-06-18T21:33:30Z"
            },
            {
                "name": "v0.0.2 is live \ud83d\ude80",
                "date": "2023-06-18T13:39:32Z"
            }
        ]
    }
}