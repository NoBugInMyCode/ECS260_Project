{
    "https://api.github.com/repos/dixonandmoe/rellax": {
        "forks": 871,
        "watchers": 7115,
        "stars": 7115,
        "languages": {
            "HTML": 67643,
            "JavaScript": 19857,
            "CSS": 6972
        },
        "commits": [
            "2024-08-24T00:53:35Z",
            "2024-03-31T15:01:04Z",
            "2024-02-21T23:08:03Z",
            "2021-04-10T16:17:21Z",
            "2021-04-02T16:28:13Z",
            "2021-01-20T18:58:47Z",
            "2020-11-14T06:43:05Z",
            "2020-06-08T17:28:12Z",
            "2020-06-08T17:25:52Z",
            "2020-06-05T01:00:13Z",
            "2020-06-05T00:54:29Z",
            "2020-06-05T00:48:54Z",
            "2020-06-05T00:36:10Z",
            "2020-06-05T00:35:40Z",
            "2020-06-05T00:22:37Z",
            "2020-06-05T00:08:21Z",
            "2020-06-05T00:01:49Z",
            "2020-06-04T23:54:11Z",
            "2020-06-04T23:16:47Z",
            "2020-06-04T22:47:56Z",
            "2020-06-04T22:06:01Z",
            "2020-06-04T22:00:30Z",
            "2020-06-04T21:40:07Z",
            "2020-06-04T21:29:17Z",
            "2020-06-04T15:59:14Z",
            "2020-06-04T14:45:22Z",
            "2020-06-04T13:30:29Z",
            "2020-06-04T01:01:27Z",
            "2020-06-04T00:54:20Z",
            "2020-06-04T00:53:44Z"
        ],
        "creation_date": "2016-02-29T23:12:17Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 100,
        "readme": "# RELLAX\n\n[![NPM Package](https://img.shields.io/npm/v/rellax.svg)](https://www.npmjs.org/package/rellax)\n[![Minified Size](https://img.shields.io/bundlephobia/min/rellax.svg?label=minified)](https://bundlephobia.com/result?p=rellax)\n[![Gzipped Size](https://img.shields.io/bundlephobia/minzip/rellax.svg?label=gzipped)](https://bundlephobia.com/result?p=rellax)\n\nRellax is a buttery smooth, super lightweight, vanilla javascript parallax library. **Update:** Rellax now works on mobile (v1.0.0).\n\n* [Demo Website](https://dixonandmoe.com/rellax/)\n\n\n## Getting Started\n### Using npm\n\n`npm install rellax --save`\n\n### Using yarn\n\n`yarn add rellax`\n\n### CDN\n\n`<script src=\"https://cdn.jsdelivr.net/gh/dixonandmoe/rellax@master/rellax.min.js\"></script>`\n\n### Download Locally\n\nif you're old school like us download and insert `rellax.min.js` in your html\n\n\n```html\n<div class=\"rellax\">\n  I\u2019m that default chill speed of \"-2\"\n</div>\n<div class=\"rellax\" data-rellax-speed=\"7\">\n  I\u2019m super fast!!\n</div>\n<div class=\"rellax\" data-rellax-speed=\"-4\">\n  I\u2019m extra slow and smooth\n</div>\n\n<script src=\"https://cdn.jsdelivr.net/gh/dixonandmoe/rellax@master/rellax.min.js\"></script>\n<script>\n  // Accepts any class name\n  var rellax = new Rellax('.rellax');\n</script>\n```\n```html\n<script>\n  // Also can pass in optional settings block\n  var rellax = new Rellax('.rellax', {\n    speed: -2,\n    center: false,\n    wrapper: null,\n    round: true,\n    vertical: true,\n    horizontal: false\n  });\n</script>\n```\n## Features\n\n### Speed\nUse the `data-rellax-speed` attribute to set the speed of a `.rellax` element to something other than the default value (which is `-2`). A negative value will make it move slower than regular scrolling, and a positive value will make it move faster. We recommend keeping the speed between `-10` and `10`.\n\n#### Responsive Speed\nUse responsive speed attributes for breakpoint levels that require a different speed. Defaults to the `data-rellax-speed` setting in unspecified breakpoints.\n```html\n<div class=\"rellax\" data-rellax-speed=\"7\" data-rellax-xs-speed=\"-5\" data-rellax-mobile-speed=\"3\" data-rellax-tablet-speed=\"-8\" data-rellax-desktop-speed=\"1\">\n  I parallax at all different speeds depending on your screen width.\n</div>\n```\n\nPass an array of breakpoints. Each breakpoint value represents the resolution for mobile, tablet, desktop respectively. Checkout the responsiveness of the [`demo`](https://dixonandmoe.com/rellax/)\n```html\n<script>\n  // This is the default setting\n  var rellax = new Rellax('.rellax', {\n    breakpoints: [576, 768, 1201]\n  });\n</script>\n```\n\n\n### Centering\nAfter some fantastic work from [@p-realinho](https://github.com/p-realinho), we just released the ability to center parallax elements in your viewport! We'll be building a nice demo website, but for now check out the tests folder for several examples of how it works.\n\nThere's two ways to implement centering, either on specific elements or as a global option.\n1. #### Element-wise Centering\n- Add the ```data-rellax-percentage=\"0.5\"``` to a specific html element\n```html\n<div class=\"rellax\" data-rellax-percentage=\"0.5\">\n  I\u2019m that default chill speed of \"-2\" and \"centered\"\n</div>\n<div class=\"rellax\" data-rellax-speed=\"7\" data-rellax-percentage=\"0.5\">\n  I\u2019m super fast!! And super centered!!\n</div>\n<div class=\"rellax\" data-rellax-speed=\"-4\" data-rellax-percentage=\"0.5\">\n  I\u2019m extra slow and smooth, and hella centered.\n</div>\n```\n2. #### Global Centering\n- To activate the center feature in your whole html, add the code your `<script>` tag or JS file:\n```html\n<script>\n  // Center all the things!\n  var rellax = new Rellax('.rellax', {\n    center: true\n  });\n</script>\n```\n\n### Z-index\nIf you want to sort your elements properly in the Z space, you can use the data-rellax-zindex property\n```html\n<div class=\"rellax\">\n  I\u2019m that default chill speed of \"-2\" and default z-index of 0\n</div>\n<div class=\"rellax\" data-rellax-speed=\"7\" data-rellax-zindex=\"5\">\n  I\u2019m super fast!! And on top of the previous element, I'm z-index 5!!\n</div>\n```\n\n### Horizontal Parallax\nHorizontal parallax is disabled by default. You can enable it by passing `horizontal: true` in the settings block.\nThis feature is intended for panoramic style websites, where users scroll horizontally instead of vertically.\nNote that this can work together at the same time with the default vertical parallax. If you do not want this, pass `vertical: false` in the settings block.\n```html\n<script>\n  // Adding horizantal parallax scrolling\n  var rellax = new Rellax('.rellax', {\n    // Activate horizantal scrolling\n    // Turned off by default\n    horizontal: true\n    //Deactivate vertical scrolling\n    vertical: false\n  });\n</script>\n```\n\n### Custom Wrapper\nBy default, the position of parallax elements is determined via the scroll position of the body. Passing in the `wrapper` property will tell Rellax to watch that element instead.\n```html\n<script>\n  // Set wrapper to .custom-element instead of the body\n  var rellax = new Rellax('.rellax', {\n    wrapper: '.custom-element'\n  });\n</script>\n```\n\n### Refresh\n```html\n<script>\n  // Start Rellax\n  var rellax = new Rellax('.rellax');\n\n  // Destroy and create again parallax with previous settings\n  rellax.refresh();\n</script>\n```\n\n### Destroy\n```html\n<script>\n  // Start Rellax\n  var rellax = new Rellax('.rellax');\n\n  // End Rellax and reset parallax elements to their original positions\n  rellax.destroy();\n</script>\n```\n\n### Callback\n```html\n<script>\n  // Start Rellax\n  var rellax = new Rellax('.rellax-blur-card', {\n    callback: function(positions) {\n      // callback every position change\n      console.log(positions);\n    }\n  });\n</script>\n```\n\n### Target node\nInstead of using a className you can use a node, handy when using React and you want to use `refs` instead of `className`.\n```jsx\n<div ref={ref => { this.rellaxRef = ref }}>\n  I\u2019m that default chill speed of \"-2\"\n</div>\n\nvar rellax = new Rellax(this.rellaxRef)\n```\n\n## In the Wild\nIf you're using Rellax in production, we'd love to list you here! Let us know: moe@dixonandmoe.com\n- [Bowmore Scotch](https://www.bowmore.com/)\n- [Generated Photos](https://generated.photos/)\n- [How Much Does a Website Cost](https://designagency.io/)\n- [Linux Man Pages](https://dashdash.io/)\n- [Laws of UX](https://lawsofux.com/)\n- [Finch](https://finch.io/)\n- [Embedded Payroll](https://robotist.com/embedded-payroll-api)\n- [Product Designer in San Francisco](https://moeamaya.com/)\n- [EthWorks](http://ethworks.io/)\n- [Lorem Ipsum Generator](https://loremipsumgenerator.com/)\n- [Deeson](https://www.deeson.co.uk/)\n\n## Development\nIn the spirit of lightweight javascript, the build processes (thus far) is lightweight also.\n\n1. Open demo.html\n2. Make code changes and refresh browser\n3. Once feature is finished or bug fixed, use [jshint](http://jshint.com/) to lint code\n4. Fix lint issues then use [Google Closure Compiler](https://closure-compiler.appspot.com/home) to minify\n5. \ud83c\udf7b\n\n## Changelog\n- 1.7.1: Remove animation on destory [PR](https://github.com/dixonandmoe/rellax/pull/132)\n- 1.7.0: Scroll position set relative to the wrapper [PR](https://github.com/dixonandmoe/rellax/pull/125)\n",
        "releases": []
    }
}