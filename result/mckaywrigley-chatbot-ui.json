{
    "https://api.github.com/repos/mckaywrigley/chatbot-ui": {
        "forks": 8207,
        "watchers": 29347,
        "stars": 29347,
        "languages": {
            "TypeScript": 775185,
            "PLpgSQL": 31996,
            "JavaScript": 2012,
            "CSS": 1798,
            "Shell": 108
        },
        "commits": [
            "2024-06-22T17:14:46Z",
            "2024-06-07T13:28:51Z",
            "2024-06-02T21:28:48Z",
            "2024-06-02T21:27:43Z",
            "2024-06-02T21:27:05Z",
            "2024-06-02T21:26:35Z",
            "2024-06-02T21:26:23Z",
            "2024-06-02T21:25:39Z",
            "2024-05-15T23:39:47Z",
            "2024-05-13T23:14:57Z",
            "2024-05-13T23:09:52Z",
            "2024-05-13T06:41:45Z",
            "2024-05-08T09:10:35Z",
            "2024-04-22T18:46:28Z",
            "2024-04-22T18:46:19Z",
            "2024-04-17T05:55:07Z",
            "2024-04-17T05:54:32Z",
            "2024-04-02T22:10:32Z",
            "2024-04-02T22:09:51Z",
            "2024-04-02T22:09:35Z",
            "2024-04-02T22:09:03Z",
            "2024-03-26T05:24:21Z",
            "2024-03-26T05:24:05Z",
            "2024-03-26T05:20:17Z",
            "2024-03-25T20:40:43Z",
            "2024-03-25T02:07:46Z",
            "2024-03-23T03:24:16Z",
            "2024-03-23T02:23:40Z",
            "2024-03-23T02:21:41Z",
            "2024-03-23T02:11:38Z"
        ],
        "creation_date": "2023-03-11T14:53:14Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 256,
        "readme": "# Chatbot UI\n\nThe open-source AI chat app for everyone.\n\n<img src=\"./public/readme/screenshot.png\" alt=\"Chatbot UI\" width=\"600\">\n\n## Demo\n\nView the latest demo [here](https://x.com/mckaywrigley/status/1738273242283151777?s=20).\n\n## Updates\n\nHey everyone! I've heard your feedback and am working hard on a big update.\n\nThings like simpler deployment, better backend compatibility, and improved mobile layouts are on their way.\n\nBe back soon.\n\n-- Mckay\n\n## Official Hosted Version\n\nUse Chatbot UI without having to host it yourself!\n\nFind the official hosted version of Chatbot UI [here](https://chatbotui.com).\n\n## Sponsor\n\nIf you find Chatbot UI useful, please consider [sponsoring](https://github.com/sponsors/mckaywrigley) me to support my open-source work :)\n\n## Issues\n\nWe restrict \"Issues\" to actual issues related to the codebase.\n\nWe're getting excessive amounts of issues that amount to things like feature requests, cloud provider issues, etc.\n\nIf you are having issues with things like setup, please refer to the \"Help\" section in the \"Discussions\" tab above.\n\nIssues unrelated to the codebase will likely be closed immediately.\n\n## Discussions\n\nWe highly encourage you to participate in the \"Discussions\" tab above!\n\nDiscussions are a great place to ask questions, share ideas, and get help.\n\nOdds are if you have a question, someone else has the same question.\n\n## Legacy Code\n\nChatbot UI was recently updated to its 2.0 version.\n\nThe code for 1.0 can be found on the `legacy` branch.\n\n## Updating\n\nIn your terminal at the root of your local Chatbot UI repository, run:\n\n```bash\nnpm run update\n```\n\nIf you run a hosted instance you'll also need to run:\n\n```bash\nnpm run db-push\n```\n\nto apply the latest migrations to your live database.\n\n## Local Quickstart\n\nFollow these steps to get your own Chatbot UI instance running locally.\n\nYou can watch the full video tutorial [here](https://www.youtube.com/watch?v=9Qq3-7-HNgw).\n\n### 1. Clone the Repo\n\n```bash\ngit clone https://github.com/mckaywrigley/chatbot-ui.git\n```\n\n### 2. Install Dependencies\n\nOpen a terminal in the root directory of your local Chatbot UI repository and run:\n\n```bash\nnpm install\n```\n\n### 3. Install Supabase & Run Locally\n\n#### Why Supabase?\n\nPreviously, we used local browser storage to store data. However, this was not a good solution for a few reasons:\n\n- Security issues\n- Limited storage\n- Limits multi-modal use cases\n\nWe now use Supabase because it's easy to use, it's open-source, it's Postgres, and it has a free tier for hosted instances.\n\nWe will support other providers in the future to give you more options.\n\n#### 1. Install Docker\n\nYou will need to install Docker to run Supabase locally. You can download it [here](https://docs.docker.com/get-docker) for free.\n\n#### 2. Install Supabase CLI\n\n**MacOS/Linux**\n\n```bash\nbrew install supabase/tap/supabase\n```\n\n**Windows**\n\n```bash\nscoop bucket add supabase https://github.com/supabase/scoop-bucket.git\nscoop install supabase\n```\n\n#### 3. Start Supabase\n\nIn your terminal at the root of your local Chatbot UI repository, run:\n\n```bash\nsupabase start\n```\n\n### 4. Fill in Secrets\n\n#### 1. Environment Variables\n\nIn your terminal at the root of your local Chatbot UI repository, run:\n\n```bash\ncp .env.local.example .env.local\n```\n\nGet the required values by running:\n\n```bash\nsupabase status\n```\n\nNote: Use `API URL` from `supabase status` for `NEXT_PUBLIC_SUPABASE_URL`\n\nNow go to your `.env.local` file and fill in the values.\n\nIf the environment variable is set, it will disable the input in the user settings.\n\n#### 2. SQL Setup\n\nIn the 1st migration file `supabase/migrations/20240108234540_setup.sql` you will need to replace 2 values with the values you got above:\n\n- `project_url` (line 53): `http://supabase_kong_chatbotui:8000` (default) can remain unchanged if you don't change your `project_id` in the `config.toml` file\n- `service_role_key` (line 54): You got this value from running `supabase status`\n\nThis prevents issues with storage files not being deleted properly.\n\n### 5. Install Ollama (optional for local models)\n\nFollow the instructions [here](https://github.com/jmorganca/ollama#macos).\n\n### 6. Run app locally\n\nIn your terminal at the root of your local Chatbot UI repository, run:\n\n```bash\nnpm run chat\n```\n\nYour local instance of Chatbot UI should now be running at [http://localhost:3000](http://localhost:3000). Be sure to use a compatible node version (i.e. v18).\n\nYou can view your backend GUI at [http://localhost:54323/project/default/editor](http://localhost:54323/project/default/editor).\n\n## Hosted Quickstart\n\nFollow these steps to get your own Chatbot UI instance running in the cloud.\n\nVideo tutorial coming soon.\n\n### 1. Follow Local Quickstart\n\nRepeat steps 1-4 in \"Local Quickstart\" above.\n\nYou will want separate repositories for your local and hosted instances.\n\nCreate a new repository for your hosted instance of Chatbot UI on GitHub and push your code to it.\n\n### 2. Setup Backend with Supabase\n\n#### 1. Create a new project\n\nGo to [Supabase](https://supabase.com/) and create a new project.\n\n#### 2. Get Project Values\n\nOnce you are in the project dashboard, click on the \"Project Settings\" icon tab on the far bottom left.\n\nHere you will get the values for the following environment variables:\n\n- `Project Ref`: Found in \"General settings\" as \"Reference ID\"\n\n- `Project ID`: Found in the URL of your project dashboard (Ex: https://supabase.com/dashboard/project/<YOUR_PROJECT_ID>/settings/general)\n\nWhile still in \"Settings\" click on the \"API\" text tab on the left.\n\nHere you will get the values for the following environment variables:\n\n- `Project URL`: Found in \"API Settings\" as \"Project URL\"\n\n- `Anon key`: Found in \"Project API keys\" as \"anon public\"\n\n- `Service role key`: Found in \"Project API keys\" as \"service_role\" (Reminder: Treat this like a password!)\n\n#### 3. Configure Auth\n\nNext, click on the \"Authentication\" icon tab on the far left.\n\nIn the text tabs, click on \"Providers\" and make sure \"Email\" is enabled.\n\nWe recommend turning off \"Confirm email\" for your own personal instance.\n\n#### 4. Connect to Hosted DB\n\nOpen up your repository for your hosted instance of Chatbot UI.\n\nIn the 1st migration file `supabase/migrations/20240108234540_setup.sql` you will need to replace 2 values with the values you got above:\n\n- `project_url` (line 53): Use the `Project URL` value from above\n- `service_role_key` (line 54): Use the `Service role key` value from above\n\nNow, open a terminal in the root directory of your local Chatbot UI repository. We will execute a few commands here.\n\nLogin to Supabase by running:\n\n```bash\nsupabase login\n```\n\nNext, link your project by running the following command with the \"Project ID\" you got above:\n\n```bash\nsupabase link --project-ref <project-id>\n```\n\nYour project should now be linked.\n\nFinally, push your database to Supabase by running:\n\n```bash\nsupabase db push\n```\n\nYour hosted database should now be set up!\n\n### 3. Setup Frontend with Vercel\n\nGo to [Vercel](https://vercel.com/) and create a new project.\n\nIn the setup page, import your GitHub repository for your hosted instance of Chatbot UI. Within the project Settings, in the \"Build & Development Settings\" section, switch Framework Preset to \"Next.js\".\n\nIn environment variables, add the following from the values you got above:\n\n- `NEXT_PUBLIC_SUPABASE_URL`\n- `NEXT_PUBLIC_SUPABASE_ANON_KEY`\n- `SUPABASE_SERVICE_ROLE_KEY`\n- `NEXT_PUBLIC_OLLAMA_URL` (only needed when using local Ollama models; default: `http://localhost:11434`)\n\nYou can also add API keys as environment variables.\n\n- `OPENAI_API_KEY`\n- `AZURE_OPENAI_API_KEY`\n- `AZURE_OPENAI_ENDPOINT`\n- `AZURE_GPT_45_VISION_NAME`\n\nFor the full list of environment variables, refer to the '.env.local.example' file. If the environment variables are set for API keys, it will disable the input in the user settings.\n\nClick \"Deploy\" and wait for your frontend to deploy.\n\nOnce deployed, you should be able to use your hosted instance of Chatbot UI via the URL Vercel gives you.\n\n## Contributing\n\nWe are working on a guide for contributing.\n\n## Contact\n\nMessage Mckay on [Twitter/X](https://twitter.com/mckaywrigley)\n",
        "releases": []
    }
}