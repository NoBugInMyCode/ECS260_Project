{
    "https://api.github.com/repos/DmitryUlyanov/deep-image-prior": {
        "forks": 1430,
        "watchers": 7938,
        "stars": 7938,
        "languages": {
            "Jupyter Notebook": 69742,
            "Python": 58948,
            "Dockerfile": 999
        },
        "commits": [
            "2020-05-09T10:57:11Z",
            "2019-10-30T17:58:30Z",
            "2019-10-30T17:56:31Z",
            "2019-10-30T17:50:35Z",
            "2019-10-30T15:58:00Z",
            "2019-10-30T15:42:25Z",
            "2019-09-26T04:33:14Z",
            "2019-09-26T04:32:37Z",
            "2019-06-12T19:46:47Z",
            "2019-03-10T05:02:01Z",
            "2019-03-10T04:48:57Z",
            "2019-01-30T11:30:24Z",
            "2019-01-17T19:41:36Z",
            "2019-01-13T06:14:27Z",
            "2019-01-13T06:14:18Z",
            "2019-01-13T06:13:28Z",
            "2019-01-13T06:12:57Z",
            "2018-08-02T14:04:11Z",
            "2018-06-29T10:13:39Z",
            "2018-06-07T08:10:53Z",
            "2018-06-07T08:09:28Z",
            "2018-06-07T08:07:20Z",
            "2018-06-06T18:14:55Z",
            "2018-06-06T18:08:53Z",
            "2018-06-06T18:07:54Z",
            "2018-05-15T07:12:21Z",
            "2018-05-14T16:22:37Z",
            "2018-04-05T09:26:24Z",
            "2018-04-04T10:09:00Z",
            "2018-04-04T08:44:20Z"
        ],
        "creation_date": "2017-11-29T22:33:00Z",
        "contributors": 6,
        "topics": [],
        "subscribers": 228,
        "readme": "**Warning!** The optimization may not converge on some GPUs. We've personally experienced issues on Tesla V100 and P40 GPUs. When running the code, make sure you get similar results to the paper first. Easiest to check using text inpainting notebook.  Try to set double precision mode or turn off cudnn. \n\n# Deep image prior\n\nIn this repository we provide *Jupyter Notebooks* to reproduce each figure from the paper:\n\n> **Deep Image Prior**\n\n> CVPR 2018\n\n> Dmitry Ulyanov, Andrea Vedaldi, Victor Lempitsky\n\n\n[[paper]](https://sites.skoltech.ru/app/data/uploads/sites/25/2018/04/deep_image_prior.pdf) [[supmat]](https://box.skoltech.ru/index.php/s/ib52BOoV58ztuPM) [[project page]](https://dmitryulyanov.github.io/deep_image_prior)\n\n![](data/teaser_compiled.jpg)\n\nHere we provide hyperparameters and architectures, that were used to generate the figures. Most of them are far from optimal. Do not hesitate to change them and see the effect.\n\nWe will expand this README with a list of hyperparameters and options shortly.\n\n# Install\n\nHere is the list of libraries you need to install to execute the code:\n- python = 3.6\n- [pytorch](http://pytorch.org/) = 0.4\n- numpy\n- scipy\n- matplotlib\n- scikit-image\n- jupyter\n\nAll of them can be installed via `conda` (`anaconda`), e.g.\n```\nconda install jupyter\n```\n\n\nor create an conda env with all dependencies via environment file\n\n```\nconda env create -f environment.yml\n```\n\n## Docker image\n\nAlternatively, you can use a Docker image that exposes a Jupyter Notebook with all required dependencies. To build this image ensure you have both [docker](https://www.docker.com/) and  [nvidia-docker](https://github.com/NVIDIA/nvidia-docker) installed, then run\n\n```\nnvidia-docker build -t deep-image-prior .\n```\n\nAfter the build you can start the container as\n\n```\nnvidia-docker run --rm -it --ipc=host -p 8888:8888 deep-image-prior\n```\n\nyou will be provided an URL through which you can connect to the Jupyter notebook.\n\n## Google Colab\n\nTo run it using Google Colab, click [here](https://colab.research.google.com/github/DmitryUlyanov/deep-image-prior) and select the notebook to run. Remember to uncomment the first cell to clone the repository into colab's environment.\n\n\n# Citation\n```\n@article{UlyanovVL17,\n    author    = {Ulyanov, Dmitry and Vedaldi, Andrea and Lempitsky, Victor},\n    title     = {Deep Image Prior},\n    journal   = {arXiv:1711.10925},\n    year      = {2017}\n}\n```\n",
        "releases": []
    }
}