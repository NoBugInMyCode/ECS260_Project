{
    "https://api.github.com/repos/google/gvisor": {
        "forks": 1320,
        "watchers": 16021,
        "stars": 16021,
        "languages": {
            "Go": 18515647,
            "C++": 4150141,
            "Starlark": 880509,
            "Assembly": 196145,
            "C": 103908,
            "Shell": 88273,
            "Makefile": 57766,
            "HTML": 29166,
            "Python": 21977,
            "Dockerfile": 11741,
            "Cuda": 9042,
            "SCSS": 8661,
            "Ruby": 2430,
            "JavaScript": 983,
            "Handlebars": 103,
            "Rust": 45
        },
        "commits": [
            "2025-01-22T02:20:27Z",
            "2025-01-21T23:27:02Z",
            "2025-01-21T20:51:30Z",
            "2025-01-20T19:18:39Z",
            "2025-01-19T01:13:16Z",
            "2025-01-17T19:12:15Z",
            "2025-01-16T01:41:24Z",
            "2025-01-15T23:12:16Z",
            "2025-01-15T22:20:43Z",
            "2025-01-15T21:33:36Z",
            "2025-01-15T19:50:04Z",
            "2025-01-14T05:08:55Z",
            "2025-01-11T06:31:22Z",
            "2025-01-11T03:41:27Z",
            "2025-01-10T23:07:01Z",
            "2025-01-10T19:41:53Z",
            "2025-01-10T18:17:02Z",
            "2025-01-09T20:27:22Z",
            "2025-01-09T01:38:02Z",
            "2024-12-23T22:51:43Z",
            "2025-01-08T20:59:06Z",
            "2025-01-08T19:48:11Z",
            "2025-01-08T07:24:50Z",
            "2025-01-08T04:21:58Z",
            "2025-01-08T01:25:03Z",
            "2025-01-07T20:43:03Z",
            "2025-01-07T19:25:40Z",
            "2025-01-07T19:14:57Z",
            "2025-01-07T03:38:20Z",
            "2025-01-06T22:01:09Z"
        ],
        "creation_date": "2018-04-26T21:28:49Z",
        "contributors": 30,
        "topics": [
            "containers",
            "docker",
            "kernel",
            "kubernetes",
            "linux",
            "oci",
            "sandbox"
        ],
        "subscribers": 301,
        "readme": "![gVisor](g3doc/logo.png)\n\n[![Build status](https://badge.buildkite.com/3b159f20b9830461a71112566c4171c0bdfd2f980a8e4c0ae6.svg?branch=master)](https://buildkite.com/gvisor/pipeline)\n[![Issue reviver](https://github.com/google/gvisor/actions/workflows/issue_reviver.yml/badge.svg)](https://github.com/google/gvisor/actions/workflows/issue_reviver.yml)\n[![CodeQL](https://github.com/google/gvisor/actions/workflows/codeql.yml/badge.svg)](https://github.com/google/gvisor/actions/workflows/codeql.yml)\n[![gVisor chat](https://badges.gitter.im/gvisor/community.png)](https://gitter.im/gvisor/community)\n[![code search](https://img.shields.io/badge/code-search-blue)](https://cs.opensource.google/gvisor/gvisor)\n\n## What is gVisor?\n\n**gVisor** provides a strong layer of isolation between running applications and\nthe host operating system. It is an application kernel that implements a\n[Linux-like interface][linux]. Unlike Linux, it is written in a memory-safe\nlanguage (Go) and runs in userspace.\n\ngVisor includes an [Open Container Initiative (OCI)][oci] runtime called `runsc`\nthat makes it easy to work with existing container tooling. The `runsc` runtime\nintegrates with Docker and Kubernetes, making it simple to run sandboxed\ncontainers.\n\n## What **isn't** gVisor?\n\n*   gVisor is **not a syscall filter** (e.g. `seccomp-bpf`), nor a wrapper over\n    Linux isolation primitives (e.g. `firejail`, AppArmor, etc.).\n*   gVisor is also **not a VM** in the everyday sense of the term (e.g.\n    VirtualBox, QEMU).\n\n**gVisor takes a distinct third approach**, providing many security benefits of\nVMs while maintaining the lower resource footprint, fast startup, and\nflexibility of regular userspace applications.\n\n## Why does gVisor exist?\n\nContainers are not a [**sandbox**][sandbox]. While containers have\nrevolutionized how we develop, package, and deploy applications, using them to\nrun untrusted or potentially malicious code without additional isolation is not\na good idea. While using a single, shared kernel allows for efficiency and\nperformance gains, it also means that container escape is possible with a single\nvulnerability.\n\ngVisor is an application kernel for containers. It limits the host kernel\nsurface accessible to the application while still giving the application access\nto all the features it expects. Unlike most kernels, gVisor does not assume or\nrequire a fixed set of physical resources; instead, it leverages existing host\nkernel functionality and runs as a normal process. In other words, gVisor\nimplements Linux by way of Linux.\n\ngVisor should not be confused with technologies and tools to harden containers\nagainst external threats, provide additional integrity checks, or limit the\nscope of access for a service. One should always be careful about what data is\nmade available to a container.\n\n## Documentation\n\nUser documentation and technical architecture, including quick start guides, can\nbe found at [gvisor.dev][gvisor-dev].\n\n## Installing from source\n\ngVisor builds on x86_64 and ARM64. Other architectures may become available in\nthe future.\n\nFor the purposes of these instructions, [bazel][bazel] and other build\ndependencies are wrapped in a build container. It is possible to use\n[bazel][bazel] directly, or type `make help` for standard targets.\n\n### Requirements\n\nMake sure the following dependencies are installed:\n\n*   Linux 4.14.77+ ([older linux][old-linux])\n*   [Docker version 17.09.0 or greater][docker]\n\n### Building\n\nBuild and install the `runsc` binary:\n\n```sh\nmkdir -p bin\nmake copy TARGETS=runsc DESTINATION=bin/\nsudo cp ./bin/runsc /usr/local/bin\n```\n\nTo build specific libraries or binaries, you can specify the target:\n\n```sh\nmake build TARGETS=\"//pkg/tcpip:tcpip\"\n```\n\n### Testing\n\nTo run standard test suites, you can use:\n\n```sh\nmake unit-tests\nmake tests\n```\n\nTo run specific tests, you can specify the target:\n\n```sh\nmake test TARGETS=\"//runsc:version_test\"\n```\n\n### Using `go get`\n\nThis project uses [bazel][bazel] to build and manage dependencies. A synthetic\n`go` branch is maintained that is compatible with standard `go` tooling for\nconvenience.\n\nFor example, to build and install `runsc` directly from this branch:\n\n```sh\necho \"module runsc\" > go.mod\nGO111MODULE=on go get gvisor.dev/gvisor/runsc@go\nCGO_ENABLED=0 GO111MODULE=on sudo -E go build -o /usr/local/bin/runsc gvisor.dev/gvisor/runsc\n```\n\nSubsequently, you can build and install the shim binary for `containerd`:\n\n```sh\nGO111MODULE=on sudo -E go build -o /usr/local/bin/containerd-shim-runsc-v1 gvisor.dev/gvisor/shim\n```\n\nNote that this branch is supported in a best effort capacity, and direct\ndevelopment on this branch is not supported. Development should occur on the\n`master` branch, which is then reflected into the `go` branch.\n\n## Community & Governance\n\nSee [GOVERNANCE.md](GOVERNANCE.md) for project governance information.\n\nThe [gvisor-users mailing list][gvisor-users-list] and\n[gvisor-dev mailing list][gvisor-dev-list] are good starting points for\nquestions and discussion.\n\n## Security Policy\n\nSee [SECURITY.md](SECURITY.md).\n\n## Contributing\n\nSee [Contributing.md](CONTRIBUTING.md).\n\n[bazel]: https://bazel.build\n[docker]: https://www.docker.com\n[gvisor-users-list]: https://groups.google.com/forum/#!forum/gvisor-users\n[gvisor-dev]: https://gvisor.dev\n[gvisor-dev-list]: https://groups.google.com/forum/#!forum/gvisor-dev\n[linux]: https://en.wikipedia.org/wiki/Linux_kernel_interfaces\n[oci]: https://www.opencontainers.org\n[old-linux]: https://gvisor.dev/docs/user_guide/networking/#gso\n[sandbox]: https://en.wikipedia.org/wiki/Sandbox_(computer_security)\n",
        "releases": []
    }
}