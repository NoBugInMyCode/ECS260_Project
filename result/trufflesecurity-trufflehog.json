{
    "https://api.github.com/repos/trufflesecurity/trufflehog": {
        "forks": 1749,
        "watchers": 17840,
        "stars": 17840,
        "languages": {
            "Go": 9114336,
            "Shell": 15060,
            "Makefile": 1956,
            "Dockerfile": 621,
            "Gnuplot": 264
        },
        "commits": [
            "2025-01-21T06:46:53Z",
            "2025-01-20T10:31:08Z",
            "2025-01-16T15:45:29Z",
            "2025-01-15T17:31:21Z",
            "2025-01-15T17:01:40Z",
            "2025-01-15T16:33:53Z",
            "2025-01-15T15:40:49Z",
            "2025-01-15T00:37:33Z",
            "2025-01-14T20:32:00Z",
            "2025-01-14T19:48:04Z",
            "2025-01-14T14:16:35Z",
            "2025-01-13T19:51:30Z",
            "2025-01-13T19:39:08Z",
            "2025-01-13T19:18:59Z",
            "2025-01-10T17:25:20Z",
            "2025-01-10T14:35:18Z",
            "2025-01-09T22:08:20Z",
            "2025-01-07T18:25:22Z",
            "2025-01-07T17:11:18Z",
            "2025-01-06T20:00:56Z",
            "2025-01-06T18:46:55Z",
            "2025-01-06T18:45:51Z",
            "2024-12-31T14:29:26Z",
            "2024-12-31T12:35:39Z",
            "2024-12-31T07:26:41Z",
            "2024-12-31T07:21:05Z",
            "2024-12-25T19:14:22Z",
            "2024-12-20T21:40:29Z",
            "2024-12-20T17:13:25Z",
            "2024-12-20T17:12:54Z"
        ],
        "creation_date": "2016-12-31T05:08:12Z",
        "contributors": 30,
        "topics": [
            "credentials",
            "devsecops",
            "dynamic-analysis",
            "hacktoberfest",
            "precommit",
            "scanning",
            "secret",
            "secret-management",
            "secrets",
            "security",
            "security-tools",
            "trufflehog",
            "verification"
        ],
        "subscribers": 181,
        "readme": "<p align=\"center\">\n  <img alt=\"GoReleaser Logo\" src=\"https://storage.googleapis.com/trufflehog-static-sources/pixel_pig.png\" height=\"140\" />\n  <h2 align=\"center\">TruffleHog</h2>\n  <p align=\"center\">Find leaked credentials.</p>\n</p>\n\n---\n\n<div align=\"center\">\n\n[![Go Report Card](https://goreportcard.com/badge/github.com/trufflesecurity/trufflehog/v3)](https://goreportcard.com/report/github.com/trufflesecurity/trufflehog/v3)\n[![License](https://img.shields.io/badge/license-AGPL--3.0-brightgreen)](/LICENSE)\n[![Total Detectors](https://img.shields.io/github/directory-file-count/trufflesecurity/truffleHog/pkg/detectors?label=Total%20Detectors&type=dir)](/pkg/detectors)\n\n</div>\n\n---\n\n# :mag_right: _Now Scanning_\n\n<div align=\"center\">\n\n<img src=\"assets/scanning_logos.svg\">\n\n**...and more**\n\nTo learn more about about TruffleHog and its features and capabilities, visit our [product page](https://trufflesecurity.com/trufflehog?gclid=CjwKCAjwouexBhAuEiwAtW_Zx5IW87JNj97Ci7heFnA5ar6-DuNzT2Y5nIl9DuZ-FOUqx0Qg3vb9nxoClcEQAvD_BwE).\n\n</div>\n\n# :globe_with_meridians: TruffleHog Enterprise\n\nAre you interested in continuously monitoring **Git, Jira, Slack, Confluence, Microsoft Teams, Sharepoint, and more..** for credentials? We have an enterprise product that can help! Learn more at <https://trufflesecurity.com/trufflehog-enterprise>.\n\nWe take the revenue from the enterprise product to fund more awesome open source projects that the whole community can benefit from.\n\n</div>\n\n# What is TruffleHog \ud83d\udc3d\n\nTruffleHog is the most powerful secrets **Discovery, Classification, Validation,** and **Analysis** tool. In this context secret refers to a credential a machine uses to authenticate itself to another machine. This includes API keys, database passwords, private encryption keys, and more...\n\n## Discovery \ud83d\udd0d\n\nTruffleHog can look for secrets in many places including Git, chats, wikis, logs, API testing platforms, object stores, filesystems and more\n\n## Classification \ud83d\udcc1\n\nTruffleHog classifies over 800 secret types, mapping them back to the specific identity they belong to. Is it an AWS secret? Stripe secret? Cloudflare secret? Postgres password? SSL Private key? Sometimes its hard to tell looking at it, so TruffleHog classifies everything it finds.\n\n## Validation \u2705\n\nFor every secret TruffleHog can classify, it can also log in to confirm if that secret is live or not. This step is critical to know if there\u2019s an active present danger or not.\n\n## Analysis \ud83d\udd2c\n\nFor the 20 some of the most commonly leaked out credential types, instead of sending one request to check if the secret can log in, TruffleHog can send many requests to learn everything there is to know about the secret. Who created it? What resources can it access? What permissions does it have on those resources?\n\n# :loudspeaker: Join Our Community\n\nHave questions? Feedback? Jump in slack or discord and hang out with us\n\nJoin our [Slack Community](https://join.slack.com/t/trufflehog-community/shared_invite/zt-pw2qbi43-Aa86hkiimstfdKH9UCpPzQ)\n\nJoin the [Secret Scanning Discord](https://discord.gg/8Hzbrnkr7E)\n\n# :tv: Demo\n\n![GitHub scanning demo](https://storage.googleapis.com/truffle-demos/non-interactive.svg)\n\n```bash\ndocker run --rm -it -v \"$PWD:/pwd\" trufflesecurity/trufflehog:latest github --org=trufflesecurity\n```\n\n# :floppy_disk: Installation\n\nSeveral options available for you:\n\n### MacOS users\n\n```bash\nbrew install trufflehog\n```\n\n### Docker:\n\n<sub><i>_Ensure Docker engine is running before executing the following commands:_</i></sub>\n\n#### &nbsp;&nbsp;&nbsp;&nbsp;Unix\n\n```bash\ndocker run --rm -it -v \"$PWD:/pwd\" trufflesecurity/trufflehog:latest github --repo https://github.com/trufflesecurity/test_keys\n```\n\n#### &nbsp;&nbsp;&nbsp;&nbsp;Windows Command Prompt\n\n```bash\ndocker run --rm -it -v \"%cd:/=\\%:/pwd\" trufflesecurity/trufflehog:latest github --repo https://github.com/trufflesecurity/test_keys\n```\n\n#### &nbsp;&nbsp;&nbsp;&nbsp;Windows PowerShell\n\n```bash\ndocker run --rm -it -v \"${PWD}:/pwd\" trufflesecurity/trufflehog github --repo https://github.com/trufflesecurity/test_keys\n```\n\n#### &nbsp;&nbsp;&nbsp;&nbsp;M1 and M2 Mac\n\n```bash\ndocker run --platform linux/arm64 --rm -it -v \"$PWD:/pwd\" trufflesecurity/trufflehog:latest github --repo https://github.com/trufflesecurity/test_keys\n```\n\n### Binary releases\n\n```bash\nDownload and unpack from https://github.com/trufflesecurity/trufflehog/releases\n```\n\n### Compile from source\n\n```bash\ngit clone https://github.com/trufflesecurity/trufflehog.git\ncd trufflehog; go install\n```\n\n### Using installation script\n\n```bash\ncurl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin\n```\n\n### Using installation script, verify checksum signature (requires cosign to be installed)\n\n```bash\ncurl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -v -b /usr/local/bin\n```\n\n### Using installation script to install a specific version\n\n```bash\ncurl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin <ReleaseTag like v3.56.0>\n```\n\n# :closed_lock_with_key: Verifying the artifacts\n\nChecksums are applied to all artifacts, and the resulting checksum file is signed using cosign.\n\nYou need the following tool to verify signature:\n\n- [Cosign](https://docs.sigstore.dev/cosign/system_config/installation/)\n\nVerification steps are as follow:\n\n1. Download the artifact files you want, and the following files from the [releases](https://github.com/trufflesecurity/trufflehog/releases) page.\n\n   - trufflehog\\_{version}\\_checksums.txt\n   - trufflehog\\_{version}\\_checksums.txt.pem\n   - trufflehog\\_{version}\\_checksums.txt.sig\n\n2. Verify the signature:\n\n   ```shell\n   cosign verify-blob <path to trufflehog_{version}_checksums.txt> \\\n   --certificate <path to trufflehog_{version}_checksums.txt.pem> \\\n   --signature <path to trufflehog_{version}_checksums.txt.sig> \\\n   --certificate-identity-regexp 'https://github\\.com/trufflesecurity/trufflehog/\\.github/workflows/.+' \\\n   --certificate-oidc-issuer \"https://token.actions.githubusercontent.com\"\n   ```\n\n3. Once the signature is confirmed as valid, you can proceed to validate that the SHA256 sums align with the downloaded artifact:\n\n   ```shell\n   sha256sum --ignore-missing -c trufflehog_{version}_checksums.txt\n   ```\n\nReplace `{version}` with the downloaded files version\n\nAlternatively, if you are using installation script, pass `-v` option to perform signature verification.\nThis required Cosign binary to be installed prior to running installation script.\n\n# :rocket: Quick Start\n\n## 1: Scan a repo for only verified secrets\n\nCommand:\n\n```bash\ntrufflehog git https://github.com/trufflesecurity/test_keys --results=verified,unknown\n```\n\nExpected output:\n\n```\n\ud83d\udc37\ud83d\udd11\ud83d\udc37  TruffleHog. Unearth your secrets. \ud83d\udc37\ud83d\udd11\ud83d\udc37\n\nFound verified result \ud83d\udc37\ud83d\udd11\nDetector Type: AWS\nDecoder Type: PLAIN\nRaw result: AKIAYVP4CIPPERUVIFXG\nLine: 4\nCommit: fbc14303ffbf8fb1c2c1914e8dda7d0121633aca\nFile: keys\nEmail: counter <counter@counters-MacBook-Air.local>\nRepository: https://github.com/trufflesecurity/test_keys\nTimestamp: 2022-06-16 10:17:40 -0700 PDT\n...\n```\n\n## 2: Scan a GitHub Org for only verified secrets\n\n```bash\ntrufflehog github --org=trufflesecurity --results=verified,unknown\n```\n\n## 3: Scan a GitHub Repo for only verified keys and get JSON output\n\nCommand:\n\n```bash\ntrufflehog git https://github.com/trufflesecurity/test_keys --results=verified,unknown --json\n```\n\nExpected output:\n\n```\n{\"SourceMetadata\":{\"Data\":{\"Git\":{\"commit\":\"fbc14303ffbf8fb1c2c1914e8dda7d0121633aca\",\"file\":\"keys\",\"email\":\"counter \\u003ccounter@counters-MacBook-Air.local\\u003e\",\"repository\":\"https://github.com/trufflesecurity/test_keys\",\"timestamp\":\"2022-06-16 10:17:40 -0700 PDT\",\"line\":4}}},\"SourceID\":0,\"SourceType\":16,\"SourceName\":\"trufflehog - git\",\"DetectorType\":2,\"DetectorName\":\"AWS\",\"DecoderName\":\"PLAIN\",\"Verified\":true,\"Raw\":\"AKIAYVP4CIPPERUVIFXG\",\"Redacted\":\"AKIAYVP4CIPPERUVIFXG\",\"ExtraData\":{\"account\":\"595918472158\",\"arn\":\"arn:aws:iam::595918472158:user/canarytokens.com@@mirux23ppyky6hx3l6vclmhnj\",\"user_id\":\"AIDAYVP4CIPPJ5M54LRCY\"},\"StructuredData\":null}\n...\n```\n\n## 4: Scan a GitHub Repo + its Issues and Pull Requests\n\n```bash\ntrufflehog github --repo=https://github.com/trufflesecurity/test_keys --issue-comments --pr-comments\n```\n\n## 5: Scan an S3 bucket for verified keys\n\n```bash\ntrufflehog s3 --bucket=<bucket name> --results=verified,unknown\n```\n\n## 6: Scan S3 buckets using IAM Roles\n\n```bash\ntrufflehog s3 --role-arn=<iam role arn>\n```\n\n## 7: Scan a Github Repo using SSH authentication in docker\n\n```bash\ndocker run --rm -v \"$HOME/.ssh:/root/.ssh:ro\" trufflesecurity/trufflehog:latest git ssh://github.com/trufflesecurity/test_keys\n```\n\n## 8: Scan individual files or directories\n\n```bash\ntrufflehog filesystem path/to/file1.txt path/to/file2.txt path/to/dir\n```\n\n## 9: Scan a local git repo\n\nClone the git repo. For example [test keys](git@github.com:trufflesecurity/test_keys.git) repo.\n```bash\n$ git clone git@github.com:trufflesecurity/test_keys.git\n```\n\nRun trufflehog from the parent directory (outside the git repo).\n```bash\n$ trufflehog git file://test_keys --results=verified,unknown\n```\n\n## 10: Scan GCS buckets for verified secrets\n\n```bash\ntrufflehog gcs --project-id=<project-ID> --cloud-environment --results=verified,unknown\n```\n\n## 11: Scan a Docker image for verified secrets\n\nUse the `--image` flag multiple times to scan multiple images.\n\n```bash\ntrufflehog docker --image trufflesecurity/secrets --results=verified,unknown\n```\n\n## 12: Scan in CI\n\nSet the `--since-commit` flag to your default branch that people merge into (ex: \"main\"). Set the `--branch` flag to your PR's branch name (ex: \"feature-1\"). Depending on the CI/CD platform you use, this value can be pulled in dynamically (ex: [CIRCLE_BRANCH in Circle CI](https://circleci.com/docs/variables/) and [TRAVIS_PULL_REQUEST_BRANCH in Travis CI](https://docs.travis-ci.com/user/environment-variables/)). If the repo is cloned and the target branch is already checked out during the CI/CD workflow, then `--branch HEAD` should be sufficient. The `--fail` flag will return an 183 error code if valid credentials are found.\n\n```bash\ntrufflehog git file://. --since-commit main --branch feature-1 --results=verified,unknown --fail\n```\n\n## 13: Scan a Postman workspace\n\nUse the `--workspace-id`, `--collection-id`, `--environment` flags multiple times to scan multiple targets.\n\n```bash\ntrufflehog postman --token=<postman api token> --workspace-id=<workspace id>\n```\n\n## 14: Scan a Jenkins server\n\n```bash\ntrufflehog jenkins --url https://jenkins.example.com --username admin --password admin\n```\n\n## 15: Scan an Elasticsearch server\n\n### Scan a Local Cluster\n\nThere are two ways to authenticate to a local cluster with TruffleHog: (1) username and password, (2) service token.\n\n#### Connect to a local cluster with username and password\n\n```bash\ntrufflehog elasticsearch --nodes 192.168.14.3 192.168.14.4 --username truffle --password hog\n```\n\n#### Connect to a local cluster with a service token\n\n```bash\ntrufflehog elasticsearch --nodes 192.168.14.3 192.168.14.4 --service-token \u2018AAEWVaWM...Rva2VuaSDZ\u2019\n```\n\n### Scan an Elastic Cloud Cluster\n\nTo scan a cluster on Elastic Cloud, you\u2019ll need a Cloud ID and API key.\n\n```bash\ntrufflehog elasticsearch \\\n  --cloud-id 'search-prod:dXMtY2Vx...YjM1ODNlOWFiZGRlNjI0NA==' \\\n  --api-key 'MlVtVjBZ...ZSYlduYnF1djh3NG5FQQ=='\n```\n\n## 16. Scan a GitHub Repository for Cross Fork Object References and Deleted Commits\n\nThe following command will enumerate deleted and hidden commits on a GitHub repository and then scan them for secrets. This is an alpha release feature.\n\n```bash\ntrufflehog github-experimental --repo https://github.com/<USER>/<REPO>.git --object-discovery\n```\n\nIn addition to the normal TruffleHog output, the `--object-discovery` flag creates two files in a new `$HOME/.trufflehog` directory: `valid_hidden.txt` and `invalid.txt`. These are used to track state during commit enumeration, as well as to provide users with a complete list of all hidden and deleted commits (`valid_hidden.txt`). If you'd like to automatically remove these files after scanning, please add the flag `--delete-cached-data`.\n\n**Note**: Enumerating all valid commits on a repository using this method takes between 20 minutes and a few hours, depending on the size of your repository. We added a progress bar to keep you updated on how long the enumeration will take. The actual secret scanning runs extremely fast.\n\nFor more information on Cross Fork Object References, please [read our blog post](https://trufflesecurity.com/blog/anyone-can-access-deleted-and-private-repo-data-github).\n\n## 17. Scan Hugging Face\n\n### Scan a Hugging Face Model, Dataset or Space\n\n```bash\ntrufflehog huggingface --model <model_id> --space <space_id> --dataset <dataset_id>\n```\n\n### Scan all Models, Datasets and Spaces belonging to a Hugging Face Organization or User\n\n```bash\ntrufflehog huggingface --org <orgname> --user <username>\n```\n\n(Optionally) When scanning an organization or user, you can skip an entire class of resources with `--skip-models`, `--skip-datasets`, `--skip-spaces` OR a particular resource with `--ignore-models <model_id>`, `--ignore-datasets <dataset_id>`, `--ignore-spaces <space_id>`.\n\n### Scan Discussion and PR Comments\n\n```bash\ntrufflehog huggingface --model <model_id> --include-discussions --include-prs\n```\n\n# :question: FAQ\n\n- All I see is `\ud83d\udc37\ud83d\udd11\ud83d\udc37  TruffleHog. Unearth your secrets. \ud83d\udc37\ud83d\udd11\ud83d\udc37` and the program exits, what gives?\n  - That means no secrets were detected\n- Why is the scan taking a long time when I scan a GitHub org\n  - Unauthenticated GitHub scans have rate limits. To improve your rate limits, include the `--token` flag with a personal access token\n- It says a private key was verified, what does that mean?\n  - Check out our Driftwood blog post to learn how to do this, in short we've confirmed the key can be used live for SSH or SSL [Blog post](https://trufflesecurity.com/blog/driftwood-know-if-private-keys-are-sensitive/)\n- Is there an easy way to ignore specific secrets?\n  - If the scanned source [supports line numbers](https://github.com/trufflesecurity/trufflehog/blob/d6375ba92172fd830abb4247cca15e3176448c5d/pkg/engine/engine.go#L358-L365), then you can add a `trufflehog:ignore` comment on the line containing the secret to ignore that secrets.\n\n# :newspaper: What's new in v3?\n\nTruffleHog v3 is a complete rewrite in Go with many new powerful features.\n\n- We've **added over 700 credential detectors that support active verification against their respective APIs**.\n- We've also added native **support for scanning GitHub, GitLab, Docker, filesystems, S3, GCS, Circle CI and Travis CI**.\n- **Instantly verify private keys** against millions of github users and **billions** of TLS certificates using our [Driftwood](https://trufflesecurity.com/blog/driftwood) technology.\n- Scan binaries, documents, and other file formats\n- Available as a GitHub Action and a pre-commit hook\n\n## What is credential verification?\n\nFor every potential credential that is detected, we've painstakingly implemented programmatic verification against the API that we think it belongs to. Verification eliminates false positives. For example, the [AWS credential detector](pkg/detectors/aws/aws.go) performs a `GetCallerIdentity` API call against the AWS API to verify if an AWS credential is active.\n\n# :memo: Usage\n\nTruffleHog has a sub-command for each source of data that you may want to scan:\n\n- git\n- github\n- gitlab\n- docker\n- s3\n- filesystem (files and directories)\n- syslog\n- circleci\n- travisci\n- gcs (Google Cloud Storage)\n- postman\n- jenkins\n- elasticsearch\n\nEach subcommand can have options that you can see with the `--help` flag provided to the sub command:\n\n```\n$ trufflehog git --help\nusage: TruffleHog git [<flags>] <uri>\n\nFind credentials in git repositories.\n\nFlags:\n  -h, --help                Show context-sensitive help (also try --help-long and --help-man).\n      --log-level=0         Logging verbosity on a scale of 0 (info) to 5 (trace). Can be disabled with \"-1\".\n      --profile             Enables profiling and sets a pprof and fgprof server on :18066.\n  -j, --json                Output in JSON format.\n      --json-legacy         Use the pre-v3.0 JSON format. Only works with git, gitlab, and github sources.\n      --github-actions      Output in GitHub Actions format.\n      --concurrency=20           Number of concurrent workers.\n      --no-verification     Don't verify the results.\n      --results=RESULTS          Specifies which type(s) of results to output: verified, unknown, unverified, filtered_unverified. Defaults to all types.\n      --allow-verification-overlap\n                                 Allow verification of similar credentials across detectors\n      --filter-unverified   Only output first unverified result per chunk per detector if there are more than one results.\n      --filter-entropy=FILTER-ENTROPY\n                                 Filter unverified results with Shannon entropy. Start with 3.0.\n      --config=CONFIG            Path to configuration file.\n      --print-avg-detector-time\n                                 Print the average time spent on each detector.\n      --no-update           Don't check for updates.\n      --fail                Exit with code 183 if results are found.\n      --verifier=VERIFIER ...    Set custom verification endpoints.\n      --custom-verifiers-only   Only use custom verification endpoints.\n      --archive-max-size=ARCHIVE-MAX-SIZE\n                                 Maximum size of archive to scan. (Byte units eg. 512B, 2KB, 4MB)\n      --archive-max-depth=ARCHIVE-MAX-DEPTH\n                                 Maximum depth of archive to scan.\n      --archive-timeout=ARCHIVE-TIMEOUT\n                                 Maximum time to spend extracting an archive.\n      --include-detectors=\"all\"  Comma separated list of detector types to include. Protobuf name or IDs may be used, as well as ranges.\n      --exclude-detectors=EXCLUDE-DETECTORS\n                                 Comma separated list of detector types to exclude. Protobuf name or IDs may be used, as well as ranges. IDs defined here take precedence over the include list.\n      --version             Show application version.\n  -i, --include-paths=INCLUDE-PATHS\n                                 Path to file with newline separated regexes for files to include in scan.\n  -x, --exclude-paths=EXCLUDE-PATHS\n                                 Path to file with newline separated regexes for files to exclude in scan.\n      --exclude-globs=EXCLUDE-GLOBS\n                                 Comma separated list of globs to exclude in scan. This option filters at the `git log` level, resulting in faster scans.\n      --since-commit=SINCE-COMMIT\n                                 Commit to start scan from.\n      --branch=BRANCH            Branch to scan.\n      --max-depth=MAX-DEPTH      Maximum depth of commits to scan.\n      --bare                Scan bare repository (e.g. useful while using in pre-receive hooks)\n\nArgs:\n  <uri>  Git repository URL. https://, file://, or ssh:// schema expected.\n```\n\nFor example, to scan a `git` repository, start with\n\n```\ntrufflehog git https://github.com/trufflesecurity/trufflehog.git\n```\n\n## S3\n\nThe S3 source supports assuming IAM roles for scanning in addition to IAM users. This makes it easier for users to scan multiple AWS accounts without needing to rely on hardcoded credentials for each account.\n\nThe IAM identity that TruffleHog uses initially will need to have `AssumeRole` privileges as a principal in the [trust policy](https://aws.amazon.com/blogs/security/how-to-use-trust-policies-with-iam-roles/) of each IAM role to assume.\n\nTo scan a specific bucket using locally set credentials or instance metadata if on an EC2 instance:\n\n```bash\ntrufflehog s3 --bucket=<bucket-name>\n```\n\nTo scan a specific bucket using an assumed role:\n\n```bash\ntrufflehog s3 --bucket=<bucket-name> --role-arn=<iam-role-arn>\n```\n\nMultiple roles can be passed as separate arguments. The following command will attempt to scan every bucket each role has permissions to list in the S3 API:\n\n```bash\ntrufflehog s3 --role-arn=<iam-role-arn-1> --role-arn=<iam-role-arn-2>\n```\n\nExit Codes:\n\n- 0: No errors and no results were found.\n- 1: An error was encountered. Sources may not have completed scans.\n- 183: No errors were encountered, but results were found. Will only be returned if `--fail` flag is used.\n\n## :octocat: TruffleHog Github Action\n\n### General Usage\n\n```\non:\n  push:\n    branches:\n      - main\n  pull_request:\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v4\n      with:\n        fetch-depth: 0\n    - name: Secret Scanning\n      uses: trufflesecurity/trufflehog@main\n      with:\n        extra_args: --results=verified,unknown\n```\n\nIn the example config above, we're scanning for live secrets in all PRs and Pushes to `main`. Only code changes in the referenced commits are scanned. If you'd like to scan an entire branch, please see the \"Advanced Usage\" section below.\n\n### Shallow Cloning\n\nIf you're incorporating TruffleHog into a standalone workflow and aren't running any other CI/CD tooling alongside TruffleHog, then we recommend using [Shallow Cloning](https://git-scm.com/docs/git-clone#Documentation/git-clone.txt---depthltdepthgt) to speed up your workflow. Here's an example for how to do it:\n\n```\n...\n      - shell: bash\n        run: |\n          if [ \"${{ github.event_name }}\" == \"push\" ]; then\n            echo \"depth=$(($(jq length <<< '${{ toJson(github.event.commits) }}') + 2))\" >> $GITHUB_ENV\n            echo \"branch=${{ github.ref_name }}\" >> $GITHUB_ENV\n          fi\n          if [ \"${{ github.event_name }}\" == \"pull_request\" ]; then\n            echo \"depth=$((${{ github.event.pull_request.commits }}+2))\" >> $GITHUB_ENV\n            echo \"branch=${{ github.event.pull_request.head.ref }}\" >> $GITHUB_ENV\n          fi\n      - uses: actions/checkout@v3\n        with:\n          ref: ${{env.branch}}\n          fetch-depth: ${{env.depth}}\n      - uses: trufflesecurity/trufflehog@main\n        with:\n          extra_args: --results=verified,unknown\n...\n```\n\nDepending on the event type (push or PR), we calculate the number of commits present. Then we add 2, so that we can reference a base commit before our code changes. We pass that integer value to the `fetch-depth` flag in the checkout action in addition to the relevant branch. Now our checkout process should be much shorter.\n\n### Canary detection\n\nTruffleHog statically detects [https://canarytokens.org/](https://canarytokens.org/) and lets you know when they're present without setting them off. You can learn more here: [https://trufflesecurity.com/canaries](https://trufflesecurity.com/canaries)\n\n![image](https://github.com/trufflesecurity/trufflehog/assets/52866392/74ace530-08c5-4eaf-a169-84a73e328f6f)\n\n### Advanced Usage\n\n```yaml\n- name: TruffleHog\n  uses: trufflesecurity/trufflehog@main\n  with:\n    # Repository path\n    path:\n    # Start scanning from here (usually main branch).\n    base:\n    # Scan commits until here (usually dev branch).\n    head: # optional\n    # Extra args to be passed to the trufflehog cli.\n    extra_args: --log-level=2 --results=verified,unknown\n```\n\nIf you'd like to specify specific `base` and `head` refs, you can use the `base` argument (`--since-commit` flag in TruffleHog CLI) and the `head` argument (`--branch` flag in the TruffleHog CLI). We only recommend using these arguments for very specific use cases, where the default behavior does not work.\n\n#### Advanced Usage: Scan entire branch\n\n```\n- name: scan-push\n        uses: trufflesecurity/trufflehog@main\n        with:\n          base: \"\"\n          head: ${{ github.ref_name }}\n          extra_args: --results=verified,unknown\n```\n\n## TruffleHog GitLab CI\n\n### Example Usage\n\n```yaml\nstages:\n  - security\n\nsecurity-secrets:\n  stage: security\n  allow_failure: false\n  image: alpine:latest\n  variables:\n    SCAN_PATH: \".\" # Set the relative path in the repo to scan\n  before_script:\n    - apk add --no-cache git curl jq\n    - curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin\n  script:\n    - trufflehog filesystem \"$SCAN_PATH\" --results=verified,unknown --fail --json | jq\n  rules:\n    - if: '$CI_PIPELINE_SOURCE == \"merge_request_event\"'\n```\n\nIn the example pipeline above, we're scanning for live secrets in all repository directories and files. This job runs only when the pipeline source is a merge request event, meaning it's triggered when a new merge request is created.\n\n## Pre-commit Hook\n\nTruffleHog can be used in a pre-commit hook to prevent credentials from leaking before they ever leave your computer.\n\n**Key Usage Note:**\n\n- **For optimal hook efficacy, execute `git add` followed by `git commit` separately.** This ensures TruffleHog analyzes all intended changes.\n- **Avoid using `git commit -am`, as it might bypass pre-commit hook execution for unstaged modifications.**\n\nAn example `.pre-commit-config.yaml` is provided (see [pre-commit.com](https://pre-commit.com/) for installation).\n\n```yaml\nrepos:\n  - repo: local\n    hooks:\n      - id: trufflehog\n        name: TruffleHog\n        description: Detect secrets in your data.\n        entry: bash -c 'trufflehog git file://. --since-commit HEAD --results=verified,unknown --fail'\n        # For running trufflehog in docker, use the following entry instead:\n        # entry: bash -c 'docker run --rm -v \"$(pwd):/workdir\" -i --rm trufflesecurity/trufflehog:latest git file:///workdir --since-commit HEAD --results=verified,unknown --fail'\n        language: system\n        stages: [\"commit\", \"push\"]\n```\n\n## Regex Detector (alpha)\n\nTruffleHog supports detection and verification of custom regular expressions.\nFor detection, at least one **regular expression** and **keyword** is required.\nA **keyword** is a fixed literal string identifier that appears in or around\nthe regex to be detected. To allow maximum flexibility for verification, a\nwebhook is used containing the regular expression matches.\n\nTruffleHog will send a JSON POST request containing the regex matches to a\nconfigured webhook endpoint. If the endpoint responds with a `200 OK` response\nstatus code, the secret is considered verified.\n\n**NB:** This feature is alpha and subject to change.\n\n## Regex Detector Example\n\n```yaml\n# config.yaml\ndetectors:\n  - name: HogTokenDetector\n    keywords:\n      - hog\n    regex:\n      hogID: '\\b(HOG[0-9A-Z]{17})\\b'\n      hogToken: '[^A-Za-z0-9+\\/]{0,1}([A-Za-z0-9+\\/]{40})[^A-Za-z0-9+\\/]{0,1}'\n    verify:\n      - endpoint: http://localhost:8000/\n        # unsafe must be set if the endpoint is HTTP\n        unsafe: true\n        headers:\n          - \"Authorization: super secret authorization header\"\n```\n\n```\n$ trufflehog filesystem /tmp --config config.yaml --results=verified,unknown\n\ud83d\udc37\ud83d\udd11\ud83d\udc37  TruffleHog. Unearth your secrets. \ud83d\udc37\ud83d\udd11\ud83d\udc37\n\nFound verified result \ud83d\udc37\ud83d\udd11\nDetector Type: CustomRegex\nDecoder Type: PLAIN\nRaw result: HOGAAIUNNWHAHJJWUQYR\nFile: /tmp/hog-facts.txt\n```\n\nData structure sent to the custom verification server:\n\n```\n{\n    \"HogTokenDetector\": {\n        \"HogID\": [\"HOGAAIUNNWHAHJJWUQYR\"],\n        \"HogSecret\": [\"sD9vzqdSsAOxntjAJ/qZ9sw+8PvEYg0r7D1Hhh0C\"],\n    }\n}\n```\n\n## Verification Server Example (Python)\n\nUnless you run a verification server, secrets found by the custom regex\ndetector will be unverified. Here is an example Python implementation of a\nverification server for the above `config.yaml` file.\n\n```python\nimport json\nfrom http.server import BaseHTTPRequestHandler, HTTPServer\n\nAUTH_HEADER = 'super secret authorization header'\n\n\nclass Verifier(BaseHTTPRequestHandler):\n    def do_GET(self):\n        self.send_response(405)\n        self.end_headers()\n\n    def do_POST(self):\n        try:\n            if self.headers['Authorization'] != AUTH_HEADER:\n                self.send_response(401)\n                self.end_headers()\n                return\n\n            # read the body\n            length = int(self.headers['Content-Length'])\n            request = json.loads(self.rfile.read(length))\n            self.log_message(\"%s\", request)\n\n            # check the match, you'll need to implement validateToken, which takes an array of ID's and Secrets\n            if not validateTokens(request['HogTokenDetector']['hogID'], request['HogTokenDetector']['hogSecret']):\n                self.send_response(200)\n                self.end_headers()\n            else:\n                # any other response besides 200\n                self.send_response(406)\n                self.end_headers()\n        except Exception:\n            self.send_response(400)\n            self.end_headers()\n\n\nwith HTTPServer(('', 8000), Verifier) as server:\n    try:\n        server.serve_forever()\n    except KeyboardInterrupt:\n        pass\n```\n\n## :mag: Analyze\n\nTruffleHog supports running a deeper analysis of a credential to view its permissions and the resources it has access to.\n\n```bash\ntrufflehog analyze\n```\n\n# :heart: Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n\n<a href=\"https://github.com/trufflesecurity/trufflehog/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=trufflesecurity/trufflehog\" />\n</a>\n\n# :computer: Contributing\n\nContributions are very welcome! Please see our [contribution guidelines first](CONTRIBUTING.md).\n\nWe no longer accept contributions to TruffleHog v2, but that code is available in the `v2` branch.\n\n## Adding new secret detectors\n\nWe have published some [documentation and tooling to get started on adding new secret detectors](hack/docs/Adding_Detectors_external.md). Let's improve detection together!\n\n# Use as a library\n\nCurrently, trufflehog is in heavy development and no guarantees can be made on\nthe stability of the public APIs at this time.\n\n# License Change\n\nSince v3.0, TruffleHog is released under a AGPL 3 license, included in [`LICENSE`](LICENSE). TruffleHog v3.0 uses none of the previous codebase, but care was taken to preserve backwards compatibility on the command line interface. The work previous to this release is still available licensed under GPL 2.0 in the history of this repository and the previous package releases and tags. A completed CLA is required for us to accept contributions going forward.\n",
        "releases": [
            {
                "name": "v3.88.2",
                "date": "2025-01-09T14:21:14Z"
            },
            {
                "name": "v3.88.1",
                "date": "2025-01-06T18:46:22Z"
            },
            {
                "name": "v3.88.0",
                "date": "2024-12-20T21:47:43Z"
            },
            {
                "name": "v3.87.2",
                "date": "2024-12-19T05:01:54Z"
            },
            {
                "name": "v3.87.1",
                "date": "2024-12-18T17:04:20Z"
            },
            {
                "name": "v3.87.0",
                "date": "2024-12-17T21:49:20Z"
            },
            {
                "name": "v3.86.1",
                "date": "2024-12-11T19:08:00Z"
            },
            {
                "name": "v3.86.0",
                "date": "2024-12-10T19:48:07Z"
            },
            {
                "name": "v3.85.0",
                "date": "2024-12-05T16:11:31Z"
            },
            {
                "name": "v3.84.2",
                "date": "2024-12-02T17:57:50Z"
            },
            {
                "name": "v3.84.1",
                "date": "2024-11-22T21:34:08Z"
            },
            {
                "name": "v3.84.0",
                "date": "2024-11-21T00:08:35Z"
            },
            {
                "name": "v3.83.7",
                "date": "2024-11-15T23:03:00Z"
            },
            {
                "name": "v3.83.6",
                "date": "2024-11-10T18:12:29Z"
            },
            {
                "name": "v3.83.5",
                "date": "2024-11-08T01:46:34Z"
            },
            {
                "name": "v3.83.4",
                "date": "2024-11-06T22:53:09Z"
            },
            {
                "name": "v3.83.3",
                "date": "2024-11-05T16:57:46Z"
            },
            {
                "name": "v3.83.2",
                "date": "2024-10-31T13:48:47Z"
            },
            {
                "name": "v3.83.1",
                "date": "2024-10-30T22:11:06Z"
            },
            {
                "name": "v3.83.0",
                "date": "2024-10-30T14:09:48Z"
            },
            {
                "name": "v3.82.13",
                "date": "2024-10-24T17:20:18Z"
            },
            {
                "name": "v3.82.12",
                "date": "2024-10-22T00:21:46Z"
            },
            {
                "name": "v3.82.11",
                "date": "2024-10-17T16:13:47Z"
            },
            {
                "name": "v3.82.10",
                "date": "2024-10-17T15:25:32Z"
            },
            {
                "name": "v3.82.9",
                "date": "2024-10-15T19:46:51Z"
            },
            {
                "name": "v3.82.8",
                "date": "2024-10-10T20:24:45Z"
            },
            {
                "name": "v3.82.7",
                "date": "2024-10-07T21:01:39Z"
            },
            {
                "name": "v3.82.6",
                "date": "2024-09-26T22:05:48Z"
            },
            {
                "name": "v3.82.5",
                "date": "2024-09-25T20:06:37Z"
            },
            {
                "name": "v3.82.4",
                "date": "2024-09-24T23:46:59Z"
            },
            {
                "name": "v3.82.3",
                "date": "2024-09-24T13:46:22Z"
            },
            {
                "name": "v3.82.2",
                "date": "2024-09-13T23:06:48Z"
            },
            {
                "name": "v3.82.1",
                "date": "2024-09-12T04:41:17Z"
            },
            {
                "name": "v3.82.0",
                "date": "2024-09-12T02:18:21Z"
            },
            {
                "name": "v3.81.10",
                "date": "2024-08-29T20:41:52Z"
            },
            {
                "name": "v3.81.9",
                "date": "2024-08-15T18:34:58Z"
            },
            {
                "name": "v3.81.8",
                "date": "2024-08-09T15:04:59Z"
            },
            {
                "name": "v3.81.7",
                "date": "2024-08-07T14:48:59Z"
            },
            {
                "name": "v3.81.6",
                "date": "2024-08-06T01:56:16Z"
            },
            {
                "name": "v3.81.5",
                "date": "2024-08-05T03:48:02Z"
            },
            {
                "name": "v3.81.4",
                "date": "2024-08-02T19:40:14Z"
            },
            {
                "name": "v3.81.3",
                "date": "2024-08-02T17:55:19Z"
            },
            {
                "name": "v3.81.2",
                "date": "2024-08-02T15:52:30Z"
            },
            {
                "name": "v3.81.1",
                "date": "2024-08-02T15:20:36Z"
            },
            {
                "name": "v3.81.0",
                "date": "2024-08-02T14:49:06Z"
            },
            {
                "name": "v3.80.6",
                "date": "2024-08-02T11:41:45Z"
            },
            {
                "name": "v3.80.5",
                "date": "2024-08-01T01:58:58Z"
            },
            {
                "name": "3.80.4",
                "date": "2024-07-31T17:40:11Z"
            },
            {
                "name": "v3.80.3",
                "date": "2024-07-29T23:36:46Z"
            },
            {
                "name": "v3.80.2",
                "date": "2024-07-26T16:37:09Z"
            },
            {
                "name": "v3.80.1",
                "date": "2024-07-18T14:24:31Z"
            },
            {
                "name": "v3.80.0",
                "date": "2024-07-17T21:08:57Z"
            },
            {
                "name": "v3.79.0",
                "date": "2024-06-26T17:48:16Z"
            },
            {
                "name": "v3.78.2",
                "date": "2024-06-21T01:02:01Z"
            },
            {
                "name": "v3.78.1",
                "date": "2024-06-11T17:47:58Z"
            },
            {
                "name": "v3.78.0",
                "date": "2024-06-04T11:14:04Z"
            },
            {
                "name": "v3.77.0",
                "date": "2024-05-28T21:08:24Z"
            },
            {
                "name": "v3.76.3",
                "date": "2024-05-16T22:59:53Z"
            },
            {
                "name": "v3.76.2",
                "date": "2024-05-16T01:25:59Z"
            },
            {
                "name": "v3.76.1",
                "date": "2024-05-15T20:41:11Z"
            },
            {
                "name": "v3.76.0",
                "date": "2024-05-14T18:34:39Z"
            },
            {
                "name": "v3.75.1",
                "date": "2024-05-06T21:41:31Z"
            },
            {
                "name": "v3.75.0",
                "date": "2024-05-02T18:06:03Z"
            },
            {
                "name": "v3.74.0",
                "date": "2024-04-23T22:38:41Z"
            },
            {
                "name": "v3.73.0",
                "date": "2024-04-10T17:28:20Z"
            },
            {
                "name": "v3.72.0",
                "date": "2024-04-03T01:13:47Z"
            },
            {
                "name": "v3.71.2",
                "date": "2024-03-28T14:39:21Z"
            },
            {
                "name": "v3.71.1",
                "date": "2024-03-26T22:27:53Z"
            },
            {
                "name": "v3.71.0",
                "date": "2024-03-22T16:41:39Z"
            },
            {
                "name": "v3.70.3",
                "date": "2024-03-20T14:43:21Z"
            },
            {
                "name": "v3.70.2",
                "date": "2024-03-18T14:23:42Z"
            },
            {
                "name": "v3.70.1",
                "date": "2024-03-16T08:34:07Z"
            },
            {
                "name": "v3.70.0",
                "date": "2024-03-15T18:55:38Z"
            },
            {
                "name": "v3.69.0",
                "date": "2024-03-08T02:31:09Z"
            },
            {
                "name": "v3.68.5",
                "date": "2024-03-07T01:09:27Z"
            },
            {
                "name": "v3.68.4",
                "date": "2024-03-02T01:00:26Z"
            },
            {
                "name": "v3.68.3",
                "date": "2024-02-28T16:52:27Z"
            },
            {
                "name": "v3.68.2",
                "date": "2024-02-24T17:16:23Z"
            },
            {
                "name": "v3.68.1",
                "date": "2024-02-23T23:04:51Z"
            },
            {
                "name": "v3.68.0",
                "date": "2024-02-21T17:43:22Z"
            },
            {
                "name": "v3.67.7",
                "date": "2024-02-20T16:29:27Z"
            },
            {
                "name": "v3.67.6",
                "date": "2024-02-13T15:21:57Z"
            },
            {
                "name": "v3.67.5",
                "date": "2024-02-08T17:02:17Z"
            },
            {
                "name": "v3.67.4",
                "date": "2024-02-06T19:01:15Z"
            },
            {
                "name": "v3.67.3",
                "date": "2024-02-06T17:46:19Z"
            },
            {
                "name": "v3.67.2",
                "date": "2024-02-05T18:44:31Z"
            },
            {
                "name": "v3.67.1",
                "date": "2024-02-04T16:58:32Z"
            },
            {
                "name": "v3.67.0",
                "date": "2024-02-02T17:30:19Z"
            },
            {
                "name": "v3.66.3",
                "date": "2024-01-31T23:16:54Z"
            },
            {
                "name": "v3.66.2",
                "date": "2024-01-30T20:48:01Z"
            },
            {
                "name": "v3.66.1",
                "date": "2024-01-29T20:39:18Z"
            },
            {
                "name": "v3.66.0",
                "date": "2024-01-29T19:29:28Z"
            },
            {
                "name": "v3.65.0",
                "date": "2024-01-26T15:51:21Z"
            },
            {
                "name": "v3.64.0",
                "date": "2024-01-23T21:49:20Z"
            },
            {
                "name": "v3.63.11",
                "date": "2024-01-22T19:35:35Z"
            },
            {
                "name": "v3.63.10",
                "date": "2024-01-16T23:28:16Z"
            },
            {
                "name": "v3.63.9",
                "date": "2024-01-14T03:54:00Z"
            },
            {
                "name": "v3.63.8",
                "date": "2024-01-08T19:35:02Z"
            },
            {
                "name": "v3.63.7",
                "date": "2023-12-23T06:46:17Z"
            },
            {
                "name": "v3.63.6",
                "date": "2023-12-22T15:54:23Z"
            },
            {
                "name": "v3.63.5",
                "date": "2023-12-19T01:03:49Z"
            },
            {
                "name": "v3.63.4",
                "date": "2023-12-15T17:35:20Z"
            },
            {
                "name": "v3.63.3",
                "date": "2023-12-14T00:08:36Z"
            },
            {
                "name": "v3.63.2",
                "date": "2023-12-05T18:10:34Z"
            },
            {
                "name": "v3.63.1",
                "date": "2023-11-20T17:40:15Z"
            },
            {
                "name": "v3.63.0",
                "date": "2023-11-17T17:56:11Z"
            },
            {
                "name": "v3.62.1",
                "date": "2023-10-31T14:22:43Z"
            },
            {
                "name": "v3.62.0",
                "date": "2023-10-30T14:29:31Z"
            },
            {
                "name": "v3.61.0",
                "date": "2023-10-27T22:57:40Z"
            },
            {
                "name": "v3.60.4",
                "date": "2023-10-26T02:27:33Z"
            },
            {
                "name": "v3.60.3",
                "date": "2023-10-25T02:39:58Z"
            },
            {
                "name": "v3.60.2",
                "date": "2023-10-24T14:47:41Z"
            },
            {
                "name": "v3.60.1",
                "date": "2023-10-18T13:58:18Z"
            },
            {
                "name": "v3.60.0",
                "date": "2023-10-16T21:19:37Z"
            },
            {
                "name": "v3.59.0",
                "date": "2023-10-02T22:18:26Z"
            },
            {
                "name": "v3.58.0",
                "date": "2023-10-02T15:49:43Z"
            },
            {
                "name": "v3.57.0",
                "date": "2023-09-23T00:39:08Z"
            },
            {
                "name": "v3.56.1",
                "date": "2023-09-15T15:09:08Z"
            },
            {
                "name": "v3.56.0",
                "date": "2023-09-14T18:58:07Z"
            },
            {
                "name": "v3.55.1",
                "date": "2023-09-11T20:08:27Z"
            },
            {
                "name": "v3.55.0",
                "date": "2023-09-11T19:36:09Z"
            },
            {
                "name": "v3.54.4",
                "date": "2023-09-08T20:38:12Z"
            },
            {
                "name": "v3.54.3",
                "date": "2023-09-01T21:53:35Z"
            },
            {
                "name": "v3.54.2",
                "date": "2023-09-01T16:39:26Z"
            },
            {
                "name": "v3.54.1",
                "date": "2023-08-30T14:19:52Z"
            },
            {
                "name": "v3.54.0",
                "date": "2023-08-28T21:17:08Z"
            },
            {
                "name": "v3.53.0",
                "date": "2023-08-23T17:54:34Z"
            },
            {
                "name": "v3.52.1",
                "date": "2023-08-17T17:16:48Z"
            },
            {
                "name": "v3.52.0",
                "date": "2023-08-17T17:05:17Z"
            },
            {
                "name": "v3.51.0",
                "date": "2023-08-17T00:20:46Z"
            },
            {
                "name": "v3.50.0",
                "date": "2023-08-16T20:59:36Z"
            },
            {
                "name": "v3.49.0",
                "date": "2023-08-15T23:09:36Z"
            },
            {
                "name": "v3.48.0",
                "date": "2023-08-11T20:41:11Z"
            },
            {
                "name": "v3.47.0",
                "date": "2023-08-09T20:18:56Z"
            },
            {
                "name": "v3.46.3",
                "date": "2023-08-02T15:38:54Z"
            },
            {
                "name": "v3.46.2",
                "date": "2023-08-01T17:29:34Z"
            },
            {
                "name": "v3.46.1",
                "date": "2023-07-31T21:07:27Z"
            },
            {
                "name": "v3.46.0",
                "date": "2023-07-31T18:13:59Z"
            },
            {
                "name": "v3.45.3",
                "date": "2023-07-28T16:17:32Z"
            },
            {
                "name": "v3.45.2",
                "date": "2023-07-27T14:25:49Z"
            },
            {
                "name": "v3.45.1",
                "date": "2023-07-25T23:12:59Z"
            },
            {
                "name": "v3.45.0",
                "date": "2023-07-25T00:41:58Z"
            },
            {
                "name": "v3.44.0",
                "date": "2023-07-12T17:27:15Z"
            },
            {
                "name": "v3.43.0",
                "date": "2023-07-05T16:27:54Z"
            },
            {
                "name": "v3.42.0",
                "date": "2023-06-28T17:51:16Z"
            },
            {
                "name": "v3.41.1",
                "date": "2023-06-26T15:50:24Z"
            },
            {
                "name": "v3.41.0",
                "date": "2023-06-22T15:03:19Z"
            },
            {
                "name": "v3.40.0",
                "date": "2023-06-14T15:44:03Z"
            },
            {
                "name": "v3.39.0",
                "date": "2023-06-01T19:18:54Z"
            },
            {
                "name": "v3.38.0",
                "date": "2023-06-01T16:41:53Z"
            },
            {
                "name": "v3.37.0",
                "date": "2023-06-01T03:02:15Z"
            },
            {
                "name": "v3.36.0",
                "date": "2023-05-18T21:43:44Z"
            },
            {
                "name": "v3.35.0",
                "date": "2023-05-18T15:31:46Z"
            },
            {
                "name": "v3.34.0",
                "date": "2023-05-09T15:08:29Z"
            },
            {
                "name": "v3.33.0",
                "date": "2023-04-26T19:02:27Z"
            },
            {
                "name": "v3.32.2",
                "date": "2023-04-25T00:05:20Z"
            },
            {
                "name": "v3.32.1",
                "date": "2023-04-21T11:54:34Z"
            },
            {
                "name": "v3.32.0",
                "date": "2023-04-20T22:34:15Z"
            },
            {
                "name": "v3.31.6",
                "date": "2023-04-13T22:20:07Z"
            },
            {
                "name": "v3.31.5",
                "date": "2023-04-12T01:09:13Z"
            },
            {
                "name": "v3.31.4",
                "date": "2023-04-06T15:35:57Z"
            },
            {
                "name": "v3.31.3",
                "date": "2023-04-03T20:19:45Z"
            },
            {
                "name": "v3.31.2",
                "date": "2023-03-28T19:43:21Z"
            },
            {
                "name": "v3.31.1",
                "date": "2023-03-28T18:30:25Z"
            },
            {
                "name": "v3.31.0",
                "date": "2023-03-28T16:08:09Z"
            },
            {
                "name": "v3.30.0",
                "date": "2023-03-27T23:14:14Z"
            },
            {
                "name": "v3.29.1",
                "date": "2023-03-10T22:01:57Z"
            },
            {
                "name": "v3.29.0",
                "date": "2023-03-08T01:53:45Z"
            },
            {
                "name": "v3.28.7",
                "date": "2023-03-03T18:37:21Z"
            },
            {
                "name": "v3.28.6",
                "date": "2023-03-02T17:59:26Z"
            },
            {
                "name": "v3.28.5",
                "date": "2023-03-01T16:59:17Z"
            },
            {
                "name": "v3.28.4",
                "date": "2023-02-28T21:38:29Z"
            },
            {
                "name": "v3.28.3",
                "date": "2023-02-28T15:10:05Z"
            },
            {
                "name": "v3.28.2",
                "date": "2023-02-26T21:49:42Z"
            },
            {
                "name": "v3.28.1",
                "date": "2023-02-26T21:02:31Z"
            },
            {
                "name": "v3.28.0",
                "date": "2023-02-22T17:32:42Z"
            },
            {
                "name": "v3.27.1",
                "date": "2023-02-11T16:12:44Z"
            },
            {
                "name": "v3.27.0",
                "date": "2023-02-11T00:33:02Z"
            },
            {
                "name": "v3.26.0",
                "date": "2023-01-27T22:03:57Z"
            },
            {
                "name": "v3.25.4",
                "date": "2023-01-26T17:19:34Z"
            },
            {
                "name": "v3.25.3",
                "date": "2023-01-25T05:06:46Z"
            },
            {
                "name": "v3.25.2",
                "date": "2023-01-13T23:28:55Z"
            },
            {
                "name": "v3.25.1",
                "date": "2023-01-12T02:58:41Z"
            },
            {
                "name": "v3.25.0",
                "date": "2023-01-11T22:04:47Z"
            },
            {
                "name": "v3.24.0",
                "date": "2023-01-10T01:26:30Z"
            },
            {
                "name": "v3.23.2",
                "date": "2023-01-09T23:51:51Z"
            },
            {
                "name": "v3.23.1",
                "date": "2023-01-07T00:07:06Z"
            },
            {
                "name": "v3.23.0",
                "date": "2023-01-06T05:45:40Z"
            },
            {
                "name": "v3.22.0",
                "date": "2023-01-06T04:55:07Z"
            },
            {
                "name": "v3.21.1",
                "date": "2023-01-06T00:50:35Z"
            },
            {
                "name": "v3.21.0",
                "date": "2022-12-21T20:20:46Z"
            },
            {
                "name": "v3.20.0",
                "date": "2022-12-16T21:29:48Z"
            },
            {
                "name": "v3.19.0",
                "date": "2022-12-09T20:59:28Z"
            },
            {
                "name": "v3.18.0",
                "date": "2022-11-22T14:42:36Z"
            },
            {
                "name": "v3.17.0",
                "date": "2022-11-15T18:38:39Z"
            },
            {
                "name": "v3.16.4",
                "date": "2022-11-09T00:22:49Z"
            },
            {
                "name": "v3.16.3",
                "date": "2022-11-02T02:18:35Z"
            },
            {
                "name": "v3.16.2",
                "date": "2022-11-01T16:17:49Z"
            },
            {
                "name": "v3.16.1",
                "date": "2022-10-28T22:02:53Z"
            },
            {
                "name": "v3.16.0",
                "date": "2022-10-26T15:22:55Z"
            },
            {
                "name": "v3.15.1",
                "date": "2022-10-25T19:05:44Z"
            },
            {
                "name": "v3.15.0",
                "date": "2022-10-24T16:03:07Z"
            },
            {
                "name": "v3.14.0",
                "date": "2022-10-05T21:38:06Z"
            },
            {
                "name": "v3.13.0",
                "date": "2022-09-26T21:38:30Z"
            },
            {
                "name": "v3.12.1",
                "date": "2022-09-26T15:59:40Z"
            },
            {
                "name": "v3.12.0",
                "date": "2022-09-21T23:28:02Z"
            },
            {
                "name": "v3.11.1",
                "date": "2022-09-19T22:56:15Z"
            },
            {
                "name": "v3.11.0",
                "date": "2022-09-19T20:23:55Z"
            },
            {
                "name": "v3.10.4",
                "date": "2022-09-19T19:50:24Z"
            },
            {
                "name": "v3.10.3",
                "date": "2022-09-05T16:21:47Z"
            },
            {
                "name": "v3.10.2",
                "date": "2022-09-02T19:00:56Z"
            },
            {
                "name": "v3.10.1",
                "date": "2022-09-02T03:06:07Z"
            },
            {
                "name": "v3.10.0",
                "date": "2022-08-30T18:15:58Z"
            },
            {
                "name": "v3.9.0",
                "date": "2022-08-25T18:04:35Z"
            },
            {
                "name": "v3.8.0",
                "date": "2022-08-24T17:37:23Z"
            },
            {
                "name": "v3.7.3",
                "date": "2022-08-08T16:30:50Z"
            },
            {
                "name": "v3.7.2",
                "date": "2022-08-03T20:57:13Z"
            },
            {
                "name": "v3.7.1",
                "date": "2022-08-02T19:51:53Z"
            },
            {
                "name": "v3.7.0",
                "date": "2022-08-02T17:13:07Z"
            },
            {
                "name": "v3.6.11",
                "date": "2022-07-26T20:57:08Z"
            },
            {
                "name": "v3.6.10",
                "date": "2022-07-25T21:33:53Z"
            },
            {
                "name": "v3.6.9",
                "date": "2022-07-20T17:35:58Z"
            },
            {
                "name": "v3.6.8",
                "date": "2022-07-07T23:56:11Z"
            },
            {
                "name": "v3.6.7",
                "date": "2022-06-24T21:31:36Z"
            },
            {
                "name": "v3.6.6",
                "date": "2022-06-21T19:52:47Z"
            },
            {
                "name": "v3.6.5",
                "date": "2022-06-15T03:22:31Z"
            },
            {
                "name": "v3.6.4",
                "date": "2022-06-14T06:49:23Z"
            },
            {
                "name": "v3.6.3",
                "date": "2022-06-14T02:46:01Z"
            },
            {
                "name": "v3.6.2",
                "date": "2022-06-09T22:09:45Z"
            },
            {
                "name": "v3.6.1",
                "date": "2022-05-25T21:46:01Z"
            },
            {
                "name": "v3.6.0",
                "date": "2022-05-24T01:40:45Z"
            },
            {
                "name": "v3.5.0",
                "date": "2022-05-18T01:57:29Z"
            },
            {
                "name": "v3.4.5",
                "date": "2022-05-13T16:03:35Z"
            },
            {
                "name": "v3.4.4",
                "date": "2022-05-10T20:48:46Z"
            },
            {
                "name": "v3.4.3",
                "date": "2022-05-05T00:59:07Z"
            },
            {
                "name": "v3.4.2",
                "date": "2022-05-03T00:27:34Z"
            },
            {
                "name": "v3.4.1",
                "date": "2022-04-22T15:52:14Z"
            },
            {
                "name": "v3.4.0",
                "date": "2022-04-22T01:46:18Z"
            },
            {
                "name": "v3.3.3",
                "date": "2022-04-18T22:20:59Z"
            },
            {
                "name": "v3.3.2",
                "date": "2022-04-16T23:04:44Z"
            },
            {
                "name": "v3.3.1",
                "date": "2022-04-15T21:05:31Z"
            },
            {
                "name": "v3.3.0",
                "date": "2022-04-15T20:44:16Z"
            },
            {
                "name": "v3.2.3",
                "date": "2022-04-12T17:16:21Z"
            },
            {
                "name": "v3.2.2",
                "date": "2022-04-09T02:07:13Z"
            },
            {
                "name": "v3.2.1",
                "date": "2022-04-09T01:20:57Z"
            },
            {
                "name": "v3.2.0",
                "date": "2022-04-08T23:08:28Z"
            },
            {
                "name": "v3.1.0",
                "date": "2022-04-08T21:54:21Z"
            },
            {
                "name": "v3.0.7",
                "date": "2022-04-08T01:59:02Z"
            },
            {
                "name": "v3.0.6",
                "date": "2022-04-07T23:33:26Z"
            },
            {
                "name": "v3.0.5",
                "date": "2022-04-06T22:41:21Z"
            },
            {
                "name": "v3.0.4",
                "date": "2022-04-06T16:49:08Z"
            },
            {
                "name": "v3.0.3",
                "date": "2022-04-06T01:58:33Z"
            },
            {
                "name": "v3.0.2",
                "date": "2022-04-04T07:05:52Z"
            },
            {
                "name": "v3.0.1",
                "date": "2022-04-04T04:14:05Z"
            },
            {
                "name": "v3.0.0",
                "date": "2022-04-04T03:31:05Z"
            },
            {
                "name": "",
                "date": "2018-11-06T16:01:16Z"
            }
        ]
    }
}