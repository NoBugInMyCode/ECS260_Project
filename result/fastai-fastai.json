{
    "https://api.github.com/repos/fastai/fastai": {
        "forks": 7571,
        "watchers": 26518,
        "stars": 26518,
        "languages": {
            "Jupyter Notebook": 69046301,
            "Python": 1043656,
            "CSS": 368
        },
        "commits": [
            "2024-12-14T04:24:41Z",
            "2024-12-14T04:24:17Z",
            "2024-11-17T08:15:54Z",
            "2024-10-19T04:07:43Z",
            "2024-10-19T04:07:24Z",
            "2024-10-19T04:02:40Z",
            "2024-10-19T04:02:03Z",
            "2024-10-19T04:01:36Z",
            "2024-10-19T03:20:10Z",
            "2024-10-19T03:19:44Z",
            "2024-10-19T03:19:24Z",
            "2024-09-25T15:53:46Z",
            "2024-09-19T06:59:21Z",
            "2024-09-11T05:27:28Z",
            "2024-08-27T06:50:42Z",
            "2024-08-27T06:50:11Z",
            "2024-08-25T20:17:11Z",
            "2024-08-25T20:10:56Z",
            "2024-07-30T22:42:18Z",
            "2024-07-30T22:26:19Z",
            "2024-07-30T22:24:23Z",
            "2024-07-30T22:14:34Z",
            "2024-07-29T23:25:26Z",
            "2024-07-29T21:31:25Z",
            "2024-07-13T20:56:40Z",
            "2024-06-29T21:32:38Z",
            "2024-06-29T21:28:37Z",
            "2024-06-26T15:47:30Z",
            "2024-06-26T15:45:42Z",
            "2024-06-26T15:40:50Z"
        ],
        "creation_date": "2017-09-09T17:43:36Z",
        "contributors": 30,
        "topics": [
            "colab",
            "deep-learning",
            "fastai",
            "gpu",
            "machine-learning",
            "notebooks",
            "python",
            "pytorch"
        ],
        "subscribers": 605,
        "readme": "# Welcome to fastai\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->\n\n[![CI](https://github.com/fastai/fastai/actions/workflows/main.yml/badge.svg)](https://github.com/fastai/fastai/actions/workflows/main.yml)\n[![PyPI](https://img.shields.io/pypi/v/fastai?color=blue&label=pypi%20version.png)](https://pypi.org/project/fastai/#description)\n[![Conda (channel\nonly)](https://img.shields.io/conda/vn/fastai/fastai?color=seagreen&label=conda%20version.png)](https://anaconda.org/fastai/fastai)\n![docs](https://github.com/fastai/fastai/workflows/docs/badge.svg)\n\n## Installing\n\nYou can use fastai without any installation by using [Google\nColab](https://colab.research.google.com/). In fact, every page of this\ndocumentation is also available as an interactive notebook - click \u201cOpen\nin colab\u201d at the top of any page to open it (be sure to change the Colab\nruntime to \u201cGPU\u201d to have it run fast!) See the fast.ai documentation on\n[Using Colab](https://course.fast.ai/start_colab) for more information.\n\nYou can install fastai on your own machines with conda (highly\nrecommended), as long as you\u2019re running Linux or Windows (NB: Mac is not\nsupported). For Windows, please see the \u201cRunning on Windows\u201d for\nimportant notes.\n\nWe recommend using\n[miniconda](https://docs.conda.io/en/latest/miniconda.html) (or\nminiforge). First install PyTorch using the conda line shown\n[here](https://pytorch.org/get-started/locally/), and then run:\n\n``` bash\nconda install -c fastai fastai\n```\n\nTo install with pip, use: `pip install fastai`.\n\nIf you plan to develop fastai yourself, or want to be on the cutting\nedge, you can use an editable install (if you do this, you should also\nuse an editable install of\n[fastcore](https://github.com/fastai/fastcore) to go with it.) First\ninstall PyTorch, and then:\n\n    git clone https://github.com/fastai/fastai\n    pip install -e \"fastai[dev]\"\n\n## Learning fastai\n\nThe best way to get started with fastai (and deep learning) is to read\n[the\nbook](https://www.amazon.com/Deep-Learning-Coders-fastai-PyTorch/dp/1492045527),\nand complete [the free course](https://course.fast.ai).\n\nTo see what\u2019s possible with fastai, take a look at the [Quick\nStart](https://docs.fast.ai/quick_start.html), which shows how to use\naround 5 lines of code to build an image classifier, an image\nsegmentation model, a text sentiment model, a recommendation system, and\na tabular model. For each of the applications, the code is much the\nsame.\n\nRead through the [Tutorials](https://docs.fast.ai/tutorial.html) to\nlearn how to train your own models on your own datasets. Use the\nnavigation sidebar to look through the fastai documentation. Every\nclass, function, and method is documented here.\n\nTo learn about the design and motivation of the library, read the [peer\nreviewed paper](https://www.mdpi.com/2078-2489/11/2/108/htm).\n\n## About fastai\n\nfastai is a deep learning library which provides practitioners with\nhigh-level components that can quickly and easily provide\nstate-of-the-art results in standard deep learning domains, and provides\nresearchers with low-level components that can be mixed and matched to\nbuild new approaches. It aims to do both things without substantial\ncompromises in ease of use, flexibility, or performance. This is\npossible thanks to a carefully layered architecture, which expresses\ncommon underlying patterns of many deep learning and data processing\ntechniques in terms of decoupled abstractions. These abstractions can be\nexpressed concisely and clearly by leveraging the dynamism of the\nunderlying Python language and the flexibility of the PyTorch library.\nfastai includes:\n\n- A new type dispatch system for Python along with a semantic type\n  hierarchy for tensors\n- A GPU-optimized computer vision library which can be extended in pure\n  Python\n- An optimizer which refactors out the common functionality of modern\n  optimizers into two basic pieces, allowing optimization algorithms to\n  be implemented in 4\u20135 lines of code\n- A novel 2-way callback system that can access any part of the data,\n  model, or optimizer and change it at any point during training\n- A new data block API\n- And much more\u2026\n\nfastai is organized around two main design goals: to be approachable and\nrapidly productive, while also being deeply hackable and configurable.\nIt is built on top of a hierarchy of lower-level APIs which provide\ncomposable building blocks. This way, a user wanting to rewrite part of\nthe high-level API or add particular behavior to suit their needs does\nnot have to learn how to use the lowest level.\n\n<img alt=\"Layered API\" src=\"images/layered.png\" width=\"345\">\n\n## Migrating from other libraries\n\nIt\u2019s very easy to migrate from plain PyTorch, Ignite, or any other\nPyTorch-based library, or even to use fastai in conjunction with other\nlibraries. Generally, you\u2019ll be able to use all your existing data\nprocessing code, but will be able to reduce the amount of code you\nrequire for training, and more easily take advantage of modern best\npractices. Here are migration guides from some popular libraries to help\nyou on your way:\n\n- [Plain PyTorch](https://docs.fast.ai/examples/migrating_pytorch.html)\n- [Ignite](https://docs.fast.ai/examples/migrating_ignite.html)\n- [Lightning](https://docs.fast.ai/examples/migrating_lightning.html)\n- [Catalyst](https://docs.fast.ai/examples/migrating_catalyst.html)\n\n## Windows Support\n\nDue to python multiprocessing issues on Jupyter and Windows,\n`num_workers` of `Dataloader` is reset to 0 automatically to avoid\nJupyter hanging. This makes tasks such as computer vision in Jupyter on\nWindows many times slower than on Linux. This limitation doesn\u2019t exist\nif you use fastai from a script.\n\nSee [this\nexample](https://github.com/fastai/fastai/blob/master/nbs/examples/dataloader_spawn.py)\nto fully leverage the fastai API on Windows.\n\nWe recommend using Windows Subsystem for Linux (WSL) instead \u2013 if you do\nthat, you can use the regular Linux installation approach, and you won\u2019t\nhave any issues with `num_workers`.\n\n## Tests\n\nTo run the tests in parallel, launch:\n\n`nbdev_test`\n\nFor all the tests to pass, you\u2019ll need to install the dependencies\nspecified as part of dev_requirements in settings.ini\n\n`pip install -e .[dev]`\n\nTests are written using `nbdev`, for example see the documentation for\n`test_eq`.\n\n## Contributing\n\nAfter you clone this repository, make sure you have run\n`nbdev_install_hooks` in your terminal. This install Jupyter and git\nhooks to automatically clean, trust, and fix merge conflicts in\nnotebooks.\n\nAfter making changes in the repo, you should run `nbdev_prepare` and\nmake additional and necessary changes in order to pass all the tests.\n\n## Docker Containers\n\nFor those interested in official docker containers for this project,\nthey can be found\n[here](https://github.com/fastai/docker-containers#fastai).\n",
        "releases": [
            {
                "name": "v2.7.18",
                "date": "2024-10-19T03:20:13Z"
            },
            {
                "name": "v2.7.17",
                "date": "2024-08-27T06:50:47Z"
            },
            {
                "name": "v2.7.16",
                "date": "2024-07-30T22:26:23Z"
            },
            {
                "name": "v2.7.15",
                "date": "2024-04-27T22:14:04Z"
            },
            {
                "name": "v2.7.14",
                "date": "2024-02-01T00:26:04Z"
            },
            {
                "name": "v2.7.13",
                "date": "2023-10-15T04:03:45Z"
            },
            {
                "name": "v2.7.12",
                "date": "2023-03-28T20:28:42Z"
            },
            {
                "name": "v2.7.11",
                "date": "2023-02-15T02:47:21Z"
            },
            {
                "name": "v2.7.10",
                "date": "2022-11-02T03:04:39Z"
            },
            {
                "name": "v2.7.8",
                "date": "2022-08-02T19:19:53Z"
            },
            {
                "name": "v2.7.6",
                "date": "2022-07-07T18:47:13Z"
            },
            {
                "name": "v2.7.5",
                "date": "2022-07-04T04:02:49Z"
            },
            {
                "name": "v2.7.4",
                "date": "2022-06-28T04:42:23Z"
            },
            {
                "name": "v2.7.2",
                "date": "2022-06-19T06:28:06Z"
            },
            {
                "name": "v2.7.1",
                "date": "2022-06-19T01:38:38Z"
            },
            {
                "name": "v2.7.0",
                "date": "2022-06-19T01:15:10Z"
            },
            {
                "name": "v2.6.3",
                "date": "2022-05-01T02:02:21Z"
            },
            {
                "name": "v2.6.2",
                "date": "2022-04-30T01:43:44Z"
            },
            {
                "name": "v2.6.1",
                "date": "2022-04-30T01:32:58Z"
            },
            {
                "name": "v2.6.0",
                "date": "2022-04-24T22:36:45Z"
            },
            {
                "name": "v2.5.6",
                "date": "2022-04-02T04:08:51Z"
            },
            {
                "name": "v2.5.5",
                "date": "2022-03-25T20:24:36Z"
            },
            {
                "name": "v2.5.4",
                "date": "2022-03-25T03:16:49Z"
            },
            {
                "name": "v2.5.3",
                "date": "2021-10-23T07:15:54Z"
            },
            {
                "name": "v2.5.1",
                "date": "2021-08-11T05:11:46Z"
            },
            {
                "name": "v2.5.0",
                "date": "2021-08-06T04:01:19Z"
            },
            {
                "name": "v2.4.1",
                "date": "2021-07-14T03:14:56Z"
            },
            {
                "name": "v2.4",
                "date": "2021-06-16T01:12:27Z"
            },
            {
                "name": "v2.3.2",
                "date": "2021-06-16T00:41:20Z"
            },
            {
                "name": "v2.3.1",
                "date": "2021-05-04T02:11:31Z"
            },
            {
                "name": "v2.3.0",
                "date": "2021-03-31T06:04:10Z"
            },
            {
                "name": "v2.2.7",
                "date": "2021-02-22T04:01:24Z"
            },
            {
                "name": "v2.2.6",
                "date": "2021-02-21T04:11:59Z"
            },
            {
                "name": "v2.2.5",
                "date": "2021-02-08T21:27:20Z"
            },
            {
                "name": "v2.2.3",
                "date": "2021-01-12T20:11:29Z"
            },
            {
                "name": "v2.2.2",
                "date": "2021-01-07T16:53:05Z"
            },
            {
                "name": "v2.2.0",
                "date": "2021-01-06T19:54:46Z"
            },
            {
                "name": "v2.1.10",
                "date": "2020-12-22T20:02:47Z"
            },
            {
                "name": "v2.1.9",
                "date": "2020-12-13T19:01:30Z"
            },
            {
                "name": "v2.1.8",
                "date": "2020-11-30T18:47:09Z"
            },
            {
                "name": "2.1.7",
                "date": "2020-11-23T18:06:04Z"
            },
            {
                "name": "2.1.6",
                "date": "2020-11-22T14:02:07Z"
            },
            {
                "name": "2.1.5",
                "date": "2020-11-09T14:32:39Z"
            },
            {
                "name": "2.1.4",
                "date": "2020-11-04T22:19:37Z"
            },
            {
                "name": "2.1.3",
                "date": "2020-11-02T22:52:50Z"
            },
            {
                "name": "2.1.0",
                "date": "2020-10-30T18:49:55Z"
            },
            {
                "name": "2.0.18",
                "date": "2020-10-30T13:20:56Z"
            },
            {
                "name": "2.0.17",
                "date": "2020-10-29T23:57:52Z"
            },
            {
                "name": "2.0.16",
                "date": "2020-10-09T03:25:03Z"
            },
            {
                "name": "2.0.14",
                "date": "2020-09-29T17:51:52Z"
            },
            {
                "name": "2.0.13",
                "date": "2020-09-17T04:22:25Z"
            },
            {
                "name": "2.0.12",
                "date": "2020-09-15T23:56:50Z"
            },
            {
                "name": "2.0.11",
                "date": "2020-09-14T16:29:31Z"
            },
            {
                "name": "2.0.9",
                "date": "2020-09-06T21:28:16Z"
            },
            {
                "name": "2.0.6",
                "date": "2020-09-06T21:21:06Z"
            }
        ]
    }
}