{
    "https://api.github.com/repos/danilowoz/react-content-loader": {
        "forks": 422,
        "watchers": 13818,
        "stars": 13818,
        "languages": {
            "TypeScript": 43891,
            "JavaScript": 3413,
            "HTML": 46
        },
        "commits": [
            "2024-10-22T20:17:50Z",
            "2024-06-11T07:56:22Z",
            "2024-06-09T16:05:07Z",
            "2024-06-07T12:57:21Z",
            "2024-03-08T17:46:03Z",
            "2023-03-12T11:52:41Z",
            "2023-03-05T19:31:32Z",
            "2022-03-09T18:18:25Z",
            "2022-02-14T09:34:26Z",
            "2022-02-14T09:31:12Z",
            "2022-01-17T09:54:38Z",
            "2022-01-14T09:45:27Z",
            "2021-12-08T09:13:26Z",
            "2021-12-05T22:00:10Z",
            "2021-12-05T21:49:03Z",
            "2021-12-05T21:45:47Z",
            "2021-09-22T10:53:20Z",
            "2021-09-22T10:28:24Z",
            "2021-09-22T10:21:09Z",
            "2021-09-22T10:16:28Z",
            "2021-07-21T08:40:26Z",
            "2021-06-17T08:07:09Z",
            "2021-06-17T08:00:45Z",
            "2021-06-08T07:57:01Z",
            "2021-05-15T16:17:11Z",
            "2021-05-10T12:09:03Z",
            "2021-05-10T12:08:22Z",
            "2021-05-10T07:48:25Z",
            "2021-04-21T18:05:37Z",
            "2021-04-21T17:46:31Z"
        ],
        "creation_date": "2017-01-20T00:30:11Z",
        "contributors": 30,
        "topics": [
            "facebook-cards-loaders",
            "hacktoberfest",
            "loader",
            "loading",
            "placeholder",
            "react",
            "react-native",
            "react-native-components",
            "skeleton",
            "skeleton-screen",
            "svg"
        ],
        "subscribers": 85,
        "readme": "<p align=\"center\">\n  <img width=\"350\" alt=\"react-content-loader\" src=\"https://user-images.githubusercontent.com/4838076/34419335-5669c3f8-ebea-11e7-9668-c47b7846970b.png\"/>\n</p>\n<p align=\"center\">\n  <img width=\"400\" alt=\"Example's react-content-loader\" src=\"https://user-images.githubusercontent.com/4838076/34308760-ec55df82-e735-11e7-843b-2e311fa7b7d0.gif\" />\n</p>\n\nSVG-Powered\u00a0component\u00a0to\u00a0easily\u00a0create\u00a0placeholder\u00a0loadings\u00a0(like\u00a0Facebook's\u00a0cards\u00a0loading).\n\n## Features\n\n- :gear:\u00a0**Customizable:**\u00a0Feel\u00a0free\u00a0to\u00a0change\u00a0the\u00a0colors,\u00a0speed,\u00a0sizes,\u00a0and\u00a0even\u00a0**RTL**;\n- :ok_hand:\u00a0**Plug\u00a0and\u00a0play:**\u00a0with\u00a0many\u00a0presets\u00a0to\u00a0use,\u00a0see\u00a0the\u00a0[examples](http://danilowoz.com/create-content-loader/#gallery);\n- :pencil2:\u00a0**DIY:**\u00a0use\u00a0the\u00a0[create-content-loader](https://danilowoz.com/create-content-loader)\u00a0to\u00a0create\u00a0your\u00a0own\u00a0custom\u00a0loaders\u00a0easily;\n- \ud83d\udcf1 **React Native support**: same API, as same powerful features;\n- \u269b\ufe0f **Really lightweight:** less than **2kB** and **0 dependencies** for web version;\n\n## Index\n\n- [Getting\u00a0Started](#gettingstarted)\n- [Usage](#usage)\n  - [Native](#native)\n- [Options](#options)\n- [Examples](#examples)\n- [Troubleshooting](#troubleshooting)\n- [Similar\u00a0packages](#similarpackages)\n- [Development](#development)\n\n## Getting\u00a0Started\n\n```sh\nnpm i react-content-loader --save\n```\n\n```sh\nyarn add react-content-loader\n```\n\n### For React Native\n\n```sh\nnpm i react-content-loader react-native-svg --save\n```\n\n```sh\nyarn add react-content-loader react-native-svg\n```\n\nCDN\u00a0from\u00a0[JSDELIVR](https://www.jsdelivr.com/package/npm/react-content-loader)\n\n## Usage\n\nThere\u00a0are\u00a0two\u00a0ways\u00a0to\u00a0use\u00a0it:\n\n**1.\u00a0Presets,\u00a0see\u00a0the\u00a0[examples](https://danilowoz.com/react-content-loader/):**\n\n```jsx\nimport ContentLoader, { Facebook } from 'react-content-loader'\n\nconst MyLoader = () => <ContentLoader />\nconst MyFacebookLoader = () => <Facebook />\n```\n\n**2.\u00a0Custom\u00a0mode,\u00a0see\u00a0the\u00a0[online\u00a0tool](https://danilowoz.com/create-content-loader)**\n\n```jsx\nconst MyLoader = () => (\n  <ContentLoader viewBox=\"0 0 380 70\">\n    {/*\u00a0Only\u00a0SVG\u00a0shapes\u00a0*/}\u00a0\u00a0\u00a0\u00a0\n    <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"70\" height=\"70\" />\n    <rect x=\"80\" y=\"17\" rx=\"4\" ry=\"4\" width=\"300\" height=\"13\" />\n    <rect x=\"80\" y=\"40\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n  </ContentLoader>\n)\n```\n\n**Still not clear?** Take a look at this working example at [codesandbox.io](https://codesandbox.io/s/moojk887z9)\nOr try the components editable demo hands-on and install it from [bit.dev](https://bit.dev/danilowoz/react-content-loader)\n\n## Native\n\n`react-content-loader` can be used with React Native in the same way as web version with the same import:\n\n**1.\u00a0Presets,\u00a0see\u00a0the\u00a0[examples](#examples):**\n\n```jsx\nimport ContentLoader, { Facebook } from 'react-content-loader/native'\n\nconst MyLoader = () => <ContentLoader />\nconst MyFacebookLoader = () => <Facebook />\n```\n\n**2.\u00a0Custom\u00a0mode**\n\n**To create custom loaders there is an important difference:** as React Native doesn't have any native module for SVG components, it's necessary to import the shapes from [react-native-svg](https://github.com/react-native-community/react-native-svg) or use the named export Rect and Circle from `react-content-loader` import:\n\n```jsx\nimport ContentLoader, { Rect, Circle } from 'react-content-loader/native'\n\nconst MyLoader = () => (\n  <ContentLoader viewBox=\"0 0 380 70\">\n    <Circle cx=\"30\" cy=\"30\" r=\"30\" />\n    <Rect x=\"80\" y=\"17\" rx=\"4\" ry=\"4\" width=\"300\" height=\"13\" />\n    <Rect x=\"80\" y=\"40\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n  </ContentLoader>\n)\n```\n\n## Options\n\n| <div style=\"width:250px\">Prop name and type</div>                | Environment                | Description                                                                                                                                                                                                                                                                                         |\n| ---------------------------------------------------------------- | -------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **`animate?: boolean`** <br/> Defaults to `true`                 | React DOM<br/>React Native | Opt-out\u00a0of\u00a0animations\u00a0with\u00a0`false`                                                                                                                                                                                                                                                                  |\n| **`title?: string`** <br/> Defaults to `Loading...`              | React DOM only             | It's\u00a0used\u00a0to\u00a0describe\u00a0what\u00a0element\u00a0it\u00a0is.\u00a0<br />Use\u00a0`''` (empty string)\u00a0to\u00a0remove.                                                                                                                                                                                                                  |\n| **`baseUrl?: string`**<br /> Defaults to an empty string         | React DOM only             | Required\u00a0if\u00a0you're\u00a0using\u00a0`<base url=\"/\" />` document\u00a0`<head/>`.\u00a0<br/>This\u00a0prop\u00a0is\u00a0common\u00a0used\u00a0as:\u00a0<br/>`<ContentLoader baseUrl={window.location.pathname} />`\u00a0which\u00a0will\u00a0fill\u00a0the\u00a0SVG\u00a0attribute\u00a0with\u00a0the\u00a0relative\u00a0path.\u00a0Related\u00a0[#93](https://github.com/danilowoz/react-content-loader/issues/93). |\n| **`speed?: number`** <br /> Defaults to `1.2`                    | React DOM<br/>React Native | Animation\u00a0speed\u00a0in\u00a0seconds.                                                                                                                                                                                                                                                                         |\n| **`viewBox?: string`** <br /> Defaults to `undefined`            | React DOM<br/>React Native | Use viewBox props to set a custom viewBox value, <br/>for more information about how to use it, <br/>read the article [How to Scale SVG](https://css-tricks.com/scale-svg/).                                                                                                                        |\n| **`gradientRatio?: number`** <br /> Defaults to `1.2`            | React DOM only             | Width\u00a0of\u00a0the\u00a0animated\u00a0gradient\u00a0as\u00a0a\u00a0fraction\u00a0of\u00a0the\u00a0view box\u00a0width.                                                                                                                                                                                                                                 |\n| **`rtl?: boolean`** <br /> Defaults to `false`                   | React DOM<br/>React Native | Content\u00a0right-to-left.                                                                                                                                                                                                                                                                              |\n| **`backgroundColor?: string`** <br /> Defaults to `#f5f6f7`      | React DOM<br/>React Native | Used\u00a0as\u00a0background\u00a0of\u00a0animation.                                                                                                                                                                                                                                                                    |\n| **`foregroundColor?: string`** <br /> Defaults to `#eee`         | React DOM<br/>React Native | Used\u00a0as\u00a0the\u00a0foreground\u00a0of\u00a0animation.                                                                                                                                                                                                                                                                |\n| **`backgroundOpacity?: number`** <br /> Defaults to `1`          | React DOM<br/>React Native | Background\u00a0opacity\u00a0(0\u00a0=\u00a0transparent,\u00a01\u00a0=\u00a0opaque)<br/>used\u00a0to\u00a0solve\u00a0an\u00a0issue\u00a0in\u00a0[Safari](#safari--ios)                                                                                                                                                                                               |\n| **`foregroundOpacity?: number`** <br /> Defaults to `1`          | React DOM<br/>React Native | Animation\u00a0opacity\u00a0(0\u00a0=\u00a0transparent,\u00a01\u00a0=\u00a0opaque)<br/>used\u00a0to\u00a0solve\u00a0an\u00a0issue\u00a0in\u00a0[Safari](#safari--ios)                                                                                                                                                                                                |\n| **`style?: React.CSSProperties`** <br /> Defaults to `{}`        | React DOM only             |                                                                                                                                                                                                                                                                                                     |\n| **`uniqueKey?: string`** <br /> Defaults to random\u00a0unique\u00a0id     | React DOM only             | Use\u00a0the\u00a0same\u00a0value\u00a0of\u00a0prop\u00a0key,\u00a0<br/>that\u00a0will\u00a0solve\u00a0inconsistency\u00a0on\u00a0the\u00a0SSR,\u00a0see\u00a0more\u00a0[here](https://github.com/danilowoz/react-content-loader/issues/78).                                                                                                                                        |\n| **`beforeMask?: JSX.Element`** <br /> Defaults to null           | React DOM<br/>React Native | Define custom shapes before content,\u00a0<br/>see\u00a0more\u00a0[here](https://github.com/danilowoz/react-content-loader/issues/266).                                                                                                                                                                            |\n\nSee all options [live](https://danilowoz.com/react-content-loader/)\n\n## Examples\n\n##### Facebook\u00a0Style\n\n```jsx\nimport { Facebook } from 'react-content-loader'\n\nconst MyFacebookLoader = () => <Facebook />\n```\n\n<img alt=\"Facebook\u00a0Style\" src=\"https://user-images.githubusercontent.com/4838076/73212460-328f7500-4146-11ea-99e7-e19cd4e07a51.png\" width=\"500px\" />\n\n##### Instagram\u00a0Style\n\n```jsx\nimport { Instagram } from 'react-content-loader'\n\nconst MyInstagramLoader = () => <Instagram />\n```\n\n<img alt=\"Instagram\u00a0Style\" src=\"https://user-images.githubusercontent.com/4838076/73212462-328f7500-4146-11ea-98dc-3a6aeafd4a26.png\" width=\"500px\" />\n\n##### Code\u00a0Style\n\n```jsx\nimport { Code } from 'react-content-loader'\n\nconst MyCodeLoader = () => <Code />\n```\n\n<img alt=\"Code\u00a0Style\" src=\"https://user-images.githubusercontent.com/4838076/73212459-328f7500-4146-11ea-89b0-1b7bbae8047b.png\" width=\"500px\" />\n\n##### List\u00a0Style\n\n```jsx\nimport { List } from 'react-content-loader'\n\nconst MyListLoader = () => <List />\n```\n\n<img alt=\"List\u00a0Style\" src=\"https://user-images.githubusercontent.com/4838076/73212463-33280b80-4146-11ea-9f93-95c2cbdef17b.png\" width=\"500px\" />\n\n##### Bullet\u00a0list\u00a0Style\n\n```jsx\nimport { BulletList } from 'react-content-loader'\n\nconst MyBulletListLoader = () => <BulletList />\n```\n\n<img alt=\"Bullet\u00a0list\u00a0Style\" src=\"https://user-images.githubusercontent.com/4838076/73212458-328f7500-4146-11ea-826f-576059c4644e.png\" width=\"500px\" />\n\n### Custom\u00a0Style\n\nFor\u00a0the\u00a0custom\u00a0mode,\u00a0use\u00a0the\n[online\u00a0tool](https://danilowoz.com/create-content-loader).\n\n```jsx\nconst MyLoader = () => (\n  <ContentLoader\n    height={140}\n    speed={1}\n    backgroundColor={'#333'}\n    foregroundColor={'#999'}\n    viewBox=\"0 0 380 70\"\n  >\n    {/*\u00a0Only\u00a0SVG\u00a0shapes\u00a0*/}\n    <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"70\" height=\"70\" />\n    <rect x=\"80\" y=\"17\" rx=\"4\" ry=\"4\" width=\"300\" height=\"13\" />\n    <rect x=\"80\" y=\"40\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n  </ContentLoader>\n)\n```\n\n![Custom](https://user-images.githubusercontent.com/4838076/36352947-b87019a8-149e-11e8-99ba-c71c2bcf8733.gif)\n\n## Troubleshooting\n\n#### Responsive - Mobile version\n\nIn order to avoid unexpected behavior, the package doesn't have opinioned settings. So if it needs to be responsive, have in mind that the output of the package is a regular SVG, so it just needs the same attributes to become a regular SVG responsive, which means:\n\n```jsx\nimport { Code } from 'react-content-loader'\n\nconst MyCodeLoader = () => (\n  <Code\n    width={100}\n    height={100}\n    viewBox=\"0 0 100 100\"\n    style={{ width: '100%' }}\n  />\n)\n```\n\n#### Server-side rendering (SSR) - Match snapshot\n\nAs the main component generates random values to match the id of the SVG element with background style, it can encounter unexpected errors and unmatching warning on render, once the random value of id will be generated twice, in case of SSR: server and client; or in case of snapshot test: on the first match and re-running the test.\n\nTo fix it, set the prop [`uniqueKey`](https://github.com/danilowoz/react-content-loader#uniquekey-string---web-only), then the id will not be random anymore:\n\n```jsx\nimport { Facebook } from 'react-content-loader'\n\nconst MyFacebookLoader = () => <Facebook uniqueKey=\"my-random-value\" />\n```\n\n#### **Alpha\u00a0is\u00a0not\u00a0working:\u00a0Safari\u00a0/\u00a0iOS**\n\nWhen\u00a0using\u00a0`rgba`\u00a0as\u00a0a\u00a0`backgroundColor`\u00a0or\u00a0`foregroundColor`\u00a0value,\u00a0[Safari\u00a0does\u00a0not\u00a0respect\u00a0the\u00a0alpha\u00a0channel](https://github.com/w3c/svgwg/issues/180),\u00a0meaning\u00a0that\u00a0the\u00a0color\u00a0will\u00a0be\u00a0opaque.\u00a0To\u00a0prevent\u00a0this,\u00a0instead\u00a0of\u00a0using\u00a0a\u00a0`rgba`\u00a0value\u00a0for\u00a0`backgroundColor`/`foregroundColor`,\u00a0use\u00a0the\u00a0`rgb`\u00a0equivalent\u00a0and\u00a0move\u00a0the\u00a0alpha\u00a0channel\u00a0value\u00a0to\u00a0the\u00a0`backgroundOpacity`/`foregroundOpacity`\u00a0props.\n\n```jsx\n{/*\u00a0Opaque\u00a0color\u00a0in\u00a0Safari\u00a0and\u00a0iOS\u00a0*/}\n<ContentLoader\n\u00a0\u00a0backgroundColor=\"rgba(0,0,0,0.06)\"\n\u00a0\u00a0foregroundColor=\"rgba(0,0,0,0.12)\">\n\n\n{/_\u00a0Semi-transparent\u00a0color\u00a0in\u00a0Safari\u00a0and\u00a0iOS\u00a0_/}\n<ContentLoader\n\u00a0\u00a0\u00a0\u00a0backgroundColor=\"rgb(0,0,0)\"\n\u00a0\u00a0\u00a0\u00a0foregroundColor=\"rgb(0,0,0)\"\n\u00a0\u00a0\u00a0\u00a0backgroundOpacity={0.06}\n\u00a0\u00a0\u00a0\u00a0foregroundOpacity={0.12}>\n\n\n```\n\n#### **Black\u00a0box\u00a0in\u00a0Safari\u00a0/\u00a0iOS\u00a0(again)**\n\nUsing\u00a0the base\u00a0tag\u00a0on\u00a0a\u00a0page\u00a0that\u00a0contains\u00a0SVG\u00a0elements\u00a0fails\u00a0to\u00a0render\u00a0and\u00a0it\u00a0looks\u00a0like\u00a0a\u00a0black\u00a0box.\u00a0Just\u00a0remove\u00a0the\u00a0**base-href**\u00a0tag\u00a0from\u00a0the\u00a0`<head />`\u00a0and\u00a0the issue has been\u00a0solved.\n\n<img width=\"350\" src=\"https://user-images.githubusercontent.com/11562881/39406054-2f308de6-4bce-11e8-91fb-bbb35e29fc10.png\" alt=\"black box\" />\n\nSee:\u00a0[#93](https://github.com/danilowoz/react-content-loader/issues/93)\u00a0/\u00a0[109](https://github.com/danilowoz/react-content-loader/issues/109)\n\n#### Browser supports SVG-Animate\n\nOld browsers don't support animation in SVG ([compatibility list](https://caniuse.com/#search=SVGAnimateElement)), and if your project must support IE, for examples, here's a couple of ways to make sure that browser supports SVG Animate:\n\n- `window.SVGAnimateElement`\n- `document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#SVG-Animation\", \"1.1\")`\n- Or even use https://modernizr.com/\n\n## Similar\u00a0packages\n\n- React\u00a0Native:\u00a0[rn-placeholder](https://github.com/mfrachet/rn-placeholder),\u00a0[react-native-svg-animated-linear-gradient](https://github.com/virusvn/react-native-svg-animated-linear-gradient);\n- [Preact](https://github.com/bonitasoft/preact-content-loader);\n- Vue.js:\u00a0[vue-content-loading](https://github.com/LucasLeandro1204/vue-content-loading),\u00a0[vue-content-loader](https://github.com/egoist/vue-content-loader);\n- Angular:\u00a0[ngx-content-loading](https://github.com/Gbuomprisco/ngx-content-loading),\u00a0[ngx-content-loader](https://github.com/NetanelBasal/ngx-content-loader).\n\n---\n\n## Development\n\nFork\u00a0the\u00a0repo\u00a0and then\u00a0clone\u00a0it\n\n```\n$\u00a0git\u00a0clone\u00a0git@github.com:YourUsername/react-content-loader.git\u00a0&&\u00a0cd\u00a0react-content-loader\n```\n\n`$ npm i`:\u00a0Install\u00a0the\u00a0dependencies;\n\n`$ npm run build`:\u00a0Build\u00a0to\u00a0production;\n\n`$ npm run dev`:\u00a0Run\u00a0the\u00a0Storybook\u00a0to\u00a0see\u00a0your\u00a0changes;\n\n`$ npm run test`:\u00a0Run\u00a0all\u00a0tests:\u00a0type\u00a0checking,\u00a0unit\u00a0tests on web and native;\n\n`$ npm run test:watch`:\u00a0Watch\u00a0unit\u00a0tests;\n\n### React Native\n\nAs React Native doesn't support symbolic links (to link the dependency to another folder) and as there is no playground to check your contributions (like storybook), this is recommended strategy to run the project locally:\n\n1. Create a new React Native from scratch, either Metro or create-react-native-app;\n2. Install the dependency to your root project:\n   `yarn add react-content-loader react-native-svg`\n3. Open the project just created and clone this repository there;\n4. Create your loading component and point the `react-content-loader` to the project just cloned, like:\n   `import ContentLoader, { Rect, Circle } from './react-content-loader/native'`\n\n### Commit\u00a0messages\n\nCommit\u00a0messages\u00a0should\u00a0follow\u00a0the\u00a0[commit\u00a0message\u00a0convention](https://conventionalcommits.org/)\u00a0so,\u00a0changelogs\u00a0could\u00a0be\u00a0generated\u00a0automatically\u00a0by\u00a0that.\u00a0Commit\u00a0messages\u00a0are\u00a0validated\u00a0automatically\u00a0upon\u00a0commit.\u00a0If\u00a0you\u00a0aren't\u00a0familiar\u00a0with\u00a0the\u00a0commit\u00a0message\u00a0convention,\u00a0you\u00a0can\u00a0use\u00a0yarn\u00a0commit\u00a0(or\u00a0`npm run commit`)\u00a0instead\u00a0of\u00a0git\u00a0commit,\u00a0which\u00a0provides\u00a0an\u00a0interactive\u00a0CLI\u00a0for\u00a0generating\u00a0proper\u00a0commit\u00a0messages.\n\n## License\n\n[MIT](https://github.com/danilowoz/react-content-loader/blob/master/LICENSE)\n",
        "releases": [
            {
                "name": "v7.0.2",
                "date": "2024-06-11T07:57:40Z"
            },
            {
                "name": "v7.0.1",
                "date": "2024-06-09T16:06:17Z"
            },
            {
                "name": "v7.0.0",
                "date": "2024-03-08T17:47:32Z"
            },
            {
                "name": "v6.2.1",
                "date": "2023-03-12T11:56:33Z"
            },
            {
                "name": "v6.2.0",
                "date": "2022-03-09T18:22:04Z"
            },
            {
                "name": "v6.1.0",
                "date": "2021-12-05T22:02:00Z"
            },
            {
                "name": "v6.0.3",
                "date": "2021-04-06T08:07:37Z"
            },
            {
                "name": "v6.0.2",
                "date": "2021-03-04T12:02:31Z"
            },
            {
                "name": "v6.0.1",
                "date": "2021-01-19T18:55:04Z"
            },
            {
                "name": "v6.0.0",
                "date": "2021-01-14T20:40:53Z"
            },
            {
                "name": "v5.1.4",
                "date": "2020-10-30T12:35:51Z"
            },
            {
                "name": "v5.1.3",
                "date": "2020-10-19T18:28:00Z"
            },
            {
                "name": "v5.1.2",
                "date": "2020-09-20T18:33:21Z"
            },
            {
                "name": "v5.1.1",
                "date": "2020-08-29T14:06:17Z"
            },
            {
                "name": "v5.1.0",
                "date": "2020-06-22T12:36:07Z"
            },
            {
                "name": "v5.0.4",
                "date": "2020-04-08T09:05:12Z"
            },
            {
                "name": "v5.0.3",
                "date": "2020-04-05T14:45:46Z"
            },
            {
                "name": "v5.0.2",
                "date": "2020-02-20T11:04:53Z"
            },
            {
                "name": "v5.0.1",
                "date": "2020-01-27T19:13:10Z"
            },
            {
                "name": "v5.0.0",
                "date": "2020-01-26T20:09:39Z"
            },
            {
                "name": "v4.3.4",
                "date": "2019-12-26T02:30:27Z"
            },
            {
                "name": "v4.3.3",
                "date": "2019-12-06T19:53:58Z"
            },
            {
                "name": "v4.3.2",
                "date": "2019-10-13T13:44:21Z"
            },
            {
                "name": "v4.3.1",
                "date": "2019-10-08T12:33:21Z"
            },
            {
                "name": "v4.3.0",
                "date": "2019-09-25T12:48:21Z"
            },
            {
                "name": "v4.2.2",
                "date": "2019-07-09T09:05:22Z"
            },
            {
                "name": "v4.2.1",
                "date": "2019-03-07T14:15:42Z"
            },
            {
                "name": "v4.2.0",
                "date": "2019-03-06T21:36:39Z"
            },
            {
                "name": "v4.1.0",
                "date": "2019-03-06T20:54:05Z"
            },
            {
                "name": "v4.0.1",
                "date": "2019-02-01T14:18:20Z"
            },
            {
                "name": "v4.0.0",
                "date": "2019-01-24T18:43:51Z"
            },
            {
                "name": "",
                "date": "2018-02-13T16:29:11Z"
            },
            {
                "name": "Update API",
                "date": "2018-01-23T14:10:03Z"
            },
            {
                "name": "Removed custom api",
                "date": "2018-01-07T22:07:29Z"
            },
            {
                "name": "React update",
                "date": "2017-12-03T23:59:31Z"
            },
            {
                "name": "Bug fixes",
                "date": "2017-09-18T13:35:59Z"
            },
            {
                "name": "Stable version",
                "date": "2017-05-09T18:24:37Z"
            }
        ]
    }
}