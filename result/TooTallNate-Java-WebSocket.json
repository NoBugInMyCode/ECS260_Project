{
    "https://api.github.com/repos/TooTallNate/Java-WebSocket": {
        "forks": 2588,
        "watchers": 10575,
        "stars": 10575,
        "languages": {
            "Java": 838003,
            "HTML": 673666,
            "Gherkin": 1433
        },
        "commits": [
            "2024-12-15T15:03:08Z",
            "2024-12-15T15:02:11Z",
            "2024-12-15T15:01:03Z",
            "2024-12-15T14:59:56Z",
            "2024-12-15T14:56:25Z",
            "2024-12-15T14:55:21Z",
            "2024-12-08T21:15:12Z",
            "2024-11-14T13:47:26Z",
            "2024-11-14T13:44:52Z",
            "2024-11-11T14:30:32Z",
            "2024-10-22T21:09:18Z",
            "2024-10-13T13:53:21Z",
            "2024-10-13T09:36:42Z",
            "2024-10-08T21:14:08Z",
            "2024-10-08T20:32:30Z",
            "2024-07-14T15:48:22Z",
            "2024-07-12T14:55:54Z",
            "2024-07-08T21:36:44Z",
            "2024-07-08T21:33:21Z",
            "2024-07-08T20:41:39Z",
            "2024-07-08T20:40:53Z",
            "2024-06-10T09:15:26Z",
            "2024-06-08T06:23:07Z",
            "2024-04-27T15:26:36Z",
            "2024-04-27T15:04:27Z",
            "2024-04-14T21:04:10Z",
            "2024-04-15T06:18:57Z",
            "2024-02-24T12:11:56Z",
            "2024-02-24T12:07:17Z",
            "2024-02-21T15:17:50Z"
        ],
        "creation_date": "2010-01-20T23:33:04Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 382,
        "readme": "Java WebSockets\n===============\n[![Javadocs](https://www.javadoc.io/badge/org.java-websocket/Java-WebSocket.svg)](https://www.javadoc.io/doc/org.java-websocket/Java-WebSocket)\n[![Maven Central](https://img.shields.io/maven-central/v/org.java-websocket/Java-WebSocket.svg)](https://mvnrepository.com/artifact/org.java-websocket/Java-WebSocket)\n\nThis repository contains a barebones WebSocket server and client implementation\nwritten in 100% Java. The underlying classes are implemented `java.nio`, which allows for a\nnon-blocking event-driven model (similar to the\n[WebSocket API](https://html.spec.whatwg.org/multipage/web-sockets.html) for web browsers).\n\nImplemented WebSocket protocol versions are:\n\n * [RFC 6455](http://tools.ietf.org/html/rfc6455)\n * [RFC 7692](http://tools.ietf.org/html/rfc7692)\n\n[Here](https://github.com/TooTallNate/Java-WebSocket/wiki/Drafts) some more details about protocol versions/drafts.\n[PerMessageDeflateExample](https://github.com/TooTallNate/Java-WebSocket/wiki/PerMessageDeflateExample) enable the extension with reference to both a server and client example.\n\n\n## Getting Started\n\n### Dependency management tools\n\nBelow is a brief guide to using dependency management tools like maven or gradle.\n\n#### Maven\nTo use maven add this dependency to your pom.xml:\n```xml\n<dependency>\n  <groupId>org.java-websocket</groupId>\n  <artifactId>Java-WebSocket</artifactId>\n  <version>1.6.0</version>\n</dependency>\n```\n\n#### Gradle\nTo use Gradle add the maven central repository to your repositories list:\n```xml\nmavenCentral()\n```\nThen you can just add the latest version to your build.\n```xml\ncompile \"org.java-websocket:Java-WebSocket:1.6.0\"\n```\nOr this option if you use gradle 7.0 and above.\n```xml\nimplementation 'org.java-websocket:Java-WebSocket:1.6.0'\n```\n\n#### Logging\n\nThis library uses [SLF4J](https://www.slf4j.org/) for logging and does not ship with any default logging implementation.\n\nExceptions are using the log level `ERROR` and debug logging will be done with log level `TRACE`.\n\nFeel free to use whichever logging framework you desire and use the corresponding [binding](https://mvnrepository.com/artifact/org.slf4j) in your dependency management.\n\nIf you want to get started, take a look at the SimpleLogger [example](https://github.com/TooTallNate/Java-WebSocket/wiki/SimpleLogger-example).\n\n### Standalone jar\n\nIf you do not use any dependency management tool, you can find the latest standalone jar [here](https://github.com/TooTallNate/Java-WebSocket/releases/latest).\n\nWriting your own WebSocket Server\n---------------------------------\n\nThe `org.java_websocket.server.WebSocketServer` abstract class implements the\nserver-side of the\n[WebSocket Protocol](http://www.whatwg.org/specs/web-socket-protocol/).\nA WebSocket server by itself doesn't do anything except establish socket\nconnections though HTTP. After that it's up to **your** subclass to add purpose.\n\nAn example for a WebSocketServer can be found in both the [wiki](https://github.com/TooTallNate/Java-WebSocket/wiki#server-example) and the [example](https://github.com/TooTallNate/Java-WebSocket/tree/master/src/main/example) folder.\n\nWriting your own WebSocket Client\n---------------------------------\n\nThe `org.java_websocket.client.WebSocketClient` abstract class can connect to\nvalid WebSocket servers. The constructor expects a valid `ws://` URI to\nconnect to. Important events `onOpen`, `onClose`, `onMessage` and `onError`\nget fired throughout the life of the WebSocketClient, and must be implemented\nin **your** subclass.\n\nAn example for a WebSocketClient can be found in both the [wiki](https://github.com/TooTallNate/Java-WebSocket/wiki#client-example) and the [example](https://github.com/TooTallNate/Java-WebSocket/tree/master/src/main/example) folder.\n\nExamples\n-------------------\n\nYou can find a lot of examples [here](https://github.com/TooTallNate/Java-WebSocket/tree/master/src/main/example).\n\nWSS Support\n---------------------------------\nThis library supports wss.\nTo see how to use wss please take a look at the examples.<br>\n\nIf you do not have a valid **certificate** in place then you will have to create a self signed one.\nBrowsers will simply refuse the connection in case of a bad certificate and will not ask the user to accept it.\nSo the first step will be to make a browser to accept your self signed certificate. ( https://bugzilla.mozilla.org/show_bug.cgi?id=594502 ).<br>\nIf the websocket server url is `wss://localhost:8000` visit the url `https://localhost:8000` with your browser. The browser will recognize the handshake and allow you to accept the certificate.\n\nThe vm option `-Djavax.net.debug=all` can help to find out if there is a problem with the certificate.\n\nIt is currently not possible to accept ws and wss connections at the same time via the same websocket server instance.\n\nFor some reason Firefox does not allow multiple connections to the same wss server if the server uses a different port than the default port (443).\n\nIf you want to use `wss` on the android platform you should take a look at [this](https://github.com/TooTallNate/Java-WebSocket/wiki/FAQ:-Secure-WebSockets#wss-on-android).\n\nI ( @Davidiusdadi ) would be glad if you would give some feedback whether wss is working fine for you or not.\n\nMinimum Required JDK\n--------------------\n\n`Java-WebSocket` is known to work with:\n\n * Java 8 and higher\n\nOther JRE implementations may work as well, but haven't been tested.\n\nLicense\n-------\n\nEverything found in this repo is licensed under an MIT license. See\nthe `LICENSE` file for specifics.\n",
        "releases": [
            {
                "name": "Release 1.6.0",
                "date": "2024-12-15T14:58:24Z"
            },
            {
                "name": "Release 1.5.7",
                "date": "2024-07-08T21:33:38Z"
            },
            {
                "name": "Release 1.5.6",
                "date": "2024-02-06T21:38:10Z"
            },
            {
                "name": "Release 1.5.5",
                "date": "2023-12-18T22:19:46Z"
            },
            {
                "name": "Release 1.5.4",
                "date": "2023-07-20T20:27:40Z"
            },
            {
                "name": "Release 1.5.3",
                "date": "2022-04-09T18:06:43Z"
            },
            {
                "name": "Release 1.5.2",
                "date": "2021-04-05T15:46:32Z"
            },
            {
                "name": "Release 1.5.1",
                "date": "2020-05-10T20:27:59Z"
            },
            {
                "name": "Release 1.5.0",
                "date": "2020-05-07T05:33:13Z"
            },
            {
                "name": "Release 1.4.1",
                "date": "2020-03-12T21:23:00Z"
            },
            {
                "name": "Release 1.4.0",
                "date": "2019-02-19T21:03:08Z"
            },
            {
                "name": "Release 1.3.9",
                "date": "2018-08-05T19:14:24Z"
            },
            {
                "name": "Release 1.3.8",
                "date": "2018-03-05T19:06:03Z"
            },
            {
                "name": "Release 1.3.3",
                "date": "2017-04-26T09:25:14Z"
            },
            {
                "name": "Release 1.3.1",
                "date": "2017-03-27T07:36:34Z"
            },
            {
                "name": "Release 1.3.7",
                "date": "2017-12-11T17:12:01Z"
            },
            {
                "name": "Release 1.3.6",
                "date": "2017-11-09T18:17:41Z"
            },
            {
                "name": "Release 1.3.5",
                "date": "2017-10-13T18:00:53Z"
            },
            {
                "name": "Release 1.3.4",
                "date": "2017-06-06T18:11:39Z"
            }
        ]
    }
}