{
    "https://api.github.com/repos/bitemyapp/learnhaskell": {
        "forks": 551,
        "watchers": 7994,
        "stars": 7994,
        "languages": {
            "Makefile": 773
        },
        "commits": [
            "2023-03-06T19:28:18Z",
            "2022-12-12T19:50:00Z",
            "2022-06-30T16:44:44Z",
            "2022-01-26T15:51:12Z",
            "2022-01-26T15:50:36Z",
            "2022-01-26T15:42:25Z",
            "2022-01-25T17:35:54Z",
            "2021-10-25T18:11:20Z",
            "2021-09-29T05:14:09Z",
            "2021-09-04T18:55:07Z",
            "2021-09-01T19:31:35Z",
            "2021-03-21T19:23:20Z",
            "2021-01-07T15:05:31Z",
            "2020-06-05T20:27:04Z",
            "2020-06-01T20:21:34Z",
            "2019-09-02T20:56:13Z",
            "2019-08-30T06:41:52Z",
            "2019-06-06T15:57:46Z",
            "2019-06-06T10:52:56Z",
            "2019-03-01T16:46:03Z",
            "2019-03-01T16:18:37Z",
            "2019-01-16T00:04:45Z",
            "2019-01-15T23:57:36Z",
            "2019-01-15T23:40:16Z",
            "2019-01-12T22:43:46Z",
            "2019-01-12T19:24:05Z",
            "2019-01-11T04:26:26Z",
            "2019-01-10T23:24:36Z",
            "2019-01-10T23:13:47Z",
            "2018-10-10T19:38:05Z"
        ],
        "creation_date": "2014-05-19T19:43:26Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 260,
        "readme": "# How to learn Haskell\n\nThis is a recommended path for learning Haskell based on experience helping others. A list of recommendations from one of the authors of the [Haskell Book.](https://haskellbook.com)\n\n## For non-English speakers\n\n- [Auf Deutsch](guide-de.md)\n\n- [En Espa\u00f1ol](guide-es.md)\n\n- [En Fran\u00e7ais](guide-fr.md)\n\n- [Na Hrvatskom](guide-hr.md)\n\n- [Bahasa Indonesia](guide-id.md)\n\n- [In Italiano](guide-it.md)\n\n- [\u65e5\u672c\u8a9e](guide-ja.md)\n\n- [\ud55c\uad6d\uc5b4](guide-ko.md)\n\n- [Em Portugu\u00eas](guide-pt.md)\n\n- [\u00cen Rom\u00e2n\u0103](guide-ro.md)\n\n- [\u041f\u043e-\u0440\u0443\u0441\u0441\u043a\u0438](guide-ru.md)\n\n- [Srpski](guide-sr.md)\n\n- [Sa Tagalog](guide-tl.md)\n\n- [T\u00fcrk\u00e7e](guide-tr.md)\n\n- [\u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u043e\u044e](guide-ua.md)\n\n- [\u7b80\u4f53\u4e2d\u6587](guide-zh_CN.md)\n\n- [\u7e41\u9ad4\u4e2d\u6587](guide-zh_tw.md)\n\n#### _Don't sweat the stuff you don't understand immediately_. Keep moving!\n\n## Community\n\nOur IRC channel is `#haskell-beginners` on [Libera Chat](https://libera.chat/).\n\nIRC web client [here](https://web.libera.chat/).\n\nThe haskell [mailing lists](https://wiki.haskell.org/Mailing_lists).\n\n### Community Guidelines\n\nSee [the community guidelines](coc.md) to understand the conduct that is expected in the IRC channel. You'll get a warning if you're not obviously trolling, but be aware the channel is exclusively for those learning or teaching Haskell.\n\n# Installing Haskell\n\n## Use Stack to get going with Haskell\n\nGet [Stack](https://haskellstack.org) to get GHC installed and to build your projects.\n\nIf you don't know anything about Stack and would like an overview, check out this [comprehensive Stack video tutorial](https://www.youtube.com/watch?v=sRonIB8ZStw).\n\n## Also, DO NOT INSTALL HASKELL PLATFORM\n\nInstead of following the instructions on Haskell.org, get Stack.\n\n### Why not platform?\n\nhttps://mail.haskell.org/pipermail/haskell-community/2015-September/000014.html\n\n# How should I learn Haskell?\n\nThe core recommendation is to read the lectures and complete all exercises/homework for the Spring 13 version of cis1940 followed by the FP course. Both are linked below. Everything else can be considered optional and is mentioned so you know where to look.\n\n## Haskell Programming from First Principles.\n\n[@dmvianna](https://github.com/dmvianna) wanted me to let you know that the below are just the _free_ recommended resources. If you're willing to check out a book, we heartily recommend our own [Haskell Book!](https://haskellbook.com) If you can't afford the book for any reasons, please email us using the contact information at [our support page](https://haskellbook.com/support.html).\n\n### Haskell Book subsumes all of the primary resources recommended here\n\n## Yorgey's cis1940 course\n\n> _Do this first_ if aren't getting the Haskell Book, this is the best _free_ introduction to Haskell.\n\nAvailable [online](https://www.seas.upenn.edu/~cis1940/spring13/lectures.html).\n\n[Brent Yorgey](https://byorgey.wordpress.com)'s course is the best I've found so\nfar. This course is valuable as it will not only equip you to write basic\nHaskell but also help you to understand parser combinators.\n\nThe only reason you shouldn't start with cis1940 is if you are not a programmer\nor are an inexperienced one. If that's the case, start with\n[Thompson's book](https://www.haskellcraft.com/craft3e/Home.html) and transition\nto cis1940.\n\n---\n\n## Functional Programming course\n\n> This is the course we recommend doing after Yorgey's cis1940 course\n\nAvailable on github [here](https://github.com/bitemyapp/fp-course).\n\nThis will reinforce and give you experience directly implementing the\nabstractions introduced in cis1940, this is practice which is _critical_ to\nbecoming comfortable with everyday uses of Functor/Applicative/Monad/etc. in\nHaskell. Doing cis1940 and then the FP course represents the core\nrecommendation of my guide and is how we teach everyone Haskell.\n\n---\n\n## Supplementary course after cis1940 and the FP course\n\n> Provides more material on intermediate topics\n\ncs240h is available online:\n\n- [Spring 14](http://www.scs.stanford.edu/14sp-cs240h/)\n- [Winter 16](http://www.scs.stanford.edu/16wi-cs240h/)\n\nThis is [Bryan O'Sullivan](https://github.com/bos)'s online course from the\nclass he teaches at Stanford. If you don't know who he is, take a gander at half\nthe libraries any Haskell application ends up needing and his name is on it. Of\nparticular note if you've already done the Yorgey course are the modules on\nphantom types, information flow control, language extensions, concurrency,\npipes, and lenses.\n\n---\n\n# Resources for specific topics in Haskell\n\nThese resources are not vetted or tested with learners as cis1940 and FP course have been, but they're linked in [the topic listing](specific_topics.md) so you have ideas on where to begin. This includes things like intermediate/advanced concepts and subjects like tooling and text editors.\n\n## Dialogues\n\n> Hosted in this repository [here](dialogues.md).\n\nThese are actually pretty important and helpful. Look here for deep dives on a\nvariety of topics.\n",
        "releases": []
    }
}