{
    "https://api.github.com/repos/dennybritz/reinforcement-learning": {
        "forks": 6059,
        "watchers": 20837,
        "stars": 20837,
        "languages": {
            "Jupyter Notebook": 2210861,
            "Python": 68147
        },
        "commits": [
            "2022-09-20T23:57:31Z",
            "2022-09-20T08:46:18Z",
            "2022-09-19T17:19:46Z",
            "2019-11-09T04:22:06Z",
            "2019-11-08T03:26:53Z",
            "2019-10-02T01:10:14Z",
            "2019-10-01T15:13:40Z",
            "2019-10-01T15:04:03Z",
            "2019-06-24T03:33:36Z",
            "2019-06-24T03:32:43Z",
            "2019-06-11T07:58:21Z",
            "2019-04-03T15:13:42Z",
            "2019-04-02T21:15:57Z",
            "2019-03-29T17:17:22Z",
            "2019-03-13T10:54:15Z",
            "2019-03-13T08:55:50Z",
            "2019-03-02T11:41:49Z",
            "2019-03-02T11:34:15Z",
            "2019-03-01T02:31:13Z",
            "2019-02-27T16:33:02Z",
            "2018-12-26T01:27:16Z",
            "2018-12-25T16:51:57Z",
            "2018-12-25T16:50:53Z",
            "2018-12-25T16:48:02Z",
            "2018-12-25T16:42:39Z",
            "2018-12-25T16:42:14Z",
            "2018-12-25T01:27:17Z",
            "2018-12-24T18:56:34Z",
            "2018-09-21T01:28:35Z",
            "2018-09-20T22:36:26Z"
        ],
        "creation_date": "2016-08-24T17:02:41Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 866,
        "readme": "### Overview\n\nThis repository provides code, exercises and solutions for popular Reinforcement Learning algorithms. These are meant to serve as a learning tool to complement the theoretical materials from\n\n- [Reinforcement Learning: An Introduction (2nd Edition)](http://incompleteideas.net/book/RLbook2018.pdf)\n- [David Silver's Reinforcement Learning Course](http://www0.cs.ucl.ac.uk/staff/d.silver/web/Teaching.html)\n\nEach folder in corresponds to one or more chapters of the above textbook and/or course. In addition to exercises and solution, each folder also contains a list of learning goals, a brief concept summary, and links to the relevant readings.\n\nAll code is written in Python 3 and uses RL environments from [OpenAI Gym](https://gym.openai.com/). Advanced techniques use [Tensorflow](https://www.tensorflow.org/) for neural network implementations.\n\n\n### Table of Contents\n\n- [Introduction to RL problems & OpenAI Gym](Introduction/)\n- [MDPs and Bellman Equations](MDP/)\n- [Dynamic Programming: Model-Based RL, Policy Iteration and Value Iteration](DP/)\n- [Monte Carlo Model-Free Prediction & Control](MC/)\n- [Temporal Difference Model-Free Prediction & Control](TD/)\n- [Function Approximation](FA/)\n- [Deep Q Learning](DQN/) (WIP)\n- [Policy Gradient Methods](PolicyGradient/) (WIP)\n- Learning and Planning (WIP)\n- Exploration and Exploitation (WIP)\n\n\n### List of Implemented Algorithms\n\n- [Dynamic Programming Policy Evaluation](DP/Policy%20Evaluation%20Solution.ipynb)\n- [Dynamic Programming Policy Iteration](DP/Policy%20Iteration%20Solution.ipynb)\n- [Dynamic Programming Value Iteration](DP/Value%20Iteration%20Solution.ipynb)\n- [Monte Carlo Prediction](MC/MC%20Prediction%20Solution.ipynb)\n- [Monte Carlo Control with Epsilon-Greedy Policies](MC/MC%20Control%20with%20Epsilon-Greedy%20Policies%20Solution.ipynb)\n- [Monte Carlo Off-Policy Control with Importance Sampling](MC/Off-Policy%20MC%20Control%20with%20Weighted%20Importance%20Sampling%20Solution.ipynb)\n- [SARSA (On Policy TD Learning)](TD/SARSA%20Solution.ipynb)\n- [Q-Learning (Off Policy TD Learning)](TD/Q-Learning%20Solution.ipynb)\n- [Q-Learning with Linear Function Approximation](FA/Q-Learning%20with%20Value%20Function%20Approximation%20Solution.ipynb)\n- [Deep Q-Learning for Atari Games](DQN/Deep%20Q%20Learning%20Solution.ipynb)\n- [Double Deep-Q Learning for Atari Games](DQN/Double%20DQN%20Solution.ipynb)\n- Deep Q-Learning with Prioritized Experience Replay (WIP)\n- [Policy Gradient: REINFORCE with Baseline](PolicyGradient/CliffWalk%20REINFORCE%20with%20Baseline%20Solution.ipynb)\n- [Policy Gradient: Actor Critic with Baseline](PolicyGradient/CliffWalk%20Actor%20Critic%20Solution.ipynb)\n- [Policy Gradient: Actor Critic with Baseline for Continuous Action Spaces](PolicyGradient/Continuous%20MountainCar%20Actor%20Critic%20Solution.ipynb)\n- Deterministic Policy Gradients for Continuous Action Spaces (WIP)\n- Deep Deterministic Policy Gradients (DDPG) (WIP)\n- [Asynchronous Advantage Actor Critic (A3C)](PolicyGradient/a3c)\n\n\n### Resources\n\nTextbooks:\n\n- [Reinforcement Learning: An Introduction (2nd Edition)](http://incompleteideas.net/book/RLbook2018.pdf)\n\nClasses:\n\n- [David Silver's Reinforcement Learning Course (UCL, 2015)](http://www0.cs.ucl.ac.uk/staff/d.silver/web/Teaching.html)\n- [CS294 - Deep Reinforcement Learning (Berkeley, Fall 2015)](http://rll.berkeley.edu/deeprlcourse/)\n- [CS 8803 - Reinforcement Learning (Georgia Tech)](https://www.udacity.com/course/reinforcement-learning--ud600)\n- [CS885 - Reinforcement Learning (UWaterloo), Spring 2018](https://cs.uwaterloo.ca/~ppoupart/teaching/cs885-spring18/)\n- [CS294-112 - Deep Reinforcement Learning (UC Berkeley)](http://rail.eecs.berkeley.edu/deeprlcourse/)\n\nTalks/Tutorials:\n\n- [Introduction to Reinforcement Learning (Joelle Pineau @ Deep Learning Summer School 2016)](http://videolectures.net/deeplearning2016_pineau_reinforcement_learning/)\n- [Deep Reinforcement Learning (Pieter Abbeel @ Deep Learning Summer School 2016)](http://videolectures.net/deeplearning2016_abbeel_deep_reinforcement/)\n- [Deep Reinforcement Learning ICML 2016 Tutorial (David Silver)](http://techtalks.tv/talks/deep-reinforcement-learning/62360/)\n- [Tutorial: Introduction to Reinforcement Learning with Function Approximation](https://www.youtube.com/watch?v=ggqnxyjaKe4)\n- [John Schulman - Deep Reinforcement Learning (4 Lectures)](https://www.youtube.com/playlist?list=PLjKEIQlKCTZYN3CYBlj8r58SbNorobqcp)\n- [Deep Reinforcement Learning Slides @ NIPS 2016](http://people.eecs.berkeley.edu/~pabbeel/nips-tutorial-policy-optimization-Schulman-Abbeel.pdf)\n- [OpenAI Spinning Up](https://spinningup.openai.com/en/latest/user/introduction.html)\n- [Advanced Deep Learning & Reinforcement Learning (UCL 2018, DeepMind)](https://www.youtube.com/playlist?list=PLqYmG7hTraZDNJre23vqCGIVpfZ_K2RZs)\n-[Deep RL Bootcamp](https://sites.google.com/view/deep-rl-bootcamp/lectures)\n\nOther Projects:\n\n- [carpedm20/deep-rl-tensorflow](https://github.com/carpedm20/deep-rl-tensorflow)\n- [matthiasplappert/keras-rl](https://github.com/matthiasplappert/keras-rl)\n\nSelected Papers:\n\n- [Human-Level Control through Deep Reinforcement Learning (2015-02)](http://www.readcube.com/articles/10.1038/nature14236)\n- [Deep Reinforcement Learning with Double Q-learning (2015-09)](http://arxiv.org/abs/1509.06461)\n- [Continuous control with deep reinforcement learning (2015-09)](https://arxiv.org/abs/1509.02971)\n- [Prioritized Experience Replay (2015-11)](http://arxiv.org/abs/1511.05952)\n- [Dueling Network Architectures for Deep Reinforcement Learning (2015-11)](http://arxiv.org/abs/1511.06581)\n- [Asynchronous Methods for Deep Reinforcement Learning (2016-02)](http://arxiv.org/abs/1602.01783)\n- [Deep Reinforcement Learning from Self-Play in Imperfect-Information Games (2016-03)](http://arxiv.org/abs/1603.01121)\n- [Mastering the game of Go with deep neural networks and tree search](https://gogameguru.com/i/2016/03/deepmind-mastering-go.pdf)\n",
        "releases": []
    }
}