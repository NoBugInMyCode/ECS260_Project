{
    "https://api.github.com/repos/brianegan/flutter_architecture_samples": {
        "forks": 1720,
        "watchers": 8787,
        "stars": 8787,
        "languages": {
            "Dart": 1011365,
            "Ruby": 51555,
            "HTML": 13215,
            "Kotlin": 7091,
            "Shell": 6917,
            "Swift": 6868,
            "Objective-C": 631,
            "Makefile": 597
        },
        "commits": [
            "2020-03-04T11:19:10Z",
            "2020-03-04T03:17:28Z",
            "2020-02-20T15:54:34Z",
            "2020-02-20T15:54:15Z",
            "2020-02-20T15:38:12Z",
            "2020-02-20T15:15:50Z",
            "2020-02-20T15:01:57Z",
            "2020-02-20T14:36:55Z",
            "2020-02-20T13:51:18Z",
            "2020-02-20T13:45:52Z",
            "2020-02-20T11:43:16Z",
            "2020-02-16T00:57:48Z",
            "2020-02-15T10:03:06Z",
            "2020-02-15T08:27:09Z",
            "2020-02-10T15:07:17Z",
            "2020-02-10T15:06:17Z",
            "2020-02-10T15:05:06Z",
            "2020-02-10T14:53:29Z",
            "2020-02-10T11:38:23Z",
            "2020-01-29T11:16:27Z",
            "2020-01-14T13:29:41Z",
            "2020-01-14T12:59:37Z",
            "2020-01-14T12:40:05Z",
            "2020-01-13T20:47:14Z",
            "2020-01-13T20:47:01Z",
            "2020-01-13T17:36:15Z",
            "2020-01-13T16:07:46Z",
            "2020-01-13T16:06:47Z",
            "2020-01-13T16:06:03Z",
            "2020-01-13T15:41:37Z"
        ],
        "creation_date": "2017-11-25T19:08:14Z",
        "contributors": 30,
        "topics": [
            "dart",
            "flutter",
            "redux"
        ],
        "subscribers": 272,
        "readme": "# flutter_architecture_samples\n\n[![Build Status](https://travis-ci.org/brianegan/flutter_architecture_samples.svg?branch=master)](https://travis-ci.org/brianegan/flutter_architecture_samples)\n[![Build Status](https://api.cirrus-ci.com/github/brianegan/flutter_architecture_samples.svg)](https://cirrus-ci.com/github/brianegan/flutter_architecture_samples)\n[![codecov](https://codecov.io/gh/brianegan/flutter_architecture_samples/branch/master/graph/badge.svg)](https://codecov.io/gh/brianegan/flutter_architecture_samples)\n\n<img align=\"right\" src=\"assets/todo-list.png\" alt=\"List of Todos Screen\">\n\n[TodoMVC](http://todomvc.com) for Flutter!\n\nFlutter provides a lot of flexibility in deciding how to organize and architect\nyour apps. While this freedom is very valuable, it can also lead to apps with\nlarge classes, inconsistent naming schemes, as well as mismatching or missing\narchitectures. These types of issues can make testing, maintaining and extending\nyour apps difficult.\n\nThe Flutter Architecture Samples project demonstrates strategies to help solve\nor avoid these common problems. This project implements the same app using\ndifferent architectural concepts and tools.\n\nYou can use the samples in this project as a learning reference, or as a\nstarting point for creating your own apps. The focus of this project is on\ndemonstrating how to structure your code, design your architecture, and the\neventual impact of adopting these patterns on testing and maintaining your app.\nYou can use the techniques demonstrated here in many different ways to build\napps. Your own particular priorities will impact how you implement the concepts\nin these projects, so you should not consider these samples to be canonical\nexamples. To ensure the focus is kept on the aims described above, the app uses\na simple UI.\n\n### Current Samples\n\n- [Vanilla Lifting State Up Example](vanilla) ([Web Demo](https://fas_vanilla.codemagic.app)) - Uses the tools Flutter provides out of the box to manage app state.\n- [InheritedWidget Example](inherited_widget) ([Web Demo](https://fas_inherited_widget.codemagic.app)) - Uses an InheritedWidget to pass app state down the widget hierarchy.\n- [Change Notifier + Provider Example](change_notifier_provider) ([Web Demo](https://fas_change_notifier_provider.codemagic.app)) - Uses the [ChangeNotifier](https://api.flutter.dev/flutter/foundation/ChangeNotifier-class.html) class from Flutter with [provider](https://pub.dev/packages/provider) package now recommended by the Flutter team.\n- [BLoC Example](bloc_flutter) ([Web Demo](https://fas_bloc_flutter.codemagic.app)) - An implementation of the BLoC pattern, which uses Sinks for Inputs and Streams for Outputs\n- [Bloc Library Example](bloc_library) ([Web Demo](https://fas_bloc_library.codemagic.app)) - Uses the [bloc](https://pub.dartlang.org/packages/bloc) and [flutter_bloc](https://pub.dartlang.org/packages/flutter_bloc) libraries to manage app state and update Widgets.\n- [MobX Example](mobx) ([Web Demo](https://fas_mobx.codemagic.app)) - Uses the [MobX](https://pub.dev/packages/mobx) library to manage app state and update widgets using `Observables`, `Actions` and `Reactions`.\n- [Redux Example](redux) ([Web Demo](https://fas_redux.codemagic.app)) - Uses the [Redux](https://pub.dartlang.org/packages/redux) library to manage app state and update Widgets\n- [\"Simple\" BLoC Example](simple_bloc_flutter) ([Web Demo](https://fas_simple_bloc.codemagic.app)) - Similar to the BLoC pattern, but uses Functions for Inputs and Streams for Outputs. Results in far less code compared to standard BLoC.\n- [MVI Example](mvi_flutter) ([Web Demo](https://fas_mvi.codemagic.app)) - Uses the concepts from Cycle.JS and applies them to Flutter.\n- [states_rebuilder Example](states_rebuilder) ([Web Demo](https://fas_states_rebuilder.codemagic.app)) - Uses the [states_rebuilder](https://pub.dev/packages/states_rebuilder) library to manage app state and update Widgets.\n- [built_redux Example](built_redux) - Uses the [built_redux](https://pub.dartlang.org/packages/built_redux) library to enforce immutability and manage app state\n- [scoped_model Example](scoped_model) - Uses the [scoped_model](https://pub.dartlang.org/packages/scoped_model) library to hold app state and notify Widgets of Updates\n- [Firestore Redux Example](firestore_redux) - Uses the [Redux](https://pub.dartlang.org/packages/redux) library to manage app state and update Widgets and\n  adds [Cloud_Firestore](https://firebase.google.com/docs/firestore/) as the Todos database.\n- [MVU Example](mvu) - Uses the [dartea](https://pub.dartlang.org/packages/dartea) library to manage app state and update Widgets.\n- [MVC Example](mvc) - Uses the [MVC](https://pub.dartlang.org/packages/mvc_pattern) library to implement the traditional MVC design pattern.\n- [Frideos Example](frideos_library) - Uses the [Frideos](https://pub.dartlang.org/packages/frideos) library to manage app state and update widgets using streams.\n\n### Supporting Code\n\n- [integration_tests](integration_tests) - Demonstrates how to write\nselenium-style integration (aka end to end) tests using the Page Object Model.\nThis test suite is run against all samples.\n- [todos_repository_core](todos_repository_core) - Defines the core abstract\nclasses for loading and saving data so that storage can be implemented in\nvarious ways, such as file storage or firebase for mobile projects, or\nwindow.localStorage for web projects.\n- [todos_repository_local_storage](todos_repository_local_storage) - Implements\nthe todos repository using the file system, window.localStorage, and\nSharedPreferences as the data source.\n- [firebase_flutter_repository](firebase_flutter_repository) - Implements \nthe todos repository using firestore as the data source.\n- [firebase_rtdb_flutter_repository](firebase_rtdb_flutter_repository) -\nImplements the todos repository using firebase real-time database as the data\nsource.\n\n### Running the samples\n\n#### iOS / Android\n\n```\ncd <sample_directory>\nflutter run \n```\n\n#### Web\n\nMake sure you're on Flutter version \"Flutter 1.12.13+hotfix.6 \u2022 channel beta\" or\nnewer. Not all samples support web at this time, so please check the sample\ndirectory for a `lib/main_web.dart` file.\n\n```\ncd <sample_directory>\nflutter run -d chrome -t lib/main_web.dart\n```\n\n### Why a todo app?\n\nThe app in this project aims to be simple enough that you can understand it\nquickly, but complex enough to showcase difficult design decisions and testing\nscenarios. For more information, see the [app's specification](app_spec.md).\n\n### Be excellent to each other\n\nThis Repo is meant as a discussion platform for various architectures. Let us\ndebate these ideas vigorously, but let us be excellent to each other in the\nprocess!\n\nWhile healthy debate and contributions are very welcome, trolls are not. Read\nthe [code of conduct](code-of-conduct.md) for detailed information.\n\n### Contributing\n\nFeel free to join in the discussion, file issues, and we'd love to have more\nsamples added! Please read the [CONTRIBUTING](CONTRIBUTING.md) file for guidance\n:)\n\n### License\n\nAll code in this repo is MIT licensed.\n\n## Attribution\n\nAll of these ideas and even some of the language are directly influenced by two\nprojects:\n\n- [TodoMVC](http://todomvc.com) - A Todo App implemented in various JS frameworks\n- [Android Architecture Blueprints](https://github.com/googlesamples/android-architecture) - A similar concept, but for Android! The UI and app spec was highly inspired by their example.\n\n## Contributors\n\n- [Brian Egan](https://github.com/brianegan)\n- [Maurice McCabe](https://github.com/mmcc007)\n- [David Marne](https://github.com/davidmarne)\n- [Pascal Welsch](https://github.com/passsy)\n- [Larry King](https://github.com/kinggolf)\n- [Frank Harper](https://github.com/franklinharper)\n- [Pavel Shilyagov](https://github.com/p69)\n- [Leo Cavalcante](https://github.com/leocavalcante)\n- [Greg Perry](https://github.com/AndriousSolutions)\n- [Felix Angelov](https://github.com/felangel)\n- [Francesco Mineo](https://github.com/frideosapps)\n- [Pavan Podila](https://github.com/pavanpodila)\n- [Kushagra Saxena](https://github.com/kush3107)\n- [Shakib Hossain](https://github.com/shakib609)\n- [Mellati Fatah](https://github.com/GIfatahTH)\n\nI'd like to thank all of the folks who have helped write new samples, improve\nthe current implementations, and added documentation! You're amazing! :)\n",
        "releases": []
    }
}