{
    "https://api.github.com/repos/JetBrains/intellij-community": {
        "forks": 5326,
        "watchers": 17602,
        "stars": 17602,
        "languages": {
            "Java": 222544650,
            "Kotlin": 122364837,
            "Python": 32089451,
            "C": 9931026,
            "HTML": 6305311,
            "JavaScript": 3064222,
            "Starlark": 2545734,
            "C++": 545659,
            "CSS": 423502,
            "TeX": 323084,
            "Shell": 255310,
            "Lex": 219791,
            "Rust": 167048,
            "Cython": 147783,
            "Go": 142009,
            "XSLT": 113557,
            "Objective-C": 105661,
            "Groovy": 97752,
            "NSIS": 74714,
            "Mermaid": 50001,
            "Prolog": 40010,
            "SCSS": 33706,
            "Roff": 29952,
            "AMPL": 25989,
            "Batchfile": 22887,
            "Makefile": 16339,
            "PowerShell": 15085,
            "CMake": 13988,
            "TypeScript": 11278,
            "Thrift": 7691,
            "Jupyter Notebook": 7306,
            "Dockerfile": 7097,
            "Swift": 5199,
            "PHP": 3987,
            "FIRRTL": 3506,
            "Raku": 3073,
            "GLSL": 2166,
            "Perl": 2077,
            "Ruby": 1957,
            "Handlebars": 1858,
            "C#": 1773,
            "ColdFusion": 1623,
            "Elixir": 1537,
            "CoffeeScript": 1385,
            "HCL": 1148,
            "Rich Text Format": 829,
            "Vim Snippet": 337,
            "AspectJ": 182,
            "Vue": 88,
            "F#": 60,
            "HLSL": 57,
            "Erlang": 10
        },
        "commits": [
            "2025-01-22T06:14:05Z",
            "2025-01-22T01:49:07Z",
            "2025-01-21T13:44:03Z",
            "2025-01-21T23:49:22Z",
            "2025-01-22T02:47:03Z",
            "2025-01-22T01:24:46Z",
            "2025-01-22T00:47:37Z",
            "2025-01-21T22:10:31Z",
            "2025-01-21T21:33:10Z",
            "2025-01-21T17:43:43Z",
            "2025-01-21T16:44:48Z",
            "2025-01-21T10:54:28Z",
            "2025-01-21T10:19:03Z",
            "2025-01-17T10:33:10Z",
            "2025-01-21T21:16:26Z",
            "2025-01-21T21:12:26Z",
            "2025-01-21T21:02:15Z",
            "2025-01-21T20:44:35Z",
            "2025-01-21T20:40:17Z",
            "2025-01-20T16:59:33Z",
            "2025-01-10T17:35:03Z",
            "2025-01-21T20:06:38Z",
            "2025-01-21T19:42:41Z",
            "2025-01-20T14:53:56Z",
            "2025-01-20T10:00:10Z",
            "2025-01-21T09:11:07Z",
            "2025-01-21T13:13:40Z",
            "2025-01-21T13:11:28Z",
            "2025-01-21T09:57:53Z",
            "2025-01-21T17:30:07Z"
        ],
        "creation_date": "2011-09-30T13:33:05Z",
        "contributors": 30,
        "topics": [
            "code-editor",
            "ide",
            "intellij",
            "intellij-community",
            "intellij-platform"
        ],
        "subscribers": 543,
        "readme": "[![official JetBrains project](http://jb.gg/badges/official.svg)](https://github.com/JetBrains/.github/blob/main/profile/README.md) [![Build status](https://github.com/JetBrains/intellij-community/workflows/IntelliJ%20IDEA/badge.svg)](https://github.com/JetBrains/intellij-community/actions/workflows/IntelliJ_IDEA.yml)\n\n# IntelliJ IDEA Community Edition \n\nThese instructions will help you build IntelliJ IDEA Community Edition from source code, which is the basis for IntelliJ Platform development.\nThe following conventions will be used to refer to directories on your machine:\n* `<USER_HOME>` is your home directory.\n* `<IDEA_HOME>` is the root directory for the IntelliJ source code.\n\n## Getting IntelliJ IDEA Community Edition Source Code\nIntelliJ IDEA Community Edition source code is available from `github.com/JetBrains/intellij-community` by either cloning or\ndownloading a zip file (based on a branch) into `<IDEA_HOME>`. The default is the *master* branch. \n\nThe master branch contains the source code which will be used to create the next major version of IntelliJ IDEA. The branch names\nand build numbers for older releases of IntelliJ IDEA can be found on the page of\n[Build Number Ranges](https://plugins.jetbrains.com/docs/intellij/build-number-ranges.html).\n\nThese Git operations can also be done through the [IntelliJ IDEA user interface](https://www.jetbrains.com/help/idea/using-git-integration.html).\n\n_**Speed Tip:**_ If the complete repository history isn't needed, then using a shallow clone (`git clone --depth 1`) will save significant time.\n\n_**On Windows:**_ Two git options are required to check out sources on Windows. Since it's a common source of Git issues on Windows anyway, those options could be set globally (execute those commands before cloning any of intellij-community/android repositories):\n\n* `git config --global core.longpaths true`\n* `git config --global core.autocrlf input`\n\nIntelliJ IDEA Community Edition requires additional Android modules from separate Git repositories. To clone these repositories,\nrun one of the `getPlugins` scripts located in the `<IDEA_HOME>` directory. Use the `--shallow` argument if the complete repository history isn't needed. \nThese scripts clone their respective *master* branches. Make sure you are inside the `<IDEA_HOME>` directory when running those scripts, so the modules get cloned inside the `<IDEA_HOME>` directory.\n* `getPlugins.sh` for Linux or macOS.\n* `getPlugins.bat` for Windows.\n\n_**Note:**_ Always `git checkout` the `intellij-community` and `android` Git repositories to the same branches/tags. \n\n## Building IntelliJ Community Edition\nVersion 2023.2 or newer of IntelliJ IDEA Community Edition or IntelliJ IDEA Ultimate Edition is required to build and develop\nfor the IntelliJ Platform.\n\n### Opening the IntelliJ Source Code for Build\nUsing IntelliJ IDEA **File | Open**, select the `<IDEA_HOME>` directory. \n* If IntelliJ IDEA displays an error about a missing or out of date required plugin (e.g. Kotlin),\n  [enable, upgrade, or install that plugin](https://www.jetbrains.com/help/idea/managing-plugins.html) and restart IntelliJ IDEA.\n\n### IntelliJ Build Configuration\n1. It's recommended to use JetBrains Runtime 17 to compile the project. \n   When you invoke **Build Project** for the first time, IntelliJ IDEA should suggest downloading it automatically.\n2. If the _Maven_ plugin is disabled, [add the path variable](https://www.jetbrains.com/help/idea/absolute-path-variables.html)\n   \"**MAVEN_REPOSITORY**\" pointing to `<USER_HOME>/.m2/repository` directory.\n3. Make sure you have at least 8GB of RAM on your computer. With the bare minimum of RAM, disable \"Compile independent modules in parallel\"\n   option in [the compiler settings](https://www.jetbrains.com/help/idea/specifying-compilation-settings.html). With notably more memory\n   available, increase \"User-local build process heap size\" to 3000 - that will greatly reduce compilation time.\n\nNote that it is important to use the variant of JetBrains Runtime **without JCEF**.\nSo, if for some reason `jbr-17` SDK points to an installation of JetBrains Runtime with JCEF, you need to change it: \nensure that IntelliJ IDEA is running in internal mode (by adding `idea.is.internal=true` to `idea.properties` file), navigate to `jbr-17` \nitem in Project Structure | SDKs, click on 'Browse' button, choose 'Download...' item and select version 17 and vendor 'JetBrains Runtime'.\n\n### Building the IntelliJ Application Source Code\nTo build IntelliJ IDEA Community Edition from source, choose **Build | Build Project** from the main menu.\n\nTo build installation packages, run the `installers.cmd` command in `<IDEA_HOME>` directory. `installers.cmd` will work on both Windows and Unix systems.\n\nOptions to build installers are passed as system properties to `installers.cmd` command.\nYou may find the list of available properties in [BuildOptions.kt](platform/build-scripts/src/org/jetbrains/intellij/build/BuildOptions.kt)\n\nExamples (`./` should be added only for Linux/macOS):\n * Build installers only for current operating system: `./installers.cmd -Dintellij.build.target.os=current`\n * Build source code _incrementally_ (do not build what was already built before): `./installers.cmd -Dintellij.build.incremental.compilation=true`\n\n`installers.cmd` is used just to run [OpenSourceCommunityInstallersBuildTarget](build/src/OpenSourceCommunityInstallersBuildTarget.kt) from the command line.\nYou may call it directly from IDEA, see run configuration `Build IDEA Community Installers (current OS)` for an example.\n\n#### Dockerized Build Environment\nTo build installation packages inside a Docker container with preinstalled dependencies and tools, run the following command in `<IDEA_HOME>` directory (on Windows, use PowerShell):\n`docker run --rm -it --user \"$(id -u)\" --volume \"${PWD}:/community\" \"$(docker build --quiet . --target intellij_idea)\"`\n\n> Please remember to specify the `--user \"$(id -u)\"` argument for the container's user to match the host's user. \n> This is required not to affect the permissions of the checked-out repository, the build output and the mounted Maven cache, if any.\n\nTo reuse the existing Maven cache from the host system, add the following option to `docker run` command:\n`--volume \"$HOME/.m2:/home/ide_builder/.m2\"`\n\n## Running IntelliJ IDEA\nTo run the IntelliJ IDEA built from source, choose **Run | Run** from the main menu. This will use the preconfigured run configuration \"**IDEA**\".\n\nTo run tests on the build, apply these setting to the **Run | Edit Configurations... | Templates | JUnit** configuration tab:\n  * Working dir: `<IDEA_HOME>/bin`\n  * VM options: \n    * `-ea` \n \nYou can find other helpful information at [https://www.jetbrains.com/opensource/idea](https://www.jetbrains.com/opensource/idea).\nThe \"Contribute Code\" section of that site describes how you can contribute to IntelliJ IDEA.\n\n## Running IntelliJ IDEA on CI/CD environment\n\nTo run tests outside of IntelliJ IDEA, run the `tests.cmd` command in `<IDEA_HOME>` directory. `tests.cmd` will work on both Windows and Unix systems.\n\nOptions to run tests are passed as system properties to `tests.cmd` command.\nYou may find the list of available properties in [TestingOptions.kt](platform/build-scripts/src/org/jetbrains/intellij/build/TestingOptions.kt)\n\nExamples (`./` should be added only for Linux/macOS):\n* Build source code _incrementally_ (do not build what was already built before): `./tests.cmd -Dintellij.build.incremental.compilation=true`\n* Run a specific test: `./tests.cmd -Dintellij.build.test.patterns=com.intellij.util.ArrayUtilTest`\n\n`tests.cmd` is used just to run [CommunityRunTestsBuildTarget](build/src/CommunityRunTestsBuildTarget.kt) from the command line.\nYou may call it directly from IDEA, see run configuration `tests in community` for an example.\n",
        "releases": []
    }
}