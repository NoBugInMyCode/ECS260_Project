{
    "https://api.github.com/repos/x64dbg/x64dbg": {
        "forks": 2482,
        "watchers": 45248,
        "stars": 45248,
        "languages": {
            "C++": 4704138,
            "C": 859305,
            "CSS": 25051,
            "QMake": 12552,
            "Batchfile": 9999,
            "CMake": 3726,
            "Assembly": 1772
        },
        "commits": [
            "2025-01-21T21:12:36Z",
            "2024-08-05T13:54:28Z",
            "2025-01-21T20:45:35Z",
            "2025-01-17T11:38:58Z",
            "2025-01-17T11:37:34Z",
            "2025-01-17T11:37:15Z",
            "2025-01-06T21:00:08Z",
            "2025-01-06T20:57:19Z",
            "2025-01-06T20:05:09Z",
            "2024-12-21T15:58:19Z",
            "2024-12-21T15:56:53Z",
            "2024-12-16T21:09:58Z",
            "2024-12-13T01:25:32Z",
            "2024-12-10T03:24:00Z",
            "2024-12-09T06:07:17Z",
            "2024-12-01T14:10:50Z",
            "2024-12-01T14:11:49Z",
            "2024-12-01T13:59:41Z",
            "2024-12-01T13:59:21Z",
            "2024-11-29T13:31:02Z",
            "2024-11-29T13:07:26Z",
            "2024-11-29T12:57:43Z",
            "2024-11-27T17:47:11Z",
            "2024-10-18T17:03:52Z",
            "2024-10-18T12:30:25Z",
            "2024-10-07T20:51:54Z",
            "2024-10-07T20:35:51Z",
            "2024-10-07T20:35:09Z",
            "2024-10-07T20:34:37Z",
            "2024-10-07T19:30:11Z"
        ],
        "creation_date": "2015-04-11T20:48:23Z",
        "contributors": 30,
        "topics": [
            "binary-analysis",
            "ctf",
            "cybersecurity",
            "debugger",
            "debugging",
            "disassembler",
            "dynamic-analysis",
            "exploit-development",
            "hacking",
            "malware-analysis",
            "offensive-security",
            "oscp",
            "program-analysis",
            "reverse-engineering",
            "security",
            "security-tools",
            "windows",
            "x64",
            "x86",
            "x86-64"
        ],
        "subscribers": 2728,
        "readme": "# x64dbg\r\n\r\n<img width=\"100\" src=\"https://github.com/x64dbg/x64dbg/raw/development/src/bug_black.png\"/>\r\n\r\n[![Build status](https://ci.appveyor.com/api/projects/status/h1j489qa1mx67e0h?svg=true)](https://ci.appveyor.com/project/mrexodia/x64dbg) [![Crowdin](https://d322cqt584bo4o.cloudfront.net/x64dbg/localized.svg)](https://translate.x64dbg.com) [![Download x64dbg](https://img.shields.io/sourceforge/dm/x64dbg.svg)](https://sourceforge.net/projects/x64dbg/files/latest/download)\r\n\r\n[![Discord](https://img.shields.io/badge/chat-on%20Discord-green.svg)](https://invite.gg/x64dbg) [![Telegram](https://img.shields.io/badge/chat-%20on%20Telegram-blue.svg)](https://telegram.me/x64dbg) [![Gitter](https://img.shields.io/badge/chat-on%20Gitter-lightseagreen.svg)](https://gitter.im/x64dbg/x64dbg) [![Matrix](https://img.shields.io/badge/chat-on%20Matrix-yellowgreen.svg)](https://riot.im/app/#/room/#x64dbg:matrix.org)\r\n\r\nAn open-source binary debugger for Windows, aimed at malware analysis and reverse engineering of executables you do not have the source code for. There are many features available and a comprehensive [plugin system](https://plugins.x64dbg.com) to add your own. You can find more information on the [blog](https://x64dbg.com/blog)!\r\n\r\n## Screenshots\r\n\r\n![main interface (light)](.github/screenshots/cpu-light.png)\r\n\r\n![main interface (dark)](.github/screenshots/cpu-dark.png)\r\n\r\n| ![graph](.github/screenshots/graph-light.png) | ![memory map](.github/screenshots/memory-map-light.png) |\r\n| :--: | :--: |\r\n\r\n## Installation & Usage\r\n\r\n1. Download a snapshot from [GitHub](https://github.com/x64dbg/x64dbg/releases), [SourceForge](https://sourceforge.net/projects/x64dbg/files/snapshots) or [OSDN](https://osdn.net/projects/x64dbg) and extract it in a location your user has write access to.\r\n2. _Optionally_ use `x96dbg.exe` to register a shell extension and add shortcuts to your desktop.\r\n3. You can now run `x32\\x32dbg.exe` if you want to debug a 32-bit executable or `x64\\x64dbg.exe` to debug a 64-bit executable! If you are unsure you can always run `x96dbg.exe` and choose your architecture there.\r\n\r\nYou can also [compile](https://github.com/x64dbg/x64dbg/wiki/Compiling-the-whole-project) x64dbg yourself with a few easy steps!\r\n\r\n## Sponsors\r\n\r\n[![](.github/sponsors/malcore.png)](https://sponsors.x64dbg.com/malcore)\r\n\r\n<br>\r\n\r\n[![](.github/sponsors/telekom.svg)](https://sponsors.x64dbg.com/telekom)\r\n\r\n## Contributing\r\n\r\nThis is a community effort and we accept pull requests! See the [CONTRIBUTING](.github/CONTRIBUTING.md) document for more information. If you have any questions you can always [contact us](https://x64dbg.com/#contact) or open an [issue](https://github.com/x64dbg/x64dbg/issues). You can take a look at the [good first issues](https://easy.x64dbg.com/) to get started.\r\n\r\n## Credits\r\n\r\n- Debugger core by [TitanEngine Community Edition](https://github.com/x64dbg/TitanEngine)\r\n- Disassembly powered by [Zydis](https://zydis.re)\r\n- Assembly powered by [XEDParse](https://github.com/x64dbg/XEDParse) and [asmjit](https://github.com/asmjit)\r\n- Import reconstruction powered by [Scylla](https://github.com/NtQuery/Scylla)\r\n- JSON powered by [Jansson](https://www.digip.org/jansson)\r\n- Database compression powered by [lz4](https://bitbucket.org/mrexodia/lz4)\r\n- Bug icon by [VisualPharm](https://www.visualpharm.com)\r\n- Interface icons by [Fugue](https://p.yusukekamiyamane.com)\r\n- Website by [tr4ceflow](https://tr4ceflow.com)\r\n\r\n## Developers\r\n\r\n- [mrexodia](https://mrexodia.github.io)\r\n- Sigma\r\n- [tr4ceflow](https://blog.tr4ceflow.com)\r\n- [Dreg](https://www.fr33project.org)\r\n- [Nukem](https://github.com/Nukem9)\r\n- [Herz3h](https://github.com/Herz3h)\r\n- [torusrxxx](https://github.com/torusrxxx)\r\n\r\n## Code contributions\r\n\r\nYou can find an exhaustive list of GitHub contributors [here](https://github.com/x64dbg/x64dbg/graphs/contributors).\r\n\r\n## Special Thanks\r\n\r\n- Sigma for developing the initial GUI\r\n- All the donators!\r\n- Everybody adding issues!\r\n- People I forgot to add to this list\r\n- [Writers of the blog](https://x64dbg.com/blog/2016/07/09/Looking-for-writers.html)!\r\n- [EXETools community](https://forum.exetools.com)\r\n- [Tuts4You community](https://forum.tuts4you.com)\r\n- [ReSharper](https://www.jetbrains.com/resharper)\r\n- [Coverity](https://www.coverity.com)\r\n- acidflash\r\n- cyberbob\r\n- cypher\r\n- Teddy Rogers\r\n- TEAM DVT\r\n- DMichael\r\n- Artic\r\n- ahmadmansoor\r\n- \\_pusher\\_\r\n- firelegend\r\n- [kao](https://lifeinhex.com)\r\n- sstrato\r\n- [kobalicek](https://github.com/kobalicek)\r\n- [athre0z](https://github.com/athre0z)\r\n- [ZehMatt](https://github.com/ZehMatt)\r\n- [mrfearless](https://twitter.com/fearless0)\r\n- [JustMagic](https://github.com/JustasMasiulis)\r\n\r\nWithout the help of many people and other open-source projects, it would not have been possible to make x64dbg what it is today, thank you!\r\n",
        "releases": [
            {
                "name": "snapshot_2025-01-17_12-45.zip",
                "date": "2025-01-17T11:46:59Z"
            },
            {
                "name": "Bitbucket files",
                "date": "2015-04-12T20:31:07Z"
            }
        ]
    }
}