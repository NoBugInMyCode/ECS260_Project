{
    "https://api.github.com/repos/muaz-khan/WebRTC-Experiment": {
        "forks": 3949,
        "watchers": 11833,
        "stars": 11833,
        "languages": {
            "JavaScript": 6101429,
            "HTML": 2030652,
            "CSS": 167951,
            "PHP": 14838,
            "TypeScript": 9864,
            "C#": 6010,
            "ASP": 113
        },
        "commits": [
            "2020-04-11T06:48:24Z",
            "2019-07-08T14:32:28Z",
            "2019-07-08T14:29:12Z",
            "2019-05-06T01:08:17Z",
            "2019-04-26T13:56:12Z",
            "2019-04-22T13:42:14Z",
            "2019-04-22T13:38:12Z",
            "2019-04-22T13:37:59Z",
            "2019-04-08T15:30:24Z",
            "2019-02-09T06:35:17Z",
            "2019-02-09T06:34:57Z",
            "2019-01-18T04:49:56Z",
            "2019-01-18T04:49:35Z",
            "2019-01-18T04:49:16Z",
            "2019-01-18T04:48:56Z",
            "2019-01-18T04:48:45Z",
            "2019-01-18T04:48:34Z",
            "2019-01-18T04:48:15Z",
            "2019-01-18T04:48:04Z",
            "2019-01-18T04:47:15Z",
            "2019-01-18T04:46:36Z",
            "2019-01-12T07:07:00Z",
            "2018-12-22T16:10:07Z",
            "2018-12-20T02:29:26Z",
            "2018-10-05T08:54:03Z",
            "2018-10-05T08:53:28Z",
            "2018-10-05T08:52:44Z",
            "2018-10-05T08:52:30Z",
            "2018-10-05T08:52:04Z",
            "2018-10-05T08:51:29Z"
        ],
        "creation_date": "2012-11-14T05:53:13Z",
        "contributors": 11,
        "topics": [
            "webrtc",
            "webrtc-demos",
            "webrtc-examples",
            "webrtc-experiments",
            "webrtc-libraries",
            "webrtc-samples",
            "webrtc-tools"
        ],
        "subscribers": 662,
        "readme": "# WebRTC Demos, Experiments, Libraries, Examples\n\n----\n\n# RecordRTC | WebRTC Audio+Video+Screen Recording\n\nWebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows.\n\nLive Demo: https://www.webrtc-experiment.com/RecordRTC/\n\n[![npm](https://img.shields.io/npm/v/recordrtc.svg)](https://npmjs.org/package/recordrtc) [![downloads](https://img.shields.io/npm/dm/recordrtc.svg)](https://npmjs.org/package/recordrtc) [![Build Status: Linux](https://travis-ci.org/muaz-khan/RecordRTC.png?branch=master)](https://travis-ci.org/muaz-khan/RecordRTC)\n\nGithub (open sourced): https://github.com/muaz-khan/RecordRTC\n\nRecordRTC extension is [available in the Chrome Web Store](https://chrome.google.com/webstore/detail/recordrtc/ndcljioonkecdnaaihodjgiliohngojp).\n\n----\n\n# MultiStreamsMixer\n\nPass multiple streams (e.g. screen+camera or multiple-cameras) and get single stream.\n\nLive Demo: https://www.webrtc-experiment.com/MultiStreamsMixer/\n\nGithub: https://github.com/muaz-khan/MultiStreamsMixer\n\n----\n\n# DetectRTC | Is WebRTC Supported In Your Browser?\n\nA tiny JavaScript library that can be used to detect WebRTC features e.g. system having speakers, microphone or webcam, screen capturing is supported, number of audio/video devices etc.\n\nLive Demo: https://www.webrtc-experiment.com/DetectRTC/\n\n[![npm](https://img.shields.io/npm/v/detectrtc.svg)](https://npmjs.org/package/detectrtc) [![downloads](https://img.shields.io/npm/dm/detectrtc.svg)](https://npmjs.org/package/detectrtc)  [![Build Status: Linux](https://travis-ci.org/muaz-khan/DetectRTC.png?branch=master)](https://travis-ci.org/muaz-khan/DetectRTC)\n\nGithub (open sourced): https://github.com/muaz-khan/DetectRTC\n\n----\n\n# RTCMultiConnection\n\nWebRTC JavaScript library for peer-to-peer applications (screen sharing, audio/video conferencing, file sharing, media streaming etc.)\n\n[![npm](https://img.shields.io/npm/v/rtcmulticonnection.svg)](https://npmjs.org/package/rtcmulticonnection) [![downloads](https://img.shields.io/npm/dm/rtcmulticonnection.svg)](https://npmjs.org/package/rtcmulticonnection) [![Build Status: Linux](https://travis-ci.org/muaz-khan/RTCMultiConnection.png?branch=master)](https://travis-ci.org/muaz-khan/RTCMultiConnection)\n\nGithub: https://github.com/muaz-khan/RTCMultiConnection\n\nSocket.io signaling server: https://github.com/muaz-khan/RTCMultiConnection-Server\n\n----\n\n# WebRTC Scalable Broadcasting\n\nThis module simply initializes socket.io and configures it in a way that single broadcast can be relayed over unlimited users without any bandwidth/CPU usage issues. Everything happens peer-to-peer!\n\nLive Demo: https://rtcmulticonnection.herokuapp.com/demos/Scalable-Broadcast.html\n\n[![npm](https://img.shields.io/npm/v/webrtc-scalable-broadcast.svg)](https://npmjs.org/package/webrtc-scalable-broadcast) [![downloads](https://img.shields.io/npm/dm/webrtc-scalable-broadcast.svg)](https://npmjs.org/package/webrtc-scalable-broadcast)\n\nGithub (open sourced): https://github.com/muaz-khan/WebRTC-Scalable-Broadcast\n\n----\n\n# WebRTC Dashboard | Canvas2D Drawing Tool\n\nCollaborative, extendable, JavaScript Canvas2D drawing tool, supports dozens of builtin tools, as well as generates JavaScript code for 2D animations.\n\nLive Demo: https://www.webrtc-experiment.com/Canvas-Designer/\n\nGithub (open-sourced): https://github.com/muaz-khan/Canvas-Designer\n\n[![npm](https://img.shields.io/npm/v/canvas-designer.svg)](https://npmjs.org/package/canvas-designer) [![downloads](https://img.shields.io/npm/dm/canvas-designer.svg)](https://npmjs.org/package/canvas-designer) [![Build Status: Linux](https://travis-ci.org/muaz-khan/Canvas-Designer.png?branch=master)](https://travis-ci.org/muaz-khan/Canvas-Designer)\n\nYou video presentation: https://www.youtube.com/watch?v=pvAj5l_v3cM\n\n----\n\n# WebRTC Voice & Text Translator\n\nTranslator.js is a JavaScript library built top on Google Speech-Recognition & Translation API to transcript and translate voice and text. It supports many locales and brings globalization in WebRTC!\n\nLive Demo: https://www.webrtc-experiment.com/Translator/\n\nGithub (open-sourced): https://github.com/muaz-khan/Translator\n\n----\n\n# getStats | Get WebRTC Peer Connection Stats\n\nA tiny JavaScript library using WebRTC getStats API to return peer connection stats i.e. bandwidth usage, packets lost, local/remote ip addresses and ports, type of connection etc.\n\nLive Demo: https://www.webrtc-experiment.com/getStats/\n\n[![npm](https://img.shields.io/npm/v/getstats.svg)](https://npmjs.org/package/getstats) [![downloads](https://img.shields.io/npm/dm/getstats.svg)](https://npmjs.org/package/getstats)\n\nGithub (open-sourced): https://github.com/muaz-khan/getStats\n\n----\n\n# FileBufferReader | File Sharing\n\nFileBufferReader is a JavaScript library reads file and returns chunkified array-buffers. The resulting buffers can be shared using WebRTC data channels or socket.io. \n\nLive Demo: https://www.webrtc-experiment.com/FileBufferReader/\n\nGithub (open-sourced): https://github.com/muaz-khan/FileBufferReader\n\n[![npm](https://img.shields.io/npm/v/fbr.svg)](https://npmjs.org/package/fbr) [![downloads](https://img.shields.io/npm/dm/fbr.svg)](https://npmjs.org/package/fbr) [![Build Status: Linux](https://travis-ci.org/muaz-khan/FileBufferReader.png?branch=master)](https://travis-ci.org/muaz-khan/FileBufferReader)\n\nYoutube video presentation: https://www.youtube.com/watch?v=gv8xpdGdS4o\n\n----\n\n# WebRTC Video Conferencing Demos\n\n* Simple Demo: https://rtcmulticonnection.herokuapp.com/demos/Video-Conferencing.html\n\n----\n\n# WebRTC File Sharing\n\n* Advance file sharing demo: https://rtcmulticonnection.herokuapp.com/demos/file-sharing.html\n\n----\n\n# WebRTC Screen Sharing\n\n* P2P Screen Sharing: https://www.webrtc-experiment.com/Pluginfree-Screen-Sharing/\n* Simple getDisplayMedia: https://www.webrtc-experiment.com/getDisplayMedia/\n\n----\n\n# Ffmpeg.js demos, both for browsers and node.js\n\n* https://github.com/muaz-khan/Ffmpeg.js\n\n----\n\n# XHR-Signaling\n\nXHR/XMLHttpRequest based WebRTC signaling implementation.\n\nGithub (open-sourced): https://github.com/muaz-khan/XHR-Signaling\n\n----\n\n# ASP.NET MVC based WebRTC Demo\n\nA simple WebRTC one-to-one demo written in September, 2012! It supports public rooms as well as password-protected private rooms! MS-SQL database is used as signaling gateway!\n\nGithub (open-sourced): https://github.com/muaz-khan/WebRTC-ASPNET-MVC\n\n----\n\n# WebSync-Signaling\n\nWebSync is used as signaling gateway with/for WebRTC-Experiments e.g. RTCMultiConnection.js, DataChannel.js, Plugin-free screen sharing, and video conferencing.\n\nGithub (open-sourced): https://github.com/muaz-khan/WebSync-Signaling\n\n----\n\n# Server Sent Events (SSE) over PHP\n\nServer Sent Events (SSE) are used to setup WebRTC peer-to-peer connections.\n\nGithub (open-sourced): https://github.com/muaz-khan/RTCMultiConnection/tree/master/demos/SSEConnection\n\n----\n\n# SignalR\n\nSignalR project for RTCMultiConnection: https://github.com/muaz-khan/RTCMultiConnection-SignalR\n\n* https://github.com/muaz-khan/WebRTC-Experiment/blob/master/Signaling.md#how-to-use-signalr-for-signaling\n\n----\n\n# License\n\nAll [WebRTC Experiments](https://github.com/muaz-khan/WebRTC-Experiment) are released under [MIT license](https://github.com/muaz-khan/WebRTC-Experiment/blob/master/LICENSE) . Copyright (c) [Muaz Khan](https://muazkhan.com/).\n",
        "releases": []
    }
}