{
    "https://api.github.com/repos/google/brotli": {
        "forks": 1249,
        "watchers": 13741,
        "stars": 13741,
        "languages": {
            "TypeScript": 13360432,
            "C": 2128219,
            "C#": 748417,
            "Java": 558363,
            "JavaScript": 328507,
            "Kotlin": 207454,
            "Python": 133107,
            "C++": 113387,
            "Go": 22876,
            "Starlark": 21401,
            "CMake": 15223,
            "Shell": 6777,
            "Makefile": 1161
        },
        "commits": [
            "2025-01-17T11:39:55Z",
            "2025-01-17T09:07:22Z",
            "2025-01-08T15:18:31Z",
            "2025-01-08T11:52:55Z",
            "2025-01-08T11:41:01Z",
            "2025-01-08T10:50:52Z",
            "2025-01-08T10:12:41Z",
            "2025-01-07T21:59:06Z",
            "2024-09-18T13:25:06Z",
            "2024-09-17T14:50:39Z",
            "2025-01-07T08:07:03Z",
            "2025-01-07T07:51:35Z",
            "2025-01-06T11:05:20Z",
            "2025-01-06T10:37:01Z",
            "2024-09-18T13:25:06Z",
            "2024-11-25T09:12:58Z",
            "2024-11-25T09:03:34Z",
            "2024-11-21T14:22:06Z",
            "2024-11-21T13:38:27Z",
            "2024-11-20T11:26:24Z",
            "2024-11-19T16:14:51Z",
            "2024-03-11T08:17:49Z",
            "2024-08-07T19:40:57Z",
            "2024-11-19T09:42:21Z",
            "2024-11-15T18:39:15Z",
            "2024-11-12T22:45:06Z",
            "2024-11-12T16:25:30Z",
            "2024-10-05T17:46:27Z",
            "2024-10-05T05:40:19Z",
            "2024-11-15T13:21:08Z"
        ],
        "creation_date": "2014-10-09T14:35:14Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 331,
        "readme": "<p align=\"center\">\n  <img src=\"https://github.com/google/brotli/actions/workflows/build_test.yml/badge.svg\" alt=\"GitHub Actions Build Status\" href=\"https://github.com/google/brotli/actions?query=branch%3Amaster\">\n  <img src=\"https://oss-fuzz-build-logs.storage.googleapis.com/badges/brotli.svg\" alt=\"Fuzzing Status\" href=\"https://oss-fuzz-build-logs.storage.googleapis.com/index.html#brotli\">\n</p>\n<p align=\"center\"><img src=\"https://brotli.org/brotli.svg\" alt=\"Brotli\" width=\"64\"></p>\n\n### Introduction\n\nBrotli is a generic-purpose lossless compression algorithm that compresses data\nusing a combination of a modern variant of the LZ77 algorithm, Huffman coding\nand 2nd order context modeling, with a compression ratio comparable to the best\ncurrently available general-purpose compression methods. It is similar in speed\nwith deflate but offers more dense compression.\n\nThe specification of the Brotli Compressed Data Format is defined in [RFC 7932](https://tools.ietf.org/html/rfc7932).\n\nBrotli is open-sourced under the MIT License, see the LICENSE file.\n\n> **Please note:** brotli is a \"stream\" format; it does not contain\n> meta-information, like checksums or uncompresssed data length. It is possible\n> to modify \"raw\" ranges of the compressed stream and the decoder will not\n> notice that.\n\n### Build instructions\n\n#### Vcpkg\n\nYou can download and install brotli using the [vcpkg](https://github.com/Microsoft/vcpkg/) dependency manager:\n\n    git clone https://github.com/Microsoft/vcpkg.git\n    cd vcpkg\n    ./bootstrap-vcpkg.sh\n    ./vcpkg integrate install\n    ./vcpkg install brotli\n\nThe brotli port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n\n#### Bazel\n\nSee [Bazel](http://www.bazel.build/)\n\n#### CMake\n\nThe basic commands to build and install brotli are:\n\n    $ mkdir out && cd out\n    $ cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./installed ..\n    $ cmake --build . --config Release --target install\n\nYou can use other [CMake](https://cmake.org/) configuration.\n\n#### Python\n\nTo install the latest release of the Python module, run the following:\n\n    $ pip install brotli\n\nTo install the tip-of-the-tree version, run:\n\n    $ pip install --upgrade git+https://github.com/google/brotli\n\nSee the [Python readme](python/README.md) for more details on installing\nfrom source, development, and testing.\n\n### Contributing\n\nWe glad to answer/library related questions in\n[brotli mailing list](https://groups.google.com/forum/#!forum/brotli).\n\nRegular issues / feature requests should be reported in\n[issue tracker](https://github.com/google/brotli/issues).\n\nFor reporting vulnerability please read [SECURITY](SECURITY.md).\n\nFor contributing changes please read [CONTRIBUTING](CONTRIBUTING.md).\n\n### Benchmarks\n* [Squash Compression Benchmark](https://quixdb.github.io/squash-benchmark/) / [Unstable Squash Compression Benchmark](https://quixdb.github.io/squash-benchmark/unstable/)\n* [Large Text Compression Benchmark](http://mattmahoney.net/dc/text.html)\n* [Lzturbo Benchmark](https://sites.google.com/site/powturbo/home/benchmark)\n\n### Related projects\n> **Disclaimer:** Brotli authors take no responsibility for the third party projects mentioned in this section.\n\nIndependent [decoder](https://github.com/madler/brotli) implementation by Mark Adler, based entirely on format specification.\n\nJavaScript port of brotli [decoder](https://github.com/devongovett/brotli.js). Could be used directly via `npm install brotli`\n\nHand ported [decoder / encoder](https://github.com/dominikhlbg/BrotliHaxe) in haxe by Dominik Homberger. Output source code: JavaScript, PHP, Python, Java and C#\n\n7Zip [plugin](https://github.com/mcmilk/7-Zip-Zstd)\n\nDart [native bindings](https://github.com/thosakwe/brotli)\n\nDart compression framework with [fast FFI-based Brotli implementation](https://pub.dev/documentation/es_compression/latest/brotli/brotli-library.html) with ready-to-use prebuilt binaries for Win/Linux/Mac\n",
        "releases": [
            {
                "name": "dev/null",
                "date": "2023-09-12T11:47:46Z"
            },
            {
                "name": "v1.1.0",
                "date": "2023-08-31T08:21:23Z"
            },
            {
                "name": "v1.1.0rc",
                "date": "2023-08-21T13:52:58Z"
            },
            {
                "name": "v1.0.9",
                "date": "2020-08-27T14:14:11Z"
            },
            {
                "name": "v1.0.8",
                "date": "2020-08-27T14:05:02Z"
            },
            {
                "name": "v1.0.7",
                "date": "2018-10-23T11:13:37Z"
            },
            {
                "name": "v1.0.6",
                "date": "2018-09-19T12:36:26Z"
            },
            {
                "name": "v1.0.5",
                "date": "2018-06-27T15:09:39Z"
            },
            {
                "name": "Brotli v1.0.4",
                "date": "2018-04-10T12:48:29Z"
            },
            {
                "name": "Brotli v1.0.3",
                "date": "2018-03-02T15:07:52Z"
            },
            {
                "name": "Brotli v1.0.2",
                "date": "2017-11-29T13:13:00Z"
            },
            {
                "name": "Brotli v1.0.1",
                "date": "2017-09-22T12:10:25Z"
            },
            {
                "name": "Brotli v1.0.0",
                "date": "2017-09-21T08:44:59Z"
            },
            {
                "name": "Brotli v0.6.0",
                "date": "2017-04-10T09:33:47Z"
            },
            {
                "name": "Brotli 0.5.2",
                "date": "2016-08-11T16:23:12Z"
            },
            {
                "name": "Brotli 0.4.0",
                "date": "2016-06-14T13:39:55Z"
            },
            {
                "name": "Brotli 0.3.0",
                "date": "2016-01-06T09:26:13Z"
            },
            {
                "name": "Brotli 0.2.0",
                "date": "2015-09-01T15:22:31Z"
            },
            {
                "name": "Brotli 0.1.0",
                "date": "2015-08-11T12:06:47Z"
            }
        ]
    }
}