{
    "https://api.github.com/repos/libvips/libvips": {
        "forks": 690,
        "watchers": 9975,
        "stars": 9975,
        "languages": {
            "C": 5632820,
            "C++": 587638,
            "Python": 215518,
            "Meson": 65605,
            "Shell": 27002
        },
        "commits": [
            "2025-01-13T12:11:09Z",
            "2025-01-13T11:41:51Z",
            "2025-01-13T11:41:21Z",
            "2025-01-11T16:23:00Z",
            "2025-01-11T15:43:16Z",
            "2025-01-11T15:42:52Z",
            "2025-01-11T15:42:15Z",
            "2025-01-02T11:10:47Z",
            "2025-01-02T01:08:50Z",
            "2025-01-02T01:07:52Z",
            "2025-01-01T15:24:27Z",
            "2025-01-02T01:00:42Z",
            "2025-01-02T00:52:31Z",
            "2025-01-01T15:24:27Z",
            "2024-12-26T19:02:22Z",
            "2024-12-26T13:46:28Z",
            "2024-12-26T13:46:14Z",
            "2024-12-23T11:17:38Z",
            "2024-12-19T16:59:43Z",
            "2024-12-19T16:57:24Z",
            "2024-12-16T21:27:19Z",
            "2024-12-11T12:42:08Z",
            "2024-12-07T11:37:43Z",
            "2024-12-06T13:25:43Z",
            "2024-12-06T13:25:28Z",
            "2024-12-04T14:44:08Z",
            "2024-12-04T13:16:03Z",
            "2024-12-02T17:41:54Z",
            "2024-11-30T16:07:53Z",
            "2024-11-30T15:38:54Z"
        ],
        "creation_date": "2011-01-25T13:15:00Z",
        "contributors": 30,
        "topics": [
            "c",
            "cpp",
            "gif",
            "graphicsmagick",
            "heic",
            "image-processing",
            "imagemagick",
            "jpeg",
            "libvips",
            "nifti",
            "openexr",
            "openslide",
            "pdf",
            "pdfium",
            "png",
            "svg",
            "tiff",
            "webp"
        ],
        "subscribers": 138,
        "readme": "# libvips: an image processing library\n\n[![CI](https://github.com/libvips/libvips/workflows/CI/badge.svg)](https://github.com/libvips/libvips/actions)\n[![Fuzzing Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/libvips.svg)](https://issues.oss-fuzz.com/issues?q=is:open%20project:libvips)\n[![Coverity Status](https://scan.coverity.com/projects/6503/badge.svg)](https://scan.coverity.com/projects/jcupitt-libvips)\n[![Gitter](https://badges.gitter.im/libvips/devchat.svg)](https://gitter.im/libvips/devchat?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n# Introduction\n\nlibvips is a [demand-driven, horizontally\nthreaded](https://github.com/libvips/libvips/wiki/Why-is-libvips-quick)\nimage processing library. Compared to similar\nlibraries, [libvips runs quickly and uses little\nmemory](https://github.com/libvips/libvips/wiki/Speed-and-memory-use).\nlibvips is licensed under the [LGPL-2.1-or-later](\nhttps://spdx.org/licenses/LGPL-2.1-or-later).\n\nIt has around [300\noperations](https://libvips.github.io/libvips/API/current/func-list.html)\ncovering arithmetic, histograms, convolution, morphological\noperations, frequency filtering, colour, resampling,\nstatistics and others. It supports a large range of [numeric\ntypes](https://libvips.github.io/libvips/API/current/VipsImage.html#VipsBandFormat),\nfrom 8-bit int to 128-bit complex. Images can have any number of bands.\nIt supports a good range of image formats, including JPEG, JPEG 2000, JPEG XL,\nTIFF, PNG, WebP, HEIC, AVIF, FITS, Matlab, OpenEXR, PDF, SVG, HDR, PPM / PGM /\nPFM, CSV, GIF, Analyze, NIfTI, DeepZoom, and OpenSlide. It can also load\nimages via ImageMagick or GraphicsMagick, letting it work with formats\nlike DICOM.\n\nIt comes with bindings for\n[C](https://libvips.github.io/libvips/API/current/using-from-c.html),\n[C++](https://libvips.github.io/libvips/API/current/libvips-from-C++.html),\nand the\n[command-line](https://libvips.github.io/libvips/API/current/using-cli.html).\nFull bindings are available for :\n\n| Language | Binding |\n|---|---|\n| Ruby | [ruby-vips](https://rubygems.org/gems/ruby-vips) |\n| Python | [pyvips](https://pypi.python.org/pypi/pyvips) |\n| PHP | [php-vips](https://github.com/libvips/php-vips) |\n| C# / .NET | [NetVips](https://www.nuget.org/packages/NetVips) |\n| Go | [govips](https://github.com/davidbyttow/govips) |\n| Lua | [lua-vips](https://github.com/libvips/lua-vips) |\n| Crystal | [crystal-vips](https://github.com/naqvis/crystal-vips) |\n| Elixir | [vix](https://github.com/akash-akya/vix) |\n| JVM | [vips-ffm](https://github.com/lopcode/vips-ffm) |\n\nlibvips is used as an image processing engine by:\n\n| |\n|---|\n| [sharp (on node.js)](https://www.npmjs.org/package/sharp) |\n| [imgproxy](https://github.com/imgproxy/imgproxy) |\n| [bimg](https://github.com/h2non/bimg) |\n| [sharp for Go](https://github.com/DAddYE/vips) |\n| [Ruby on Rails](https://edgeguides.rubyonrails.org/active_storage_overview.html) |\n| [CarrierWave](https://github.com/carrierwaveuploader/carrierwave#using-vips) |\n| [mediawiki](https://www.mediawiki.org/wiki/Extension:VipsScaler) |\n| [PhotoFlow](https://github.com/aferrero2707/PhotoFlow) |\n| [JVips](https://github.com/criteo/JVips) |\n\nand others. The official libvips GUI is\n[nip2](https://github.com/libvips/nip2), a strange combination of a\nspreadsheet and a photo editor.\n\n# Install\n\nThere are packages for most Unix-like operating systems, including\nmacOS. Check your package manager.\n\nThere are binaries for Windows in\n[releases](https://github.com/libvips/libvips/releases).\n\nThe [libvips website](https://libvips.github.io/libvips) has [detailed\ninstall notes](https://libvips.github.io/libvips/install.html).\n\n# Building from source\n\nlibvips uses the [Meson build system](https://mesonbuild.com), version 0.56\nor later. Meson can use [`ninja`](https://ninja-build.org), Visual Studio or\nXCode as a backend, so you'll also need one of them.\n\nlibvips must have `build-essential`, `pkg-config`, `libglib2.0-dev`,\n`libexpat1-dev`.  See the **Dependencies** section below for a full list\nof the libvips optional dependencies.\n\nThere are basic bash completions in `completions/`, see the README in there.\n\n## Cheatsheet\n\n```\ncd libvips-x.y.x\nmeson setup build --prefix /my/install/prefix\ncd build\nmeson compile\nmeson test\nmeson install\n```\n\nCheck the output of `meson setup` carefully and make sure it found everything\nyou wanted it to find.  Add arguments to `meson setup` to change the build\nconfiguration.\n\n- Add flags like `-Dnsgif=false` to turn libvips options on and off, see\n  `meson_options.txt` for a list of all the build options libvips supports.\n\n- Add flags like `-Dmagick=disabled` to turn libvips dependencies on and off,\n  see `meson_options.txt` and the list below for a summary of all the libvips\n  dependencies.\n\n- You might need to add `--libdir lib` on Debian if you don't want the arch\n  name in the library path.\n\n- Add `--default-library static` for a static build.\n\n- Use e.g. `CC=clang CXX=clang++ meson setup ...` to change compiler.\n\n- You can have an alternative build directory, pick whatever names you like,\n  for example one for release and one for debug.\n\nThere's a more comprehensive test suite you can run once libvips has been\ninstalled. Use `pytest` in the libvips base directory.\n\n## Optional dependencies\n\nIf suitable versions are found, libvips will add support for the following\nlibraries automatically. Packages are generally found with `pkg-config`,\nso make sure that is working.\n\n### libjpeg\n\nAnything that is compatible with the IJG JPEG library. Use `mozjpeg` if you\ncan. Another option is `libjpeg-turbo`.\n\n### libexif\n\nIf available, libvips adds support for EXIF metadata in JPEG files.\n\n### librsvg\n\nThe usual SVG loader. If this is not present, vips will try to load SVGs\nvia imagemagick instead.\n\n### PDFium\n\nIf present, libvips will attempt to load PDFs with PDFium. Download the\nprebuilt pdfium binary from:\n\n    https://github.com/bblanchon/pdfium-binaries\n\nUntar to the libvips install prefix, for example:\n\n    cd ~/vips\n    tar xf ~/pdfium-linux.tgz\n\nCreate a `pdfium.pc` like this (update the version number):\n\n    VIPSHOME=/home/john/vips\n    cat > $VIPSHOME/lib/pkgconfig/pdfium.pc << EOF\n         prefix=$VIPSHOME\n         exec_prefix=\\${prefix}\n         libdir=\\${exec_prefix}/lib\n         includedir=\\${prefix}/include\n         Name: pdfium\n         Description: pdfium\n         Version: 4290\n         Requires:\n         Libs: -L\\${libdir} -lpdfium\n         Cflags: -I\\${includedir}\n    EOF\n\nIf PDFium is not detected, libvips will look for `poppler-glib` instead.\n\n### poppler-glib\n\nThe Poppler PDF renderer, with a glib API. If this is not present, vips\nwill try to load PDFs via imagemagick.\n\n### cgif\n\nIf available, libvips will save GIFs with\n[cgif](https://github.com/dloebl/cgif). If this is not present, vips will\ntry to save gifs via imagemagick instead.\n\n### libarchive\n\nIf available, libvips adds support for creating image pyramids with `dzsave`.\n\n### libtiff\n\nThe TIFF library. It needs to be built with support for JPEG and\nZIP compression. 3.4b037 and later are known to be OK.\n\n### fftw3\n\nIf libvips finds this library, it uses it for fourier transforms.\n\n### lcms2\n\nIf present, `vips_icc_import()`, `vips_icc_export()` and `vips_icc_transform()`\ncan be used to manipulate images with ICC profiles.\n\n### libspng\n\nIf present, libvips will load and save PNG files using libspng. If not, it\nwill look for the standard libpng package.\n\n### libimagequant, quantizr\n\nIf one of these quantisation packages is present, libvips can write 8-bit\npalette-ised PNGs and GIFs.\n\n### ImageMagick, or optionally GraphicsMagick\n\nIf available, libvips adds support for loading and saving all\nlibMagick-supported image file types. You can enable and disable load and save\nseparately.\n\nImagemagick 6.9+ needs to have been built with `--with-modules`. Most packaged\nIMs are, I think.\n\nIf you are going to be using libvips with untrusted images, perhaps in a\nweb server, for example, you should consider the security implications of\nenabling a package with such a large attack surface.\n\n### pangocairo\n\nIf available, libvips adds support for text rendering. You need the\npackage pangocairo in `pkg-config --list-all`.\n\n### highway\n\nIf present, libvips will accelerate some operations with SIMD. If not, it\nwill look for the orc-0.4 package.\n\n### matio\n\nIf available, vips can load images from Matlab save files.\n\n### cfitsio\n\nIf available, vips can load FITS images.\n\n### libwebp\n\nIf available, vips can load and save WebP images.\n\n### libniftiio\n\nIf available, vips can load and save NIfTI images.\n\n### OpenEXR\n\nIf available, libvips will directly read (but not write, sadly)\nOpenEXR images.\n\n### OpenJPEG\n\nIf available, libvips will read and write JPEG2000 images.\n\n### libjxl\n\nIf available, libvips will read and write JPEG-XL images.\n\n### OpenSlide\n\nIf available, libvips can load OpenSlide-supported virtual slide\nfiles: Aperio, Hamamatsu, Leica, MIRAX, Sakura, Trestle, and Ventana.\n\n### libheif\n\nIf available, libvips can load and save HEIC and AVIF images. Your libheif (in\nturn) needs to be built with the correct decoders and encoders. You can check\nwith eg.:\n\n```console\n$ heif-convert --list-decoders\nHEIC decoders:\n- libde265 = libde265 HEVC decoder, version 1.0.9\nAVIF decoders:\n- dav1d = dav1d v6.6.0\n- aom = AOMedia Project AV1 Decoder v3.5.0\n$ heif-enc --list-encoders\nHEIC encoders:\n- x265 = x265 HEVC encoder (3.5+1-f0c1022b6) [default]\nAVIF encoders:\n- aom = AOMedia Project AV1 Encoder v3.5.0 [default]\n- svt = SVT-AV1 encoder v1.1.0\n- rav1e = Rav1e encoder\n```\n\n# Contributors\n\n### Code Contributors\n\nThis project exists thanks to all the people who contribute.\n\n<a href=\"https://github.com/libvips/libvips/graphs/contributors\"><img src=\"https://opencollective.com/libvips/contributors.svg?width=890&button=false\" /></a>\n\n### Organizations\n\nWe've had generous financial support from our sponsors. Thank you very much!\n\n<img src=\"https://opencollective.com/libvips/sponsors.svg?width=890&button=false\" />\n",
        "releases": [
            {
                "name": "v8.16.0",
                "date": "2024-10-28T12:03:19Z"
            },
            {
                "name": "v8.16.0-rc2",
                "date": "2024-10-19T13:49:09Z"
            },
            {
                "name": "v8.16.0-rc1",
                "date": "2024-10-10T15:56:00Z"
            },
            {
                "name": "v8.15.5",
                "date": "2024-10-19T13:59:42Z"
            },
            {
                "name": "v8.15.5-rc1",
                "date": "2024-10-05T11:29:28Z"
            },
            {
                "name": "v8.15.4",
                "date": "2024-10-03T12:47:42Z"
            },
            {
                "name": "v8.15.3",
                "date": "2024-08-11T14:58:14Z"
            },
            {
                "name": "v8.15.2",
                "date": "2024-03-14T11:08:24Z"
            },
            {
                "name": "v8.15.1",
                "date": "2023-12-18T16:54:39Z"
            },
            {
                "name": "v8.15.0",
                "date": "2023-11-11T13:12:09Z"
            },
            {
                "name": "v8.15.0-rc2",
                "date": "2023-11-03T17:37:01Z"
            },
            {
                "name": "v8.15.0-rc1",
                "date": "2023-10-18T17:24:32Z"
            },
            {
                "name": "v8.14.5",
                "date": "2023-09-18T16:41:28Z"
            },
            {
                "name": "v8.14.4",
                "date": "2023-08-15T13:19:43Z"
            },
            {
                "name": "v8.14.3",
                "date": "2023-07-20T14:30:34Z"
            },
            {
                "name": "v8.14.2",
                "date": "2023-03-21T12:46:37Z"
            },
            {
                "name": "v8.14.1",
                "date": "2023-01-09T11:07:45Z"
            },
            {
                "name": "v8.14.0",
                "date": "2022-12-30T12:27:24Z"
            },
            {
                "name": "v8.14.0-rc1",
                "date": "2022-12-22T18:57:53Z"
            },
            {
                "name": "v8.13.3",
                "date": "2022-11-01T10:03:26Z"
            },
            {
                "name": "v8.13.2",
                "date": "2022-09-29T05:01:46Z"
            },
            {
                "name": "v8.13.1",
                "date": "2022-09-03T14:42:32Z"
            },
            {
                "name": "v8.13.0",
                "date": "2022-07-21T22:04:51Z"
            },
            {
                "name": "v8.13.0-rc2",
                "date": "2022-07-12T11:52:06Z"
            },
            {
                "name": "v8.13.0-rc1",
                "date": "2022-06-19T15:28:38Z"
            },
            {
                "name": "v8.12.2",
                "date": "2022-01-25T10:14:41Z"
            },
            {
                "name": "v8.12.1",
                "date": "2021-11-24T15:45:42Z"
            },
            {
                "name": "v8.12.0",
                "date": "2021-11-20T11:17:56Z"
            },
            {
                "name": "v8.12.0-rc1",
                "date": "2021-11-14T11:31:09Z"
            },
            {
                "name": "v8.11.4",
                "date": "2021-09-23T09:58:37Z"
            },
            {
                "name": "v8.11.3",
                "date": "2021-08-14T16:58:55Z"
            },
            {
                "name": "v8.11.2",
                "date": "2021-07-03T14:34:20Z"
            },
            {
                "name": "v8.11.1",
                "date": "2021-06-29T10:00:02Z"
            },
            {
                "name": "v8.11.0",
                "date": "2021-06-09T19:27:39Z"
            },
            {
                "name": "v8.11.0-rc1",
                "date": "2021-06-04T13:18:04Z"
            },
            {
                "name": "v8.10.6",
                "date": "2021-03-23T21:02:01Z"
            },
            {
                "name": "v8.10.6-beta2",
                "date": "2021-03-08T15:29:38Z"
            },
            {
                "name": "v8.10.6-beta",
                "date": "2021-03-06T12:52:25Z"
            },
            {
                "name": "v8.10.5",
                "date": "2020-12-18T10:36:16Z"
            },
            {
                "name": "v8.10.4",
                "date": "2020-12-14T13:09:27Z"
            },
            {
                "name": "v8.10.3",
                "date": "2020-12-12T22:12:10Z"
            },
            {
                "name": "v8.10.2",
                "date": "2020-10-12T16:52:31Z"
            },
            {
                "name": "v8.10.1",
                "date": "2020-09-04T11:44:51Z"
            },
            {
                "name": "v8.10.0",
                "date": "2020-08-08T16:19:40Z"
            },
            {
                "name": "v8.10.0-rc2",
                "date": "2020-08-01T12:00:41Z"
            },
            {
                "name": "v8.10.0-rc1",
                "date": "2020-07-15T11:47:45Z"
            },
            {
                "name": "v8.10.0-beta2",
                "date": "2020-07-10T16:44:29Z"
            },
            {
                "name": "v8.10.0-beta1",
                "date": "2020-07-05T13:09:36Z"
            },
            {
                "name": "v8.9.2",
                "date": "2020-04-21T10:01:31Z"
            },
            {
                "name": "v8.9.1",
                "date": "2020-01-28T13:12:48Z"
            },
            {
                "name": "v8.9.0",
                "date": "2019-12-09T07:47:03Z"
            },
            {
                "name": "v8.8.4",
                "date": "2019-12-05T16:47:16Z"
            },
            {
                "name": "v8.8.3",
                "date": "2019-09-16T16:02:43Z"
            },
            {
                "name": "v8.8.2",
                "date": "2019-08-30T10:22:01Z"
            },
            {
                "name": "v8.8.1",
                "date": "2019-07-07T11:30:30Z"
            },
            {
                "name": "v8.8.0",
                "date": "2019-05-21T15:16:54Z"
            },
            {
                "name": "v8.7.4",
                "date": "2019-01-18T13:26:21Z"
            },
            {
                "name": "v8.7.3",
                "date": "2019-01-04T09:29:42Z"
            },
            {
                "name": "v8.7.2",
                "date": "2018-12-05T17:43:48Z"
            },
            {
                "name": "v8.7.1",
                "date": "2018-11-05T12:13:53Z"
            },
            {
                "name": "v8.7.0",
                "date": "2018-09-19T14:12:11Z"
            },
            {
                "name": "v8.7.0-rc2",
                "date": "2018-08-20T08:08:08Z"
            },
            {
                "name": "v8.7.0-rc1 -- release candidate for the upcoming 8.7.0",
                "date": "2018-07-25T16:39:39Z"
            },
            {
                "name": "v8.6.5",
                "date": "2018-07-25T10:13:36Z"
            },
            {
                "name": "v8.6.4",
                "date": "2018-06-13T15:40:39Z"
            },
            {
                "name": "v8.7.0-alpha2",
                "date": "2018-06-10T15:59:35Z"
            },
            {
                "name": "v8.6.3",
                "date": "2018-03-08T15:29:12Z"
            },
            {
                "name": "v8.6.2",
                "date": "2018-01-31T20:48:23Z"
            },
            {
                "name": "v8.7.0-alpha1",
                "date": "2018-07-24T22:00:21Z"
            },
            {
                "name": "8.6.1",
                "date": "2018-01-03T11:07:26Z"
            },
            {
                "name": "8.6.0",
                "date": "2017-12-08T14:20:54Z"
            },
            {
                "name": "8.6 beta",
                "date": "2017-07-29T10:11:21Z"
            },
            {
                "name": "8.5.9",
                "date": "2017-10-11T10:25:39Z"
            },
            {
                "name": "8.5.8",
                "date": "2017-08-22T14:28:30Z"
            },
            {
                "name": "8.5.7",
                "date": "2017-07-29T10:57:48Z"
            },
            {
                "name": "8.5.6",
                "date": "2017-06-08T11:59:27Z"
            },
            {
                "name": "v8.5.5",
                "date": "2017-05-15T10:26:44Z"
            },
            {
                "name": "v8.5.4",
                "date": "2017-04-23T10:08:29Z"
            },
            {
                "name": "v8.5.3",
                "date": "2017-04-15T09:52:08Z"
            },
            {
                "name": "8.5.2",
                "date": "2017-04-06T12:14:49Z"
            },
            {
                "name": "v8.5.1",
                "date": "2017-03-27T10:48:26Z"
            },
            {
                "name": "v8.4.6",
                "date": "2017-05-13T16:53:58Z"
            }
        ]
    }
}