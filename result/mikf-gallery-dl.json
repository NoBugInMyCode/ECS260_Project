{
    "https://api.github.com/repos/mikf/gallery-dl": {
        "forks": 1006,
        "watchers": 12527,
        "stars": 12527,
        "languages": {
            "Python": 3018236,
            "Shell": 6941,
            "Makefile": 1470,
            "Dockerfile": 792
        },
        "commits": [
            "2025-01-21T18:23:48Z",
            "2025-01-21T18:22:00Z",
            "2025-01-14T22:02:58Z",
            "2025-01-21T17:23:54Z",
            "2025-01-21T17:19:25Z",
            "2025-01-21T12:38:20Z",
            "2025-01-20T19:50:31Z",
            "2025-01-20T19:15:34Z",
            "2025-01-19T17:14:03Z",
            "2025-01-19T16:51:48Z",
            "2025-01-19T15:55:19Z",
            "2025-01-18T16:19:29Z",
            "2025-01-19T15:46:57Z",
            "2025-01-19T14:58:23Z",
            "2025-01-18T11:32:29Z",
            "2025-01-18T14:55:57Z",
            "2025-01-18T14:21:07Z",
            "2025-01-15T13:52:18Z",
            "2025-01-15T13:35:37Z",
            "2025-01-14T18:45:48Z",
            "2025-01-13T17:53:39Z",
            "2025-01-13T13:38:35Z",
            "2025-01-12T18:17:46Z",
            "2025-01-12T17:05:35Z",
            "2025-01-12T16:22:09Z",
            "2025-01-12T15:50:12Z",
            "2025-01-12T10:14:33Z",
            "2025-01-12T10:07:48Z",
            "2025-01-10T22:30:13Z",
            "2025-01-10T21:08:01Z"
        ],
        "creation_date": "2014-10-12T19:38:05Z",
        "contributors": 30,
        "topics": [
            "danbooru",
            "deviantart",
            "downloader",
            "flickr",
            "gallery",
            "kemono",
            "mangadex",
            "pixiv",
            "tumblr",
            "twitter"
        ],
        "subscribers": 150,
        "readme": "==========\ngallery-dl\n==========\n\n*gallery-dl* is a command-line program\nto download image galleries and collections\nfrom several image hosting sites\n(see `Supported Sites <docs/supportedsites.md>`__).\nIt is a cross-platform tool\nwith many `configuration options <https://gdl-org.github.io/docs/configuration.html>`__\nand powerful `filenaming capabilities <https://gdl-org.github.io/docs/formatting.html>`__.\n\n\n|pypi| |build|\n\n.. contents::\n\n\nDependencies\n============\n\n- Python_ 3.4+\n- Requests_\n\nOptional\n--------\n\n- yt-dlp_ or youtube-dl_: HLS/DASH video downloads, ``ytdl`` integration\n- FFmpeg_: Pixiv Ugoira conversion\n- mkvmerge_: Accurate Ugoira frame timecodes\n- PySocks_: SOCKS proxy support\n- brotli_ or brotlicffi_: Brotli compression support\n- zstandard_: Zstandard compression support\n- PyYAML_: YAML configuration file support\n- toml_: TOML configuration file support for Python<3.11\n- SecretStorage_: GNOME keyring passwords for ``--cookies-from-browser``\n\n\nInstallation\n============\n\n\nPip\n---\n\nThe stable releases of *gallery-dl* are distributed on PyPI_ and can be\neasily installed or upgraded using pip_:\n\n.. code:: bash\n\n    python3 -m pip install -U gallery-dl\n\nInstalling the latest dev version directly from GitHub can be done with\npip_ as well:\n\n.. code:: bash\n\n    python3 -m pip install -U --force-reinstall --no-deps https://github.com/mikf/gallery-dl/archive/master.tar.gz\n\nOmit :code:`--no-deps` if Requests_ hasn't been installed yet.\n\nNote: Windows users should use :code:`py -3` instead of :code:`python3`.\n\nIt is advised to use the latest version of pip_,\nincluding the essential packages :code:`setuptools` and :code:`wheel`.\nTo ensure these packages are up-to-date, run\n\n.. code:: bash\n\n    python3 -m pip install --upgrade pip setuptools wheel\n\n\nStandalone Executable\n---------------------\n\nPrebuilt executable files with a Python interpreter and\nrequired Python packages included are available for\n\n- `Windows <https://github.com/mikf/gallery-dl/releases/download/v1.28.4/gallery-dl.exe>`__\n  (Requires `Microsoft Visual C++ Redistributable Package (x86) <https://aka.ms/vs/17/release/vc_redist.x86.exe>`__)\n- `Linux   <https://github.com/mikf/gallery-dl/releases/download/v1.28.4/gallery-dl.bin>`__\n\n\nNightly Builds\n--------------\n\n| Executables build from the latest commit can be found at\n| https://github.com/gdl-org/builds/releases\n\n\nSnap\n----\n\nLinux users that are using a distro that is supported by Snapd_ can install *gallery-dl* from the Snap Store:\n\n.. code:: bash\n\n    snap install gallery-dl\n\n\nChocolatey\n----------\n\nWindows users that have Chocolatey_ installed can install *gallery-dl* from the Chocolatey Community Packages repository:\n\n.. code:: powershell\n\n    choco install gallery-dl\n\n\nScoop\n-----\n\n*gallery-dl* is also available in the Scoop_ \"main\" bucket for Windows users:\n\n.. code:: powershell\n\n    scoop install gallery-dl\n\nHomebrew\n--------\n\nFor macOS or Linux users using Homebrew:\n\n.. code:: bash\n\n    brew install gallery-dl\n\nMacPorts\n--------\n\nFor macOS users with MacPorts:\n\n.. code:: bash\n\n    sudo port install gallery-dl\n\nDocker\n--------\nUsing the Dockerfile in the repository:\n\n.. code:: bash\n\n    git clone https://github.com/mikf/gallery-dl.git\n    cd gallery-dl/\n    docker build -t gallery-dl:latest .\n\nPulling image from `Docker Hub <https://hub.docker.com/r/mikf123/gallery-dl>`__:\n\n.. code:: bash\n\n    docker pull mikf123/gallery-dl\n    docker tag mikf123/gallery-dl gallery-dl\n\nPulling image from `GitHub Container Registry <https://github.com/mikf/gallery-dl/pkgs/container/gallery-dl>`__:\n\n.. code:: bash\n\n    docker pull ghcr.io/mikf/gallery-dl\n    docker tag ghcr.io/mikf/gallery-dl gallery-dl\n\nTo run the container you will probably want to attach some directories on the host so that the config file and downloads can persist across runs.\n\nMake sure to either download the example config file reference in the repo and place it in the mounted volume location or touch an empty file there.\n\nIf you gave the container a different tag or are using podman then make sure you adjust.  Run ``docker image ls`` to check the name if you are not sure.\n\nThis will remove the container after every use so you will always have a fresh environment for it to run. If you setup a ci-cd pipeline to autobuild the container you can also add a ``--pull=newer`` flag so that when you run it docker will check to see if there is a newer container and download it before running.\n\n.. code:: bash\n\n    docker run --rm  -v $HOME/Downloads/:/gallery-dl/ -v $HOME/.config/gallery-dl/gallery-dl.conf:/etc/gallery-dl.conf -it gallery-dl:latest\n\nYou can also add an alias to your shell for \"gallery-dl\" or create a simple bash script and drop it somewhere in your $PATH to act as a shim for this command.\n\nNix and Home Manager\n--------------------------\n\nAdding *gallery-dl* to your system environment:\n\n.. code:: nix\n\n    environment.systemPackages = with pkgs; [\n      gallery-dl\n    ];\n\nUsing :code:`nix-shell`\n\n.. code:: bash\n\n    nix-shell -p gallery-dl\n\n.. code:: bash\n\n    nix-shell -p gallery-dl --run \"gallery-dl <args>\"\n\nFor Home Manager users, you can manage *gallery-dl* declaratively:\n\n.. code:: nix\n\n    programs.gallery-dl = {\n      enable = true;\n      settings = {\n        extractor.base-directory = \"~/Downloads\";\n      };\n    };\n\nAlternatively, you can just add it to :code:`home.packages` if you don't want to manage it declaratively:\n\n.. code:: nix\n\n    home.packages = with pkgs; [\n      gallery-dl\n    ];\n\nAfter making these changes, simply rebuild your configuration and open a new shell to have *gallery-dl* available.\n\nUsage\n=====\n\nTo use *gallery-dl* simply call it with the URLs you wish to download images\nfrom:\n\n.. code:: bash\n\n    gallery-dl [OPTIONS]... URLS...\n\nUse :code:`gallery-dl --help` or see `<docs/options.md>`__\nfor a full list of all command-line options.\n\n\nExamples\n--------\n\nDownload images; in this case from danbooru via tag search for 'bonocho':\n\n.. code:: bash\n\n    gallery-dl \"https://danbooru.donmai.us/posts?tags=bonocho\"\n\n\nGet the direct URL of an image from a site supporting authentication with username & password:\n\n.. code:: bash\n\n    gallery-dl -g -u \"<username>\" -p \"<password>\" \"https://twitter.com/i/web/status/604341487988576256\"\n\n\nFilter manga chapters by chapter number and language:\n\n.. code:: bash\n\n    gallery-dl --chapter-filter \"10 <= chapter < 20\" -o \"lang=fr\" \"https://mangadex.org/title/59793dd0-a2d8-41a2-9758-8197287a8539\"\n\n\n| Search a remote resource for URLs and download images from them:\n| (URLs for which no extractor can be found will be silently ignored)\n\n.. code:: bash\n\n    gallery-dl \"r:https://pastebin.com/raw/FLwrCYsT\"\n\n\nIf a site's address is nonstandard for its extractor, you can prefix the URL with the\nextractor's name to force the use of a specific extractor:\n\n.. code:: bash\n\n    gallery-dl \"tumblr:https://sometumblrblog.example\"\n\n\nConfiguration\n=============\n\nConfiguration files for *gallery-dl* use a JSON-based file format.\n\n\nDocumentation\n-------------\n\nA list of all available configuration options and their descriptions\ncan be found at `<https://gdl-org.github.io/docs/configuration.html>`__.\n\n| For a default configuration file with available options set to their\n  default values, see `<docs/gallery-dl.conf>`__.\n\n| For a commented example with more involved settings and option usage,\n  see `<docs/gallery-dl-example.conf>`__.\n\n\nLocations\n---------\n\n*gallery-dl* searches for configuration files in the following places:\n\nWindows:\n    * ``%APPDATA%\\gallery-dl\\config.json``\n    * ``%USERPROFILE%\\gallery-dl\\config.json``\n    * ``%USERPROFILE%\\gallery-dl.conf``\n\n    (``%USERPROFILE%`` usually refers to a user's home directory,\n    i.e. ``C:\\Users\\<username>\\``)\n\nLinux, macOS, etc.:\n    * ``/etc/gallery-dl.conf``\n    * ``${XDG_CONFIG_HOME}/gallery-dl/config.json``\n    * ``${HOME}/.config/gallery-dl/config.json``\n    * ``${HOME}/.gallery-dl.conf``\n\nWhen run as `executable <Standalone Executable_>`__,\n*gallery-dl* will also look for a ``gallery-dl.conf`` file\nin the same directory as said executable.\n\nIt is possible to use more than one configuration file at a time.\nIn this case, any values from files after the first will get merged\ninto the already loaded settings and potentially override previous ones.\n\n\nAuthentication\n==============\n\nUsername & Password\n-------------------\n\nSome extractors require you to provide valid login credentials in the form of\na username & password pair. This is necessary for\n``nijie``\nand optional for\n``aryion``,\n``danbooru``,\n``e621``,\n``exhentai``,\n``idolcomplex``,\n``imgbb``,\n``inkbunny``,\n``mangadex``,\n``mangoxo``,\n``pillowfort``,\n``sankaku``,\n``subscribestar``,\n``tapas``,\n``tsumino``,\n``twitter``,\nand ``zerochan``.\n\nYou can set the necessary information in your\n`configuration file <Configuration_>`__\n\n.. code:: json\n\n    {\n        \"extractor\": {\n            \"twitter\": {\n                \"username\": \"<username>\",\n                \"password\": \"<password>\"\n            }\n        }\n    }\n\nor you can provide them directly via the\n:code:`-u/--username` and :code:`-p/--password` or via the\n:code:`-o/--option` command-line options\n\n.. code:: bash\n\n    gallery-dl -u \"<username>\" -p \"<password>\" \"URL\"\n    gallery-dl -o \"username=<username>\" -o \"password=<password>\" \"URL\"\n\n\nCookies\n-------\n\nFor sites where login with username & password is not possible due to\nCAPTCHA or similar, or has not been implemented yet, you can use the\ncookies from a browser login session and input them into *gallery-dl*.\n\nThis can be done via the\n`cookies <https://gdl-org.github.io/docs/configuration.html#extractor-cookies>`__\noption in your configuration file by specifying\n\n- | the path to a Mozilla/Netscape format cookies.txt file exported by a browser addon\n  | (e.g. `Get cookies.txt LOCALLY <https://chrome.google.com/webstore/detail/get-cookiestxt-locally/cclelndahbckbenkjhflpdbgdldlbecc>`__ for Chrome,\n    `Export Cookies <https://addons.mozilla.org/en-US/firefox/addon/export-cookies-txt/>`__ for Firefox)\n\n- | a list of name-value pairs gathered from your browser's web developer tools\n  | (in `Chrome <https://developers.google.com/web/tools/chrome-devtools/storage/cookies>`__,\n     in `Firefox <https://developer.mozilla.org/en-US/docs/Tools/Storage_Inspector>`__)\n\n- | the name of a browser to extract cookies from\n  | (supported browsers are Chromium-based ones, Firefox, and Safari)\n\nFor example:\n\n.. code:: json\n\n    {\n        \"extractor\": {\n            \"instagram\": {\n                \"cookies\": \"$HOME/path/to/cookies.txt\"\n            },\n            \"patreon\": {\n                \"cookies\": {\n                    \"session_id\": \"K1T57EKu19TR49C51CDjOJoXNQLF7VbdVOiBrC9ye0a\"\n                }\n            },\n            \"twitter\": {\n                \"cookies\": [\"firefox\"]\n            }\n        }\n    }\n\n| You can also specify a cookies.txt file with\n  the :code:`--cookies` command-line option\n| or a browser to extract cookies from with :code:`--cookies-from-browser`:\n\n.. code:: bash\n\n    gallery-dl --cookies \"$HOME/path/to/cookies.txt\" \"URL\"\n    gallery-dl --cookies-from-browser firefox \"URL\"\n\n\nOAuth\n-----\n\n*gallery-dl* supports user authentication via OAuth_ for some extractors.\nThis is necessary for\n``pixiv``\nand optional for\n``deviantart``,\n``flickr``,\n``reddit``,\n``smugmug``,\n``tumblr``,\nand ``mastodon`` instances.\n\nLinking your account to *gallery-dl* grants it the ability to issue requests\non your account's behalf and enables it to access resources which would\notherwise be unavailable to a public user.\n\nTo do so, start by invoking it with ``oauth:<sitename>`` as an argument.\nFor example:\n\n.. code:: bash\n\n    gallery-dl oauth:flickr\n\nYou will be sent to the site's authorization page and asked to grant read\naccess to *gallery-dl*. Authorize it and you will be shown one or more\n\"tokens\", which should be added to your configuration file.\n\nTo authenticate with a ``mastodon`` instance, run *gallery-dl* with\n``oauth:mastodon:<instance>`` as argument. For example:\n\n.. code:: bash\n\n    gallery-dl oauth:mastodon:pawoo.net\n    gallery-dl oauth:mastodon:https://mastodon.social/\n\n\n.. _Python:     https://www.python.org/downloads/\n.. _PyPI:       https://pypi.org/\n.. _pip:        https://pip.pypa.io/en/stable/\n.. _Requests:   https://requests.readthedocs.io/en/master/\n.. _FFmpeg:     https://www.ffmpeg.org/\n.. _mkvmerge:   https://www.matroska.org/downloads/mkvtoolnix.html\n.. _yt-dlp:     https://github.com/yt-dlp/yt-dlp\n.. _youtube-dl: https://ytdl-org.github.io/youtube-dl/\n.. _PySocks:    https://pypi.org/project/PySocks/\n.. _brotli:     https://github.com/google/brotli\n.. _brotlicffi: https://github.com/python-hyper/brotlicffi\n.. _zstandard:  https://github.com/indygreg/python-zstandard\n.. _PyYAML:     https://pyyaml.org/\n.. _toml:       https://pypi.org/project/toml/\n.. _SecretStorage: https://pypi.org/project/SecretStorage/\n.. _Snapd:      https://docs.snapcraft.io/installing-snapd\n.. _OAuth:      https://en.wikipedia.org/wiki/OAuth\n.. _Chocolatey: https://chocolatey.org/install\n.. _Scoop:      https://scoop.sh\n\n.. |pypi| image:: https://img.shields.io/pypi/v/gallery-dl.svg\n    :target: https://pypi.org/project/gallery-dl/\n\n.. |build| image:: https://github.com/mikf/gallery-dl/workflows/tests/badge.svg\n    :target: https://github.com/mikf/gallery-dl/actions\n\n.. |gitter| image:: https://badges.gitter.im/gallery-dl/main.svg\n    :target: https://gitter.im/gallery-dl/main\n",
        "releases": [
            {
                "name": "",
                "date": "2025-01-12T16:26:43Z"
            },
            {
                "name": "",
                "date": "2025-01-04T15:46:26Z"
            },
            {
                "name": "",
                "date": "2024-12-20T18:17:07Z"
            },
            {
                "name": "",
                "date": "2024-12-07T17:07:01Z"
            },
            {
                "name": "",
                "date": "2024-11-30T10:04:48Z"
            },
            {
                "name": "",
                "date": "2024-10-25T17:03:26Z"
            },
            {
                "name": "",
                "date": "2024-10-11T12:35:06Z"
            },
            {
                "name": "",
                "date": "2024-09-28T09:47:42Z"
            },
            {
                "name": "",
                "date": "2024-09-06T11:38:26Z"
            },
            {
                "name": "",
                "date": "2024-08-10T11:09:16Z"
            },
            {
                "name": "",
                "date": "2024-08-03T17:26:05Z"
            },
            {
                "name": "",
                "date": "2024-06-22T15:15:07Z"
            },
            {
                "name": "",
                "date": "2024-06-01T19:13:00Z"
            },
            {
                "name": "",
                "date": "2024-03-23T16:45:44Z"
            },
            {
                "name": "",
                "date": "2024-02-17T20:09:43Z"
            },
            {
                "name": "",
                "date": "2024-01-21T22:06:31Z"
            },
            {
                "name": "",
                "date": "2024-01-06T16:52:42Z"
            },
            {
                "name": "",
                "date": "2023-12-23T17:29:11Z"
            },
            {
                "name": "",
                "date": "2023-12-10T16:47:20Z"
            },
            {
                "name": "",
                "date": "2023-11-27T20:54:18Z"
            },
            {
                "name": "",
                "date": "2023-11-04T21:04:16Z"
            },
            {
                "name": "",
                "date": "2023-10-21T14:38:49Z"
            },
            {
                "name": "",
                "date": "2023-10-03T19:34:06Z"
            },
            {
                "name": "",
                "date": "2023-07-15T17:29:36Z"
            },
            {
                "name": "",
                "date": "2023-07-02T20:31:33Z"
            },
            {
                "name": "",
                "date": "2023-06-17T13:31:45Z"
            },
            {
                "name": "",
                "date": "2023-05-27T15:13:12Z"
            },
            {
                "name": "",
                "date": "2023-05-07T19:03:07Z"
            },
            {
                "name": "",
                "date": "2023-04-30T16:39:02Z"
            },
            {
                "name": "",
                "date": "2023-04-15T20:35:32Z"
            },
            {
                "name": "",
                "date": "2023-03-25T20:41:14Z"
            },
            {
                "name": "",
                "date": "2023-03-11T20:09:25Z"
            },
            {
                "name": "",
                "date": "2023-01-28T20:39:52Z"
            },
            {
                "name": "",
                "date": "2023-01-11T15:25:05Z"
            },
            {
                "name": "",
                "date": "2023-01-10T20:36:12Z"
            },
            {
                "name": "",
                "date": "2022-12-18T13:45:23Z"
            },
            {
                "name": "",
                "date": "2022-12-04T20:14:12Z"
            },
            {
                "name": "",
                "date": "2022-11-20T14:47:08Z"
            },
            {
                "name": "",
                "date": "2022-10-30T17:34:24Z"
            },
            {
                "name": "",
                "date": "2022-10-30T17:24:36Z"
            },
            {
                "name": "",
                "date": "2022-10-15T12:48:38Z"
            },
            {
                "name": "",
                "date": "2022-10-01T11:27:34Z"
            },
            {
                "name": "",
                "date": "2022-09-18T12:05:26Z"
            },
            {
                "name": "",
                "date": "2022-08-28T17:59:06Z"
            },
            {
                "name": "",
                "date": "2022-07-15T17:36:04Z"
            },
            {
                "name": "",
                "date": "2022-06-28T20:50:38Z"
            },
            {
                "name": "",
                "date": "2022-06-27T14:43:48Z"
            },
            {
                "name": "",
                "date": "2022-06-04T17:47:30Z"
            },
            {
                "name": "",
                "date": "2022-05-25T18:33:52Z"
            },
            {
                "name": "",
                "date": "2022-04-27T20:57:24Z"
            },
            {
                "name": "",
                "date": "2022-04-08T18:57:44Z"
            },
            {
                "name": "",
                "date": "2022-03-14T14:48:20Z"
            },
            {
                "name": "",
                "date": "2022-02-14T18:37:17Z"
            },
            {
                "name": "",
                "date": "2022-02-06T21:06:03Z"
            },
            {
                "name": "",
                "date": "2022-01-26T00:15:44Z"
            },
            {
                "name": "",
                "date": "2022-01-24T17:28:32Z"
            },
            {
                "name": "",
                "date": "2022-01-08T22:29:41Z"
            },
            {
                "name": "",
                "date": "2021-12-29T22:04:54Z"
            },
            {
                "name": "",
                "date": "2021-11-27T22:27:52Z"
            },
            {
                "name": "",
                "date": "2021-11-05T19:50:37Z"
            },
            {
                "name": "v1.19.1",
                "date": "2021-10-24T19:53:05Z"
            },
            {
                "name": "",
                "date": "2021-10-01T20:05:25Z"
            },
            {
                "name": "",
                "date": "2021-09-04T19:13:07Z"
            },
            {
                "name": "",
                "date": "2021-08-13T19:23:31Z"
            },
            {
                "name": "",
                "date": "2021-07-23T15:42:24Z"
            },
            {
                "name": "",
                "date": "2021-07-04T20:40:05Z"
            },
            {
                "name": "",
                "date": "2021-06-19T19:35:22Z"
            },
            {
                "name": "",
                "date": "2021-05-30T17:27:24Z"
            },
            {
                "name": "",
                "date": "2021-05-07T19:42:29Z"
            },
            {
                "name": "",
                "date": "2021-04-25T19:29:26Z"
            },
            {
                "name": "",
                "date": "2021-04-02T19:22:02Z"
            },
            {
                "name": "",
                "date": "2021-03-19T18:18:47Z"
            },
            {
                "name": "",
                "date": "2021-03-05T18:00:30Z"
            },
            {
                "name": "",
                "date": "2021-02-14T16:06:12Z"
            },
            {
                "name": "",
                "date": "2021-01-23T16:39:22Z"
            },
            {
                "name": "",
                "date": "2021-01-09T23:37:39Z"
            },
            {
                "name": "",
                "date": "2021-01-09T17:29:31Z"
            },
            {
                "name": "",
                "date": "2020-12-27T17:38:07Z"
            },
            {
                "name": "",
                "date": "2020-12-12T22:24:39Z"
            },
            {
                "name": "",
                "date": "2020-11-27T15:15:15Z"
            },
            {
                "name": "",
                "date": "2020-11-13T14:54:52Z"
            },
            {
                "name": "",
                "date": "2020-10-24T17:03:08Z"
            },
            {
                "name": "",
                "date": "2020-10-11T16:51:36Z"
            },
            {
                "name": "",
                "date": "2020-09-20T20:13:40Z"
            },
            {
                "name": "",
                "date": "2020-08-30T19:27:56Z"
            },
            {
                "name": "",
                "date": "2020-08-15T19:38:11Z"
            },
            {
                "name": "",
                "date": "2020-07-18T16:42:47Z"
            },
            {
                "name": "",
                "date": "2020-06-27T18:52:45Z"
            },
            {
                "name": "",
                "date": "2020-06-12T18:18:41Z"
            },
            {
                "name": "",
                "date": "2020-05-31T18:57:11Z"
            },
            {
                "name": "",
                "date": "2020-05-02T20:24:38Z"
            },
            {
                "name": "",
                "date": "2020-04-27T19:30:44Z"
            },
            {
                "name": "",
                "date": "2020-04-12T19:31:57Z"
            },
            {
                "name": "",
                "date": "2020-03-28T21:10:01Z"
            },
            {
                "name": "",
                "date": "2020-03-14T19:27:20Z"
            },
            {
                "name": "",
                "date": "2020-03-01T20:34:26Z"
            },
            {
                "name": "",
                "date": "2020-02-16T21:46:13Z"
            },
            {
                "name": "",
                "date": "2020-01-19T22:37:16Z"
            },
            {
                "name": "",
                "date": "2020-01-05T21:10:22Z"
            },
            {
                "name": "",
                "date": "2019-12-22T21:33:52Z"
            },
            {
                "name": "",
                "date": "2019-12-08T21:54:42Z"
            },
            {
                "name": "",
                "date": "2019-11-08T23:58:25Z"
            },
            {
                "name": "",
                "date": "2019-11-08T21:40:23Z"
            },
            {
                "name": "",
                "date": "2019-10-26T21:29:51Z"
            },
            {
                "name": "",
                "date": "2019-10-11T18:21:34Z"
            },
            {
                "name": "",
                "date": "2019-09-28T20:24:12Z"
            },
            {
                "name": "",
                "date": "2019-09-08T12:00:20Z"
            },
            {
                "name": "",
                "date": "2019-08-30T17:46:44Z"
            },
            {
                "name": "",
                "date": "2019-08-23T20:21:26Z"
            },
            {
                "name": "",
                "date": "2019-08-02T19:32:02Z"
            },
            {
                "name": "",
                "date": "2019-08-01T21:28:00Z"
            },
            {
                "name": "",
                "date": "2019-07-19T20:02:42Z"
            },
            {
                "name": "",
                "date": "2019-06-28T19:09:17Z"
            },
            {
                "name": "",
                "date": "2019-06-14T19:17:46Z"
            },
            {
                "name": "",
                "date": "2019-06-01T19:09:54Z"
            },
            {
                "name": "",
                "date": "2019-05-17T21:57:09Z"
            },
            {
                "name": "",
                "date": "2019-05-04T20:56:01Z"
            },
            {
                "name": "",
                "date": "2019-04-12T08:43:12Z"
            },
            {
                "name": "",
                "date": "2019-03-29T16:49:51Z"
            },
            {
                "name": "",
                "date": "2019-03-15T14:31:03Z"
            },
            {
                "name": "",
                "date": "2019-02-05T15:35:21Z"
            },
            {
                "name": "",
                "date": "2019-01-18T11:35:45Z"
            },
            {
                "name": "",
                "date": "2019-01-01T15:29:32Z"
            },
            {
                "name": "",
                "date": "2018-11-28T14:39:22Z"
            },
            {
                "name": "",
                "date": "2018-11-17T17:31:22Z"
            },
            {
                "name": "",
                "date": "2018-09-14T16:20:55Z"
            },
            {
                "name": "",
                "date": "2018-08-31T18:30:45Z"
            },
            {
                "name": "",
                "date": "2018-08-17T11:24:38Z"
            },
            {
                "name": "",
                "date": "2018-08-03T15:53:15Z"
            },
            {
                "name": "",
                "date": "2018-07-06T14:07:06Z"
            },
            {
                "name": "",
                "date": "2018-06-22T14:38:35Z"
            },
            {
                "name": "",
                "date": "2018-06-08T20:26:48Z"
            },
            {
                "name": "",
                "date": "2018-05-04T08:07:52Z"
            },
            {
                "name": "",
                "date": "2018-04-20T16:46:13Z"
            },
            {
                "name": "",
                "date": "2018-04-06T13:53:09Z"
            },
            {
                "name": "",
                "date": "2018-03-23T14:32:46Z"
            },
            {
                "name": "",
                "date": "2018-03-16T14:39:37Z"
            },
            {
                "name": "",
                "date": "2018-03-02T17:55:43Z"
            },
            {
                "name": "",
                "date": "2018-02-16T21:35:51Z"
            },
            {
                "name": "",
                "date": "2018-01-12T14:19:03Z"
            },
            {
                "name": "",
                "date": "2017-12-22T16:07:20Z"
            },
            {
                "name": "",
                "date": "2017-12-08T16:22:46Z"
            },
            {
                "name": "",
                "date": "2017-11-24T16:30:38Z"
            },
            {
                "name": "",
                "date": "2017-11-10T08:10:00Z"
            },
            {
                "name": "",
                "date": "2017-10-27T14:31:12Z"
            },
            {
                "name": "",
                "date": "2017-07-24T09:44:50Z"
            },
            {
                "name": "",
                "date": "2017-06-28T07:59:29Z"
            },
            {
                "name": "",
                "date": "2017-05-21T09:07:17Z"
            },
            {
                "name": "",
                "date": "2017-05-01T11:37:13Z"
            },
            {
                "name": "",
                "date": "2017-04-10T06:28:58Z"
            },
            {
                "name": "",
                "date": "2017-04-09T09:59:51Z"
            },
            {
                "name": "",
                "date": "2017-03-28T13:12:23Z"
            },
            {
                "name": "",
                "date": "2017-03-06T18:44:08Z"
            },
            {
                "name": "",
                "date": "2017-02-13T00:16:21Z"
            },
            {
                "name": "",
                "date": "2017-01-25T01:52:40Z"
            },
            {
                "name": "v0.6.2",
                "date": "2017-01-05T00:24:43Z"
            },
            {
                "name": "",
                "date": "2016-11-30T19:08:10Z"
            },
            {
                "name": "",
                "date": "2016-10-08T10:43:01Z"
            },
            {
                "name": "",
                "date": "2016-09-23T06:44:46Z"
            },
            {
                "name": "",
                "date": "2016-08-22T10:41:05Z"
            },
            {
                "name": "",
                "date": "2016-07-25T13:25:35Z"
            },
            {
                "name": "",
                "date": "2015-12-03T01:36:26Z"
            },
            {
                "name": "",
                "date": "2015-11-26T17:12:59Z"
            },
            {
                "name": "",
                "date": "2015-11-10T20:20:28Z"
            },
            {
                "name": "",
                "date": "2015-11-04T21:07:32Z"
            }
        ]
    }
}