{
    "https://api.github.com/repos/bottlerocket-os/bottlerocket": {
        "forks": 521,
        "watchers": 8912,
        "stars": 8912,
        "languages": {
            "Rust": 840052,
            "Shell": 42318
        },
        "commits": [
            "2025-01-17T00:11:51Z",
            "2025-01-17T00:08:09Z",
            "2025-01-16T23:55:01Z",
            "2025-01-17T00:02:43Z",
            "2025-01-16T23:38:08Z",
            "2025-01-16T23:27:20Z",
            "2025-01-15T23:30:36Z",
            "2025-01-15T19:08:23Z",
            "2025-01-15T18:15:19Z",
            "2025-01-13T23:33:40Z",
            "2025-01-13T23:28:28Z",
            "2025-01-13T23:24:35Z",
            "2025-01-13T23:14:42Z",
            "2025-01-13T23:13:59Z",
            "2025-01-09T00:18:14Z",
            "2025-01-08T22:58:35Z",
            "2025-01-04T02:51:53Z",
            "2025-01-04T02:51:18Z",
            "2024-12-05T02:34:11Z",
            "2025-01-04T02:09:05Z",
            "2025-01-04T02:04:05Z",
            "2025-01-04T00:52:48Z",
            "2025-01-04T00:43:29Z",
            "2025-01-04T00:31:16Z",
            "2025-01-04T00:29:29Z",
            "2025-01-04T00:18:57Z",
            "2024-12-26T18:31:18Z",
            "2024-12-19T21:44:37Z",
            "2024-12-19T21:43:30Z",
            "2025-01-04T00:02:32Z"
        ],
        "creation_date": "2019-04-03T23:28:55Z",
        "contributors": 30,
        "topics": [
            "containers",
            "linux",
            "operating-system",
            "rust"
        ],
        "subscribers": 126,
        "readme": "# Bottlerocket OS\n\nWelcome to Bottlerocket!\n\nBottlerocket is a free and open-source Linux-based operating system meant for hosting containers.\n\nTo learn more about Bottlerocket, visit the [official Bottlerocket website and documentation](https://bottlerocket.dev/).\nOtherwise, if you\u2019re ready to jump right in, read one of our setup guides for running Bottlerocket in [Amazon EKS](QUICKSTART-EKS.md), [Amazon ECS](QUICKSTART-ECS.md), or [VMware](QUICKSTART-VMWARE.md).\nIf you're interested in running Bottlerocket on bare metal servers, please refer to the [provisioning guide](PROVISIONING-METAL.md) to get started.\n\nBottlerocket focuses on security and maintainability, providing a reliable, consistent, and safe platform for container-based workloads.\nThis is a reflection of what we've learned building operating systems and services at Amazon.\nYou can read more about what drives us in [our charter](CHARTER.md).\n\nThe base operating system has just what you need to run containers reliably, and is built with standard open-source components.\nBottlerocket-specific additions focus on reliable updates and on the API.\nInstead of making configuration changes manually, you can change settings with an API call, and these changes are automatically migrated through updates.\n\nSome notable features include:\n\n* [API access](#api) for configuring your system, with secure out-of-band [access methods](#exploration) when you need them.\n* [Updates](#updates) based on partition flips, for fast and reliable system updates.\n* [Modeled configuration](#settings) that's automatically migrated through updates.\n* [Security](#security) as a top priority.\n\n## Participate in the Community\n\nThere are many ways to take part in the Bottlerocket community:\n\n- [Join us on Meetup](https://www.meetup.com/bottlerocket-community/) to hear about the latest Bottlerocket (virtual/in-person) events and community meetings.\n  Community meetings are typically every other week.\n\n  Details can be found under the [Events section on Meetup](https://www.meetup.com/bottlerocket-community/events/), and you will receive email notifications if you become a member of the Meetup group. (It's free to join!)\n\n- [Start or join a discussion](https://github.com/bottlerocket-os/bottlerocket/discussions) if you have questions about Bottlerocket.\n- If you're interested in contributing, thank you!\n  Please see our [contributor's guide](CONTRIBUTING.md).\n\n## Contact us\n\nIf you find a security issue, please [contact our security team](https://github.com/bottlerocket-os/bottlerocket/security/policy) rather than opening an issue.\n\nWe use GitHub issues to track other bug reports and feature requests.\nYou can look at [existing issues](https://github.com/bottlerocket-os/bottlerocket/issues) to see whether your concern is already known.\n\nIf not, you can select from a few templates and get some guidance on the type of information that would be most helpful.\n[Contact us with a new issue here.](https://github.com/bottlerocket-os/bottlerocket/issues/new/choose)\n\nWe don't have other communication channels set up quite yet, but don't worry about making an issue or a discussion thread!\nYou can let us know about things that seem difficult, or even ways you might like to help.\n\n## Variants\n\nTo start, we're focusing on the use of Bottlerocket as a host OS in AWS EKS Kubernetes clusters and Amazon ECS clusters.\nWe\u2019re excited to get early feedback and to continue working on more use cases!\n\nBottlerocket is architected such that different cloud environments and container orchestrators can be supported in the future.\nA build of Bottlerocket that supports different features or integration characteristics is known as a 'variant'.\nThe artifacts of a build will include the architecture and variant name.\nFor example, an `x86_64` build of the `aws-k8s-1.24` variant will produce an image named `bottlerocket-aws-k8s-1.24-x86_64-<version>-<commit>.img`.\n\nThe following variants support EKS, as described above:\n\n* `aws-k8s-1.24`\n* `aws-k8s-1.25`\n* `aws-k8s-1.26`\n* `aws-k8s-1.27`\n* `aws-k8s-1.28`\n* `aws-k8s-1.29`\n* `aws-k8s-1.30`\n* `aws-k8s-1.31`\n* `aws-k8s-1.32`\n* `aws-k8s-1.24-nvidia`\n* `aws-k8s-1.25-nvidia`\n* `aws-k8s-1.26-nvidia`\n* `aws-k8s-1.27-nvidia`\n* `aws-k8s-1.28-nvidia`\n* `aws-k8s-1.29-nvidia`\n* `aws-k8s-1.30-nvidia`\n* `aws-k8s-1.31-nvidia`\n* `aws-k8s-1.32-nvidia`\n\nThe following variants support ECS:\n\n* `aws-ecs-1`\n* `aws-ecs-1-nvidia`\n* `aws-ecs-2`\n* `aws-ecs-2-nvidia`\n\nWe also have variants that are designed to be Kubernetes worker nodes in VMware:\n\n* `vmware-k8s-1.28`\n* `vmware-k8s-1.29`\n* `vmware-k8s-1.30`\n* `vmware-k8s-1.31`\n* `vmware-k8s-1.32`\n\nThe following variants are no longer supported:\n\n* All Kubernetes variants using Kubernetes 1.23 and earlier\n* VMware variants using Kubernetes 1.27 and earlier\n* Bare metal variants for Kubernetes\n\nWe recommend users replace nodes running these variants with the [latest variant compatible with their cluster](variants/).\n\n## Architectures\n\nOur supported architectures include `x86_64` and `aarch64` (written as `arm64` in some contexts).\n\n## Setup\n\n:walking: :running:\n\nBottlerocket is best used with a container orchestrator.\nTo get started with Kubernetes in Amazon EKS, please see [QUICKSTART-EKS](QUICKSTART-EKS.md).\nTo get started with Kubernetes in VMware, please see [QUICKSTART-VMWARE](QUICKSTART-VMWARE.md).\nTo get started with Amazon ECS, please see [QUICKSTART-ECS](QUICKSTART-ECS.md).\nThese guides describe:\n\n* how to set up a cluster with the orchestrator, so your Bottlerocket instance can run containers\n* how to launch a Bottlerocket instance in EC2 or VMware\n\nTo see how to provision Bottlerocket on bare metal, see [PROVISIONING-METAL](PROVISIONING-METAL.md).\n\nTo build your own Bottlerocket images, please see [BUILDING](BUILDING.md).\nIt describes:\n\n* how to build an image\n* how to register an EC2 AMI from an image\n\nTo publish your built Bottlerocket images, please see [PUBLISHING](PUBLISHING.md).\nIt describes:\n\n* how to make TUF repos including your image\n* how to copy your AMI across regions\n* how to mark your AMIs public or grant access to specific accounts\n* how to make your AMIs discoverable using [SSM parameters](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html)\n\n## Exploration\n\nTo improve security, there's no SSH server in a Bottlerocket image, and not even a shell.\n\nDon't panic!\n\nThere are a couple out-of-band access methods you can use to explore Bottlerocket like you would a typical Linux system.\nEither option will give you a shell within Bottlerocket.\nFrom there, you can [change settings](#settings), manually [update Bottlerocket](#updates), debug problems, and generally explore.\n\n**Note:** These methods require that your instance has permission to access the ECR repository where these containers live; the appropriate policy to add to your instance's IAM role is `AmazonEC2ContainerRegistryReadOnly`.\n\n### Control container\n\nBottlerocket has a [\"control\" container](https://github.com/bottlerocket-os/bottlerocket-control-container), enabled by default, that runs outside of the orchestrator in a separate instance of containerd.\nThis container runs the [AWS SSM agent](https://github.com/aws/amazon-ssm-agent) that lets you run commands, or start shell sessions, on Bottlerocket instances in EC2.\n(You can easily replace this control container with your own just by changing the URI; see [Settings](#settings).)\n\nIn AWS, you need to give your instance the SSM role for this to work; see the [setup guide](QUICKSTART-EKS.md#enabling-ssm).\nOutside of AWS, you can use [AWS Systems Manager for hybrid environments](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-managedinstances.html).\nThere's more detail about hybrid environments in the [control container documentation](https://github.com/bottlerocket-os/bottlerocket-control-container/#connecting-to-aws-systems-manager-ssm).\n\nOnce the instance is started, you can start a session:\n\n* Go to AWS SSM's [Session Manager](https://console.aws.amazon.com/systems-manager/session-manager/sessions)\n* Select \"Start session\" and choose your Bottlerocket instance\n* Select \"Start session\" again to get a shell\n\nIf you prefer a command-line tool, you can start a session with a recent [AWS CLI](https://aws.amazon.com/cli/) and the [session-manager-plugin](https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html).\nThen you'd be able to start a session using only your instance ID, like this:\n\n```shell\naws ssm start-session --target INSTANCE_ID --region REGION_CODE\n```\n\nWith the [default control container](https://github.com/bottlerocket-os/bottlerocket-control-container), you can make [API calls](#api) to configure and manage your Bottlerocket host.\nTo do even more, read the next section about the [admin container](#admin-container).\nYou can access the admin container from the control container like this:\n\n```shell\nenter-admin-container\n```\n\n### Admin container\n\nBottlerocket has an [administrative container](https://github.com/bottlerocket-os/bottlerocket-admin-container), disabled by default, that runs outside of the orchestrator in a separate instance of containerd.\nThis container has an SSH server that lets you log in as `ec2-user` using your EC2-registered SSH key.\nOutside of AWS, you can [pass in your own SSH keys](https://github.com/bottlerocket-os/bottlerocket-admin-container#authenticating-with-the-admin-container).\n(You can easily replace this admin container with your own just by changing the URI; see [Settings](#settings).\n\nTo enable the container, you can change the setting in user data when starting Bottlerocket, for example EC2 instance user data:\n\n```toml\n[settings.host-containers.admin]\nenabled = true\n```\n\nIf Bottlerocket is already running, you can enable the admin container from the default [control container](#control-container) like this:\n\n```shell\nenable-admin-container\n```\n\nOr you can start an interactive session immediately like this:\n\n```shell\nenter-admin-container\n```\n\nIf you're using a custom control container, or want to make the API calls directly, you can enable the admin container like this instead:\n\n```shell\napiclient set host-containers.admin.enabled=true\n```\n\nOnce you've enabled the admin container, you can either access it through SSH or execute commands from the control container like this:\n\n```shell\napiclient exec admin bash\n```\n\nOnce you're in the admin container, you can run `sheltie` to get a full root shell in the Bottlerocket host.\nBe careful; while you can inspect and change even more as root, Bottlerocket's filesystem and dm-verity setup will prevent most changes from persisting over a restart - see [Security](#security).\n\n## Updates\n\nRather than a package manager that updates individual pieces of software, Bottlerocket downloads a full filesystem image and reboots into it.\nIt can automatically roll back if boot failures occur, and workload failures can trigger manual rollbacks.\n\nThe update process uses images secured by [TUF](https://theupdateframework.github.io/).\nFor more details, see the [update system documentation](sources/updater/).\n\n### Update methods\n\nThere are several ways of updating your Bottlerocket hosts.\nWe provide tools for automatically updating hosts, as well as an API for direct control of updates.\n\n#### Automated updates\n\nFor EKS variants of Bottlerocket, we recommend using the [Bottlerocket update operator](https://github.com/bottlerocket-os/bottlerocket-update-operator) for automated updates.\n\nFor the ECS variant of Bottlerocket, we recommend using the [Bottlerocket ECS updater](https://github.com/bottlerocket-os/bottlerocket-ecs-updater/) for automated updates.\n\n#### Update API\n\nThe [Bottlerocket API](#api) includes methods for checking and starting system updates.\nYou can read more about the update APIs in our [update system documentation](sources/updater/README.md#update-api).\n\napiclient knows how to handle those update APIs for you, and you can run it from the [control](#control-container) or [admin](#admin-container) containers.\n\nTo see what updates are available:\n\n```shell\napiclient update check\n```\n\nIf an update is available, it will show up in the `chosen_update` field.\nThe `available_updates` field will show the full list of available versions, including older versions, because Bottlerocket supports safely rolling back.\n\nTo apply the latest update:\n\n```shell\napiclient update apply\n```\n\nThe next time you reboot, you'll start up in the new version, and system configuration will be automatically [migrated](sources/api/migration/).\nTo reboot right away:\n\n```shell\napiclient reboot\n```\n\nIf you're confident about updating, the `apiclient update apply` command has `--check` and `--reboot` flags to combine the above actions, so you can accomplish all of the above steps like this:\n\n```shell\napiclient update apply --check --reboot\n```\n\nSee the [apiclient documentation](sources/api/apiclient/) for more details.\n\n### Update rollback\n\nThe system will automatically roll back if it's unable to boot.\nIf the update is not functional for a given container workload, you can do a manual rollback:\n\n```shell\nsignpost rollback-to-inactive\nreboot\n```\n\nThis doesn't require any external communication, so it's quicker than `apiclient`, and it's made to be as reliable as possible.\n\n## Settings\n\nHere we'll describe the settings you can configure on your Bottlerocket instance, and how to do it.\n\n(API endpoints are defined in our [OpenAPI spec](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/api/openapi.yaml) if you want more detail.)\n\n### Interacting with settings\n\n#### Using the API client\n\nYou can see the current settings with an API request:\n\n```shell\napiclient get settings\n```\n\nThis will return all of the current settings in JSON format.\nFor example, here's an abbreviated response:\n\n```json\n{\"motd\": \"...\", {\"kubernetes\": {}}}\n```\n\nYou can change settings like this:\n\n```shell\napiclient set motd=\"hi there\" kubernetes.node-labels.environment=test\n```\n\nYou can also use a JSON input mode to help change many related settings at once, and a \"raw\" mode if you want more control over how the settings are committed and applied to the system.\nSee the [apiclient README](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/api/apiclient/) for details.\n\n#### Using user data\n\nIf you know what settings you want to change when you start your Bottlerocket instance, you can send them in the user data.\n\nIn user data, we structure the settings in TOML form to make things a bit simpler.\nHere's the user data to change the message of the day setting, as we did in the last section:\n\n```toml\n[settings]\nmotd = \"my own value!\"\n```\n\nIf your user data is over the size limit of the platform (e.g. 16KiB for EC2) you can compress the contents with gzip.\n(With [aws-cli](https://aws.amazon.com/cli/), you can use `--user-data fileb:///path/to/gz-file` to pass binary data.)\n\n### Description of settings\n\nHere we'll describe each setting you can change.\n\n**Note:** You can see the default values (for any settings that are not generated at runtime) by looking in the `defaults.d` directory for a variant, for example [aws-ecs-2](sources/models/src/aws-ecs-2/defaults.d/).\n\nWhen you're sending settings to the API, or receiving settings from the API, they're in a structured JSON format.\nThis allows modification of any number of keys at once.\nIt also lets us ensure that they fit the definition of the Bottlerocket data model - requests with invalid settings won't even parse correctly, helping ensure safety.\n\nHere, however, we'll use the shortcut \"dotted key\" syntax for referring to keys.\nThis is used in some API endpoints with less-structured requests or responses.\nIt's also more compact for our needs here.\n\nIn this format, \"settings.kubernetes.cluster-name\" refers to the same key as in the JSON `{\"settings\": {\"kubernetes\": {\"cluster-name\": \"value\"}}}`.\n\n**NOTE:** [bottlerocket.dev](https://bottlerocket.dev/en/os/latest/#/api/settings/) now contains a complete, versioned setting reference.\nThis documents retains the headings below for existing link and bookmark compatability.\nPlease update your bookmarks and check out [bottlerocket.dev](https://bottlerocket.dev/) for future updates to the setting reference.\n\n#### Top-level settings\n\nSee the [`settings.motd` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/motd/).\n\n#### Kubernetes settings\n\nSee the [`settings.kubernetes.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/kubernetes/).\n\n#### Amazon ECS settings\n\nSee the [`settings.ecs.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/ecs/).\n\n#### CloudFormation signal helper settings\n\nSee the [`settings.cloudformation.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/cloudformation/).\n\n#### Auto Scaling group settings\n\nSee the [`settings.autoscaling.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/autoscaling/).\n\n#### OCI Hooks settings\n\nSee the [`settings.oci-hooks.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/oci-hooks/).\n\n#### OCI Defaults settings\n\nSee the [`settings.oci-defaults.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/oci-defaults/).\n\n##### OCI Defaults: Capabilities\n\nSee the [\"Capabilities Settings\" section in the `settings.oci-defaults.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/oci-defaults/).\n\n##### OCI Defaults: Resource Limits\n\nSee the [\"Resource Limits Settings\" section in the `settings.oci-defaults.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/oci-defaults/).\n\n#### Container image registry settings\n\nSee the [`settings.container-registry.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/container-registry/).\n\n#### Container runtime settings\n\nSee the [`settings.container-runtime.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/container-runtime/).\n\n#### Updates settings\n\nSee the [`settings.updates.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/updates/).\n\n#### Network settings\n\nSee the [`settings.network.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/network/).\n\n##### Proxy settings\n\nSee the [\"Proxy Settings\" section in the `settings.networks.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/network/).\n\n#### Metrics settings\n\nSee the [`settings.metrics.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/metrics/).\n\n#### Time settings\n\nSee the [`settings.ntp.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/ntp/).\n\n#### Kernel settings\n\nSee the [`settings.kernel.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/kernel/).\n\n#### Boot-related settings\n\nSee the [`settings.boot.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/boot/).\n\n#### Custom CA certificates settings\n\nSee the [`settings.pki.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/pki/).\n\n#### Host containers settings\n\nSee the [`settings.host-containers.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/host-containers/).\n\n##### Custom host containers\n\nSee the [Host Containers documentation](https://bottlerocket.dev/en/os/latest/#/concepts/host-containers/).\n\n#### Bootstrap commands settings\n\nSee the [`settings.bootstrap-commands.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/bootstrap-commands/) as well as the [Bootstrap Commands documentation](https://bottlerocket.dev/en/os/latest/#/concepts/bootstrap-commands/)\n\n#### Bootstrap containers settings\n\nSee the [`settings.bootstrap-containers.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/bootstrap-containers/) as well as the [Bootstrap Containers documentation](https://bottlerocket.dev/en/os/latest/#/concepts/bootstrap-containers/)\n\n##### Mount propagations in bootstrap and superpowered containers\n\nBoth bootstrap and superpowered host containers are configured with the `/.bottlerocket/rootfs/mnt` bind mount that points to `/mnt` in the host, which itself is a bind mount of `/local/mnt`.\nThis bind mount is set up with shared propagations, so any new mount point created underneath `/.bottlerocket/rootfs/mnt` in any bootstrap or superpowered host container will propagate across mount namespaces.\nYou can use this feature to configure ephemeral disks attached to your hosts that you may want to use on your workloads.\n\n#### Platform-specific settings\n\nPlatform-specific settings are automatically set at boot time by [early-boot-config](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/early-boot-config/early-boot-config) based on metadata available on the running platform.\nThey can be overridden for testing purposes in [the same way as other settings](#interacting-with-settings).\n\n##### AWS-specific settings\n\nSee the [`settings.aws.*` reference](https://bottlerocket.dev/en/os/latest/#/api/settings/aws/).\n\n### Logs\n\nYou can use `logdog` through the [admin container](#admin-container) to obtain an archive of log files from your Bottlerocket host.\n\nFor a list of what is collected, see the logdog [command list](https://github.com/bottlerocket-os/bottlerocket-core-kit/blob/develop/sources/logdog/src/log_request.rs).\n\n#### Generating logs\n\nSSH to the Bottlerocket host or `apiclient exec admin bash` to access the admin container, then run:\n\n```shell\nsudo sheltie\nlogdog\n```\n\nThis will write an archive of the logs to `/var/log/support/bottlerocket-logs.tar.gz`.\nThis archive is accessible from host containers at `/.bottlerocket/support`.\n\n#### Fetching logs\n\nThere are multiple methods to retrieve the generated log archive.\n\n- **Via SSH if already enabled**\n\n    Once you have exited from the Bottlerocket host, run a command like:\n\n    ```shell\n    ssh -i YOUR_KEY_FILE \\\n    ec2-user@YOUR_HOST \\\n    \"cat /.bottlerocket/support/bottlerocket-logs.tar.gz\" > bottlerocket-logs.tar.gz\n    ```\n\n- **With `kubectl get` if running Kubernetes**\n\n    ```shell\n    kubectl get --raw \\\n    \"/api/v1/nodes/NODE_NAME/proxy/logs/support/bottlerocket-logs.tar.gz\" > bottlerocket-logs.tar.gz\n    ```\n\n- **Using [SSH over SSM](https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-getting-started-enable-ssh-connections.html) if your instance isn't accessible through SSH or Kubernetes**\n\n### Kdump Support\n\nBottlerocket provides support to collect kernel crash dumps whenever the system kernel panics.\nOnce this happens, both the dmesg log and vmcore dump are stored at `/var/log/kdump`, and the system reboots.\n\nThere are a few important caveats about the provided kdump support:\n\n* Currently, only vmware variants have kdump support enabled\n* The system kernel will reserve 256MB for the crash kernel, only when the host has at least 2GB of memory; the reserved space won't be available for processes running in the host\n* The crash kernel will only be loaded when the `crashkernel` parameter is present in the kernel's cmdline and if there is memory reserved for it\n\n### NVIDIA GPUs Support\n\nBottlerocket's `nvidia` variants include the required packages and configurations to leverage NVIDIA GPUs.\nCurrently, the following NVIDIA driver versions are supported in Bottlerocket:\n\n* 470.X\n* 515.X\n\nThe official AMIs for these variants can be used with EC2 GPU-equipped instance types such as: `p2`, `p3`, `p4`, `g3`, `g4dn`, `g5` and `g5g`.\nNote that older instance types, such as `p2`, are not supported by NVIDIA driver `515.X` and above.\nYou need to make sure you select the appropriate AMI depending on the instance type you are planning to use.\nPlease see [QUICKSTART-EKS](QUICKSTART-EKS.md#aws-k8s--nvidia-variants) for further details about Kubernetes variants, and [QUICKSTART-ECS](QUICKSTART-ECS.md#aws-ecs--nvidia-variants) for ECS variants.\n\n## Details\n\n### Security\n\n:shield: :crab:\n\nTo learn more about security features in Bottlerocket, please see [SECURITY FEATURES](SECURITY_FEATURES.md).\nIt describes how we use features like [dm-verity](https://gitlab.com/cryptsetup/cryptsetup/wikis/DMVerity) and [SELinux](https://selinuxproject.org/) to protect the system from security threats.\n\nTo learn more about security recommendations for Bottlerocket, please see [SECURITY GUIDANCE](SECURITY_GUIDANCE.md).\nIt documents additional steps you can take to secure the OS, and includes resources such as a [Pod Security Policy](https://kubernetes.io/docs/concepts/policy/pod-security-policy/) for your reference.\n\nIn addition, almost all first-party components are written in [Rust](https://www.rust-lang.org/).\nRust eliminates some classes of memory safety issues, and encourages design patterns that help security.\n\n### Packaging\n\nBottlerocket is built from source using a container toolchain.\nWe use RPM package definitions to build and install individual packages into an image.\nRPM itself is not in the image - it's just a common and convenient package definition format.\n\nWe currently package the following major third-party components:\n\n* Linux kernel ([background](https://en.wikipedia.org/wiki/Linux), [5.10 packaging](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/kernel-5.10/), [5.15 packaging](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/kernel-5.15/))\n* glibc ([background](https://www.gnu.org/software/libc/), [packaging](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/glibc/))\n* Buildroot as build toolchain ([background](https://buildroot.org/), via the [SDK](https://github.com/bottlerocket-os/bottlerocket-sdk))\n* GRUB, with patches for partition flip updates ([background](https://www.gnu.org/software/grub/), [packaging](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/grub/))\n* systemd as init ([background](https://en.wikipedia.org/wiki/Systemd), [packaging](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/systemd/))\n* wicked for networking ([background](https://github.com/openSUSE/wicked), [packaging](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/wicked/))\n* containerd ([background](https://containerd.io/), [packaging](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/containerd/))\n* Kubernetes ([background](https://kubernetes.io/), [packaging](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/kubernetes-1.30/))\n* aws-iam-authenticator ([background](https://github.com/kubernetes-sigs/aws-iam-authenticator), [packaging](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/aws-iam-authenticator/))\n* Amazon ECS agent ([background](https://github.com/aws/amazon-ecs-agent), [packaging](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/ecs-agent/))\n\nFor further documentation or to see the rest of the packages, see the [packaging directory](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/).\n\n### Updates\n\nThe Bottlerocket image has two identical sets of partitions, A and B.\nWhen updating Bottlerocket, the partition table is updated to point from set A to set B, or vice versa.\n\nWe also track successful boots, and if there are failures it will automatically revert back to the prior working partition set.\n\nThe update process uses images secured by [TUF](https://theupdateframework.github.io/).\nFor more details, see the [update system documentation](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/updater).\n\n### API\n\nThere are two main ways you'd interact with a production Bottlerocket instance.\n(There are a couple more [exploration](#exploration) methods above for test instances.)\n\nThe first method is through a container orchestrator, for when you want to run or manage containers.\nThis uses the standard channel for your orchestrator, for example a tool like `kubectl` for Kubernetes.\n\nThe second method is through the Bottlerocket API, for example when you want to configure the system.\n\nThere's an HTTP API server that listens on a local Unix-domain socket.\nRemote access to the API requires an authenticated transport such as SSM's RunCommand or Session Manager, as described above.\nFor more details, see the [apiserver documentation](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/api/apiserver/).\n\nThe [apiclient](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/api/apiclient/) can be used to make requests.\nThey're just HTTP requests, but the API client simplifies making requests with the Unix-domain socket.\n\nTo make configuration easier, we have [early-boot-config](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/early-boot-config/early-boot-config), which can send an API request for you based on instance user data.\nIf you start a virtual machine, like an EC2 instance, it will read TOML-formatted Bottlerocket configuration from user data and send it to the API server.\nThis way, you can configure your Bottlerocket instance without having to make API calls after launch.\n\nSee [Settings](#settings) above for examples and to understand what you can configure.\n\nYou can also access host containers through the API using [apiclient exec](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/api/apiclient#exec-mode).\n\nThe server and client are the user-facing components of the API system, but there are a number of other components that work together to make sure your settings are applied, and that they survive upgrades of Bottlerocket.\n\nFor more details, see the [API system documentation](https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/api).\n\n### Default Volumes\n\nBottlerocket operates with two default storage volumes.\n\n* The root device, holds the active and passive [partition sets](#updates-1).\n  It also contains the bootloader, the dm-verity hash tree for verifying the [immutable root filesystem](SECURITY_FEATURES.md#immutable-rootfs-backed-by-dm-verity), and the data store for the Bottlerocket API.\n* The data device is used as persistent storage for container images, container orchestration, [host-containers](#Custom-host-containers), and [bootstrap containers](#Bootstrap-containers-settings).\n  The operating system does not typically make changes to this volume during regular updates, though changes to upstream software such as containerd or kubelet could result in changes to their stored data.\n  This device (mounted to `/local` on the host) can be used for application storage for orchestrated workloads; however, we recommend using an additional volume if possible for such cases.\n  See [this section of the Security Guidance documentation](./SECURITY_GUIDANCE.md#limit-access-to-system-mounts) for more information.\n\nOn boot Bottlerocket will increase the data partition size to use all of the data device.\nIf you increase the size of the device, you can reboot Bottlerocket to extend the data partition.\nIf you need to extend the data partition without rebooting, have a look at this [discussion](https://github.com/bottlerocket-os/bottlerocket/discussions/2011).\n",
        "releases": [
            {
                "name": "v1.31.0",
                "date": "2025-01-21T23:14:04Z"
            },
            {
                "name": "v1.30.0",
                "date": "2025-01-07T18:38:15Z"
            },
            {
                "name": "v1.29.0",
                "date": "2024-12-18T20:59:57Z"
            },
            {
                "name": "v1.28.0",
                "date": "2024-12-12T00:05:12Z"
            },
            {
                "name": "v1.27.1",
                "date": "2024-11-16T20:34:21Z"
            },
            {
                "name": "v1.27.0",
                "date": "2024-11-14T19:12:10Z"
            },
            {
                "name": "v1.26.2",
                "date": "2024-11-07T21:23:42Z"
            },
            {
                "name": "v1.26.1",
                "date": "2024-10-25T18:30:20Z"
            },
            {
                "name": "v1.26.0",
                "date": "2024-10-24T00:04:22Z"
            },
            {
                "name": "",
                "date": "2024-10-15T19:11:05Z"
            },
            {
                "name": "v1.24.1",
                "date": "2024-10-09T17:50:57Z"
            },
            {
                "name": "v1.24.0",
                "date": "2024-09-30T18:12:13Z"
            },
            {
                "name": "v1.23.0",
                "date": "2024-09-24T17:52:12Z"
            },
            {
                "name": "v1.22.0",
                "date": "2024-09-11T18:11:48Z"
            },
            {
                "name": "v1.21.1",
                "date": "2024-08-26T18:11:01Z"
            },
            {
                "name": "v1.21.0",
                "date": "2024-08-08T21:27:14Z"
            },
            {
                "name": "v1.20.5",
                "date": "2024-07-30T23:45:42Z"
            },
            {
                "name": "v1.20.4",
                "date": "2024-07-18T23:21:14Z"
            },
            {
                "name": "v1.20.3",
                "date": "2024-06-27T00:46:43Z"
            },
            {
                "name": "v1.20.2",
                "date": "2024-06-14T00:19:21Z"
            },
            {
                "name": "v1.20.1",
                "date": "2024-06-06T20:02:55Z"
            },
            {
                "name": "v1.20.0",
                "date": "2024-05-15T01:05:04Z"
            },
            {
                "name": "v1.19.5",
                "date": "2024-05-01T23:38:49Z"
            },
            {
                "name": "v1.19.4",
                "date": "2024-04-07T03:18:54Z"
            },
            {
                "name": "v1.19.3",
                "date": "2024-04-02T02:51:39Z"
            },
            {
                "name": "v1.19.2",
                "date": "2024-02-26T23:41:29Z"
            },
            {
                "name": "",
                "date": "2024-02-08T01:16:05Z"
            },
            {
                "name": "v.1.19.0",
                "date": "2024-02-02T00:46:11Z"
            },
            {
                "name": " v1.18.0",
                "date": "2024-01-18T04:05:53Z"
            },
            {
                "name": "v1.17.0",
                "date": "2023-12-16T01:51:41Z"
            },
            {
                "name": "v1.16.1",
                "date": "2023-11-13T22:19:07Z"
            },
            {
                "name": "v1.16.0",
                "date": "2023-10-30T22:57:18Z"
            },
            {
                "name": "v1.15.1",
                "date": "2023-10-10T19:45:34Z"
            },
            {
                "name": "v1.15.0",
                "date": "2023-09-18T19:55:34Z"
            },
            {
                "name": "v1.14.3",
                "date": "2023-08-10T23:27:19Z"
            },
            {
                "name": "v1.14.2",
                "date": "2023-07-07T20:52:24Z"
            },
            {
                "name": "v1.14.1",
                "date": "2023-05-31T20:15:01Z"
            },
            {
                "name": "v1.14.0",
                "date": "2023-05-12T01:19:12Z"
            },
            {
                "name": "v1.13.5",
                "date": "2023-05-01T21:24:14Z"
            },
            {
                "name": "v1.13.4",
                "date": "2023-04-24T21:15:43Z"
            },
            {
                "name": "v1.13.3",
                "date": "2023-04-17T22:23:43Z"
            },
            {
                "name": "v1.13.2",
                "date": "2023-04-04T20:37:08Z"
            },
            {
                "name": "v1.13.1",
                "date": "2023-03-27T22:17:09Z"
            },
            {
                "name": "v1.13.0",
                "date": "2023-03-21T00:32:26Z"
            },
            {
                "name": "v1.12.0",
                "date": "2023-01-27T05:58:24Z"
            },
            {
                "name": "v1.11.1",
                "date": "2022-11-30T21:07:09Z"
            },
            {
                "name": "v1.11.0",
                "date": "2022-11-17T01:33:49Z"
            },
            {
                "name": "v1.10.1",
                "date": "2022-10-19T19:56:20Z"
            },
            {
                "name": "v1.10.0",
                "date": "2022-10-13T21:25:46Z"
            },
            {
                "name": "v1.9.2",
                "date": "2022-08-31T19:13:19Z"
            },
            {
                "name": "v1.9.1",
                "date": "2022-08-19T19:11:42Z"
            },
            {
                "name": "v1.9.0",
                "date": "2022-07-29T00:35:24Z"
            },
            {
                "name": "v1.8.0",
                "date": "2022-06-10T00:53:07Z"
            },
            {
                "name": "v1.7.2",
                "date": "2022-04-25T19:07:31Z"
            },
            {
                "name": "v.1.7.1",
                "date": "2022-04-19T20:35:12Z"
            },
            {
                "name": "v1.7.0",
                "date": "2022-03-30T17:27:02Z"
            },
            {
                "name": "v1.6.2",
                "date": "2022-03-09T00:46:56Z"
            },
            {
                "name": "v1.6.1",
                "date": "2022-03-02T22:49:38Z"
            },
            {
                "name": "v1.6.0",
                "date": "2022-02-08T02:15:06Z"
            },
            {
                "name": "v1.5.3",
                "date": "2022-01-25T23:07:36Z"
            },
            {
                "name": "v1.5.2",
                "date": "2022-01-05T20:01:11Z"
            },
            {
                "name": "v1.5.1",
                "date": "2021-12-24T02:03:02Z"
            },
            {
                "name": "v1.5.0",
                "date": "2021-12-18T06:56:34Z"
            },
            {
                "name": "v1.4.2",
                "date": "2021-12-03T21:47:32Z"
            },
            {
                "name": "v1.4.1",
                "date": "2021-11-18T19:59:48Z"
            },
            {
                "name": "v1.4.0",
                "date": "2021-11-12T22:49:00Z"
            },
            {
                "name": "v1.3.0",
                "date": "2021-10-06T17:38:30Z"
            },
            {
                "name": "v1.2.1",
                "date": "2021-09-17T03:07:03Z"
            },
            {
                "name": "v1.2.0",
                "date": "2021-08-06T17:38:34Z"
            },
            {
                "name": "v1.1.4",
                "date": "2021-07-23T17:38:45Z"
            },
            {
                "name": "v1.1.3",
                "date": "2021-07-12T18:02:35Z"
            },
            {
                "name": "v1.1.2",
                "date": "2021-06-25T17:35:26Z"
            },
            {
                "name": "v1.1.1",
                "date": "2021-05-19T17:29:14Z"
            },
            {
                "name": "v1.1.0",
                "date": "2021-05-07T17:32:50Z"
            },
            {
                "name": "v1.0.8",
                "date": "2021-04-12T18:29:54Z"
            },
            {
                "name": "v1.0.7",
                "date": "2021-03-18T01:40:10Z"
            },
            {
                "name": "v1.0.6",
                "date": "2021-03-02T19:03:49Z"
            },
            {
                "name": "v1.0.5",
                "date": "2021-01-15T20:46:51Z"
            },
            {
                "name": "v1.0.4",
                "date": "2020-11-30T20:04:06Z"
            },
            {
                "name": "v1.0.3",
                "date": "2020-11-19T18:30:23Z"
            },
            {
                "name": "v1.0.2",
                "date": "2020-10-13T17:19:43Z"
            },
            {
                "name": "v1.0.1",
                "date": "2020-09-04T01:22:21Z"
            },
            {
                "name": "v1.0.0",
                "date": "2020-08-31T16:40:50Z"
            },
            {
                "name": "v0.5.0",
                "date": "2020-08-17T23:04:29Z"
            },
            {
                "name": "v0.4.1",
                "date": "2020-07-13T18:48:15Z"
            },
            {
                "name": "v0.4.0",
                "date": "2020-06-29T17:29:57Z"
            },
            {
                "name": "v0.3.4",
                "date": "2020-05-27T21:35:33Z"
            },
            {
                "name": "v0.3.3",
                "date": "2020-05-14T22:34:37Z"
            },
            {
                "name": "v0.3.2",
                "date": "2020-04-20T23:42:00Z"
            },
            {
                "name": "v0.3.1",
                "date": "2020-03-10T18:57:12Z"
            },
            {
                "name": "v0.3.0",
                "date": "2020-02-28T00:33:36Z"
            },
            {
                "name": "",
                "date": "2020-01-18T00:17:32Z"
            },
            {
                "name": "",
                "date": "2020-01-18T00:18:28Z"
            },
            {
                "name": "",
                "date": "2020-01-18T00:20:17Z"
            },
            {
                "name": "",
                "date": "2020-01-18T00:23:52Z"
            },
            {
                "name": "",
                "date": "2020-01-18T00:23:49Z"
            },
            {
                "name": "",
                "date": "2020-01-18T00:23:47Z"
            },
            {
                "name": "",
                "date": "2020-01-18T00:23:44Z"
            }
        ]
    }
}