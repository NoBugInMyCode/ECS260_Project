{
    "https://api.github.com/repos/greenrobot/EventBus": {
        "forks": 4666,
        "watchers": 24707,
        "stars": 24707,
        "languages": {
            "Java": 270675,
            "CSS": 12808
        },
        "commits": [
            "2022-07-11T07:59:54Z",
            "2021-12-22T19:13:33Z",
            "2022-01-25T07:44:41Z",
            "2021-12-13T11:53:39Z",
            "2021-12-08T10:51:14Z",
            "2021-12-08T09:16:45Z",
            "2021-12-08T09:12:43Z",
            "2021-12-08T08:37:29Z",
            "2021-12-08T08:37:19Z",
            "2021-12-08T08:36:41Z",
            "2021-12-06T14:13:58Z",
            "2021-12-06T13:50:38Z",
            "2021-12-06T07:31:28Z",
            "2021-11-30T13:41:19Z",
            "2021-11-30T13:22:44Z",
            "2021-11-30T12:39:09Z",
            "2021-11-30T12:36:19Z",
            "2021-11-30T12:10:23Z",
            "2021-07-13T12:47:24Z",
            "2021-07-13T12:44:51Z",
            "2021-07-13T12:44:39Z",
            "2021-07-13T12:33:10Z",
            "2021-07-13T12:30:43Z",
            "2021-06-29T12:13:58Z",
            "2021-06-29T12:10:12Z",
            "2021-06-29T12:03:55Z",
            "2021-06-22T13:45:24Z",
            "2021-06-22T13:35:50Z",
            "2021-06-22T13:35:19Z",
            "2021-06-22T12:52:59Z"
        ],
        "creation_date": "2012-07-16T16:55:40Z",
        "contributors": 20,
        "topics": [],
        "subscribers": 1040,
        "readme": "EventBus\n========\n[EventBus](https://greenrobot.org/eventbus/) is a publish/subscribe event bus for Android and Java.<br/>\n<img src=\"EventBus-Publish-Subscribe.png\" width=\"500\" height=\"187\"/>\n\n[![Build Status](https://github.com/greenrobot/EventBus/actions/workflows/gradle.yml/badge.svg)](https://github.com/greenrobot/EventBus/actions)\n[![Follow greenrobot on Twitter](https://img.shields.io/twitter/follow/greenrobot_de.svg?style=flat-square&logo=twitter)](https://twitter.com/greenrobot_de)\n\nEventBus...\n\n * simplifies the communication between components\n    * decouples event senders and receivers\n    * performs well with Activities, Fragments, and background threads\n    * avoids complex and error-prone dependencies and life cycle issues\n * makes your code simpler\n * is fast\n * is tiny (~60k jar)\n * is proven in practice by apps with 1,000,000,000+ installs\n * has advanced features like delivery threads, subscriber priorities, etc.\n\nEventBus in 3 steps\n-------------------\n1. Define events:\n\n    ```java  \n    public static class MessageEvent { /* Additional fields if needed */ }\n    ```\n\n2. Prepare subscribers:\n    Declare and annotate your subscribing method, optionally specify a [thread mode](https://greenrobot.org/eventbus/documentation/delivery-threads-threadmode/):  \n\n    ```java\n    @Subscribe(threadMode = ThreadMode.MAIN)  \n    public void onMessageEvent(MessageEvent event) {\n        // Do something\n    }\n    ```\n    Register and unregister your subscriber. For example on Android, activities and fragments should usually register according to their life cycle:\n\n   ```java\n    @Override\n    public void onStart() {\n        super.onStart();\n        EventBus.getDefault().register(this);\n    }\n \n    @Override\n    public void onStop() {\n        super.onStop();\n        EventBus.getDefault().unregister(this);\n    }\n    ```\n\n3. Post events:\n\n   ```java\n    EventBus.getDefault().post(new MessageEvent());\n    ```\n\nRead the full [getting started guide](https://greenrobot.org/eventbus/documentation/how-to-get-started/).\n\nThere are also some [examples](https://github.com/greenrobot-team/greenrobot-examples).\n\n**Note:** we highly recommend the [EventBus annotation processor with its subscriber index](https://greenrobot.org/eventbus/documentation/subscriber-index/).\nThis will avoid some reflection related problems seen in the wild.  \n\nAdd EventBus to your project\n----------------------------\n<a href=\"https://search.maven.org/search?q=g:org.greenrobot%20AND%20a:eventbus\"><img src=\"https://img.shields.io/maven-central/v/org.greenrobot/eventbus.svg\"></a>\n\nAvailable on <a href=\"https://search.maven.org/search?q=g:org.greenrobot%20AND%20a:eventbus\">Maven Central</a>.\n\nAndroid projects:\n```groovy\nimplementation(\"org.greenrobot:eventbus:3.3.1\")\n```\n\nJava projects:\n```groovy\nimplementation(\"org.greenrobot:eventbus-java:3.3.1\")\n```\n```xml\n<dependency>\n    <groupId>org.greenrobot</groupId>\n    <artifactId>eventbus-java</artifactId>\n    <version>3.3.1</version>\n</dependency>\n```\n\nR8, ProGuard\n------------\n\nIf your project uses R8 or ProGuard this library ships [with embedded rules](/eventbus-android/consumer-rules.pro).\n\nHomepage, Documentation, Links\n------------------------------\nFor more details please check the [EventBus website](https://greenrobot.org/eventbus). Here are some direct links you may find useful:\n\n[Features](https://greenrobot.org/eventbus/features/)\n\n[Documentation](https://greenrobot.org/eventbus/documentation/)\n\n[Changelog](https://github.com/greenrobot/EventBus/releases)\n\n[FAQ](https://greenrobot.org/eventbus/documentation/faq/)\n\nLicense\n-------\nCopyright (C) 2012-2021 Markus Junginger, greenrobot (https://greenrobot.org)\n\nEventBus binaries and source code can be used according to the [Apache License, Version 2.0](LICENSE).\n\nOther projects by greenrobot\n============================\n[__ObjectBox__](https://objectbox.io/) ([GitHub](https://github.com/objectbox/objectbox-java)) is a new superfast object-oriented database.\n\n[__Essentials__](https://github.com/greenrobot/essentials) is a set of utility classes and hash functions for Android & Java projects.\n",
        "releases": [
            {
                "name": "EventBus 3.3.1",
                "date": "2021-12-08T10:57:22Z"
            },
            {
                "name": "EventBus 3.3.0",
                "date": "2021-12-06T14:06:13Z"
            },
            {
                "name": "EventBus 3.2",
                "date": "2020-02-12T13:58:35Z"
            },
            {
                "name": "EventBus 3.1.1",
                "date": "2018-08-27T12:44:37Z"
            },
            {
                "name": "EventBus 3.0.0",
                "date": "2016-02-04T19:20:15Z"
            },
            {
                "name": "",
                "date": "2014-11-11T07:22:27Z"
            },
            {
                "name": "",
                "date": "2014-11-11T07:21:58Z"
            }
        ]
    }
}