{
    "https://api.github.com/repos/xdissent/ievms": {
        "forks": 495,
        "watchers": 9826,
        "stars": 9826,
        "languages": {
            "Shell": 23137,
            "Batchfile": 607
        },
        "commits": [
            "2017-03-16T15:59:52Z",
            "2017-01-03T13:08:50Z",
            "2015-08-21T20:59:55Z",
            "2015-08-21T20:42:58Z",
            "2015-08-21T06:01:20Z",
            "2015-08-21T01:07:08Z",
            "2014-07-30T13:58:26Z",
            "2014-07-29T15:59:34Z",
            "2014-06-13T17:09:24Z",
            "2014-06-13T17:07:20Z",
            "2014-06-11T06:21:43Z",
            "2014-04-26T17:54:08Z",
            "2013-12-11T17:09:10Z",
            "2013-12-11T17:08:48Z",
            "2013-12-11T08:08:54Z",
            "2013-12-11T07:53:40Z",
            "2013-12-11T07:38:20Z",
            "2013-11-30T21:03:23Z",
            "2013-11-30T11:23:59Z",
            "2013-11-30T11:21:57Z",
            "2013-11-30T11:20:51Z",
            "2013-11-11T19:07:02Z",
            "2013-10-28T16:40:35Z",
            "2013-10-28T12:27:37Z",
            "2013-08-16T22:02:08Z",
            "2013-08-16T22:01:52Z",
            "2013-08-16T21:28:19Z",
            "2013-06-21T08:15:29Z",
            "2013-06-21T08:12:59Z",
            "2013-06-21T08:12:37Z"
        ],
        "creation_date": "2011-08-05T21:34:06Z",
        "contributors": 14,
        "topics": [],
        "subscribers": 191,
        "readme": "Overview\n========\n\nMicrosoft provides virtual machine disk images to facilitate website testing \nin multiple versions of IE, regardless of the host operating system. \nWith a single command, you can have IE6, IE7, IE8,\nIE9, IE10, IE11 and MSEdge running in separate virtual machines.\n\n[![Click here to lend your support to ievms and make a donation at pledgie.com!](http://pledgie.com/campaigns/15995.png?skin_name=chrome)](http://pledgie.com/campaigns/15995)\n\n\nQuickstart\n==========\n\nJust paste this into a terminal: \n\n    curl -s https://raw.githubusercontent.com/xdissent/ievms/master/ievms.sh | bash\n\n\nRequirements\n============\n\n* VirtualBox > 5.0 (http://virtualbox.org), select 'command line utilities' during installation\n* Curl (Ubuntu: `sudo apt-get install curl`)\n* Linux Only: unar (Ubuntu: `sudo apt-get install unar`)\n* Patience\n\n**NOTE** Use [ievms version 0.2.1](https://github.com/xdissent/ievms/raw/v0.2.1/ievms.sh) for VirtualBox < 5.0.\n\n\nInstallation\n============\n\n**1.)** Install [VirtualBox](http://virtualbox.org) and check the [Requirements](#requirements)\n\n**2.)** Download and unpack ievms:\n\n   * To install IE versions 6, 7, 8, 9, 10, 11 and EDGE use:\n\n        curl -s https://raw.githubusercontent.com/xdissent/ievms/master/ievms.sh | bash\n\n   * To install specific IE versions (IE7, IE9 and EDGE only for example) use:\n\n        curl -s https://raw.githubusercontent.com/xdissent/ievms/master/ievms.sh | env IEVMS_VERSIONS=\"7 9 EDGE\" bash\n\n**3.)** Launch Virtual Box.\n\n**4.)** Choose ievms image from Virtual Box.\n\nThe OVA images are massive and can take hours or tens of minutes to \ndownload, depending on the speed of your internet connection. You might want\nto start the install and then go catch a movie, or maybe dinner, or both. \n\n\nRecovering from a failed installation\n-------------------------------------\n\nEach version is installed into `~/.ievms/` (or `INSTALL_PATH`). If the installation fails\nfor any reason (corrupted download, for instance), delete the appropriate ZIP/ova file\nand rerun the install.\n\nIf nothing else, you can delete `~/.ievms` (or `INSTALL_PATH`) and rerun the install.\n\n\nSpecifying the install path\n---------------------------\n\nTo specify where the VMs are installed, use the `INSTALL_PATH` variable:\n\n    curl -s https://raw.githubusercontent.com/xdissent/ievms/master/ievms.sh | env INSTALL_PATH=\"/Path/to/.ievms\" bash\n\n\nPassing additional options to curl\n----------------------------------\n\nThe `curl` command is passed any options present in the `CURL_OPTS` \nenvironment variable. For example, you can set a download speed limit:\n\n    curl -s https://raw.githubusercontent.com/xdissent/ievms/master/ievms.sh | env CURL_OPTS=\"--limit-rate 50k\" bash\n\n\nDisk requirements\n-----------------\n\nA full ievms install will require approximately 69G:\n\n    Servo:.ievms xdissent$ du -ch *\n     11G    IE10 - Win7-disk1.vmdk\n     22M    IE10-Windows6.1-x86-en-us.exe\n     11G    IE11 - Win7-disk1.vmdk\n     28M    IE11-Windows6.1-x86-en-us.exe\n    1.5G    IE6 - WinXP-disk1.vmdk\n    724M    IE6 - WinXP.ova\n    717M    IE6_WinXP.zip\n    1.6G    IE7 - WinXP-disk1.vmdk\n     15M    IE7-WindowsXP-x86-enu.exe\n    1.6G    IE8 - WinXP-disk1.vmdk\n     16M    IE8-WindowsXP-x86-ENU.exe\n     11G    IE9 - Win7-disk1.vmdk\n    4.7G    IE9 - Win7.ova\n    4.7G    IE9_Win7.zip\n     10G    MSEdge - Win10-disk1.vmdk\n    5.1G    MSEdge - Win10.ova\n    5.0G    MSEdge_Win10.zip\n    3.4M    ievms-control-0.3.0.iso\n    4.6M    lsar\n    4.5M    unar\n    4.1M    unar1.5.zip\n     69G    total\n   \nYou may remove all files except `*.vmdk` after installation and they will be\nre-downloaded if ievms is run again in the future:\n\n    $ find ~/.ievms -type f ! -name \"*.vmdk\" -exec rm {} \\;\n\nIf all installation related files are removed, around 47G is required:\n\n    Servo:.ievms xdissent$ du -ch *\n     11G    IE10 - Win7-disk1.vmdk\n     11G    IE11 - Win7-disk1.vmdk\n    1.5G    IE6 - WinXP-disk1.vmdk\n    1.6G    IE7 - WinXP-disk1.vmdk\n    1.6G    IE8 - WinXP-disk1.vmdk\n     11G    IE9 - Win7-disk1.vmdk\n     10G    MSEdge - Win10-disk1.vmdk\n     47G    total\n\n\nBandwidth requirements\n----------------------\n\nA full installation will download roughly 12.5G of data.\n\n**NOTE:** Reusing the XP VM for IE7 and IE8 (the default) saves an incredible\namount of space and bandwidth. If it is disabled (`REUSE_XP=no`) the disk space\nrequired climbs to 95G (49G if cleaned post-install) and around 22G will be\ndownloaded. Reusing the Win7 VM on the other hand (also the default), saves\ntons of bandwidth but pretty much breaks even on disk space. Disable it with \n`REUSE_WIN7=no`.\n\n\nFeatures\n========\n\n\nClean Snapshot\n--------------\n\nA snapshot is automatically taken upon install, allowing rollback to the\npristine virtual environment configuration. Anything can go wrong in \nWindows and rather than having to worry about maintaining a stable VM,\nyou can simply revert to the `clean` snapshot to reset your VM to the\ninitial state.\n\n\nGuest Control\n-------------\n\nVirtualBox guest additions are installed after each virtual machine is created\n(and before the clean snapshot) and the appropriate steps are taken to enable\nguest control from the host machine.\n\n\nResuming Downloads\n------------------\n\n~~If one of the comically large files fails to download, the `curl` \ncommand used will automatically attempt to resume where it left off.~~\nUnfortunately, the modern.IE download servers do not support resume.\n\n\nReusing XP VMs\n--------------\n\nIE7 and IE8 ship from MS on Vista and Win7 respectively. Both of these\nimages are far larger than the IE6 XP image, which also technically supports\nIE7 and IE8. To save bandwidth, space and time, ievms will reuse\n(duplicate) the IE6 XP VM image for both. Virtualbox guest control is used\nto run the appropriate IE installer within the VM. The `clean` snapshot\nincludes the updated browser version.\n\n**NOTE:** If you'd like to disable XP VM reuse for IE7 and IE8, set the \nenvironment variable `REUSE_XP` to anything other than `yes`:\n\n    curl -s https://raw.githubusercontent.com/xdissent/ievms/master/ievms.sh | env REUSE_XP=\"no\" bash\n\n\nReusing Win7 VMs\n----------------\n\nCurrently there exists a [bug](https://www.virtualbox.org/ticket/11134) in \nVirtualBox (or possibly elsewhere) that disables guest control after a Windows 8\nvirtual machine's state is saved. To better support guest control and to\neliminate yet another image download, ievms will re-use the IE9 Win7 image for\nIE10 and IE11 by default. In addition, the Win7 VMs are the only ones which can\nbe successfully \"rearmed\" to extend the activation period.\n\n**NOTE:** If you'd like to disable Win7 VM reuse for IE10, set the environment \nvariable `REUSE_WIN7` to anything other than `yes`:\n\n    curl -s https://raw.githubusercontent.com/xdissent/ievms/master/ievms.sh | REUSE_WIN7=\"no\" bash\n\n\n**NOTE:** It is currently impossible to install IE11 **without** reusing the\nWin7 virtual machine.\n\n\nControl ISO\n-----------\n\nMicrosoft's XP image uses a blank password for the `IEUser`, which disallows\ncontrol via Virtualbox's guest control by default. Changing a value in the\nWindows registry enables guest control, but requires accessing the VM's hard\ndrive. A solution is to boot the VM with a special boot CD image which attaches\nthe hard disk and edits the registry. A custom linux build has been created\nbased on [the ntpasswd bootdisk](http://pogostick.net/~pnh/ntpasswd/) which\nmakes the required registry edits and simply powers off the machine. The ievms\nscript may then use Virtualbox guest controls to manage the VM.\n\nThe control ISO is built within a [Vagrant](http://vagrantup.com) Ubuntu VM.\nIf you'd like to build it yourself, clone the ievms repository, install\nVagrant and run `vagrant up`. The base ntpasswd boot disk will be downloaded, \nunpacked and customized within the Vagrant VM. A custom linux kernel is \ncross-compiled for the image as well.\n\n\nAcknowledgements\n================\n\n* [modern.IE](http://modern.ie) - Provider of IE VM images.\n* [ntpasswd](http://pogostick.net/~pnh/ntpasswd/) - Boot disk starting point\nand registry editor.\n* [regit-config](https://github.com/regit/regit-config) - Minimal Virtualbox\nkernel config reference.\n* [uck](http://sourceforge.net/projects/uck/) - Used to (re)master control ISO.\n\nLicense\n=======\n\nNone. (To quote Morrissey, \"take it, it's yours\")\n",
        "releases": [
            {
                "name": "v0.3.3",
                "date": "2017-03-16T16:01:38Z"
            },
            {
                "name": "v0.3.2",
                "date": "2017-01-06T00:47:36Z"
            },
            {
                "name": "v0.3.1",
                "date": "2015-08-21T21:03:50Z"
            },
            {
                "name": "v0.3.0",
                "date": "2015-08-21T21:03:26Z"
            },
            {
                "name": "",
                "date": "2013-11-30T12:46:25Z"
            }
        ]
    }
}