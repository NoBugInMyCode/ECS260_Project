{
    "https://api.github.com/repos/python/mypy": {
        "forks": 2873,
        "watchers": 18831,
        "stars": 18831,
        "languages": {
            "Python": 5899177,
            "C": 193842,
            "C++": 80319,
            "XSLT": 8510,
            "Shell": 4304,
            "CSS": 1409,
            "Batchfile": 800,
            "Emacs Lisp": 771,
            "Makefile": 634,
            "Dockerfile": 235
        },
        "commits": [
            "2025-01-21T18:08:23Z",
            "2025-01-21T15:31:35Z",
            "2025-01-20T22:01:14Z",
            "2025-01-19T21:55:13Z",
            "2025-01-19T00:15:34Z",
            "2025-01-17T20:41:49Z",
            "2025-01-17T10:33:51Z",
            "2025-01-16T22:15:56Z",
            "2025-01-16T16:00:23Z",
            "2025-01-15T19:53:21Z",
            "2025-01-15T16:57:51Z",
            "2025-01-15T13:31:58Z",
            "2025-01-15T10:53:14Z",
            "2025-01-15T09:53:17Z",
            "2025-01-14T22:38:47Z",
            "2025-01-14T22:34:18Z",
            "2025-01-14T17:57:45Z",
            "2025-01-14T17:14:30Z",
            "2025-01-14T15:15:52Z",
            "2025-01-14T12:21:45Z",
            "2025-01-13T23:25:09Z",
            "2025-01-13T22:08:41Z",
            "2025-01-13T17:38:56Z",
            "2025-01-13T10:26:25Z",
            "2025-01-13T06:58:10Z",
            "2025-01-13T06:25:02Z",
            "2025-01-12T22:24:06Z",
            "2025-01-11T21:48:00Z",
            "2025-01-11T18:53:16Z",
            "2025-01-11T18:38:32Z"
        ],
        "creation_date": "2012-12-07T13:30:23Z",
        "contributors": 30,
        "topics": [
            "linter",
            "python",
            "typechecker",
            "types",
            "typing"
        ],
        "subscribers": 241,
        "readme": "<img src=\"docs/source/mypy_light.svg\" alt=\"mypy logo\" width=\"300px\"/>\n\nMypy: Static Typing for Python\n=======================================\n\n[![Stable Version](https://img.shields.io/pypi/v/mypy?color=blue)](https://pypi.org/project/mypy/)\n[![Downloads](https://img.shields.io/pypi/dm/mypy)](https://pypistats.org/packages/mypy)\n[![Build Status](https://github.com/python/mypy/actions/workflows/test.yml/badge.svg)](https://github.com/python/mypy/actions)\n[![Documentation Status](https://readthedocs.org/projects/mypy/badge/?version=latest)](https://mypy.readthedocs.io/en/latest/?badge=latest)\n[![Chat at https://gitter.im/python/typing](https://badges.gitter.im/python/typing.svg)](https://gitter.im/python/typing?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Checked with mypy](https://www.mypy-lang.org/static/mypy_badge.svg)](https://mypy-lang.org/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Linting: Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)\n\nGot a question?\n---------------\n\nWe are always happy to answer questions! Here are some good places to ask them:\n\n- for general questions about Python typing, try [typing discussions](https://github.com/python/typing/discussions)\n- for anything you're curious about, try [gitter chat](https://gitter.im/python/typing)\n\nIf you're just getting started,\n[the documentation](https://mypy.readthedocs.io/en/stable/index.html)\nand [type hints cheat sheet](https://mypy.readthedocs.io/en/stable/cheat_sheet_py3.html)\ncan also help answer questions.\n\nIf you think you've found a bug:\n\n- check our [common issues page](https://mypy.readthedocs.io/en/stable/common_issues.html)\n- search our [issue tracker](https://github.com/python/mypy/issues) to see if\n  it's already been reported\n\nTo report a bug or request an enhancement:\n\n- report at [our issue tracker](https://github.com/python/mypy/issues)\n- if the issue is with a specific library or function, consider reporting it at\n  [typeshed tracker](https://github.com/python/typeshed/issues) or the issue\n  tracker for that library\n\nTo discuss a new type system feature:\n\n- discuss at [discuss.python.org](https://discuss.python.org/c/typing/32)\n- there is also some historical discussion at the [typing-sig mailing list](https://mail.python.org/archives/list/typing-sig@python.org/) and the [python/typing repo](https://github.com/python/typing/issues)\n\nWhat is mypy?\n-------------\n\nMypy is a static type checker for Python.\n\nType checkers help ensure that you're using variables and functions in your code\ncorrectly. With mypy, add type hints ([PEP 484](https://www.python.org/dev/peps/pep-0484/))\nto your Python programs, and mypy will warn you when you use those types\nincorrectly.\n\nPython is a dynamic language, so usually you'll only see errors in your code\nwhen you attempt to run it. Mypy is a *static* checker, so it finds bugs\nin your programs without even running them!\n\nHere is a small example to whet your appetite:\n\n```python\nnumber = input(\"What is your favourite number?\")\nprint(\"It is\", number + 1)  # error: Unsupported operand types for + (\"str\" and \"int\")\n```\n\nAdding type hints for mypy does not interfere with the way your program would\notherwise run. Think of type hints as similar to comments! You can always use\nthe Python interpreter to run your code, even if mypy reports errors.\n\nMypy is designed with gradual typing in mind. This means you can add type\nhints to your code base slowly and that you can always fall back to dynamic\ntyping when static typing is not convenient.\n\nMypy has a powerful and easy-to-use type system, supporting features such as\ntype inference, generics, callable types, tuple types, union types,\nstructural subtyping and more. Using mypy will make your programs easier to\nunderstand, debug, and maintain.\n\nSee [the documentation](https://mypy.readthedocs.io/en/stable/index.html) for\nmore examples and information.\n\nIn particular, see:\n\n- [type hints cheat sheet](https://mypy.readthedocs.io/en/stable/cheat_sheet_py3.html)\n- [getting started](https://mypy.readthedocs.io/en/stable/getting_started.html)\n- [list of error codes](https://mypy.readthedocs.io/en/stable/error_code_list.html)\n\nQuick start\n-----------\n\nMypy can be installed using pip:\n\n```bash\npython3 -m pip install -U mypy\n```\n\nIf you want to run the latest version of the code, you can install from the\nrepo directly:\n\n```bash\npython3 -m pip install -U git+https://github.com/python/mypy.git\n```\n\nNow you can type-check the [statically typed parts] of a program like this:\n\n```bash\nmypy PROGRAM\n```\n\nYou can always use the Python interpreter to run your statically typed\nprograms, even if mypy reports type errors:\n\n```bash\npython3 PROGRAM\n```\n\nIf you are working with large code bases, you can run mypy in\n[daemon mode], that will give much faster (often sub-second) incremental updates:\n\n```bash\ndmypy run -- PROGRAM\n```\n\nYou can also try mypy in an [online playground](https://mypy-play.net/) (developed by\nYusuke Miyazaki).\n\n[statically typed parts]: https://mypy.readthedocs.io/en/latest/getting_started.html#function-signatures-and-dynamic-vs-static-typing\n[daemon mode]: https://mypy.readthedocs.io/en/stable/mypy_daemon.html\n\nIntegrations\n------------\n\nMypy can be integrated into popular IDEs:\n\n- VS Code: provides [basic integration](https://code.visualstudio.com/docs/python/linting#_mypy) with mypy.\n- Vim:\n  - Using [Syntastic](https://github.com/vim-syntastic/syntastic): in `~/.vimrc` add\n    `let g:syntastic_python_checkers=['mypy']`\n  - Using [ALE](https://github.com/dense-analysis/ale): should be enabled by default when `mypy` is installed,\n    or can be explicitly enabled by adding `let b:ale_linters = ['mypy']` in `~/vim/ftplugin/python.vim`\n- Emacs: using [Flycheck](https://github.com/flycheck/)\n- Sublime Text: [SublimeLinter-contrib-mypy](https://github.com/fredcallaway/SublimeLinter-contrib-mypy)\n- PyCharm: [mypy plugin](https://github.com/dropbox/mypy-PyCharm-plugin)\n- pre-commit: use [pre-commit mirrors-mypy](https://github.com/pre-commit/mirrors-mypy), although\n  note by default this will limit mypy's ability to analyse your third party dependencies.\n\nWeb site and documentation\n--------------------------\n\nAdditional information is available at the web site:\n\n  <https://www.mypy-lang.org/>\n\nJump straight to the documentation:\n\n  <https://mypy.readthedocs.io/>\n\nFollow along our changelog at:\n\n  <https://mypy-lang.blogspot.com/>\n\nContributing\n------------\n\nHelp in testing, development, documentation and other tasks is\nhighly appreciated and useful to the project. There are tasks for\ncontributors of all experience levels.\n\nTo get started with developing mypy, see [CONTRIBUTING.md](CONTRIBUTING.md).\n\nMypyc and compiled version of mypy\n----------------------------------\n\n[Mypyc](https://github.com/mypyc/mypyc) uses Python type hints to compile Python\nmodules to faster C extensions. Mypy is itself compiled using mypyc: this makes\nmypy approximately 4 times faster than if interpreted!\n\nTo install an interpreted mypy instead, use:\n\n```bash\npython3 -m pip install --no-binary mypy -U mypy\n```\n\nTo use a compiled version of a development\nversion of mypy, directly install a binary from\n<https://github.com/mypyc/mypy_mypyc-wheels/releases/latest>.\n\nTo contribute to the mypyc project, check out the issue tracker at <https://github.com/mypyc/mypyc>\n",
        "releases": []
    }
}