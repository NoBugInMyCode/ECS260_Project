{
    "https://api.github.com/repos/nostra13/Android-Universal-Image-Loader": {
        "forks": 6090,
        "watchers": 16777,
        "stars": 16777,
        "languages": {
            "Java": 348510
        },
        "commits": [
            "2024-05-17T12:25:36Z",
            "2020-04-06T21:07:18Z",
            "2020-04-06T20:51:55Z",
            "2020-04-06T15:47:03Z",
            "2016-08-30T12:07:59Z",
            "2020-04-06T12:18:12Z",
            "2020-02-04T16:51:32Z",
            "2020-04-06T11:30:18Z",
            "2019-05-13T10:06:46Z",
            "2019-04-12T10:23:52Z",
            "2019-04-10T13:02:48Z",
            "2019-04-09T20:43:00Z",
            "2019-04-09T20:20:43Z",
            "2019-04-09T20:11:58Z",
            "2016-01-26T11:29:19Z",
            "2015-12-12T21:01:03Z",
            "2015-11-28T20:36:13Z",
            "2015-11-28T20:25:16Z",
            "2015-11-28T19:54:53Z",
            "2015-11-27T22:21:34Z",
            "2015-11-27T22:12:42Z",
            "2015-11-27T22:10:38Z",
            "2015-11-27T22:09:09Z",
            "2015-11-27T21:53:46Z",
            "2015-11-27T21:30:36Z",
            "2015-09-10T21:42:35Z",
            "2015-09-08T23:43:06Z",
            "2015-08-08T22:52:29Z",
            "2015-08-08T22:44:13Z",
            "2015-08-08T12:07:22Z"
        ],
        "creation_date": "2011-11-27T18:48:23Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 1322,
        "readme": "# ![Logo](https://github.com/nostra13/Android-Universal-Image-Loader/raw/master/sample/src/main/res/drawable-mdpi/ic_launcher.png) Universal Image Loader [![Build Status](https://travis-ci.org/nostra13/Android-Universal-Image-Loader.svg?branch=master)](https://travis-ci.org/nostra13/Android-Universal-Image-Loader) [![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.nostra13.universalimageloader/universal-image-loader/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.nostra13.universalimageloader/universal-image-loader)\n\nThe great ancestor of modern image-loading libraries :)  \nUIL aims to provide a powerful, flexible and highly customizable instrument for image loading, caching and displaying. It provides a lot of configuration options and good control over the image loading and caching process.\n\n![Screenshot](https://github.com/nostra13/Android-Universal-Image-Loader/raw/master/UniversalImageLoader.png)\n\n## Project News \n * Really have no time for development... so I stop project maintaining since Nov 27 :(\n * UIL [27.11.2011 - 27.11.2015]\n * Thanks to all developers for your support :)\n\n## Features\n * Multi-thread image loading (async or sync)\n * Wide customization of ImageLoader's configuration (thread executors, downloader, decoder, memory and disk cache, display image options, etc.)\n * Many customization options for every display image call (stub images, caching switch, decoding options, Bitmap processing and displaying, etc.)\n * Image caching in memory and/or on disk (device's file system or SD card)\n * Listening loading process (including downloading progress)\n\nAndroid 4.1+ support\n\n## Downloads\n * **[universal-image-loader-1.9.5.jar](https://github.com/nostra13/Android-Universal-Image-Loader/raw/master/downloads/universal-image-loader-1.9.5.jar)**\n * [<img src=\"https://play.google.com/intl/en_us/badges/images/apps/en-play-badge.png\" height=\"45px\" />](https://play.google.com/store/apps/details?id=com.nostra13.universalimageloader.sample) [![QR Code](https://lh3.ggpht.com/csXEddxiLgQ6FxckefjQnP1PVugbaAYOdcuTa3vVtGV1PlWbFu2dYggoH8rI1w2RdEz1=w50)](http://chart.apis.google.com/chart?chs=300x300&cht=qr&chld=|1&chl=https%3A%2F%2Fplay.google.com%2Fstore%2Fapps%2Fdetails%3Fid%3Dcom.nostra13.universalimageloader.sample) [<img src=\"https://www.javatpoint.com/fullformpages/images/apk.png\" height=\"45px\" />](https://github.com/nostra13/Android-Universal-Image-Loader/raw/master/downloads/universal-image-loader-sample-1.9.5.apk)\n\n## [Documentation](https://github.com/nostra13/Android-Universal-Image-Loader/wiki)\n * **[Quick Setup](https://github.com/nostra13/Android-Universal-Image-Loader/wiki/Quick-Setup)**\n * **[Configuration](https://github.com/nostra13/Android-Universal-Image-Loader/wiki/Configuration)**\n * **[Display Options](https://github.com/nostra13/Android-Universal-Image-Loader/wiki/Display-Options)**\n * [Useful Info](https://github.com/nostra13/Android-Universal-Image-Loader/wiki/Useful-Info) - Read it before asking a question\n * [User Support](https://github.com/nostra13/Android-Universal-Image-Loader/wiki/User-Support) - Read it before creating new issue\n * [Sample project](https://github.com/nostra13/Android-Universal-Image-Loader/tree/master/sample) - Learn it to understand the right way of library usage\n * [ChangeLog](https://github.com/nostra13/Android-Universal-Image-Loader/blob/master/CHANGELOG.md) - Info about API changes is here\n\n## Usage\n\n### Dependency\n\n```\nimplementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'\n```\n\n### Acceptable URIs examples\n``` java\n\"http://site.com/image.png\" // from Web\n\"file:///mnt/sdcard/image.png\" // from SD card\n\"file:///mnt/sdcard/video.mp4\" // from SD card (video thumbnail)\n\"content://media/external/images/media/13\" // from content provider\n\"content://media/external/video/media/13\" // from content provider (video thumbnail)\n\"assets://image.png\" // from assets\n\"drawable://\" + R.drawable.img // from drawables (non-9patch images)\n```\n**NOTE:** Use `drawable://` only if you really need it! Always **consider the native way** to load drawables - `ImageView.setImageResource(...)` instead of using of `ImageLoader`.\n\n### Simple\n``` java\nImageLoader imageLoader = ImageLoader.getInstance(); // Get singleton instance\n```\n``` java\n// Load image, decode it to Bitmap and display Bitmap in ImageView (or any other view \n//\twhich implements ImageAware interface)\nimageLoader.displayImage(imageUri, imageView);\n```\n``` java\n// Load image, decode it to Bitmap and return Bitmap to callback\nimageLoader.loadImage(imageUri, new SimpleImageLoadingListener() {\n\t@Override\n\tpublic void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {\n\t\t// Do whatever you want with Bitmap\n\t}\n});\n```\n``` java\n// Load image, decode it to Bitmap and return Bitmap synchronously\nBitmap bmp = imageLoader.loadImageSync(imageUri);\n```\n\n### Complete\n``` java\n// Load image, decode it to Bitmap and display Bitmap in ImageView (or any other view \n//\twhich implements ImageAware interface)\nimageLoader.displayImage(imageUri, imageView, options, new ImageLoadingListener() {\n\t@Override\n\tpublic void onLoadingStarted(String imageUri, View view) {\n\t\t...\n\t}\n\t@Override\n\tpublic void onLoadingFailed(String imageUri, View view, FailReason failReason) {\n\t\t...\n\t}\n\t@Override\n\tpublic void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {\n\t\t...\n\t}\n\t@Override\n\tpublic void onLoadingCancelled(String imageUri, View view) {\n\t\t...\n\t}\n}, new ImageLoadingProgressListener() {\n\t@Override\n\tpublic void onProgressUpdate(String imageUri, View view, int current, int total) {\n\t\t...\n\t}\n});\n```\n``` java\n// Load image, decode it to Bitmap and return Bitmap to callback\nImageSize targetSize = new ImageSize(80, 50); // result Bitmap will be fit to this size\nimageLoader.loadImage(imageUri, targetSize, options, new SimpleImageLoadingListener() {\n\t@Override\n\tpublic void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {\n\t\t// Do whatever you want with Bitmap\n\t}\n});\n```\n``` java\n// Load image, decode it to Bitmap and return Bitmap synchronously\nImageSize targetSize = new ImageSize(80, 50); // result Bitmap will be fit to this size\nBitmap bmp = imageLoader.loadImageSync(imageUri, targetSize, options);\n```\n\n## Load & Display Task Flow\n![Task Flow](https://github.com/nostra13/Android-Universal-Image-Loader/raw/master/wiki/UIL_Flow.png)\n\n\n## Applications using Universal Image Loader\n**[MediaHouse, UPnP/DLNA Browser](https://play.google.com/store/apps/details?id=com.dbapp.android.mediahouse)** | **[Prezzi Benzina (AndroidFuel)](https://play.google.com/store/apps/details?id=org.vernazza.androidfuel)** | **[ROM Toolbox Lite](https://play.google.com/store/apps/details?id=com.jrummy.liberty.toolbox)**, [Pro](https://play.google.com/store/apps/details?id=com.jrummy.liberty.toolboxpro) | [Stadium Astro](https://play.google.com/store/apps/details?id=com.astro.stadium.activities) | [Chef Astro](https://play.google.com/store/apps/details?id=com.sencha.test) | [Sporee - Live Soccer Scores](https://play.google.com/store/apps/details?id=com.sporee.android) | **[EyeEm - Photo Filter Camera](https://play.google.com/store/apps/details?id=com.baseapp.eyeem)** | **[Topface - meeting is easy](https://play.google.com/store/apps/details?id=com.topface.topface)** | **[reddit is fun](https://play.google.com/store/apps/details?id=com.andrewshu.android.reddit)** | **[Diaro - personal diary](https://play.google.com/store/apps/details?id=com.pixelcrater.Diaro)** | **[Meetup](https://play.google.com/store/apps/details?id=com.meetup)** | [Vingle - Magazines by Fans](https://play.google.com/store/apps/details?id=com.vingle.android) | [Anime Music Radio](https://play.google.com/store/apps/details?id=com.maxxt.animeradio) | [WidgetLocker Theme Viewer](https://play.google.com/store/apps/details?id=com.companionfree.WLThemeViewer) | [ShortBlogger for Tumblr](https://play.google.com/store/apps/details?id=com.luckydroid.tumblelog) | [SnapDish Food Camera](https://play.google.com/store/apps/details?id=com.vuzz.snapdish) | **[Twitch](https://play.google.com/store/apps/details?id=tv.twitch.android.viewer)** | [TVShow Time, TV show guide](https://play.google.com/store/apps/details?id=com.tozelabs.tvshowtime) | [Planning Center Services](https://play.google.com/store/apps/details?id=com.ministrycentered.PlanningCenter) | **[Lapse It](https://play.google.com/store/apps/details?id=com.ui.LapseIt)** | [My Cloud Player for SoundCloud](https://play.google.com/store/apps/details?id=com.mycloudplayers.mycloudplayer) | **[SoundTracking](https://play.google.com/store/apps/details?id=com.schematiclabs.soundtracking)** | [LoopLR Social Video](https://play.google.com/store/apps/details?id=com.looplr) | [H\u00edr24](https://play.google.com/store/apps/details?id=hu.sanomamedia.hir24) | **[Immobilien Scout24](https://play.google.com/store/apps/details?id=de.is24.android)** | **[Lieferheld - Pizza Pasta Sushi](https://play.google.com/store/apps/details?id=de.lieferheld.android)** | [Loocator: free sex datings](https://play.google.com/store/apps/details?id=com.ivicode.loocator) | [\ubca8\ud321-\uac1c\ud3b8 \uc774\ubca4\ud2b8,\uceec\ub7ec\ub9c1,\ubca8\uc18c\ub9ac,\ubb34\ub8cc,\ucd5c\uc2e0\uac00\uc694,\ub9c1\ud22c\uc720](https://play.google.com/store/apps/details?id=com.mediahubs.www) | [Streambels AirPlay/DLNA Player](https://play.google.com/store/apps/details?id=com.tuxera.streambels) | [Ship Mate - All Cruise Lines](https://play.google.com/store/apps/details?id=shipmate.carnival) | [Disk & Storage Analyzer](https://play.google.com/store/apps/details?id=com.mobile_infographics_tools.mydrive) | [\u7cd7\u4e8b\u767e\u79d1](https://play.google.com/store/apps/details?id=qsbk.app) | [Balance BY](https://play.google.com/store/apps/details?id=com.vladyud.balance) | **[Anti Theft Alarm - Security](https://play.google.com/store/apps/details?id=br.com.verde.alarme)** | **[XiiaLive\u2122 - Internet Radio](https://play.google.com/store/apps/details?id=com.android.DroidLiveLite)** | **[Bandsintown Concerts](https://play.google.com/store/apps/details?id=com.bandsintown)** | **[Save As Web Archive](https://play.google.com/store/apps/details?id=jp.fuukiemonster.webmemo)** | [MCPE STORE -Download MCPE file](https://play.google.com/store/apps/details?id=com.newidea.mcpestore) | **[All-In-One Toolbox (29 Tools)](http://aiotoolbox.com/)** | [Zaim](https://play.google.com/store/apps/details?id=net.zaim.android) | **[Calculator Plus Free](https://play.google.com/store/apps/details?id=com.digitalchemy.calculator.freedecimal)** | [Truedialer by Truecaller](https://play.google.com/store/apps/details?id=com.truecaller.phoneapp) | [DoggCatcher Podcast Player](https://play.google.com/store/apps/details?id=com.snoggdoggler.android.applications.doggcatcher.v1_0) | [PingTools Network Utilities](https://play.google.com/store/apps/details?id=ua.com.streamsoft.pingtools) | [The Traveler](https://play.google.com/store/apps/details?id=edu.bsu.android.apps.traveler) | [minube: travel photo album](https://play.google.com/store/apps/details?id=com.minube.app) | [Wear Store for Wear Apps](https://play.google.com/store/apps/details?id=goko.ws2) | [Cast Store for Chromecast Apps](https://play.google.com/store/apps/details?id=goko.gcs) | [WebMoney Keeper](https://play.google.com/store/apps/details?id=com.webmoney.my)\n\n## Donation\nYou can support the project and thank the author for his hard work :)\n\n* **PayPal** - nostra.uil[at]gmail[dot]com\n\n## Alternative libraries\n\n * [Fresco](https://github.com/facebook/fresco)\n * [Glide](https://github.com/bumptech/glide)\n * [Picasso](https://github.com/square/picasso)\n * [Volley : ImageLoader](https://android.googlesource.com/platform/frameworks/volley/)\n",
        "releases": []
    }
}