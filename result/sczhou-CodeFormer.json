{
    "https://api.github.com/repos/sczhou/CodeFormer": {
        "forks": 3423,
        "watchers": 16303,
        "stars": 16303,
        "languages": {
            "Python": 574609,
            "Cuda": 57299,
            "C++": 38474
        },
        "commits": [
            "2024-10-09T20:27:23Z",
            "2024-10-08T20:17:34Z",
            "2024-09-19T06:32:41Z",
            "2023-07-23T12:42:31Z",
            "2023-07-20T14:46:12Z",
            "2023-07-20T14:43:56Z",
            "2023-05-21T12:06:29Z",
            "2023-04-25T15:49:42Z",
            "2023-04-21T01:09:01Z",
            "2023-04-21T01:01:52Z",
            "2023-04-21T00:24:28Z",
            "2023-04-19T08:57:33Z",
            "2023-04-19T08:49:59Z",
            "2023-04-13T07:44:01Z",
            "2023-04-09T07:06:03Z",
            "2023-02-10T09:41:33Z",
            "2023-01-30T06:33:26Z",
            "2023-01-26T04:18:54Z",
            "2023-01-23T19:22:14Z",
            "2023-01-23T13:55:56Z",
            "2023-01-21T06:50:12Z",
            "2023-01-18T13:34:35Z",
            "2023-01-03T13:30:05Z",
            "2022-12-24T08:16:38Z",
            "2022-12-22T12:11:51Z",
            "2022-11-05T08:59:04Z",
            "2022-10-09T11:00:06Z",
            "2022-10-08T09:13:05Z",
            "2022-10-06T08:27:19Z",
            "2022-10-05T07:47:38Z"
        ],
        "creation_date": "2022-06-21T02:48:14Z",
        "contributors": 3,
        "topics": [
            "codebook",
            "codeformer",
            "face-enhancement",
            "face-restoration",
            "pytorch",
            "restoration",
            "super-resolution",
            "vqgan"
        ],
        "subscribers": 309,
        "readme": "<p align=\"center\">\n  <img src=\"assets/CodeFormer_logo.png\" height=110>\n</p>\n\n## Towards Robust Blind Face Restoration with Codebook Lookup Transformer (NeurIPS 2022)\n\n[Paper](https://arxiv.org/abs/2206.11253) | [Project Page](https://shangchenzhou.com/projects/CodeFormer/) | [Video](https://youtu.be/d3VDpkXlueI)\n\n\n<a href=\"https://colab.research.google.com/drive/1m52PNveE4PBhYrecj34cnpEeiHcC5LTb?usp=sharing\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"google colab logo\"></a> [![Hugging Face](https://img.shields.io/badge/Demo-%F0%9F%A4%97%20Hugging%20Face-blue)](https://huggingface.co/spaces/sczhou/CodeFormer) [![Replicate](https://img.shields.io/badge/Demo-%F0%9F%9A%80%20Replicate-blue)](https://replicate.com/sczhou/codeformer) [![OpenXLab](https://img.shields.io/badge/Demo-%F0%9F%90%BC%20OpenXLab-blue)](https://openxlab.org.cn/apps/detail/ShangchenZhou/CodeFormer) ![Visitors](https://api.infinitescript.com/badgen/count?name=sczhou/CodeFormer&ltext=Visitors)\n\n\n[Shangchen Zhou](https://shangchenzhou.com/), [Kelvin C.K. Chan](https://ckkelvinchan.github.io/), [Chongyi Li](https://li-chongyi.github.io/), [Chen Change Loy](https://www.mmlab-ntu.com/person/ccloy/) \n\nS-Lab, Nanyang Technological University\n\n<img src=\"assets/network.jpg\" width=\"800px\"/>\n\n\n:star: If CodeFormer is helpful to your images or projects, please help star this repo. Thanks! :hugs: \n\n\n### Update\n- **2023.07.20**: Integrated to :panda_face: [OpenXLab](https://openxlab.org.cn/apps). Try out online demo! [![OpenXLab](https://img.shields.io/badge/Demo-%F0%9F%90%BC%20OpenXLab-blue)](https://openxlab.org.cn/apps/detail/ShangchenZhou/CodeFormer)\n- **2023.04.19**: :whale: Training codes and config files are public available now.\n- **2023.04.09**: Add features of inpainting and colorization for cropped and aligned face images.\n- **2023.02.10**: Include `dlib` as a new face detector option, it produces more accurate face identity.\n- **2022.10.05**: Support video input `--input_path [YOUR_VIDEO.mp4]`. Try it to enhance your videos! :clapper: \n- **2022.09.14**: Integrated to :hugs: [Hugging Face](https://huggingface.co/spaces). Try out online demo! [![Hugging Face](https://img.shields.io/badge/Demo-%F0%9F%A4%97%20Hugging%20Face-blue)](https://huggingface.co/spaces/sczhou/CodeFormer)\n- **2022.09.09**: Integrated to :rocket: [Replicate](https://replicate.com/explore). Try out online demo! [![Replicate](https://img.shields.io/badge/Demo-%F0%9F%9A%80%20Replicate-blue)](https://replicate.com/sczhou/codeformer)\n- [**More**](docs/history_changelog.md)\n\n### TODO\n- [x] Add training code and config files\n- [x] Add checkpoint and script for face inpainting\n- [x] Add checkpoint and script for face colorization\n- [x] ~~Add background image enhancement~~\n\n#### :panda_face: Try Enhancing Old Photos / Fixing AI-arts\n[<img src=\"assets/imgsli_1.jpg\" height=\"226px\"/>](https://imgsli.com/MTI3NTE2) [<img src=\"assets/imgsli_2.jpg\" height=\"226px\"/>](https://imgsli.com/MTI3NTE1) [<img src=\"assets/imgsli_3.jpg\" height=\"226px\"/>](https://imgsli.com/MTI3NTIw) \n\n#### Face Restoration\n\n<img src=\"assets/restoration_result1.png\" width=\"400px\"/> <img src=\"assets/restoration_result2.png\" width=\"400px\"/>\n<img src=\"assets/restoration_result3.png\" width=\"400px\"/> <img src=\"assets/restoration_result4.png\" width=\"400px\"/>\n\n#### Face Color Enhancement and Restoration\n\n<img src=\"assets/color_enhancement_result1.png\" width=\"400px\"/> <img src=\"assets/color_enhancement_result2.png\" width=\"400px\"/>\n\n#### Face Inpainting\n\n<img src=\"assets/inpainting_result1.png\" width=\"400px\"/> <img src=\"assets/inpainting_result2.png\" width=\"400px\"/>\n\n\n\n### Dependencies and Installation\n\n- Pytorch >= 1.7.1\n- CUDA >= 10.1\n- Other required packages in `requirements.txt`\n```\n# git clone this repository\ngit clone https://github.com/sczhou/CodeFormer\ncd CodeFormer\n\n# create new anaconda env\nconda create -n codeformer python=3.8 -y\nconda activate codeformer\n\n# install python dependencies\npip3 install -r requirements.txt\npython basicsr/setup.py develop\nconda install -c conda-forge dlib (only for face detection or cropping with dlib)\n```\n<!-- conda install -c conda-forge dlib -->\n\n### Quick Inference\n\n#### Download Pre-trained Models:\nDownload the facelib and dlib pretrained models from [[Releases](https://github.com/sczhou/CodeFormer/releases/tag/v0.1.0) | [Google Drive](https://drive.google.com/drive/folders/1b_3qwrzY_kTQh0-SnBoGBgOrJ_PLZSKm?usp=sharing) | [OneDrive](https://entuedu-my.sharepoint.com/:f:/g/personal/s200094_e_ntu_edu_sg/EvDxR7FcAbZMp_MA9ouq7aQB8XTppMb3-T0uGZ_2anI2mg?e=DXsJFo)] to the `weights/facelib` folder. You can manually download the pretrained models OR download by running the following command:\n```\npython scripts/download_pretrained_models.py facelib\npython scripts/download_pretrained_models.py dlib (only for dlib face detector)\n```\n\nDownload the CodeFormer pretrained models from [[Releases](https://github.com/sczhou/CodeFormer/releases/tag/v0.1.0) | [Google Drive](https://drive.google.com/drive/folders/1CNNByjHDFt0b95q54yMVp6Ifo5iuU6QS?usp=sharing) | [OneDrive](https://entuedu-my.sharepoint.com/:f:/g/personal/s200094_e_ntu_edu_sg/EoKFj4wo8cdIn2-TY2IV6CYBhZ0pIG4kUOeHdPR_A5nlbg?e=AO8UN9)] to the `weights/CodeFormer` folder. You can manually download the pretrained models OR download by running the following command:\n```\npython scripts/download_pretrained_models.py CodeFormer\n```\n\n#### Prepare Testing Data:\nYou can put the testing images in the `inputs/TestWhole` folder. If you would like to test on cropped and aligned faces, you can put them in the `inputs/cropped_faces` folder. You can get the cropped and aligned faces by running the following command:\n```\n# you may need to install dlib via: conda install -c conda-forge dlib\npython scripts/crop_align_face.py -i [input folder] -o [output folder]\n```\n\n\n#### Testing:\n[Note] If you want to compare CodeFormer in your paper, please run the following command indicating `--has_aligned` (for cropped and aligned face), as the command for the whole image will involve a process of face-background fusion that may damage hair texture on the boundary, which leads to unfair comparison.\n\nFidelity weight *w* lays in [0, 1]. Generally, smaller *w* tends to produce a higher-quality result, while larger *w* yields a higher-fidelity result. The results will be saved in the `results` folder.\n\n\n\ud83e\uddd1\ud83c\udffb Face Restoration (cropped and aligned face)\n```\n# For cropped and aligned faces (512x512)\npython inference_codeformer.py -w 0.5 --has_aligned --input_path [image folder]|[image path]\n```\n\n:framed_picture: Whole Image Enhancement\n```\n# For whole image\n# Add '--bg_upsampler realesrgan' to enhance the background regions with Real-ESRGAN\n# Add '--face_upsample' to further upsample restorated face with Real-ESRGAN\npython inference_codeformer.py -w 0.7 --input_path [image folder]|[image path]\n```\n\n:clapper: Video Enhancement\n```\n# For Windows/Mac users, please install ffmpeg first\nconda install -c conda-forge ffmpeg\n```\n```\n# For video clips\n# Video path should end with '.mp4'|'.mov'|'.avi'\npython inference_codeformer.py --bg_upsampler realesrgan --face_upsample -w 1.0 --input_path [video path]\n```\n\n\ud83c\udf08 Face Colorization (cropped and aligned face)\n```\n# For cropped and aligned faces (512x512)\n# Colorize black and white or faded photo\npython inference_colorization.py --input_path [image folder]|[image path]\n```\n\n\ud83c\udfa8 Face Inpainting (cropped and aligned face)\n```\n# For cropped and aligned faces (512x512)\n# Inputs could be masked by white brush using an image editing app (e.g., Photoshop) \n# (check out the examples in inputs/masked_faces)\npython inference_inpainting.py --input_path [image folder]|[image path]\n```\n### Training:\nThe training commands can be found in the documents: [English](docs/train.md) **|** [\u7b80\u4f53\u4e2d\u6587](docs/train_CN.md).\n\n### Citation\nIf our work is useful for your research, please consider citing:\n\n    @inproceedings{zhou2022codeformer,\n        author = {Zhou, Shangchen and Chan, Kelvin C.K. and Li, Chongyi and Loy, Chen Change},\n        title = {Towards Robust Blind Face Restoration with Codebook Lookup TransFormer},\n        booktitle = {NeurIPS},\n        year = {2022}\n    }\n\n### License\n\nThis project is licensed under <a rel=\"license\" href=\"https://github.com/sczhou/CodeFormer/blob/master/LICENSE\">NTU S-Lab License 1.0</a>. Redistribution and use should follow this license.\n\n### Acknowledgement\n\nThis project is based on [BasicSR](https://github.com/XPixelGroup/BasicSR). Some codes are brought from [Unleashing Transformers](https://github.com/samb-t/unleashing-transformers), [YOLOv5-face](https://github.com/deepcam-cn/yolov5-face), and [FaceXLib](https://github.com/xinntao/facexlib). We also adopt [Real-ESRGAN](https://github.com/xinntao/Real-ESRGAN) to support background image enhancement. Thanks for their awesome works.\n\n### Contact\nIf you have any questions, please feel free to reach me out at `shangchenzhou@gmail.com`. \n",
        "releases": [
            {
                "name": "CodeFormer V0.1.0 Release",
                "date": "2022-08-10T12:54:36Z"
            }
        ]
    }
}