{
    "https://api.github.com/repos/CoderMJLee/MJRefresh": {
        "forks": 3552,
        "watchers": 13817,
        "stars": 13817,
        "languages": {
            "Objective-C": 127643,
            "Swift": 729,
            "Ruby": 674
        },
        "commits": [
            "2024-11-28T05:20:46Z",
            "2024-11-28T05:19:06Z",
            "2024-11-28T05:16:02Z",
            "2024-11-28T04:59:53Z",
            "2024-03-26T02:45:19Z",
            "2024-03-26T02:40:44Z",
            "2024-03-19T08:25:06Z",
            "2024-03-13T07:55:21Z",
            "2023-12-21T07:05:47Z",
            "2023-09-18T03:31:54Z",
            "2023-04-05T12:18:46Z",
            "2023-04-05T12:14:09Z",
            "2022-10-10T07:37:37Z",
            "2021-11-30T07:00:33Z",
            "2021-11-30T04:08:52Z",
            "2021-11-30T03:23:44Z",
            "2021-11-26T02:27:29Z",
            "2021-11-26T02:07:52Z",
            "2021-11-19T08:15:43Z",
            "2021-11-19T08:11:57Z",
            "2021-11-19T06:35:40Z",
            "2021-11-12T08:51:04Z",
            "2021-11-12T08:50:39Z",
            "2021-08-05T01:57:43Z",
            "2021-07-14T02:12:56Z",
            "2021-07-13T08:35:20Z",
            "2021-07-13T07:31:35Z",
            "2021-07-13T07:25:50Z",
            "2021-07-13T06:20:14Z",
            "2021-07-13T06:19:29Z"
        ],
        "creation_date": "2014-05-23T16:22:32Z",
        "contributors": 30,
        "topics": [
            "objective-c",
            "refresh"
        ],
        "subscribers": 445,
        "readme": "## MJRefresh\n[![SPM supported](https://img.shields.io/badge/SPM-supported-4BC51D.svg?style=flat)](https://github.com/apple/swift-package-manager)\n[![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)\n[![podversion](https://img.shields.io/cocoapods/v/MJRefresh.svg)](https://cocoapods.org/pods/MJRefresh)\n\n* An easy way to use pull-to-refresh\n\n[\ud83d\udcdc\u270d\ud83c\udffb**Release Notes**: more details](https://github.com/CoderMJLee/MJRefresh/releases)\n\n## Contents\n\n- New Features\n    - [Support Flips in CollectionViewLayout](#SupportFlipsInCollectionViewLayout)\n    - [Dynamic i18n Switching](#dynamic_i18n_switching)\n    - [SPM Supported](#spm_supported)\n    - [Swift Chaining Grammar Supported](#swift_chaining_grammar_supported)\n\n* Getting Started\n    * [Features\u3010Support what kinds of controls to refresh\u3011](#Support_what_kinds_of_controls_to_refresh)\n    * [Installation\u3010How to use MJRefresh\u3011](#How_to_use_MJRefresh)\n    * [Who's using\u3010More than hundreds of Apps are using MJRefresh\u3011](#More_than_hundreds_of_Apps_are_using_MJRefresh)\n    * [Classes\u3010The Class Structure Chart of MJRefresh\u3011](#The_Class_Structure_Chart_of_MJRefresh)\n* Comment API\n\t* [MJRefreshComponent.h](#MJRefreshComponent.h)\n\t* [MJRefreshHeader.h](#MJRefreshHeader.h)\n\t* [MJRefreshFooter.h](#MJRefreshFooter.h)\n\t* [MJRefreshAutoFooter.h](#MJRefreshAutoFooter.h)\n\t* [MJRefreshTrailer.h](#MJRefreshTrailer.h)\n* Examples\n    * [Reference](#Reference)\n    * [The drop-down refresh 01-Default](#The_drop-down_refresh_01-Default)\n    * [The drop-down refresh 02-Animation image](#The_drop-down_refresh_02-Animation_image)\n    * [The drop-down refresh 03-Hide the time](#The_drop-down_refresh_03-Hide_the_time)\n    * [The drop-down refresh 04-Hide status and time](#The_drop-down_refresh_04-Hide_status_and_time)\n    * [The drop-down refresh 05-DIY title](#The_drop-down_refresh_05-DIY_title)\n    * [The drop-down refresh 06-DIY the control of refresh](#The_drop-down_refresh_06-DIY_the_control_of_refresh)\n    * [The pull to refresh 01-Default](#The_pull_to_refresh_01-Default)\n    * [The pull to refresh 02-Animation image](#The_pull_to_refresh_02-Animation_image)\n    * [The pull to refresh 03-Hide the title of refresh status](#The_pull_to_refresh_03-Hide_the_title_of_refresh_status)\n    * [The pull to refresh 04-All loaded](#The_pull_to_refresh_04-All_loaded)\n    * [The pull to refresh 05-DIY title](#The_pull_to_refresh_05-DIY_title)\n    * [The pull to refresh 06-Hidden After loaded](#The_pull_to_refresh_06-Hidden_After_loaded)\n    * [The pull to refresh 07-Automatic back of the pull01](#The_pull_to_refresh_07-Automatic_back_of_the_pull01)\n    * [The pull to refresh 08-Automatic back of the pull02](#The_pull_to_refresh_08-Automatic_back_of_the_pull02)\n    * [The pull to refresh 09-DIY the control of refresh(Automatic refresh)](#The_pull_to_refresh_09-DIY_the_control_of_refresh(Automatic_refresh))\n    * [The pull to refresh 10-DIY the control of refresh(Automatic back)](#The_pull_to_refresh_10-DIY_the_control_of_refresh(Automatic_back))\n    * [UICollectionView01-The pull and drop-down refresh](#UICollectionView01-The_pull_and_drop-down_refresh)\n    * [UICollectionView02-The trailer refresh](#UICollectionView02-The_trailer_refresh)\n    * [WKWebView01-The drop-down refresh](#WKWebView01-The_drop-down_refresh)\n* [Hope](#Hope)\n\n## New Features\n\n### <a id=\"SupportFlipsInCollectionViewLayout\"></a>Support Flips In CollectionViewLayout\n\n> Refer to [issue #1616](https://github.com/CoderMJLee/MJRefresh/issues/1616).\n- Use `additionalFlipsViews` to append views that need to flip when collectionViewLayout flipsHorizontallyInOppositeLayoutDirection is `true`.\n- Use `flipsHorizontallyInOppositeLayoutDirectionViews` to modify views as the same way above. **\u26a0\ufe0f BUT parent class may be affected. Use `additionalFlipsViews` instead.**\n\n### <a id=\"dynamic_i18n_switching\"></a>Dynamic i18n Switching\n\nNow `MJRefresh components` will be rerendered automatically with `MJRefreshConfig.default.language` setting.\n\n#### Example\n\nGo `i18n` folder and see lots of cases. Simulator example is behind `i18n tab` in right-top corner.\n\n#### Setting language\n\n```swift\nMJRefreshConfig.default.language = \"zh-hans\"\n```\n\n#### Setting i18n file name\n\n```swift\nMJRefreshConfig.default.i18nFilename = \"i18n File Name(not include type<.strings>)\"\n```\n\n#### Setting i18n language bundle\n\n```swift\nMJRefreshConfig.default.i18nBundle = <i18n Bundle>\n```\n\n#### Adopting the feature in your DIY component\n\n1. Just override `i18nDidChange` function and reset texts.\n\n```swift\n// must use this localization methods\nBundle.mj_localizedString(forKey: \"\")\n// or\nBundle.mj_localizedString(forKey: \"\", value:\"\")\n\noverride func i18nDidChange() {\n    // Reset texts function\n    setupTexts()\n    // Make sure to call super after resetting texts. It will call placeSubViews for applying new layout.\n    super.i18nDidChange()\n}\n```\n\n2. Receiving `MJRefreshDidChangeLanguageNotification` notification.\n\n### <a id=\"spm_supported\"></a>SPM Supported\n\nReleased from [`3.7.1`](https://github.com/CoderMJLee/MJRefresh/releases/tag/3.7.1)\n\n### <a id=\"swift_chaining_grammar_supported\"></a>Swift Chaining Grammar Supported\n\n```swift\n  // Example as MJRefreshNormalHeader\n  func addRefreshHeader() {\n      MJRefreshNormalHeader { [weak self] in\n  \t  // load some data\n      }.autoChangeTransparency(true)\n      .link(to: tableView)\n  }\n```\n\n## <a id=\"Support_what_kinds_of_controls_to_refresh\"></a>Support what kinds of controls to refresh\n\n* `UIScrollView`\u3001`UITableView`\u3001`UICollectionView`\u3001`WKWebView`\n\n## <a id=\"How_to_use_MJRefresh\"></a>How to use MJRefresh\n* Installation with CocoaPods\uff1a`pod 'MJRefresh'`\n* Installation with [Carthage](https://github.com/Carthage/Carthage)\uff1a`github \"CoderMJLee/MJRefresh\"`\n* Manual import\uff1a\n    * Drag All files in the `MJRefresh` folder to project\n    * Import the main file\uff1a`#import \"MJRefresh.h\"`\n\n```objc\nBase                        Custom\nMJRefresh.bundle            MJRefresh.h\nMJRefreshConst.h            MJRefreshConst.m\nUIScrollView+MJExtension.h  UIScrollView+MJExtension.m\nUIScrollView+MJRefresh.h    UIScrollView+MJRefresh.m\nUIView+MJExtension.h        UIView+MJExtension.m\n```\n\n## <a id=\"More_than_hundreds_of_Apps_are_using_MJRefresh\"></a>More than hundreds of Apps are using MJRefresh\n<img src=\"http://images0.cnblogs.com/blog2015/497279/201506/141212365041650.png\" width=\"200\" height=\"300\">\n* More information of App can focus on\uff1a[M\u4e86\u4e2aJ-\u535a\u5ba2\u56ed](http://www.cnblogs.com/mjios/p/4409853.html)\n\n## <a id=\"The_Class_Structure_Chart_of_MJRefresh\"></a>The Class Structure Chart of MJRefresh\n![](http://images0.cnblogs.com/blog2015/497279/201506/132232456139177.png)\n- `The class of red text` in the chart\uff1aYou can use them directly\n    - The drop-down refresh control types\n        - Normal\uff1a`MJRefreshNormalHeader`\n        - Gif\uff1a`MJRefreshGifHeader`\n    - The pull to refresh control types\n        - Auto refresh\n            - Normal\uff1a`MJRefreshAutoNormalFooter`\n            - Gif\uff1a`MJRefreshAutoGifFooter`\n        - Auto Back\n            - Normal\uff1a`MJRefreshBackNormalFooter`\n            - Gif\uff1a`MJRefreshBackGifFooter`\n    \n- `The class of non-red text` in the chart\uff1aFor inheritance\uff0cto use DIY the control of refresh\n\n- About how to DIY the control of refresh\uff0cYou can refer the Class in below Chart<br>\n\n  <img src=\"http://images0.cnblogs.com/blog2015/497279/201506/141358159107893.png\" width=\"30%\" height=\"30%\">\n\n## <a id=\"MJRefreshComponent.h\"></a>MJRefreshComponent.h\n```objc\n/** The Base Class of refresh control */\n@interface MJRefreshComponent : UIView\n#pragma mark -  Control the state of Refresh \n\n/** BeginRefreshing */\n- (void)beginRefreshing;\n/** EndRefreshing */\n- (void)endRefreshing; \n/** IsRefreshing */\n- (BOOL)isRefreshing;\n\n#pragma mark - Other\n/** According to the drag ratio to change alpha automatically */\n@property (assign, nonatomic, getter=isAutomaticallyChangeAlpha) BOOL automaticallyChangeAlpha;\n@end\n```\n\n## <a id=\"MJRefreshHeader.h\"></a>MJRefreshHeader.h\n```objc\n@interface MJRefreshHeader : MJRefreshComponent\n/** create header */\n+ (instancetype)headerWithRefreshingBlock:(MJRefreshComponentRefreshingBlock)refreshingBlock;\n/** create header */\n+ (instancetype)headerWithRefreshingTarget:(id)target refreshingAction:(SEL)action;\n\n/** This key is used to storage the time that the last time of drown-down successfully */\n@property (copy, nonatomic) NSString *lastUpdatedTimeKey;\n/** The last time of drown-down successfully */\n@property (strong, nonatomic, readonly) NSDate *lastUpdatedTime;\n\n/** Ignored scrollView contentInset top */\n@property (assign, nonatomic) CGFloat ignoredScrollViewContentInsetTop;\n@end\n```\n\n## <a id=\"MJRefreshFooter.h\"></a>MJRefreshFooter.h\n```objc\n@interface MJRefreshFooter : MJRefreshComponent\n/** create footer */\n+ (instancetype)footerWithRefreshingBlock:(MJRefreshComponentRefreshingBlock)refreshingBlock;\n/** create footer */\n+ (instancetype)footerWithRefreshingTarget:(id)target refreshingAction:(SEL)action;\n\n/** NoticeNoMoreData */\n- (void)noticeNoMoreData;\n/** ResetNoMoreData\uff08Clear the status of NoMoreData \uff09 */\n- (void)resetNoMoreData;\n\n/** Ignored scrollView contentInset bottom */\n@property (assign, nonatomic) CGFloat ignoredScrollViewContentInsetBottom;\n@end\n```\n\n## <a id=\"MJRefreshAutoFooter.h\"></a>MJRefreshAutoFooter.h\n```objc\n@interface MJRefreshAutoFooter : MJRefreshFooter\n/** Is Automatically Refresh(Default is Yes) */\n@property (assign, nonatomic, getter=isAutomaticallyRefresh) BOOL automaticallyRefresh;\n\n/** When there is much at the bottom of the control is automatically refresh(Default is 1.0\uff0cIs at the bottom of the control appears in full, will refresh automatically) */\n@property (assign, nonatomic) CGFloat triggerAutomaticallyRefreshPercent;\n@end\n```\n\n## <a id=\"MJRefreshTrailer.h\"></a> MJRefreshTrailer.h\n```objc\n@interface MJRefreshTrailer : MJRefreshComponent\n\n/** \u521b\u5efatrailer */\n+ (instancetype)trailerWithRefreshingBlock:(MJRefreshComponentAction)refreshingBlock;\n/** \u521b\u5efatrailer */\n+ (instancetype)trailerWithRefreshingTarget:(id)target refreshingAction:(SEL)action;\n\n/** \u5ffd\u7565\u591a\u5c11scrollView\u7684contentInset\u7684right */\n@property (assign, nonatomic) CGFloat ignoredScrollViewContentInsetRight;\n\n@end\n```\n\n## <a id=\"Reference\"></a>Reference\n```objc\n* Due to there are more functions of this framework\uff0cDon't write specific text describe its usage\n* You can directly reference examples MJTableViewController\u3001MJCollectionViewController\u3001MJWebViewController\uff0cMore intuitive and fast.\n```\n<img src=\"http://images0.cnblogs.com/blog2015/497279/201506/141345470048120.png\" width=\"30%\" height=\"30%\">\n\n## <a id=\"The_drop-down_refresh_01-Default\"></a>The drop-down refresh 01-Default\n\n```objc\nself.tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{\n   //Call this Block When enter the refresh status automatically \n}];\n\u6216\n// Set the callback\uff08Once you enter the refresh status\uff0cthen call the action of target\uff0cthat is call [self loadNewData]\uff09\nself.tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingTarget:self refreshingAction:@selector(loadNewData)];\n\n// Enter the refresh status immediately\n[self.tableView.mj_header beginRefreshing];\n```\n![(\u4e0b\u62c9\u5237\u65b001-\u666e\u901a)](http://images0.cnblogs.com/blog2015/497279/201506/141204343486151.gif)\n\n## <a id=\"The_drop-down_refresh_02-Animation_image\"></a>The drop-down refresh 02-Animation image\n```objc\n// Set the callback\uff08\u4e00Once you enter the refresh status\uff0cthen call the action of target\uff0cthat is call [self loadNewData]\uff09\nMJRefreshGifHeader *header = [MJRefreshGifHeader headerWithRefreshingTarget:self refreshingAction:@selector(loadNewData)];\n// Set the ordinary state of animated images\n[header setImages:idleImages forState:MJRefreshStateIdle];\n// Set the pulling state of animated images\uff08Enter the status of refreshing as soon as loosen\uff09\n[header setImages:pullingImages forState:MJRefreshStatePulling];\n// Set the refreshing state of animated images\n[header setImages:refreshingImages forState:MJRefreshStateRefreshing];\n// Set header\nself.tableView.mj_header = header;\n```\n![(\u4e0b\u62c9\u5237\u65b002-\u52a8\u753b\u56fe\u7247)](http://images0.cnblogs.com/blog2015/497279/201506/141204402238389.gif)\n\n## <a id=\"The_drop-down_refresh_03-Hide_the_time\"></a>The drop-down refresh 03-Hide the time\n```objc\n// Hide the time\nheader.lastUpdatedTimeLabel.hidden = YES;\n```\n![(\u4e0b\u62c9\u5237\u65b003-\u9690\u85cf\u65f6\u95f4)](http://images0.cnblogs.com/blog2015/497279/201506/141204456132944.gif)\n\n## <a id=\"The_drop-down_refresh_04-Hide_status_and_time\"></a>The drop-down refresh 04-Hide status and time\n```objc\n// Hide the time\nheader.lastUpdatedTimeLabel.hidden = YES;\n\n// Hide the status\nheader.stateLabel.hidden = YES;\n```\n![(\u4e0b\u62c9\u5237\u65b004-\u9690\u85cf\u72b6\u6001\u548c\u65f6\u95f40)](http://images0.cnblogs.com/blog2015/497279/201506/141204508639539.gif)\n\n## <a id=\"The_drop-down_refresh_05-DIY_title\"></a>The drop-down refresh 05-DIY title\n```objc\n// Set title\n[header setTitle:@\"Pull down to refresh\" forState:MJRefreshStateIdle];\n[header setTitle:@\"Release to refresh\" forState:MJRefreshStatePulling];\n[header setTitle:@\"Loading ...\" forState:MJRefreshStateRefreshing];\n\n// Set font\nheader.stateLabel.font = [UIFont systemFontOfSize:15];\nheader.lastUpdatedTimeLabel.font = [UIFont systemFontOfSize:14];\n\n// Set textColor\nheader.stateLabel.textColor = [UIColor redColor];\nheader.lastUpdatedTimeLabel.textColor = [UIColor blueColor];\n```\n![(\u4e0b\u62c9\u5237\u65b005-\u81ea\u5b9a\u4e49\u6587\u5b57)](http://images0.cnblogs.com/blog2015/497279/201506/141204563633593.gif)\n\n## <a id=\"The_drop-down_refresh_06-DIY_the_control_of_refresh\"></a>The drop-down refresh 06-DIY the control of refresh\n```objc\nself.tableView.mj_header = [MJDIYHeader headerWithRefreshingTarget:self refreshingAction:@selector(loadNewData)];\n// Implementation reference to MJDIYHeader.h\u548cMJDIYHeader.m\n```\n![(\u4e0b\u62c9\u5237\u65b006-\u81ea\u5b9a\u4e49\u5237\u65b0\u63a7\u4ef6)](http://images0.cnblogs.com/blog2015/497279/201506/141205019261159.gif)\n\n## <a id=\"The_pull_to_refresh_01-Default\"></a>The pull to refresh 01-Default\n```objc\nself.tableView.mj_footer = [MJRefreshAutoNormalFooter footerWithRefreshingBlock:^{\n    //Call this Block When enter the refresh status automatically\n}];\n\u6216\n// Set the callback\uff08Once you enter the refresh status\uff0cthen call the action of target\uff0cthat is call [self loadMoreData]\uff09\nself.tableView.mj_footer = [MJRefreshAutoNormalFooter footerWithRefreshingTarget:self refreshingAction:@selector(loadMoreData)];\n```\n![(\u4e0a\u62c9\u5237\u65b001-\u9ed8\u8ba4)](http://images0.cnblogs.com/blog2015/497279/201506/141205090047696.gif)\n\n## <a id=\"The_pull_to_refresh_02-Animation_image\"></a>The pull to refresh 02-Animation image\n```objc\n// Set the callback\uff08Once you enter the refresh status\uff0cthen call the action of target\uff0cthat is call [self loadMoreData]\uff09\nMJRefreshAutoGifFooter *footer = [MJRefreshAutoGifFooter footerWithRefreshingTarget:self refreshingAction:@selector(loadMoreData)];\n\n// Set the refresh image\n[footer setImages:refreshingImages forState:MJRefreshStateRefreshing];\n\n// Set footer\nself.tableView.mj_footer = footer;\n```\n![(\u4e0a\u62c9\u5237\u65b002-\u52a8\u753b\u56fe\u7247)](http://images0.cnblogs.com/blog2015/497279/201506/141205141445793.gif)\n\n## <a id=\"The_pull_to_refresh_03-Hide_the_title_of_refresh_status\"></a>The pull to refresh 03-Hide the title of refresh status\n```objc\n// Hide the title of refresh status\nfooter.refreshingTitleHidden = YES;\n// If does have not above method\uff0cthen use footer.stateLabel.hidden = YES;\n```\n![(\u4e0a\u62c9\u5237\u65b003-\u9690\u85cf\u5237\u65b0\u72b6\u6001\u7684\u6587\u5b57)](http://images0.cnblogs.com/blog2015/497279/201506/141205200985774.gif)\n\n## <a id=\"The_pull_to_refresh_04-All_loaded\"></a>The pull to refresh 04-All loaded\n```objc\n//Become the status of NoMoreData\n[footer noticeNoMoreData];\n```\n![(\u4e0a\u62c9\u5237\u65b004-\u5168\u90e8\u52a0\u8f7d\u5b8c\u6bd5)](http://images0.cnblogs.com/blog2015/497279/201506/141205248634686.gif)\n\n## <a id=\"The_pull_to_refresh_05-DIY_title\"></a>The pull to refresh 05-DIY title\n```objc\n// Set title\n[footer setTitle:@\"Click or drag up to refresh\" forState:MJRefreshStateIdle];\n[footer setTitle:@\"Loading more ...\" forState:MJRefreshStateRefreshing];\n[footer setTitle:@\"No more data\" forState:MJRefreshStateNoMoreData];\n\n// Set font\nfooter.stateLabel.font = [UIFont systemFontOfSize:17];\n\n// Set textColor\nfooter.stateLabel.textColor = [UIColor blueColor];\n```\n![(\u4e0a\u62c9\u5237\u65b005-\u81ea\u5b9a\u4e49\u6587\u5b57)](http://images0.cnblogs.com/blog2015/497279/201506/141205295511153.gif)\n\n## <a id=\"The_pull_to_refresh_06-Hidden_After_loaded\"></a>The pull to refresh 06-Hidden After loaded\n```objc\n//Hidden current control of the pull to refresh\nself.tableView.mj_footer.hidden = YES;\n```\n![(\u4e0a\u62c9\u5237\u65b006-\u52a0\u8f7d\u540e\u9690\u85cf)](http://images0.cnblogs.com/blog2015/497279/201506/141205343481821.gif)\n\n## <a id=\"The_pull_to_refresh_07-Automatic_back_of_the_pull01\"></a>The pull to refresh 07-Automatic back of the pull01\n```objc\nself.tableView.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingTarget:self refreshingAction:@selector(loadMoreData)];\n```\n![(\u4e0a\u62c9\u5237\u65b007-\u81ea\u52a8\u56de\u5f39\u7684\u4e0a\u62c901)](http://images0.cnblogs.com/blog2015/497279/201506/141205392239231.gif)\n\n## <a id=\"The_pull_to_refresh_08-Automatic_back_of_the_pull02\"></a>The pull to refresh 08-Automatic back of the pull02\n```objc\nMJRefreshBackGifFooter *footer = [MJRefreshBackGifFooter footerWithRefreshingTarget:self refreshingAction:@selector(loadMoreData)];\n\n// Set the normal state of the animated image\n[footer setImages:idleImages forState:MJRefreshStateIdle];\n//  Set the pulling state of animated images\uff08Enter the status of refreshing as soon as loosen\uff09\n[footer setImages:pullingImages forState:MJRefreshStatePulling];\n// Set the refreshing state of animated images\n[footer setImages:refreshingImages forState:MJRefreshStateRefreshing];\n\n// Set footer\nself.tableView.mj_footer = footer;\n```\n![(\u4e0a\u62c9\u5237\u65b007-\u81ea\u52a8\u56de\u5f39\u7684\u4e0a\u62c902)](http://images0.cnblogs.com/blog2015/497279/201506/141205441443628.gif)\n\n## <a id=\"The_pull_to_refresh_09-DIY_the_control_of_refresh(Automatic_refresh)\"></a>The pull to refresh 09-DIY the control of refresh(Automatic refresh)\n```objc\nself.tableView.mj_footer = [MJDIYAutoFooter footerWithRefreshingTarget:self refreshingAction:@selector(loadMoreData)];\n// Implementation reference to MJDIYAutoFooter.h\u548cMJDIYAutoFooter.m\n```\n![(\u4e0a\u62c9\u5237\u65b009-\u81ea\u5b9a\u4e49\u5237\u65b0\u63a7\u4ef6(\u81ea\u52a8\u5237\u65b0))](http://images0.cnblogs.com/blog2015/497279/201506/141205500195866.gif)\n\n## <a id=\"The_pull_to_refresh_10-DIY_the_control_of_refresh(Automatic_back)\"></a>The pull to refresh 10-DIY the control of refresh(Automatic back)\n```objc\nself.tableView.mj_footer = [MJDIYBackFooter footerWithRefreshingTarget:self refreshingAction:@selector(loadMoreData)];\n// Implementation reference to MJDIYBackFooter.h\u548cMJDIYBackFooter.m\n```\n![(\u4e0a\u62c9\u5237\u65b010-\u81ea\u5b9a\u4e49\u5237\u65b0\u63a7\u4ef6(\u81ea\u52a8\u56de\u5f39))](http://images0.cnblogs.com/blog2015/497279/201506/141205560666819.gif)\n\n## <a id=\"UICollectionView01-The_pull_and_drop-down_refresh\"></a>UICollectionView01-The pull and drop-down refresh\n```objc\n// The drop-down refresh\nself.collectionView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{\n   //Call this Block When enter the refresh status automatically \n}];\n\n// The pull to refresh\nself.collectionView.mj_footer = [MJRefreshAutoNormalFooter footerWithRefreshingBlock:^{\n   //Call this Block When enter the refresh status automatically\n}];\n```\n![(UICollectionView01-\u4e0a\u4e0b\u62c9\u5237\u65b0)](http://images0.cnblogs.com/blog2015/497279/201506/141206021603758.gif)\n\n## <a id=\"UICollectionView02-The_trailer_refresh\"></a>UICollectionView02-The trailer refresh\n```objc\n// The trailer refresh\nself.collectionView.mj_trailer = [MJRefreshNormalTrailer trailerWithRefreshingBlock:^{\n   //Call this Block When enter the refresh status automatically \n}];\n\n```\n![(UICollectionView02-\u5de6\u62c9\u5237\u65b0)](Gif/trailer_refresh.gif)\n\n## <a id=\"WKWebView01-The_drop-down_refresh\"></a>WKWebView01-The drop-down refresh\n```objc\n//Add the control of The drop-down refresh\nself.webView.scrollView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{\n   //Call this Block When enter the refresh status automatically\n}];\n```\n![(UICollectionView01-\u4e0a\u4e0b\u62c9\u5237\u65b0)](http://images0.cnblogs.com/blog2015/497279/201506/141206080514524.gif)\n\n## Remind\n* ARC\n* iOS>=9.0\n* iPhone \\ iPad screen anyway\n\n## \u5bfb\u6c42\u5fd7\u540c\u9053\u5408\u7684\u5c0f\u4f19\u4f34\n\n- \u56e0\u672c\u4eba\u5de5\u4f5c\u5fd9\uff0c\u6ca1\u6709\u592a\u591a\u65f6\u95f4\u53bb\u7ef4\u62a4MJRefresh\uff0c\u5728\u6b64\u5411\u5e7f\u5927\u6846\u67b6\u4f7f\u7528\u8005\u8bf4\u58f0\uff1a\u975e\u5e38\u62b1\u6b49\uff01\ud83d\ude1e\n- \u73b0\u5bfb\u6c42\u5fd7\u540c\u9053\u5408\u7684\u5c0f\u4f19\u4f34\u4e00\u8d77\u7ef4\u62a4\u6b64\u6846\u67b6\uff0c\u6709\u5174\u8da3\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5[\u53d1\u90ae\u4ef6](mailto:richermj123go@vip.qq.com)\u7ed9\u6211\uff0c\u975e\u5e38\u611f\u8c22\ud83d\ude0a\n- \u5982\u679c\u4e00\u5207OK\uff0c\u6211\u5c06\u5f00\u653e\u6846\u67b6\u7ef4\u62a4\u6743\u9650\uff08github\u3001pod\u7b49\uff09\n- \u76ee\u524d\u5df2\u7ecf\u627e\u52303\u4f4d\u5c0f\u4f19\u4f34(\uff3e\uff0d\uff3e)V\n",
        "releases": [
            {
                "name": "3.7.9",
                "date": "2024-03-26T09:04:52Z"
            },
            {
                "name": "3.7.8",
                "date": "2024-03-19T08:35:30Z"
            },
            {
                "name": "3.7.7",
                "date": "2024-03-13T07:56:05Z"
            },
            {
                "name": "3.7.6",
                "date": "2023-04-05T12:25:11Z"
            },
            {
                "name": "3.7.5",
                "date": "2021-11-30T07:01:09Z"
            },
            {
                "name": "3.7.4",
                "date": "2021-11-30T04:09:24Z"
            },
            {
                "name": "3.7.3",
                "date": "2021-11-26T02:16:19Z"
            },
            {
                "name": "",
                "date": "2021-07-14T02:15:23Z"
            },
            {
                "name": "",
                "date": "2021-07-13T08:38:49Z"
            },
            {
                "name": "",
                "date": "2021-05-17T07:34:21Z"
            },
            {
                "name": "",
                "date": "2021-05-17T02:47:21Z"
            },
            {
                "name": "",
                "date": "2020-08-28T06:16:36Z"
            },
            {
                "name": "",
                "date": "2020-08-13T01:43:24Z"
            },
            {
                "name": "",
                "date": "2020-05-08T09:51:56Z"
            },
            {
                "name": "",
                "date": "2020-05-06T09:48:51Z"
            },
            {
                "name": "",
                "date": "2020-04-10T10:30:50Z"
            },
            {
                "name": "",
                "date": "2020-04-10T08:07:17Z"
            },
            {
                "name": "",
                "date": "2019-12-12T03:39:34Z"
            },
            {
                "name": "",
                "date": "2019-12-12T03:25:35Z"
            },
            {
                "name": "\u4fee\u6539 AutoFooter \u7684\u89e6\u53d1\u65b9\u5f0f",
                "date": "2019-11-25T02:03:56Z"
            },
            {
                "name": "",
                "date": "2019-10-31T09:46:09Z"
            },
            {
                "name": "Fix building error in Carthage",
                "date": "2019-05-06T10:27:14Z"
            },
            {
                "name": "Same as 3.1.17. Use SemVer",
                "date": "2019-05-06T03:24:17Z"
            },
            {
                "name": "\u4e3b\u8981\u4fee\u6b63\u6b63\u5728\u5237\u65b0\u65f6\u5207\u6362\u63a7\u5236\u5668\u5bfc\u81f4\u7684\u9876\u90e8 Insets \u5f02\u5e38\u7684\u95ee\u9898",
                "date": "2019-05-06T02:45:56Z"
            },
            {
                "name": "Fix UIScrollView+MJExtension.h ",
                "date": "2018-08-20T06:41:56Z"
            },
            {
                "name": "\u5373\u5c06\u5e9f\u5f03automaticallyHidden\u5c5e\u6027",
                "date": "2017-12-11T08:03:24Z"
            },
            {
                "name": "iOS11 estimatedRowHeight fix",
                "date": "2017-10-28T19:53:32Z"
            },
            {
                "name": "remove @available and warnings",
                "date": "2017-10-20T17:41:42Z"
            },
            {
                "name": "MD + Carthage",
                "date": "2017-09-28T08:14:12Z"
            },
            {
                "name": "Xcode9 + iPhoneX + iOS11\u9002\u914d",
                "date": "2017-09-27T09:44:48Z"
            },
            {
                "name": "\u4e00\u4e9b\u7ec6\u8282",
                "date": "2016-07-23T08:38:39Z"
            },
            {
                "name": "\u4e00\u4e9b\u5c0f\u95ee\u9898",
                "date": "2016-07-22T10:53:50Z"
            },
            {
                "name": "\u5934\u6587\u4ef6\u5305\u542b",
                "date": "2016-07-06T07:17:22Z"
            },
            {
                "name": "\u5bf9iOS7\u7684\u652f\u6301\u95ee\u9898",
                "date": "2016-06-22T01:43:51Z"
            },
            {
                "name": "\u672c\u5730\u5316+\u95f4\u8ddd\u95ee\u9898",
                "date": "2016-06-22T01:43:18Z"
            },
            {
                "name": "\u589e\u52a0\u5c0f\u529f\u80fd",
                "date": "2016-06-16T09:53:18Z"
            },
            {
                "name": "zh-HK\u5904\u7406",
                "date": "2016-06-15T09:13:02Z"
            },
            {
                "name": "\u5c0f\u95ee\u9898",
                "date": "2016-06-14T12:52:07Z"
            },
            {
                "name": "\u672c\u5730\u5316\u95ee\u9898",
                "date": "2016-06-14T12:52:28Z"
            },
            {
                "name": "\u4e00\u4e9b\u5c0f\u95ee\u9898",
                "date": "2016-06-13T13:37:23Z"
            },
            {
                "name": "",
                "date": "2015-06-14T09:39:21Z"
            }
        ]
    }
}