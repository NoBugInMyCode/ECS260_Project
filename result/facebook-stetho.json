{
    "https://api.github.com/repos/facebookarchive/stetho": {
        "forks": 1127,
        "watchers": 12681,
        "stars": 12681,
        "languages": {
            "Java": 824501,
            "JavaScript": 9190,
            "Python": 7672,
            "Shell": 695
        },
        "commits": [
            "2024-10-26T03:44:45Z",
            "2024-10-25T09:43:35Z",
            "2024-07-24T20:55:57Z",
            "2024-07-24T20:44:27Z",
            "2023-12-15T04:15:41Z",
            "2023-12-15T04:13:10Z",
            "2021-04-07T03:02:12Z",
            "2021-03-30T22:03:00Z",
            "2021-03-26T01:07:24Z",
            "2021-03-20T17:50:03Z",
            "2021-03-17T07:23:53Z",
            "2021-03-17T07:19:07Z",
            "2021-03-12T06:23:57Z",
            "2021-03-09T06:49:40Z",
            "2019-10-15T18:34:55Z",
            "2019-03-18T21:15:50Z",
            "2019-03-18T07:13:56Z",
            "2019-03-18T07:10:50Z",
            "2019-03-18T07:09:55Z",
            "2019-03-18T06:50:09Z",
            "2019-03-18T06:32:44Z",
            "2019-03-18T06:18:48Z",
            "2019-03-18T06:08:15Z",
            "2019-03-18T06:07:55Z",
            "2019-03-18T05:55:55Z",
            "2019-03-18T05:25:03Z",
            "2019-03-18T04:08:24Z",
            "2019-03-18T04:07:39Z",
            "2019-03-18T05:29:06Z",
            "2019-03-18T05:25:03Z"
        ],
        "creation_date": "2015-01-22T22:34:10Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 374,
        "readme": "# Stetho [![Build Status](https://travis-ci.org/facebook/stetho.svg?branch=master)](https://travis-ci.org/facebook/stetho)\n\n[Stetho](https://facebook.github.io/stetho) is a sophisticated debug bridge for Android applications. When enabled,\ndevelopers have access to the Chrome Developer Tools feature natively part of\nthe Chrome desktop browser. Developers can also choose to enable the optional\n`dumpapp` tool which offers a powerful command-line interface to application\ninternals.\n\nOnce you complete the set-up instructions below, just start your app and point\nyour laptop browser to `chrome://inspect`.  Click the \"Inspect\" button to\nbegin.\n\n## Set-up\n\n### Download\nDownload [the latest JARs](https://github.com/facebook/stetho/releases/latest) or grab via Gradle:\n```groovy\nimplementation 'com.facebook.stetho:stetho:1.6.0'\n```\nor Maven:\n```xml\n<dependency>\n  <groupId>com.facebook.stetho</groupId>\n  <artifactId>stetho</artifactId>\n  <version>1.6.0</version>\n</dependency>\n```\n\nOnly the main `stetho` dependency is strictly required; however, you may also wish to use one of the network helpers:\n\n```groovy\nimplementation 'com.facebook.stetho:stetho-okhttp3:1.6.0'\n```\nor:\n```groovy\nimplementation 'com.facebook.stetho:stetho-urlconnection:1.6.0'\n```\n\nYou can also enable a JavaScript console with:\n\n```groovy\nimplementation 'com.facebook.stetho:stetho-js-rhino:1.6.0'\n```\nFor more details on how to customize the JavaScript runtime see [stetho-js-rhino](stetho-js-rhino/).\n\n### Putting it together\nIntegrating with Stetho is intended to be seamless and straightforward for\nmost existing Android applications.  There is a simple initialization step\nwhich occurs in your `Application` class:\n\n```java\npublic class MyApplication extends Application {\n  public void onCreate() {\n    super.onCreate();\n    Stetho.initializeWithDefaults(this);\n  }\n}\n```\nAlso ensure that your `MyApplication` Java class is registered in your `AndroidManifest.xml` file, otherwise you will not see an \"Inspect\" button in `chrome://inspect/#devices` :\n\n```xml\n<manifest\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        ...>\n        <application\n                android:name=\"MyApplication\"\n                ...>\n         </application>\n</manifest>                \n```\n\nThis brings up most of the default configuration but does not enable some\nadditional hooks (most notably, network inspection).  See below for specific\ndetails on individual subsystems.\n\n### Enable network inspection\nIf you are using the popular [OkHttp](https://github.com/square/okhttp)\nlibrary at the 3.x release, you can use the\n[Interceptors](https://github.com/square/okhttp/wiki/Interceptors) system to\nautomatically hook into your existing stack.  This is currently the simplest\nand most straightforward way to enable network inspection:\n\n```java\nnew OkHttpClient.Builder()\n    .addNetworkInterceptor(new StethoInterceptor())\n    .build()\n```\n\nNote that okhttp 2.x will work as well, but with slightly different syntax and you must use the `stetho-okhttp` artifact (not `stetho-okhttp3`).\n\nAs interceptors can modify the request and response, add the Stetho interceptor after all others to get an accurate view of the network traffic.\n\nIf you are using `HttpURLConnection`, you can use `StethoURLConnectionManager`\nto assist with integration though you should be aware that there are some\ncaveats with this approach.  In particular, you must explicitly add\n`Accept-Encoding: gzip` to the request headers and manually handle compressed\nresponses in order for Stetho to report compressed payload sizes.\n\nSee the [`stetho-sample` project](stetho-sample) for more details.\n\n## Going further\n\n### Custom dumpapp plugins\nCustom plugins are the preferred means of extending the `dumpapp` system and\ncan be added easily during configuration.  Simply replace your configuration\nstep as such:\n\n```java\nStetho.initialize(Stetho.newInitializerBuilder(context)\n    .enableDumpapp(new DumperPluginsProvider() {\n      @Override\n      public Iterable<DumperPlugin> get() {\n        return new Stetho.DefaultDumperPluginsBuilder(context)\n            .provide(new MyDumperPlugin())\n            .finish();\n      }\n    })\n    .enableWebKitInspector(Stetho.defaultInspectorModulesProvider(context))\n    .build())\n```\n\nSee the [`stetho-sample` project](stetho-sample) for more details.\n\n## Improve Stetho!\nSee the [CONTRIBUTING.md](CONTRIBUTING.md) file for how to help out.\n\n## License\nStetho is MIT-licensed. See LICENSE file for more details.\n",
        "releases": [
            {
                "name": "Release 1.6.0",
                "date": "2021-03-20T21:13:22Z"
            },
            {
                "name": "Release 1.5.1",
                "date": "2019-03-18T06:27:15Z"
            },
            {
                "name": "Release 1.5.0",
                "date": "2017-04-13T21:49:14Z"
            },
            {
                "name": "Release 1.4.2",
                "date": "2016-12-15T02:47:11Z"
            },
            {
                "name": "Release 1.4.1",
                "date": "2016-09-13T20:15:19Z"
            },
            {
                "name": "Release 1.4.0",
                "date": "2016-09-08T17:56:17Z"
            },
            {
                "name": "Release 1.3.1",
                "date": "2016-02-26T00:50:41Z"
            },
            {
                "name": "Release 1.3.0",
                "date": "2016-01-21T16:56:34Z"
            },
            {
                "name": "Release 1.2.0",
                "date": "2015-09-11T23:11:49Z"
            },
            {
                "name": "Release 1.1.1",
                "date": "2015-05-01T22:23:42Z"
            },
            {
                "name": "Release 1.1.0",
                "date": "2015-04-04T03:10:21Z"
            },
            {
                "name": "",
                "date": "2015-02-27T19:43:37Z"
            },
            {
                "name": "Release 1.0.0",
                "date": "2015-02-18T17:37:18Z"
            }
        ]
    }
}