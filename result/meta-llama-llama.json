{
    "https://api.github.com/repos/facebookresearch/llama": {
        "forks": 9663,
        "watchers": 57278,
        "stars": 57278,
        "languages": {
            "Python": 45017,
            "Shell": 2544
        },
        "commits": [
            "2024-07-23T14:50:27Z",
            "2024-07-23T03:59:46Z",
            "2024-07-23T01:20:54Z",
            "2024-07-23T01:15:37Z",
            "2024-05-15T03:49:24Z",
            "2024-05-14T22:31:19Z",
            "2024-05-14T21:53:25Z",
            "2024-04-09T16:17:49Z",
            "2024-04-09T16:16:48Z",
            "2024-04-08T14:12:21Z",
            "2024-03-23T08:03:21Z",
            "2024-03-21T15:50:25Z",
            "2024-03-21T02:09:34Z",
            "2024-03-20T17:55:51Z",
            "2024-03-20T17:50:59Z",
            "2024-03-13T17:23:21Z",
            "2024-03-13T17:18:18Z",
            "2024-03-06T03:28:07Z",
            "2024-03-06T02:36:47Z",
            "2024-03-01T14:22:31Z",
            "2024-03-01T07:23:48Z",
            "2024-02-28T19:05:52Z",
            "2024-02-28T18:55:21Z",
            "2024-02-23T04:17:53Z",
            "2024-02-21T22:39:41Z",
            "2023-11-14T02:22:55Z",
            "2023-11-13T20:05:24Z",
            "2023-11-13T19:41:06Z",
            "2023-11-10T15:39:29Z",
            "2023-11-10T15:38:39Z"
        ],
        "creation_date": "2023-02-14T09:29:12Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 529,
        "readme": "## **Note of deprecation**\n\nThank you for developing with Llama models. As part of the Llama 3.1 release, we\u2019ve consolidated GitHub repos and added some additional repos as we\u2019ve expanded Llama\u2019s functionality into being an e2e Llama Stack. Please use the following repos going forward:\n- [llama-models](https://github.com/meta-llama/llama-models) - Central repo for the foundation models including basic utilities, model cards, license and use policies\n- [PurpleLlama](https://github.com/meta-llama/PurpleLlama) - Key component of Llama Stack focusing on safety risks and inference time mitigations \n- [llama-toolchain](https://github.com/meta-llama/llama-toolchain) - Model development (inference/fine-tuning/safety shields/synthetic data generation) interfaces and canonical implementations\n- [llama-agentic-system](https://github.com/meta-llama/llama-agentic-system) - E2E standalone Llama Stack system, along with opinionated underlying interface, that enables creation of agentic applications\n- [llama-recipes](https://github.com/meta-llama/llama-recipes) - Community driven scripts and integrations\n\nIf you have any questions, please feel free to file an issue on any of the above repos and we will do our best to respond in a timely manner. \n\nThank you!\n\n\n# (Deprecated) Llama 2\n\nWe are unlocking the power of large language models. Llama 2 is now accessible to individuals, creators, researchers, and businesses of all sizes so that they can experiment, innovate, and scale their ideas responsibly. \n\nThis release includes model weights and starting code for pre-trained and fine-tuned Llama language models \u2014 ranging from 7B to 70B parameters.\n\nThis repository is intended as a minimal example to load [Llama 2](https://ai.meta.com/research/publications/llama-2-open-foundation-and-fine-tuned-chat-models/) models and run inference. For more detailed examples leveraging Hugging Face, see [llama-recipes](https://github.com/facebookresearch/llama-recipes/).\n\n## Updates post-launch\n\nSee [UPDATES.md](UPDATES.md). Also for a running list of frequently asked questions, see [here](https://ai.meta.com/llama/faq/).\n\n## Download\n\nIn order to download the model weights and tokenizer, please visit the [Meta website](https://ai.meta.com/resources/models-and-libraries/llama-downloads/) and accept our License.\n\nOnce your request is approved, you will receive a signed URL over email. Then run the download.sh script, passing the URL provided when prompted to start the download.\n\nPre-requisites: Make sure you have `wget` and `md5sum` installed. Then run the script: `./download.sh`.\n\nKeep in mind that the links expire after 24 hours and a certain amount of downloads. If you start seeing errors such as `403: Forbidden`, you can always re-request a link.\n\n### Access to Hugging Face\n\nWe are also providing downloads on [Hugging Face](https://huggingface.co/meta-llama). You can request access to the models by acknowledging the license and filling the form in the model card of a repo. After doing so, you should get access to all the Llama models of a version (Code Llama, Llama 2, or Llama Guard) within 1 hour.\n\n## Quick Start\n\nYou can follow the steps below to quickly get up and running with Llama 2 models. These steps will let you run quick inference locally. For more examples, see the [Llama 2 recipes repository](https://github.com/facebookresearch/llama-recipes). \n\n1. In a conda env with PyTorch / CUDA available clone and download this repository.\n\n2. In the top-level directory run:\n    ```bash\n    pip install -e .\n    ```\n3. Visit the [Meta website](https://ai.meta.com/resources/models-and-libraries/llama-downloads/) and register to download the model/s.\n\n4. Once registered, you will get an email with a URL to download the models. You will need this URL when you run the download.sh script.\n\n5. Once you get the email, navigate to your downloaded llama repository and run the download.sh script. \n    - Make sure to grant execution permissions to the download.sh script\n    - During this process, you will be prompted to enter the URL from the email. \n    - Do not use the \u201cCopy Link\u201d option but rather make sure to manually copy the link from the email.\n\n6. Once the model/s you want have been downloaded, you can run the model locally using the command below:\n```bash\ntorchrun --nproc_per_node 1 example_chat_completion.py \\\n    --ckpt_dir llama-2-7b-chat/ \\\n    --tokenizer_path tokenizer.model \\\n    --max_seq_len 512 --max_batch_size 6\n```\n**Note**\n- Replace  `llama-2-7b-chat/` with the path to your checkpoint directory and `tokenizer.model` with the path to your tokenizer model.\n- The `\u2013nproc_per_node` should be set to the [MP](#inference) value for the model you are using.\n- Adjust the `max_seq_len` and `max_batch_size` parameters as needed.\n- This example runs the [example_chat_completion.py](example_chat_completion.py) found in this repository but you can change that to a different .py file.\n\n## Inference\n\nDifferent models require different model-parallel (MP) values:\n\n|  Model | MP |\n|--------|----|\n| 7B     | 1  |\n| 13B    | 2  |\n| 70B    | 8  |\n\nAll models support sequence length up to 4096 tokens, but we pre-allocate the cache according to `max_seq_len` and `max_batch_size` values. So set those according to your hardware.\n\n### Pretrained Models\n\nThese models are not finetuned for chat or Q&A. They should be prompted so that the expected answer is the natural continuation of the prompt.\n\nSee `example_text_completion.py` for some examples. To illustrate, see the command below to run it with the llama-2-7b model (`nproc_per_node` needs to be set to the `MP` value):\n\n```\ntorchrun --nproc_per_node 1 example_text_completion.py \\\n    --ckpt_dir llama-2-7b/ \\\n    --tokenizer_path tokenizer.model \\\n    --max_seq_len 128 --max_batch_size 4\n```\n\n### Fine-tuned Chat Models\n\nThe fine-tuned models were trained for dialogue applications. To get the expected features and performance for them, a specific formatting defined in [`chat_completion`](https://github.com/facebookresearch/llama/blob/main/llama/generation.py#L212)\nneeds to be followed, including the `INST` and `<<SYS>>` tags, `BOS` and `EOS` tokens, and the whitespaces and breaklines in between (we recommend calling `strip()` on inputs to avoid double-spaces).\n\nYou can also deploy additional classifiers for filtering out inputs and outputs that are deemed unsafe. See the llama-recipes repo for [an example](https://github.com/facebookresearch/llama-recipes/blob/main/examples/inference.py) of how to add a safety checker to the inputs and outputs of your inference code.\n\nExamples using llama-2-7b-chat:\n\n```\ntorchrun --nproc_per_node 1 example_chat_completion.py \\\n    --ckpt_dir llama-2-7b-chat/ \\\n    --tokenizer_path tokenizer.model \\\n    --max_seq_len 512 --max_batch_size 6\n```\n\nLlama 2 is a new technology that carries potential risks with use. Testing conducted to date has not \u2014 and could not \u2014 cover all scenarios.\nIn order to help developers address these risks, we have created the [Responsible Use Guide](Responsible-Use-Guide.pdf). More details can be found in our research paper as well.\n\n## Issues\n\nPlease report any software \u201cbug\u201d, or other problems with the models through one of the following means:\n- Reporting issues with the model: [github.com/facebookresearch/llama](http://github.com/facebookresearch/llama)\n- Reporting risky content generated by the model: [developers.facebook.com/llama_output_feedback](http://developers.facebook.com/llama_output_feedback)\n- Reporting bugs and security concerns: [facebook.com/whitehat/info](http://facebook.com/whitehat/info)\n\n## Model Card\nSee [MODEL_CARD.md](MODEL_CARD.md).\n\n## License\n\nOur model and weights are licensed for both researchers and commercial entities, upholding the principles of openness. Our mission is to empower individuals, and industry through this opportunity, while fostering an environment of discovery and ethical AI advancements. \n\nSee the [LICENSE](LICENSE) file, as well as our accompanying [Acceptable Use Policy](USE_POLICY.md)\n\n## References\n\n1. [Research Paper](https://ai.meta.com/research/publications/llama-2-open-foundation-and-fine-tuned-chat-models/)\n2. [Llama 2 technical overview](https://ai.meta.com/resources/models-and-libraries/llama)\n3. [Open Innovation AI Research Community](https://ai.meta.com/llama/open-innovation-ai-research-community/)\n\nFor common questions, the FAQ can be found [here](https://ai.meta.com/llama/faq/) which will be kept up to date over time as new questions arise. \n\n## Original Llama\nThe repo for the original llama release is in the [`llama_v1`](https://github.com/facebookresearch/llama/tree/llama_v1) branch.\n",
        "releases": []
    }
}