{
    "https://api.github.com/repos/doitsujin/dxvk": {
        "forks": 894,
        "watchers": 13861,
        "stars": 13861,
        "languages": {
            "C++": 5959821,
            "GLSL": 50350,
            "C": 36574,
            "Meson": 22693,
            "Shell": 4045
        },
        "commits": [
            "2025-01-21T17:42:42Z",
            "2025-01-20T21:14:11Z",
            "2025-01-20T16:26:31Z",
            "2025-01-20T16:12:32Z",
            "2025-01-16T16:46:50Z",
            "2025-01-16T11:05:17Z",
            "2025-01-15T18:02:50Z",
            "2025-01-15T17:07:17Z",
            "2025-01-15T17:05:47Z",
            "2025-01-15T16:26:58Z",
            "2025-01-15T16:18:46Z",
            "2025-01-15T17:13:17Z",
            "2025-01-14T12:47:15Z",
            "2025-01-14T12:30:21Z",
            "2025-01-13T22:56:37Z",
            "2025-01-13T13:46:10Z",
            "2025-01-13T13:05:50Z",
            "2025-01-13T11:37:20Z",
            "2025-01-13T11:37:09Z",
            "2025-01-13T10:22:25Z",
            "2025-01-13T10:32:12Z",
            "2025-01-13T10:31:35Z",
            "2025-01-12T23:27:08Z",
            "2025-01-12T23:16:50Z",
            "2025-01-12T23:16:40Z",
            "2025-01-12T23:16:08Z",
            "2025-01-12T23:01:24Z",
            "2025-01-12T23:13:38Z",
            "2025-01-12T23:01:03Z",
            "2025-01-16T09:27:36Z"
        ],
        "creation_date": "2017-10-11T13:34:29Z",
        "contributors": 30,
        "topics": [
            "d3d11",
            "d3d9",
            "dxbc",
            "gaming",
            "linux",
            "spir-v",
            "vulkan",
            "wine"
        ],
        "subscribers": 266,
        "readme": "# DXVK\n\nA Vulkan-based translation layer for Direct3D 8/9/10/11 which allows running 3D applications on Linux using Wine.\n\nFor the current status of the project, please refer to the [project wiki](https://github.com/doitsujin/dxvk/wiki).\n\nThe most recent development builds can be found [here](https://github.com/doitsujin/dxvk/actions/workflows/artifacts.yml?query=branch%3Amaster).\n\nRelease builds can be found [here](https://github.com/doitsujin/dxvk/releases).\n\n## How to use\nIn order to install a DXVK package obtained from the [release](https://github.com/doitsujin/dxvk/releases) page into a given wine prefix, copy or symlink the DLLs into the following directories as follows, then open `winecfg` and manually add `native` DLL overrides for `d3d8`, `d3d9`, `d3d10core`, `d3d11` and `dxgi` under the Libraries tab.\n\nIn a default Wine prefix that would be as follows:\n```\nexport WINEPREFIX=/path/to/wineprefix\ncp x64/*.dll $WINEPREFIX/drive_c/windows/system32\ncp x32/*.dll $WINEPREFIX/drive_c/windows/syswow64\nwinecfg\n```\n\nFor a pure 32-bit Wine prefix (non default) the 32-bit DLLs instead go to the `system32` directory:\n```\nexport WINEPREFIX=/path/to/wineprefix\ncp x32/*.dll $WINEPREFIX/drive_c/windows/system32\nwinecfg\n```\n\nVerify that your application uses DXVK instead of wined3d by enabling the HUD (see notes below).\n\nIn order to remove DXVK from a prefix, remove the DLLs and DLL overrides, and run `wineboot -u` to restore the original DLL files.\n\nTools such as Steam Play, Lutris, Bottles, Heroic Launcher, etc will automatically handle setup of dxvk on their own when enabled.\n\n#### DLL dependencies \nListed below are the DLL requirements for using DXVK with any single API.\n\n- d3d8: `d3d8.dll` and `d3d9.dll`\n- d3d9: `d3d9.dll`\n- d3d10: `d3d10core.dll`, `d3d11.dll` and `dxgi.dll`\n- d3d11: `d3d11.dll` and `dxgi.dll`\n\n### Notes on Vulkan drivers\nBefore reporting an issue, please check the [Wiki](https://github.com/doitsujin/dxvk/wiki/Driver-support) page on the current driver status and make sure you run a recent enough driver version for your hardware.\n\n### Online multi-player games\nManipulation of Direct3D libraries in multi-player games may be considered cheating and can get your account **banned**. This may also apply to single-player games with an embedded or dedicated multiplayer portion. **Use at your own risk.**\n\n### HUD\nThe `DXVK_HUD` environment variable controls a HUD which can display the framerate and some stat counters. It accepts a comma-separated list of the following options:\n- `devinfo`: Displays the name of the GPU and the driver version.\n- `fps`: Shows the current frame rate.\n- `frametimes`: Shows a frame time graph.\n- `submissions`: Shows the number of command buffers submitted per frame.\n- `drawcalls`: Shows the number of draw calls and render passes per frame.\n- `pipelines`: Shows the total number of graphics and compute pipelines.\n- `descriptors`: Shows the number of descriptor pools and descriptor sets.\n- `memory`: Shows the amount of device memory allocated and used.\n- `allocations`: Shows detailed memory chunk suballocation info.\n- `gpuload`: Shows estimated GPU load. May be inaccurate.\n- `version`: Shows DXVK version.\n- `api`: Shows the D3D feature level used by the application.\n- `cs`: Shows worker thread statistics.\n- `compiler`: Shows shader compiler activity\n- `samplers`: Shows the current number of sampler pairs used *[D3D9 Only]*\n- `ffshaders`: Shows the current number of shaders generated from fixed function state *[D3D9 Only]*\n- `swvp`: Shows whether or not the device is running in software vertex processing mode *[D3D9 Only]*\n- `scale=x`: Scales the HUD by a factor of `x` (e.g. `1.5`)\n- `opacity=y`: Adjusts the HUD opacity by a factor of `y` (e.g. `0.5`, `1.0` being fully opaque).\n\nAdditionally, `DXVK_HUD=1` has the same effect as `DXVK_HUD=devinfo,fps`, and `DXVK_HUD=full` enables all available HUD elements.\n\n### Logs\nWhen used with Wine, DXVK will print log messages to `stderr`. Additionally, standalone log files can optionally be generated by setting the `DXVK_LOG_PATH` variable, where log files in the given directory will be called `app_d3d11.log`, `app_dxgi.log` etc., where `app` is the name of the game executable.\n\nOn Windows, log files will be created in the game's working directory by default, which is usually next to the game executable.\n\n### Frame rate limit\nThe `DXVK_FRAME_RATE` environment variable can be used to limit the frame rate. A value of `0` uncaps the frame rate, while any positive value will limit rendering to the given number of frames per second. Alternatively, the configuration file can be used.\n\n### Device filter\nSome applications do not provide a method to select a different GPU. In that case, DXVK can be forced to use a given device:\n- `DXVK_FILTER_DEVICE_NAME=\"Device Name\"` Selects devices with a matching Vulkan device name, which can be retrieved with tools such as `vulkaninfo`. Matches on substrings, so \"VEGA\" or \"AMD RADV VEGA10\" is supported if the full device name is \"AMD RADV VEGA10 (LLVM 9.0.0)\", for example. If the substring matches more than one device, the first device matched will be used.\n\n**Note:** If the device filter is configured incorrectly, it may filter out all devices and applications will be unable to create a D3D device.\n\n### Debugging\nThe following environment variables can be used for **debugging** purposes.\n- `VK_INSTANCE_LAYERS=VK_LAYER_KHRONOS_validation` Enables Vulkan debug layers. Highly recommended for troubleshooting rendering issues and driver crashes. Requires the Vulkan SDK to be installed on the host system.\n- `DXVK_LOG_LEVEL=none|error|warn|info|debug` Controls message logging.\n- `DXVK_LOG_PATH=/some/directory` Changes path where log files are stored. Set to `none` to disable log file creation entirely, without disabling logging.\n- `DXVK_DEBUG=markers|validation` Enables use of the `VK_EXT_debug_utils` extension for translating performance event markers, or to enable Vulkan validation, respecticely.\n- `DXVK_CONFIG_FILE=/xxx/dxvk.conf` Sets path to the configuration file.\n- `DXVK_CONFIG=\"dxgi.hideAmdGpu = True; dxgi.syncInterval = 0\"` Can be used to set config variables through the environment instead of a configuration file using the same syntax. `;` is used as a seperator.\n\n### Graphics Pipeline Library\nOn drivers which support `VK_EXT_graphics_pipeline_library` Vulkan shaders will be compiled at the time the game loads its D3D shaders, rather than at draw time. This reduces or eliminates shader compile stutter in many games when compared to the previous system.\n\nIn games that load their shaders during loading screens or in the menu, this can lead to prolonged periods of very high CPU utilization, especially on weaker CPUs. For affected games it is recommended to wait for shader compilation to finish before starting the game to avoid stutter and low performance. Shader compiler activity can be monitored with `DXVK_HUD=compiler`.\n\nThis feature largely replaces the state cache.\n\n**Note:** Games which only load their D3D shaders at draw time (e.g. most Unreal Engine games) will still exhibit some stutter, although it should still be less severe than without this feature.\n\n### State cache\nDXVK caches pipeline state by default, so that shaders can be recompiled ahead of time on subsequent runs of an application, even if the driver's own shader cache got invalidated in the meantime. This cache is enabled by default, and generally reduces stuttering.\n\nThe following environment variables can be used to control the cache:\n- `DXVK_STATE_CACHE`: Controls the state cache. The following values are supported:\n  - `disable`: Disables the cache entirely.\n  - `reset`: Clears the cache file.\n- `DXVK_STATE_CACHE_PATH=/some/directory` Specifies a directory where to put the cache files. Defaults to the current working directory of the application.\n\nThis feature is mostly only relevant on systems without support for `VK_EXT_graphics_pipeline_library`\n\n## Build instructions\n\nIn order to pull in all submodules that are needed for building, clone the repository using the following command:\n```\ngit clone --recursive https://github.com/doitsujin/dxvk.git\n```\n\n### Requirements:\n- [wine 7.1](https://www.winehq.org/) or newer\n- [Meson](https://mesonbuild.com/) build system (at least version 0.58)\n- [Mingw-w64](https://www.mingw-w64.org) compiler and headers (at least version 10.0)\n- [glslang](https://github.com/KhronosGroup/glslang) compiler\n\n### Building DLLs\n\n#### The simple way\nInside the DXVK directory, run:\n```\n./package-release.sh master /your/target/directory --no-package\n```\n\nThis will create a folder `dxvk-master` in `/your/target/directory`, which contains both 32-bit and 64-bit versions of DXVK, which can be set up in the same way as the release versions as noted above.\n\nIn order to preserve the build directories for development, pass `--dev-build` to the script. This option implies `--no-package`. After making changes to the source code, you can then do the following to rebuild DXVK:\n```\n# change to build.32 for 32-bit\ncd /your/target/directory/build.64\nninja install\n```\n\n#### Compiling manually\n```\n# 64-bit build. For 32-bit builds, replace\n# build-win64.txt with build-win32.txt\nmeson setup --cross-file build-win64.txt --buildtype release --prefix /your/dxvk/directory build.w64\ncd build.w64\nninja install\n```\n\nThe D3D8, D3D9, D3D10, D3D11 and DXGI DLLs will be located in `/your/dxvk/directory/bin`.\n\n### Build troubleshooting\nDXVK requires threading support from your mingw-w64 build environment. If you\nare missing this, you may see \"error: \u2018std::cv_status\u2019 has not been declared\"\nor similar threading related errors.\n\nOn Debian and Ubuntu, this can be resolved by using the posix alternate, which\nsupports threading. For example, choose the posix alternate from these\ncommands:\n```\nupdate-alternatives --config x86_64-w64-mingw32-gcc\nupdate-alternatives --config x86_64-w64-mingw32-g++\nupdate-alternatives --config i686-w64-mingw32-gcc\nupdate-alternatives --config i686-w64-mingw32-g++\n```\nFor non debian based distros, make sure that your mingw-w64-gcc cross compiler \ndoes have `--enable-threads=posix` enabled during configure. If your distro does\nship its mingw-w64-gcc binary with `--enable-threads=win32` you might have to\nrecompile locally or open a bug at your distro's bugtracker to ask for it. \n\n# DXVK Native\n\nDXVK Native is a version of DXVK which allows it to be used natively without Wine.\n\nThis is primarily useful for game and application ports to either avoid having to write another rendering backend, or to help with port bringup during development.\n\n[Release builds](https://github.com/doitsujin/dxvk/releases) are built using the Steam Runtime.\n\n### How does it work?\n\nDXVK Native replaces certain Windows-isms with a platform and framework-agnostic replacement, for example, `HWND`s can become `SDL_Window*`s, etc.\nAll it takes to do that is to add another WSI backend.\n\n**Note:** DXVK Native requires a backend to be explicitly set via the `DXVK_WSI_DRIVER` environment variable. The current built-in options are `SDL3`, `SDL2`, and `GLFW`.\n\nDXVK Native comes with a slim set of Windows header definitions required for D3D9/11 and the MinGW headers for D3D9/11.\nIn most cases, it will end up being plug and play with your renderer, but there may be certain teething issues such as:\n- `__uuidof(type)` is supported, but `__uuidof(variable)` is not supported. Use `__uuidof_var(variable)` instead.\n",
        "releases": [
            {
                "name": "Version 2.5.3",
                "date": "2025-01-13T15:45:25Z"
            },
            {
                "name": "Version 2.5.2",
                "date": "2024-12-20T13:37:57Z"
            },
            {
                "name": "Version 2.5.1",
                "date": "2024-11-18T11:35:08Z"
            },
            {
                "name": "Version 2.5",
                "date": "2024-11-11T18:53:39Z"
            },
            {
                "name": "Version 2.4.1",
                "date": "2024-09-26T10:11:55Z"
            },
            {
                "name": "Version 2.4",
                "date": "2024-07-10T10:00:33Z"
            },
            {
                "name": "Version 2.3.1",
                "date": "2024-03-20T12:51:55Z"
            },
            {
                "name": "Version 2.3",
                "date": "2023-09-04T16:04:06Z"
            },
            {
                "name": "Version 2.2",
                "date": "2023-05-12T10:17:26Z"
            },
            {
                "name": "Version 2.1",
                "date": "2023-01-24T20:10:21Z"
            },
            {
                "name": "Version 2.0",
                "date": "2022-11-10T13:59:25Z"
            },
            {
                "name": "Version 1.10.3",
                "date": "2022-08-02T15:19:12Z"
            },
            {
                "name": "Version 1.10.2",
                "date": "2022-07-13T13:20:21Z"
            },
            {
                "name": "Version 1.10.1",
                "date": "2022-03-26T11:55:16Z"
            },
            {
                "name": "Version 1.10",
                "date": "2022-03-04T16:32:56Z"
            },
            {
                "name": "Version 1.9.4",
                "date": "2022-01-24T15:15:55Z"
            },
            {
                "name": "Version 1.9.3",
                "date": "2022-01-11T12:40:20Z"
            },
            {
                "name": "Version 1.9.2",
                "date": "2021-09-20T13:31:03Z"
            },
            {
                "name": "Version 1.9.1",
                "date": "2021-07-26T13:57:04Z"
            },
            {
                "name": "Version 1.9",
                "date": "2021-06-15T15:40:20Z"
            },
            {
                "name": "Version 1.8.1",
                "date": "2021-03-01T15:53:25Z"
            },
            {
                "name": "Version 1.8",
                "date": "2021-02-19T04:42:48Z"
            },
            {
                "name": "Version 1.7.3",
                "date": "2020-12-02T16:03:30Z"
            },
            {
                "name": "Version 1.7.2",
                "date": "2020-10-07T16:17:31Z"
            },
            {
                "name": "Version 1.7.1",
                "date": "2020-08-13T17:43:25Z"
            },
            {
                "name": "Version 1.7",
                "date": "2020-05-16T15:36:26Z"
            },
            {
                "name": "Version 1.6.1",
                "date": "2020-04-20T07:44:44Z"
            },
            {
                "name": "Version 1.6",
                "date": "2020-03-20T15:14:19Z"
            },
            {
                "name": "Version 1.5.5",
                "date": "2020-02-29T15:21:46Z"
            },
            {
                "name": "Version 1.5.4",
                "date": "2020-02-07T07:56:59Z"
            },
            {
                "name": "Version 1.5.3",
                "date": "2020-01-30T15:39:15Z"
            },
            {
                "name": "Version 1.5.2",
                "date": "2020-01-25T00:28:18Z"
            },
            {
                "name": "Version 1.5.1",
                "date": "2020-01-09T20:05:25Z"
            },
            {
                "name": "Version 1.5",
                "date": "2019-12-16T13:56:29Z"
            },
            {
                "name": "Version 1.4.6",
                "date": "2019-12-03T15:57:49Z"
            },
            {
                "name": "Version 1.4.5",
                "date": "2019-11-19T23:11:51Z"
            },
            {
                "name": "Version 1.4.4",
                "date": "2019-10-27T18:03:55Z"
            },
            {
                "name": "Version 1.4.3",
                "date": "2019-10-18T16:37:25Z"
            },
            {
                "name": "Version 1.4.2",
                "date": "2019-10-04T21:16:27Z"
            },
            {
                "name": "Version 1.4.1",
                "date": "2019-09-27T21:47:25Z"
            },
            {
                "name": "Version 1.4",
                "date": "2019-09-21T15:08:12Z"
            },
            {
                "name": "Version 1.3.4",
                "date": "2019-09-08T19:34:40Z"
            },
            {
                "name": "Version 1.3.3",
                "date": "2019-08-29T19:22:58Z"
            },
            {
                "name": "Version 1.3.2",
                "date": "2019-08-05T20:21:26Z"
            },
            {
                "name": "Version 1.3.1",
                "date": "2019-07-20T22:52:35Z"
            },
            {
                "name": "Version 1.3",
                "date": "2019-07-13T18:35:17Z"
            },
            {
                "name": "Version 1.2.3",
                "date": "2019-06-26T20:32:38Z"
            },
            {
                "name": "Version 1.2.2",
                "date": "2019-06-15T12:08:14Z"
            },
            {
                "name": "Version 1.2.1",
                "date": "2019-05-19T16:02:11Z"
            },
            {
                "name": "Version 1.2",
                "date": "2019-05-13T19:10:55Z"
            },
            {
                "name": "Version 1.1.1",
                "date": "2019-05-04T16:00:51Z"
            },
            {
                "name": "Version 1.0.3",
                "date": "2019-04-15T15:32:11Z"
            },
            {
                "name": "Version 1.0.2",
                "date": "2019-04-01T16:37:57Z"
            },
            {
                "name": "Version 1.0.1",
                "date": "2019-03-14T19:43:10Z"
            },
            {
                "name": "Version 1.0",
                "date": "2019-02-25T21:27:06Z"
            },
            {
                "name": "Version 0.96",
                "date": "2019-01-26T19:02:38Z"
            },
            {
                "name": "Version 0.95",
                "date": "2019-01-12T21:25:37Z"
            },
            {
                "name": "Version 0.94",
                "date": "2018-12-15T13:14:43Z"
            },
            {
                "name": "Version 0.93",
                "date": "2018-11-24T10:57:42Z"
            },
            {
                "name": "Version 0.92",
                "date": "2018-11-11T16:01:38Z"
            },
            {
                "name": "Version 0.91",
                "date": "2018-11-04T17:39:42Z"
            },
            {
                "name": "Version 0.90",
                "date": "2018-10-13T14:41:26Z"
            },
            {
                "name": "Version 0.81",
                "date": "2018-10-05T19:30:12Z"
            },
            {
                "name": "Version 0.80",
                "date": "2018-09-23T17:20:31Z"
            },
            {
                "name": "Version 0.72",
                "date": "2018-09-14T18:02:07Z"
            },
            {
                "name": "Version 0.71",
                "date": "2018-09-02T10:00:48Z"
            },
            {
                "name": "Version 0.70",
                "date": "2018-08-17T11:01:45Z"
            },
            {
                "name": "Version 0.65",
                "date": "2018-08-12T11:21:00Z"
            },
            {
                "name": "Version 0.64",
                "date": "2018-08-03T13:41:26Z"
            },
            {
                "name": "Version 0.63",
                "date": "2018-07-21T11:56:25Z"
            },
            {
                "name": "Version 0.62",
                "date": "2018-07-14T07:01:20Z"
            },
            {
                "name": "Version 0.61",
                "date": "2018-06-28T15:16:18Z"
            },
            {
                "name": "Version 0.60",
                "date": "2018-06-22T01:49:15Z"
            },
            {
                "name": "Version 0.54",
                "date": "2018-06-06T22:06:29Z"
            },
            {
                "name": "Version 0.53",
                "date": "2018-05-27T20:21:22Z"
            },
            {
                "name": "Version 0.52",
                "date": "2018-05-23T16:21:07Z"
            },
            {
                "name": "Version 0.51",
                "date": "2018-05-13T16:05:46Z"
            },
            {
                "name": "Version 0.50",
                "date": "2018-05-06T20:32:20Z"
            },
            {
                "name": "Version 0.42",
                "date": "2018-04-14T16:16:23Z"
            },
            {
                "name": "Version 0.41",
                "date": "2018-04-05T21:35:15Z"
            },
            {
                "name": "Version 0.40",
                "date": "2018-03-25T19:48:27Z"
            },
            {
                "name": "Version 0.31",
                "date": "2018-03-08T17:41:35Z"
            },
            {
                "name": "Version 0.30",
                "date": "2018-03-01T22:29:08Z"
            },
            {
                "name": "Version 0.21",
                "date": "2018-01-19T08:35:47Z"
            },
            {
                "name": "Version 0.20",
                "date": "2018-01-14T00:43:20Z"
            }
        ]
    }
}