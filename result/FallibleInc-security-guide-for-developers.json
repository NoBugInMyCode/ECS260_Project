{
    "https://api.github.com/repos/FallibleInc/security-guide-for-developers": {
        "forks": 1600,
        "watchers": 20954,
        "stars": 20954,
        "languages": {},
        "commits": [
            "2017-02-20T08:26:30Z",
            "2017-02-20T08:25:06Z",
            "2017-02-20T08:11:39Z",
            "2017-01-04T13:25:29Z",
            "2016-12-21T07:41:33Z",
            "2016-12-21T07:37:57Z",
            "2016-12-21T07:33:58Z",
            "2016-12-21T07:31:44Z",
            "2016-12-21T07:22:40Z",
            "2016-11-22T06:28:26Z",
            "2016-09-04T11:17:02Z",
            "2016-08-17T09:44:55Z",
            "2016-08-17T09:40:40Z",
            "2016-08-17T09:37:33Z",
            "2016-08-16T09:50:53Z",
            "2016-08-16T09:48:57Z",
            "2016-08-16T07:23:52Z",
            "2016-08-13T06:31:54Z",
            "2016-08-13T06:29:42Z",
            "2016-08-12T07:01:21Z",
            "2016-08-12T07:00:33Z",
            "2016-08-12T06:54:29Z",
            "2016-08-12T06:51:20Z",
            "2016-08-12T06:26:25Z",
            "2016-08-12T06:18:58Z",
            "2016-08-12T06:09:53Z",
            "2016-08-12T06:07:33Z",
            "2016-08-12T06:00:47Z",
            "2016-08-12T05:58:10Z",
            "2016-08-12T05:53:57Z"
        ],
        "creation_date": "2016-06-08T15:56:25Z",
        "contributors": 22,
        "topics": [
            "api",
            "books",
            "security",
            "security-book",
            "security-checklist"
        ],
        "subscribers": 1091,
        "readme": "# A practical security guide for web developers (Work in progress)\n\n### The intended audience\n\nSecurity issues happen for two reasons - \n\n1. Developers who have just started and cannot really tell a difference between using MD5 or bcrypt.\n2. Developers who know stuff but forget/ignore them.\n\nOur detailed explanations should help the first type while we hope our checklist helps the second one create more secure systems. This is by no means a comprehensive guide, it just covers stuff based on the most common issues we have discovered in the past.\n\n\n### Contents\n\n1. [The Security Checklist](security-checklist.md)\n2. [What can go wrong?](what-can-go-wrong.md)    \n3. [Securely transporting stuff: HTTPS explained](https.md)\n4. Authentication: I am who I say I am  \n4.1 Form based authentication  \n4.2 Basic authentication  \n4.3 One is not enough, 2 factor, 3 factor, ....   \n4.4 Why use insecure text messages? Introducing HOTP & TOTP   \n4.5 Handling password resets\n5. Authorization: What am I allowed to do?  \n5.1 Token based Authorization  \n5.2 OAuth & OAuth2  \n5.3 JWT\n6. Data Validation and Sanitation: Never trust user input  \n6.1 Validating and Sanitizing Inputs  \n6.2 Sanitizing Outputs  \n6.3 Cross Site Scripting  \n6.4 Injection Attacks  \n6.5 User uploads  \n6.6 Tamper-proof user inputs\n7. Plaintext != Encoding != Encryption != Hashing  \n7.1 Common encoding schemes  \n7.2 Encryption  \n7.3 Hashing & One way functions  \n7.4 Hashing speeds cheatsheet\n8. Passwords: dadada, 123456 and cute@123  \n8.1 Password policies  \n8.2 Storing passwords  \n8.3 Life without passwords\n9. Public Key Cryptography\n10. Sessions: Remember me, please  \n10.1 Where to save state?  \n10.2 Invalidating sessions  \n10.3 Cookie monster & you\n11. Fixing security, one header at a time  \n11.1 Secure web headers  \n11.2 Data integrity check for 3rd party code  \n11.3 Certificate Pinning\n12. Configuration mistakes    \n12.1 Provisioning in cloud: Ports, Shodan & AWS  \n12.2 Honey, you left the debug mode on  \n12.3 Logging (or not logging)  \n12.4 Monitoring  \n12.5 Principle of least privilege  \n12.6 Rate limiting & Captchas  \n12.7 Storing project secrets and passwords in a file    \n12.8 DNS: Of subdomains and forgotten pet-projects  \n12.9 Patching & Updates  \n13. Attacks: When the bad guys arrive  \n13.1 Clickjacking  \n13.2 Cross Site Request Forgery  \n13.3 Denial of Service  \n13.4 Server Side Request Forgery\n14. [Stats about vulnerabilities discovered in Internet Companies](vulnerabilities-stats.md)   \n15. On reinventing the wheel, and making it square  \n15.1 Security libraries and packages for Python  \n15.2 Security libraries and packages for Node/JS  \n15.3 Learning resources\n16. Maintaining a good security hygiene\n17. Security Vs Usability\n18. Back to Square 1: The Security Checklist explained\n\n\n\n\n### Who are we?\n\nWe are full stack developers who just grew tired of watching how developers were lowering the barrier to call something a hack by writing unsecure code. In the past six months, we have prevented leaks of more than 15 million credit card details, personal details of over 45 million users and potentially saved companies from shutting down. Recently, we discovered an issue that could result in system takeover and data leak in a bitcoin institution. We have helped several startups secure their systems, most of them for free, sometimes without even getting a thank you in response :)\n\n\n*If you disagree with something or find a bug please open an issue or file a PR. Alternatively, you can talk to us on hello@fallible.co*\n",
        "releases": []
    }
}