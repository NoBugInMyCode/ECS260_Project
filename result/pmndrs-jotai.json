{
    "https://api.github.com/repos/pmndrs/jotai": {
        "forks": 639,
        "watchers": 19253,
        "stars": 19253,
        "languages": {
            "TypeScript": 447098,
            "JavaScript": 90267,
            "CSS": 6348
        },
        "commits": [
            "2025-01-20T13:52:11Z",
            "2025-01-20T13:16:00Z",
            "2025-01-20T13:13:12Z",
            "2025-01-20T13:05:38Z",
            "2025-01-20T00:04:55Z",
            "2025-01-19T23:59:43Z",
            "2025-01-18T11:17:50Z",
            "2025-01-18T10:26:25Z",
            "2025-01-17T08:12:08Z",
            "2025-01-16T13:59:44Z",
            "2025-01-16T02:05:33Z",
            "2025-01-15T03:30:15Z",
            "2025-01-14T06:06:33Z",
            "2025-01-14T05:53:35Z",
            "2025-01-14T01:29:08Z",
            "2025-01-13T06:40:11Z",
            "2025-01-13T04:49:47Z",
            "2025-01-12T11:48:28Z",
            "2025-01-11T22:47:15Z",
            "2025-01-11T22:36:47Z",
            "2025-01-10T12:06:11Z",
            "2025-01-07T22:43:32Z",
            "2025-01-07T12:50:27Z",
            "2025-01-07T12:20:03Z",
            "2025-01-06T10:23:13Z",
            "2025-01-06T03:45:11Z",
            "2025-01-06T03:36:42Z",
            "2025-01-04T02:27:55Z",
            "2025-01-03T07:07:29Z",
            "2025-01-03T01:49:14Z"
        ],
        "creation_date": "2020-08-11T23:15:36Z",
        "contributors": 30,
        "topics": [
            "atomic",
            "hacktoberfest",
            "management",
            "react",
            "state"
        ],
        "subscribers": 66,
        "readme": "<br>\n\n![Jotai (light mode)](./img/jotai-header-light.png#gh-light-mode-only)\n![Jotai (dark mode)](./img/jotai-header-dark.png#gh-dark-mode-only)\n\n<br>\n\nvisit [jotai.org](https://jotai.org) or `npm i jotai`\n\n[![Build Status](https://img.shields.io/github/actions/workflow/status/pmndrs/jotai/lint-and-type.yml?branch=main&style=flat&colorA=000000&colorB=000000)](https://github.com/pmndrs/jotai/actions?query=workflow%3ALint)\n[![Build Size](https://img.shields.io/bundlephobia/minzip/jotai?label=bundle%20size&style=flat&colorA=000000&colorB=000000)](https://bundlephobia.com/result?p=jotai)\n[![Version](https://img.shields.io/npm/v/jotai?style=flat&colorA=000000&colorB=000000)](https://www.npmjs.com/package/jotai)\n[![Downloads](https://img.shields.io/npm/dt/jotai.svg?style=flat&colorA=000000&colorB=000000)](https://www.npmjs.com/package/jotai)\n[![Discord Shield](https://img.shields.io/discord/740090768164651008?style=flat&colorA=000000&colorB=000000&label=discord&logo=discord&logoColor=ffffff)](https://discord.gg/poimandres)\n[![Open Collective](https://img.shields.io/opencollective/all/jotai?style=flat&colorA=000000&colorB=000000)](https://opencollective.com/jotai)\n\nJotai scales from a simple useState replacement to an enterprise TypeScript application.\n\n- Minimal core API (2kb)\n- Many utilities and extensions\n- No string keys (compared to Recoil)\n\nExamples: [Demo 1](https://codesandbox.io/s/jotai-demo-47wvh) |\n[Demo 2](https://codesandbox.io/s/jotai-demo-forked-x2g5d)\n\n### First, create a primitive atom\n\nAn atom represents a piece of state. All you need is to specify an initial\nvalue, which can be primitive values like strings and numbers, objects, and\narrays. You can create as many primitive atoms as you want.\n\n```jsx\nimport { atom } from 'jotai'\n\nconst countAtom = atom(0)\nconst countryAtom = atom('Japan')\nconst citiesAtom = atom(['Tokyo', 'Kyoto', 'Osaka'])\nconst mangaAtom = atom({ 'Dragon Ball': 1984, 'One Piece': 1997, Naruto: 1999 })\n```\n\n### Use the atom in your components\n\nIt can be used like `React.useState`:\n\n```jsx\nimport { useAtom } from 'jotai'\n\nfunction Counter() {\n  const [count, setCount] = useAtom(countAtom)\n  return (\n    <h1>\n      {count}\n      <button onClick={() => setCount((c) => c + 1)}>one up</button>\n      ...\n```\n\n### Create derived atoms with computed values\n\nA new read-only atom can be created from existing atoms by passing a read\nfunction as the first argument. `get` allows you to fetch the contextual value\nof any atom.\n\n```jsx\nconst doubledCountAtom = atom((get) => get(countAtom) * 2)\n\nfunction DoubleCounter() {\n  const [doubledCount] = useAtom(doubledCountAtom)\n  return <h2>{doubledCount}</h2>\n}\n```\n\n### Creating an atom from multiple atoms\n\nYou can combine multiple atoms to create a derived atom.\n\n```jsx\nconst count1 = atom(1)\nconst count2 = atom(2)\nconst count3 = atom(3)\n\nconst sum = atom((get) => get(count1) + get(count2) + get(count3))\n```\n\nOr if you like fp patterns ...\n\n```jsx\nconst atoms = [count1, count2, count3, ...otherAtoms]\nconst sum = atom((get) => atoms.map(get).reduce((acc, count) => acc + count))\n```\n\n### Derived async atoms [<img src=\"https://img.shields.io/badge/-needs_suspense-black\" alt=\"needs suspense\" />](https://react.dev/reference/react/Suspense)\n\nYou can make the read function an async function too.\n\n```jsx\nconst urlAtom = atom('https://json.host.com')\nconst fetchUrlAtom = atom(async (get) => {\n  const response = await fetch(get(urlAtom))\n  return await response.json()\n})\n\nfunction Status() {\n  // Re-renders the component after urlAtom is changed and the async function above concludes\n  const [json] = useAtom(fetchUrlAtom)\n  ...\n```\n\n### You can create a writable derived atom\n\nSpecify a write function at the second argument. `get` will return the current\nvalue of an atom. `set` will update the value of an atom.\n\n```jsx\nconst decrementCountAtom = atom(\n  (get) => get(countAtom),\n  (get, set, _arg) => set(countAtom, get(countAtom) - 1)\n)\n\nfunction Counter() {\n  const [count, decrement] = useAtom(decrementCountAtom)\n  return (\n    <h1>\n      {count}\n      <button onClick={decrement}>Decrease</button>\n      ...\n```\n\n### Write only derived atoms\n\nJust do not define a read function.\n\n```jsx\nconst multiplyCountAtom = atom(null, (get, set, by) =>\n  set(countAtom, get(countAtom) * by),\n)\n\nfunction Controls() {\n  const [, multiply] = useAtom(multiplyCountAtom)\n  return <button onClick={() => multiply(3)}>triple</button>\n}\n```\n\n### Async actions\n\nJust make the write function an async function and call `set` when you're ready.\n\n```jsx\nconst fetchCountAtom = atom(\n  (get) => get(countAtom),\n  async (_get, set, url) => {\n    const response = await fetch(url)\n    set(countAtom, (await response.json()).count)\n  }\n)\n\nfunction Controls() {\n  const [count, compute] = useAtom(fetchCountAtom)\n  return (\n    <button onClick={() => compute('http://count.host.com')}>compute</button>\n    ...\n```\n\n### Note about functional programming\n\nJotai's fluid interface is no accident \u2014 atoms are monads, just like promises!\nMonads are an [established](<https://en.wikipedia.org/wiki/Monad_(functional_programming)>)\npattern for modular, pure, robust and understandable code which is [optimized for change](https://overreacted.io/optimized-for-change/).\nRead more about [Jotai and monads.](https://jotai.org/docs/basics/functional-programming-and-jotai)\n\n## Links\n\n- [website](https://jotai.org)\n- [documentation](https://jotai.org/docs)\n- [course](https://egghead.io/courses/manage-application-state-with-jotai-atoms-2c3a29f0)\n",
        "releases": [
            {
                "name": "v2.11.1",
                "date": "2025-01-20T13:30:39Z"
            },
            {
                "name": "v2.11.0",
                "date": "2024-12-23T06:05:40Z"
            },
            {
                "name": "v2.10.4",
                "date": "2024-12-16T14:26:46Z"
            },
            {
                "name": "v2.10.3",
                "date": "2024-11-20T12:27:30Z"
            },
            {
                "name": "v2.10.2",
                "date": "2024-11-11T11:36:52Z"
            },
            {
                "name": "v2.10.1",
                "date": "2024-10-15T11:23:53Z"
            },
            {
                "name": "v2.10.0",
                "date": "2024-09-20T01:37:16Z"
            },
            {
                "name": "v2.9.3",
                "date": "2024-08-13T02:49:14Z"
            },
            {
                "name": "v2.9.2",
                "date": "2024-08-07T12:08:31Z"
            },
            {
                "name": "v2.9.1",
                "date": "2024-07-23T09:40:05Z"
            },
            {
                "name": "v2.9.0",
                "date": "2024-07-09T03:20:44Z"
            },
            {
                "name": "v2.8.4",
                "date": "2024-06-28T03:54:16Z"
            },
            {
                "name": "v2.8.3",
                "date": "2024-06-03T14:23:39Z"
            },
            {
                "name": "v2.8.2",
                "date": "2024-05-27T11:58:04Z"
            },
            {
                "name": "v2.8.1",
                "date": "2024-05-22T01:33:59Z"
            },
            {
                "name": "v2.8.0",
                "date": "2024-04-08T04:15:33Z"
            },
            {
                "name": "v2.7.2",
                "date": "2024-03-29T12:16:57Z"
            },
            {
                "name": "v2.7.1",
                "date": "2024-03-15T05:45:22Z"
            },
            {
                "name": "v2.7.0",
                "date": "2024-02-28T03:53:03Z"
            },
            {
                "name": "v2.6.5",
                "date": "2024-02-21T15:46:32Z"
            },
            {
                "name": "v2.6.4",
                "date": "2024-01-31T15:38:49Z"
            },
            {
                "name": "v2.6.3",
                "date": "2024-01-24T12:08:19Z"
            },
            {
                "name": "v2.6.2",
                "date": "2024-01-16T05:58:06Z"
            },
            {
                "name": "v2.6.1",
                "date": "2023-12-28T15:30:49Z"
            },
            {
                "name": "v2.6.0",
                "date": "2023-11-25T02:34:37Z"
            },
            {
                "name": "v2.5.1",
                "date": "2023-11-05T11:49:52Z"
            },
            {
                "name": "v2.5.0",
                "date": "2023-10-23T13:51:34Z"
            },
            {
                "name": "v2.4.3",
                "date": "2023-09-27T15:33:51Z"
            },
            {
                "name": "v2.4.2",
                "date": "2023-09-07T14:48:17Z"
            },
            {
                "name": "v2.4.1",
                "date": "2023-08-31T13:25:04Z"
            },
            {
                "name": "v2.4.0",
                "date": "2023-08-23T12:46:19Z"
            },
            {
                "name": "v2.3.1",
                "date": "2023-08-08T02:30:05Z"
            },
            {
                "name": "v2.3.0",
                "date": "2023-08-07T01:52:21Z"
            },
            {
                "name": "v2.2.3",
                "date": "2023-07-31T03:17:53Z"
            },
            {
                "name": "v2.2.2",
                "date": "2023-07-05T14:42:27Z"
            },
            {
                "name": "v2.2.1",
                "date": "2023-06-19T01:51:38Z"
            },
            {
                "name": "v2.2.0",
                "date": "2023-06-12T11:03:06Z"
            },
            {
                "name": "v2.1.1",
                "date": "2023-06-03T15:01:18Z"
            },
            {
                "name": "v2.1.0",
                "date": "2023-05-06T03:54:49Z"
            },
            {
                "name": "v2.0.4",
                "date": "2023-04-10T03:42:38Z"
            },
            {
                "name": "v2.0.3",
                "date": "2023-03-02T09:49:55Z"
            },
            {
                "name": "v2.0.2",
                "date": "2023-02-16T13:54:28Z"
            },
            {
                "name": "v2.0.1",
                "date": "2023-02-09T14:37:51Z"
            },
            {
                "name": "v2.0.0",
                "date": "2023-01-31T12:59:20Z"
            },
            {
                "name": "v1.13.1",
                "date": "2023-01-16T13:11:31Z"
            },
            {
                "name": "v1.13.0",
                "date": "2023-01-10T12:15:08Z"
            },
            {
                "name": "v1.12.1",
                "date": "2022-12-30T11:03:17Z"
            },
            {
                "name": "v1.12.0",
                "date": "2022-12-20T04:41:53Z"
            },
            {
                "name": "v1.11.2",
                "date": "2022-12-12T10:06:57Z"
            },
            {
                "name": "v1.11.1",
                "date": "2022-12-06T13:24:22Z"
            },
            {
                "name": "v1.11.0",
                "date": "2022-12-01T13:23:38Z"
            },
            {
                "name": "v1.10.0",
                "date": "2022-11-17T13:48:51Z"
            },
            {
                "name": "v1.9.2",
                "date": "2022-11-10T09:20:19Z"
            },
            {
                "name": "v1.9.1",
                "date": "2022-11-01T07:19:20Z"
            },
            {
                "name": "v1.9.0",
                "date": "2022-10-27T01:07:32Z"
            },
            {
                "name": "v1.8.6",
                "date": "2022-10-18T09:49:48Z"
            },
            {
                "name": "v1.8.5",
                "date": "2022-10-07T12:14:32Z"
            },
            {
                "name": "v1.8.4",
                "date": "2022-09-19T12:05:58Z"
            },
            {
                "name": "v1.8.3",
                "date": "2022-09-06T12:59:00Z"
            },
            {
                "name": "v1.8.2",
                "date": "2022-08-30T05:17:25Z"
            },
            {
                "name": "v1.8.1",
                "date": "2022-08-26T02:56:31Z"
            },
            {
                "name": "v1.8.0",
                "date": "2022-08-19T10:16:09Z"
            },
            {
                "name": "v1.7.8",
                "date": "2022-08-08T00:40:07Z"
            },
            {
                "name": "v1.7.7",
                "date": "2022-08-01T05:51:26Z"
            },
            {
                "name": "v1.7.6",
                "date": "2022-07-20T11:17:51Z"
            },
            {
                "name": "v1.7.5",
                "date": "2022-07-15T16:10:43Z"
            },
            {
                "name": "v1.7.4",
                "date": "2022-07-08T12:08:30Z"
            },
            {
                "name": "v1.7.3",
                "date": "2022-06-29T23:50:27Z"
            },
            {
                "name": "v1.7.2",
                "date": "2022-06-10T12:51:19Z"
            },
            {
                "name": "v1.7.1",
                "date": "2022-06-02T13:10:09Z"
            },
            {
                "name": "v1.7.0",
                "date": "2022-05-28T13:49:42Z"
            },
            {
                "name": "v1.6.7",
                "date": "2022-05-19T02:44:45Z"
            },
            {
                "name": "v1.6.6",
                "date": "2022-05-10T13:03:58Z"
            },
            {
                "name": "v1.6.5",
                "date": "2022-04-28T14:57:28Z"
            },
            {
                "name": "v1.6.4",
                "date": "2022-04-15T14:14:08Z"
            },
            {
                "name": "v1.6.3",
                "date": "2022-04-09T14:15:39Z"
            },
            {
                "name": "v1.6.2",
                "date": "2022-04-05T03:10:46Z"
            },
            {
                "name": "v1.6.1",
                "date": "2022-03-09T15:26:09Z"
            },
            {
                "name": "v1.6.0",
                "date": "2022-02-11T13:12:41Z"
            },
            {
                "name": "v1.5.3",
                "date": "2022-01-18T07:20:44Z"
            },
            {
                "name": "v1.5.2",
                "date": "2022-01-12T12:01:55Z"
            },
            {
                "name": "v1.5.1",
                "date": "2022-01-11T00:04:32Z"
            },
            {
                "name": "v1.5.0",
                "date": "2021-12-30T11:35:31Z"
            },
            {
                "name": "v1.4.9",
                "date": "2021-12-20T11:33:52Z"
            },
            {
                "name": "v1.4.8",
                "date": "2021-12-16T13:00:49Z"
            },
            {
                "name": "v1.4.7",
                "date": "2021-12-08T11:57:24Z"
            },
            {
                "name": "v1.4.6",
                "date": "2021-11-30T12:18:53Z"
            },
            {
                "name": "v1.4.5",
                "date": "2021-11-24T11:46:16Z"
            },
            {
                "name": "v1.4.4",
                "date": "2021-11-19T09:36:48Z"
            },
            {
                "name": "v1.4.3",
                "date": "2021-11-07T12:54:15Z"
            },
            {
                "name": "v1.4.2",
                "date": "2021-10-25T11:21:07Z"
            },
            {
                "name": "v1.4.1",
                "date": "2021-10-23T12:59:12Z"
            },
            {
                "name": "v1.4.0",
                "date": "2021-10-14T12:31:32Z"
            },
            {
                "name": "v1.3.9",
                "date": "2021-10-10T13:01:22Z"
            },
            {
                "name": "v1.3.8",
                "date": "2021-10-07T11:06:11Z"
            },
            {
                "name": "v1.3.7",
                "date": "2021-10-01T14:13:57Z"
            },
            {
                "name": "v1.3.6",
                "date": "2021-09-24T13:31:30Z"
            },
            {
                "name": "v1.3.5",
                "date": "2021-09-17T09:58:27Z"
            },
            {
                "name": "v1.3.4",
                "date": "2021-09-13T13:03:19Z"
            },
            {
                "name": "v1.3.3",
                "date": "2021-09-09T14:37:03Z"
            },
            {
                "name": "v1.3.2",
                "date": "2021-08-27T14:39:25Z"
            },
            {
                "name": "v1.3.1",
                "date": "2021-08-25T15:48:39Z"
            },
            {
                "name": "v1.3.0",
                "date": "2021-08-10T10:03:37Z"
            },
            {
                "name": "v1.2.2",
                "date": "2021-07-21T11:55:15Z"
            },
            {
                "name": "v1.2.1",
                "date": "2021-07-16T14:07:24Z"
            },
            {
                "name": "v1.2.0",
                "date": "2021-07-15T11:43:06Z"
            },
            {
                "name": "v1.1.3",
                "date": "2021-07-09T14:03:53Z"
            },
            {
                "name": "v1.1.2",
                "date": "2021-07-01T16:04:02Z"
            },
            {
                "name": "v1.1.1",
                "date": "2021-06-28T13:55:11Z"
            },
            {
                "name": "v1.1.0",
                "date": "2021-06-25T12:35:02Z"
            },
            {
                "name": "v1.0.1",
                "date": "2021-06-23T15:45:13Z"
            },
            {
                "name": "v1.0.0",
                "date": "2021-06-14T14:47:59Z"
            }
        ]
    }
}