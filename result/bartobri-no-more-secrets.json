{
    "https://api.github.com/repos/bartobri/no-more-secrets": {
        "forks": 294,
        "watchers": 7564,
        "stars": 7564,
        "languages": {
            "C": 36657,
            "Roff": 2247,
            "Makefile": 1539
        },
        "commits": [
            "2024-11-05T02:04:37Z",
            "2024-11-05T02:03:40Z",
            "2023-02-17T17:18:55Z",
            "2023-02-17T16:37:40Z",
            "2022-06-30T17:06:40Z",
            "2022-06-30T17:04:03Z",
            "2022-06-30T17:00:46Z",
            "2022-06-14T18:13:46Z",
            "2021-12-09T22:22:55Z",
            "2021-09-24T19:02:46Z",
            "2021-09-24T19:00:45Z",
            "2021-09-24T18:42:54Z",
            "2021-06-22T12:10:58Z",
            "2021-06-22T03:47:24Z",
            "2021-02-25T13:40:05Z",
            "2021-02-25T06:52:35Z",
            "2021-01-30T00:07:51Z",
            "2021-01-29T09:55:42Z",
            "2020-06-20T22:41:48Z",
            "2019-03-25T22:29:10Z",
            "2019-03-25T22:17:02Z",
            "2019-03-02T20:23:56Z",
            "2019-02-13T00:06:42Z",
            "2018-10-26T20:48:54Z",
            "2018-10-25T02:47:26Z",
            "2018-10-25T02:20:33Z",
            "2018-10-25T02:05:40Z",
            "2018-10-25T02:02:35Z",
            "2018-10-25T01:50:42Z",
            "2018-10-25T01:44:48Z"
        ],
        "creation_date": "2016-04-04T20:41:05Z",
        "contributors": 17,
        "topics": [
            "effect",
            "hacker",
            "matrix",
            "movie",
            "sneakers",
            "terminal"
        ],
        "subscribers": 127,
        "readme": "![Version](https://img.shields.io/badge/Version-1.0.1-green.svg)\n\nLike this project? Consider tipping me: [https://github.com/sponsors/bartobri](https://github.com/sponsors/bartobri)\n\nNo More Secrets\n===============\n\nThis project provides a command line tool called `nms` that recreates the\nfamous data decryption effect seen on screen in the 1992 hacker movie Sneakers.\nFor reference, you can see this effect at 0:35 in [this movie clip](https://www.youtube.com/watch?v=F5bAa6gFvLs&t=35).\n\nThis command works on piped data. Pipe any ASCII or UTF-8 text to `nms`,\nand it will apply the Hollywood effect, initially showing encrypted data,\nthen starting a decryption sequence to reveal the original plain-text characters.\n\n![Screenshot](http://www.brianbarto.info/static/nms/nms.gif)\n\nAlso included in this project is a program called `sneakers` that recreates\nwhat we see in the above movie clip. Note that this program requires the\nuser to select one of the menu options before it terminates.\n\n![Screenshot](http://www.brianbarto.info/static/nms/sneakers.gif)\n\nBy default, this project has no dependencies, but it does rely on ANSI/VT100\nterminal escape sequences to recreate the effect. Most modern terminal\nprograms support these sequences so this should not be an issue for most\nusers. If yours does not, this project also provides a ncurses implementation\nwhich supports non-ANSI terminals, but at the expense of losing the inline\nfunctionality (ncurses will always clear the screen prior to displaying output).\n\nTable of Contents\n-----------------\n\n1. [Download and Install](#download-and-install)\n2. [Usage](#usage)\n3. [The NMS Library](#the-nms-library)\n4. [License](#license)\n\nDownload and Install\n--------------------\n\nMore and more Unix/Linux platforms are including this project in their\npackage manager. You may wish to search your package manager to see if it\nis an installation option. If you install from a package manager, please\ncheck that you have the latest version (`nms -v`). If not, I suggest\ninstalling from source by following the instructions below.\n\nTo install this project from source, you will need to have the tools `git`,\n`gcc`, and `make` to download and build it. Install them from your package\nmanager if they are not already installed.\n\nOnce you have the necessary tools installed, follow these instructions:\n\n#### Install:\n```\n$ git clone https://github.com/bartobri/no-more-secrets.git\n$ cd ./no-more-secrets\n$ make nms\n$ make sneakers             ## Optional\n$ sudo make install\n```\n\n#### Uninstall:\n\n```\n$ sudo make uninstall\n```\n\n#### Install with Ncurses Support\n\nIf your terminal does not support ANSI/VT100 escape sequences, the effect\nmay not render properly. This project provides a ncurses implementation\nfor such cases. You will need the ncurses library installed. [Install this\nlibrary from your package manager](NCURSES.md). Next, follow these instructions:\n\n```\n$ git clone https://github.com/bartobri/no-more-secrets.git\n$ cd ./no-more-secrets\n$ make nms-ncurses\n$ make sneakers-ncurses     ## Optional\n$ sudo make install\n```\n\nUsage\n-----\n\n`nms` works on piped data. Pipe any ASCII or UTF-8 characters to it and\nenjoy the magic. In the below examples, I use a simple directory listing.\n\n```\n$ ls -l | nms\n$ ls -l | nms -a           // Set auto-decrypt flag\n$ ls -l | nms -s           // Set flag to mask space characters\n$ ls -l | nms -f green     // Set foreground color to green\n$ ls -l | nms -c           // Clear screen\n$ nms -v                   // Display version\n```\n\nNote that by default, after the initial encrypted characters are displayed,\n`nms` will wait for the user to press a key before initiating the decryption\nsequence. This is how the it is depicted in the movie.\n\n#### Command Line Options\n\n`-a`\n\nSet the auto-decrypt flag. This will automatically start the\ndecryption sequence without requiring a key press.\n\n`-s`\n\nSet a flag to mask space characters. This will only mask single blank space\ncharacters. Other space characters such as tabs and newlines will not be masked.\n\n`-f <color>`\n\nSet the foreground color of the decrypted text to the color\nspecified. Valid options are white, yellow, black, magenta, blue, green,\nor red. This is blue by default.\n\n`-c`\n\nClear the screen prior to printing any output. Specifically,\nit saves the state of the terminal (all current output), and restores it\nonce the effect is completed. Note that when using this option, `nms` requires\nthe user to press a key before restoring the terminal.\n\n`-v`\n\nDisplay version info.\n\nThe NMS Library\n---------------\n\nFor those who would like to use this effect in their own projects, I have\ncreated a C library that provides simple interface and can easily be used\nfor any program that runs from the command line.\n\nSee [LibNMS](https://github.com/bartobri/libnms) for more info.\n\nLicense\n-------\n\nThis program is free software; you can redistribute it and/or modify it\nunder the terms of the GNU General Public License. See [LICENSE](LICENSE) for\nmore details.\n",
        "releases": [
            {
                "name": "Release Version 1.0.1",
                "date": "2021-09-24T19:04:18Z"
            },
            {
                "name": "Release Version 1.0.0",
                "date": "2021-09-24T18:59:26Z"
            },
            {
                "name": "Release Version 0.3.3",
                "date": "2017-09-21T13:27:57Z"
            },
            {
                "name": "Release Version 0.3.2",
                "date": "2017-02-19T18:34:00Z"
            },
            {
                "name": "Update to 0.3.1",
                "date": "2017-02-18T22:05:25Z"
            }
        ]
    }
}