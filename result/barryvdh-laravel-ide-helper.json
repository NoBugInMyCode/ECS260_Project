{
    "https://api.github.com/repos/barryvdh/laravel-ide-helper": {
        "forks": 1172,
        "watchers": 14340,
        "stars": 14340,
        "languages": {
            "PHP": 611033
        },
        "commits": [
            "2025-01-14T09:07:42Z",
            "2025-01-14T09:07:00Z",
            "2025-01-08T12:50:47Z",
            "2025-01-08T10:03:44Z",
            "2025-01-08T10:01:30Z",
            "2025-01-08T10:00:53Z",
            "2025-01-08T10:00:41Z",
            "2025-01-06T15:42:30Z",
            "2025-01-06T15:29:58Z",
            "2025-01-06T14:09:45Z",
            "2025-01-06T14:08:47Z",
            "2025-01-06T13:53:52Z",
            "2025-01-03T14:21:18Z",
            "2025-01-01T12:17:43Z",
            "2025-01-01T12:17:20Z",
            "2025-01-01T09:44:43Z",
            "2024-12-31T16:18:28Z",
            "2024-12-30T14:06:36Z",
            "2024-12-30T11:58:28Z",
            "2024-12-30T11:42:35Z",
            "2024-12-30T11:03:45Z",
            "2024-12-30T09:31:30Z",
            "2024-12-29T18:44:30Z",
            "2024-12-29T18:44:08Z",
            "2024-12-29T13:26:59Z",
            "2024-12-29T12:10:58Z",
            "2024-12-29T11:56:55Z",
            "2024-12-29T11:11:06Z",
            "2024-12-29T11:03:42Z",
            "2024-12-29T10:57:30Z"
        ],
        "creation_date": "2013-03-10T00:12:55Z",
        "contributors": 30,
        "topics": [
            "autocompletion",
            "hacktoberfest",
            "laravel"
        ],
        "subscribers": 264,
        "readme": "# IDE Helper Generator for Laravel\n\n[![Tests](https://github.com/barryvdh/laravel-ide-helper/actions/workflows/run-tests.yml/badge.svg)](https://github.com/barryvdh/laravel-ide-helper/actions)\n[![Packagist License](https://img.shields.io/badge/Licence-MIT-blue)](http://choosealicense.com/licenses/mit/)\n[![Latest Stable Version](https://img.shields.io/packagist/v/barryvdh/laravel-ide-helper?label=Stable)](https://packagist.org/packages/barryvdh/laravel-ide-helper)\n[![Total Downloads](https://img.shields.io/packagist/dt/barryvdh/laravel-ide-helper?label=Downloads)](https://packagist.org/packages/barryvdh/laravel-ide-helper)\n[![Fruitcake](https://img.shields.io/badge/Powered%20By-Fruitcake-b2bc35.svg)](https://fruitcake.nl/)\n\n**Complete PHPDocs, directly from the source**\n\nThis package generates helper files that enable your IDE to provide accurate autocompletion.\nGeneration is done based on the files in your project, so they are always up-to-date.\n\nThe 3.x branch supports Laravel 10 and 11. For older version, use the 2.x releases.\n\n- [Installation](#installation)\n- [Usage](#usage)\n  - [Automatic PHPDoc generation for Laravel Facades](#automatic-phpdoc-generation-for-laravel-facades)\n  - [Automatic PHPDocs for models](#automatic-phpdocs-for-models)\n    - [Model Directories](#model-directories)\n    - [Ignore Models](#ignore-models)\n    - [Model Hooks](#model-hooks)\n  - [Automatic PHPDocs generation for Laravel Fluent methods](#automatic-phpdocs-generation-for-laravel-fluent-methods)\n  - [Auto-completion for factory builders](#auto-completion-for-factory-builders)\n  - [PhpStorm Meta for Container instances](#phpstorm-meta-for-container-instances)\n- [License](#license)\n\n## Installation\n\nRequire this package with composer using the following command:\n\n```bash\ncomposer require --dev barryvdh/laravel-ide-helper\n```\n\n\n## Usage\n\n### TL;DR\n\nRun this to generate autocompletion for Facades. This creates _ide_helper.php\n\n```\nphp artisan ide-helper:generate\n```\n\nRun this to add phpdocs for your models. Add -RW to Reset existing phpdocs and Write to the models directly.\n```\nphp artisan ide-helper:models -RW\n```\n\nIf you don't want the full _ide_helper.php file, you can run add `--write-eloquent-helper` to the model command to generate small version, which is required for the `@mixin \\Eloquent` to be able to add the QueryBuilder methods.\n\nIf you don't want to add all the phpdocs to your Models directly, you can use `--nowrite` to create a seperate file. The  `--write-mixin` option can be used to only add a `@mixin` to your models, but add the generated phpdocs in a seperate file. This avoids having the results marked as duplicate.\n\n\n_Check out [this Laracasts video](https://laracasts.com/series/how-to-be-awesome-in-phpstorm/episodes/15) for a quick introduction/explanation!_\n\n- `php artisan ide-helper:generate` - [PHPDoc generation for Laravel Facades ](#automatic-phpdoc-generation-for-laravel-facades)\n- `php artisan ide-helper:models` - [PHPDocs for models](#automatic-phpdocs-for-models)\n- `php artisan ide-helper:meta` - [PhpStorm Meta file](#phpstorm-meta-for-container-instances)\n\n\n> Note: You do need CodeComplice for Sublime Text: https://github.com/spectacles/CodeComplice\n\n### Automatic PHPDoc generation for Laravel Facades\n\nYou can now re-generate the docs yourself (for future updates)\n\n```bash\nphp artisan ide-helper:generate\n```\n\nThis will generate the file `_ide_helper.php` which is expected to be additionally parsed by your IDE for autocomplete. You can use the config `filename` to change its name.\n\nYou can configure your `composer.json` to do this each time you update your dependencies:\n\n```js\n\"scripts\": {\n    \"post-update-cmd\": [\n        \"Illuminate\\\\Foundation\\\\ComposerScripts::postUpdate\",\n        \"@php artisan ide-helper:generate\",\n        \"@php artisan ide-helper:meta\"\n    ]\n},\n```\n\nYou can also publish the config file to change implementations (ie. interface to specific class) or set defaults for `--helpers`.\n\n```bash\nphp artisan vendor:publish --provider=\"Barryvdh\\LaravelIdeHelper\\IdeHelperServiceProvider\" --tag=config\n```\n\nThe generator tries to identify the real class, but if it cannot be found, you can define it in the config file.\n\nSome classes need a working database connection. If you do not have a default working connection, some facades will not be included.\nYou can use an in-memory SQLite driver by adding the `-M` option.\n\nIf you use [real-time facades](https://laravel.com/docs/master/facades#real-time-facades) in your app, those will also be included in the generated file using a `@mixin` annotation and extending the original class underneath the facade. \n\n> **Note**: this feature uses the generated real-time facades files in the `storage/framework/cache` folder. Those files are generated on-demand as you use the real-time facade, so if the framework has not generated that first, it will not be included in the helper file. Run the route/command/code first and then regenerate the helper file and this time the real-time facade will be included in it.\n\nYou can choose to include helper files. This is not enabled by default, but you can override it with the `--helpers (-H)` option.\nThe `Illuminate/Support/helpers.php` is already set up, but you can add/remove your own files in the config file.\n\n### Automatic PHPDoc generation for macros and mixins\n\nThis package can generate PHPDocs for macros and mixins which will be added to the `_ide_helper.php` file.\n\nBut this only works if you use type hinting when declaring a macro.\n\n```php\nStr::macro('concat', function(string $str1, string $str2) : string {\n    return $str1 . $str2;\n});\n```\n\nYou can add any custom Macroable traits to detect in the `macroable_traits` config option.\n\n### Automatic PHPDocs for models\n\nIf you don't want to write your properties yourself, you can use the command `php artisan ide-helper:models` to generate\nPHPDocs, based on table columns, relations and getters/setters.\n\n> Note: this command requires a working database connection to introspect the table of each model\n\nBy default, you are asked to overwrite or write to a separate file (`_ide_helper_models.php`).\nYou can write the comments directly to your Model file, using the `--write (-W)` option, or\nforce to not write with `--nowrite (-N)`.\n\nAlternatively using the `--write-mixin (-M)` option will only add a mixin tag to your Model file,\nwriting the rest in (`_ide_helper_models.php`).\nThe class name will be different from the model, avoiding the IDE duplicate annoyance.\n\n> Please make sure to back up your models, before writing the info.\n\n> You need the _ide_helper.php file to add the QueryBuilder methods. You can add --write-eloquent-helper/-E to generate a minimal version. If this file does not exist, you will be prompted for it.\n\nWriting to the models should keep the existing comments and only append new properties/methods. It will not update changed properties/methods.\n\nWith the `--reset (-R)` option, the whole existing PHPDoc is replaced, including any comments that have been made.\n\n```bash\nphp artisan ide-helper:models \"App\\Models\\Post\"\n```\n\n```php\n/**\n * App\\Models\\Post\n *\n * @property integer $id\n * @property integer $author_id\n * @property string $title\n * @property string $text\n * @property \\Illuminate\\Support\\Carbon $created_at\n * @property \\Illuminate\\Support\\Carbon $updated_at\n * @property-read \\User $author\n * @property-read \\Illuminate\\Database\\Eloquent\\Collection|\\Comment[] $comments\n * @method static \\Illuminate\\Database\\Eloquent\\Builder<static>|\\App\\Models\\Post newModelQuery()\n * @method static \\Illuminate\\Database\\Eloquent\\Builder<static>|\\App\\Models\\Post newQuery()\n * @method static \\Illuminate\\Database\\Eloquent\\Builder<static>|\\App\\Models\\Post query()\n * @method static \\Illuminate\\Database\\Eloquent\\Builder<static>|\\App\\Models\\Post whereTitle($value)\n * @method static \\Illuminate\\Database\\Eloquent\\Builder<static>|\\App\\Models\\Post forAuthors(\\User ...$authors)\n * \u2026\n */\n```\n\nWith the `--write-mixin (-M)` option\n```php\n/**\n * \u2026\n * @mixin IdeHelperPost\n */\n```\n\n#### Model Directories\n\nBy default, models in `app/models` are scanned. The optional argument tells what models to use (also outside app/models).\n\n```bash\nphp artisan ide-helper:models \"App\\Models\\Post\" \"App\\Models\\User\"\n```\n\nYou can also scan a different directory, using the `--dir` option (relative from the base path):\n\n```bash\nphp artisan ide-helper:models --dir=\"path/to/models\" --dir=\"app/src/Model\"\n```\n\nYou can publish the config file (`php artisan vendor:publish`) and set the default directories.\n\n#### Ignore Models\n\nModels can be ignored using the `--ignore (-I)` option\n\n```bash\nphp artisan ide-helper:models --ignore=\"App\\Models\\Post,App\\Models\\User\"\n```\n\nOr can be ignored by setting the `ignored_models` config\n\n```php\n'ignored_models' => [\n    App\\Post::class,\n    Api\\User::class\n],\n```\n\n#### Magic `where*` methods\n\nEloquent allows calling `where<Attribute>` on your models, e.g. `Post::whereTitle(\u2026)` and automatically translates this to e.g. `Post::where('title', '=', '\u2026')`.\n\nIf for some reason it's undesired to have them generated (one for each column), you can disable this via config `write_model_magic_where` and setting it to `false`.\n\n#### Magic `*_count` properties\n\nYou may use the [`::withCount`](https://laravel.com/docs/master/eloquent-relationships#counting-related-models) method to count the number results from a relationship without actually loading them. Those results are then placed in attributes following the `<columname>_count` convention.\n\nBy default, these attributes are generated in the phpdoc. You can turn them off by setting the config `write_model_relation_count_properties` to `false`.\n\n#### Generics annotations\n\nLaravel 9 introduced generics annotations in DocBlocks for collections. PhpStorm 2022.3 and above support the use of generics annotations within `@property` and `@property-read` declarations in DocBlocks, e.g. `Collection<User>` instead of `Collection|User[]`.\n\nThese can be disabled by setting the config `use_generics_annotations` to `false`.\n\n#### Support `@comment` based on DocBlock\n\nIn order to better support IDEs, relations and getters/setters can also add a comment to a property like table columns. Therefore a custom docblock `@comment` is used:\n```php\nclass Users extends Model\n{\n    /**\n     * @comment Get User's full name\n     *\n     * @return string\n     */\n    public function getFullNameAttribute(): string\n    {\n        return $this->first_name . ' ' .$this->last_name ;\n    }\n}\n\n// => after generate models\n\n/**\n * App\\Models\\Users\n * \n * @property-read string $full_name Get User's full name\n * \u2026\n */\n```\n\n#### Dedicated Eloquent Builder methods\n\nA new method to the eloquent models was added called `newEloquentBuilder` [Reference](https://timacdonald.me/dedicated-eloquent-model-query-builders/) where we can \nadd support for creating a new dedicated class instead of using local scopes in the model itself.\n\nIf for some reason it's undesired to have them generated (one for each column), you can disable this via config `write_model_external_builder_methods` and setting it to `false`.\n\n#### Custom Relationship Types\n\nIf you are using relationships not built into Laravel you will need to specify the name and returning class in the config to get proper generation.\n\n```php\n'additional_relation_types' => [\n    'externalHasMany' => \\My\\Package\\externalHasMany::class\n],\n```\n\nFound relationships will typically generate a return value based on the name of the relationship.\n\nIf your custom relationships don't follow this traditional naming scheme you can define its return type manually. The available options are `many` and `morphTo`.\n\n```php\n'additional_relation_return_types' => [\n    'externalHasMultiple' => 'many'\n],\n```\n\n#### Model Hooks\n\nIf you need additional information on your model from sources that are not handled by default, you can hook in to the\n generation process with model hooks to add extra information on the fly.\n Simply create a class that implements `ModelHookInterface` and add it to the `model_hooks` array in the config:\n \n ```php\n'model_hooks' => [\n    MyCustomHook::class,\n],\n```\n\nThe `run` method will be called during generation for every model and receives the current running `ModelsCommand` and the current `Model`, e.g.:\n\n```php\nclass MyCustomHook implements ModelHookInterface\n{\n    public function run(ModelsCommand $command, Model $model): void\n    {\n        if (! $model instanceof MyModel) {\n            return;\n        }\n\n        $command->setProperty('custom', 'string', true, false, 'My custom property');\n        $command->unsetMethod('method');\n        $command->setMethod('method', $command->getMethodType($model, '\\Some\\Class'), ['$param']);\n    }\n}\n```\n\n```php\n/**\n * MyModel\n *\n * @property integer $id\n * @property-read string $custom\n```\n\n### Automatic PHPDocs generation for Laravel Fluent methods\n\nIf you need PHPDocs support for Fluent methods in migration, for example\n\n```php\n$table->string(\"somestring\")->nullable()->index();\n```\n\nAfter publishing vendor, simply change the `include_fluent` line in your `config/ide-helper.php` file into:\n\n```php\n'include_fluent' => true,\n```\n\nThen run `php artisan ide-helper:generate`, you will now see all Fluent methods recognized by your IDE.\n\n### Auto-completion for factory builders\n\nIf you would like the `factory()->create()` and `factory()->make()` methods to return the correct model class,\nyou can enable custom factory builders with the `include_factory_builders` line in your `config/ide-helper.php` file.\nDeprecated for Laravel 8 or latest.\n\n```php\n'include_factory_builders' => true,\n```\n\nFor this to work, you must also publish the PhpStorm Meta file (see below).\n\n## PhpStorm Meta for Container instances\n\nIt's possible to generate a PhpStorm meta file to [add support for factory design pattern](https://www.jetbrains.com/help/phpstorm/ide-advanced-metadata.html).\nFor Laravel, this means we can make PhpStorm understand what kind of object we are resolving from the IoC Container.\nFor example, `events` will return an `Illuminate\\Events\\Dispatcher` object,\nso with the meta file you can call `app('events')` and it will autocomplete the Dispatcher methods.\n\n```bash\nphp artisan ide-helper:meta\n```\n\n```php\napp('events')->fire();\n\\App::make('events')->fire();\n\n/** @var \\Illuminate\\Foundation\\Application $app */\n$app->make('events')->fire();\n\n// When the key is not found, it uses the argument as class name\napp('App\\SomeClass');\n// Also works with\napp(App\\SomeClass::class);\n```\n\n> Note: You might need to restart PhpStorm and make sure `.phpstorm.meta.php` is indexed.\n\n> Note: When you receive a FatalException: class not found, check your config\n> (for example, remove S3 as cloud driver when you don't have S3 configured. Remove Redis ServiceProvider when you don't use it).\n\nYou can change the generated filename via the config `meta_filename`. This can be useful for cases where you want to take advantage of PhpStorm's support of the _directory_ `.phpstorm.meta.php/`: all files placed there are parsed, should you want to provide additional files to PhpStorm.\n\n## License\n\nThe Laravel IDE Helper Generator is open-sourced software licensed under the [MIT license](http://opensource.org/licenses/MIT)\n\n",
        "releases": [
            {
                "name": "v3.5.4",
                "date": "2025-01-14T09:07:29Z"
            },
            {
                "name": "v3.5.3",
                "date": "2025-01-08T10:03:29Z"
            },
            {
                "name": "v3.5.2",
                "date": "2025-01-06T15:42:16Z"
            },
            {
                "name": "v3.5.1",
                "date": "2025-01-06T14:09:27Z"
            },
            {
                "name": "v3.5.0",
                "date": "2025-01-06T13:53:38Z"
            },
            {
                "name": "v3.4.0",
                "date": "2024-12-29T13:26:46Z"
            },
            {
                "name": "v3.3.0",
                "date": "2024-12-18T08:36:33Z"
            },
            {
                "name": "v3.2.2",
                "date": "2024-10-29T14:03:23Z"
            },
            {
                "name": "v3.2.1",
                "date": "2024-10-28T11:33:50Z"
            },
            {
                "name": "v3.2.0",
                "date": "2024-10-18T11:51:52Z"
            },
            {
                "name": "v3.2.0-rc1",
                "date": "2024-10-17T16:43:52Z"
            },
            {
                "name": "v3.1.0",
                "date": "2024-07-12T14:21:24Z"
            },
            {
                "name": "v3.0.0: Support Laravel 11 & Remove Doctrine",
                "date": "2024-03-01T12:53:51Z"
            },
            {
                "name": "",
                "date": "2024-02-15T14:24:49Z"
            },
            {
                "name": "v2.15.0",
                "date": "2024-02-14T11:25:27Z"
            },
            {
                "name": "v2.14.0: long time, no see\u2026 and Goodbye Lumen \ud83d\udc4b",
                "date": "2024-02-05T10:34:21Z"
            },
            {
                "name": "",
                "date": "2023-02-04T15:23:03Z"
            },
            {
                "name": "",
                "date": "2022-03-06T14:34:13Z"
            },
            {
                "name": "",
                "date": "2022-02-08T19:32:21Z"
            },
            {
                "name": "v2.12.1",
                "date": "2022-01-24T22:02:04Z"
            },
            {
                "name": "v2.12.0",
                "date": "2022-01-23T16:52:07Z"
            },
            {
                "name": "v2.11.0",
                "date": "2022-01-08T12:37:35Z"
            },
            {
                "name": "Release 2.10.0",
                "date": "2021-04-09T11:43:31Z"
            },
            {
                "name": "",
                "date": "2021-04-02T17:45:18Z"
            },
            {
                "name": "",
                "date": "2021-04-01T18:57:38Z"
            },
            {
                "name": "v2.9.1",
                "date": "2021-03-15T19:52:13Z"
            },
            {
                "name": "v2.9.0",
                "date": "2020-12-30T08:19:43Z"
            },
            {
                "name": "v2.8.2",
                "date": "2020-12-08T21:59:29Z"
            },
            {
                "name": "Support Laravel 8",
                "date": "2020-09-07T11:13:24Z"
            },
            {
                "name": "",
                "date": "2020-08-11T10:14:35Z"
            },
            {
                "name": "",
                "date": "2020-04-22T11:17:16Z"
            },
            {
                "name": "",
                "date": "2020-02-25T20:45:56Z"
            },
            {
                "name": "",
                "date": "2019-12-02T15:02:37Z"
            },
            {
                "name": "Fix missing method on Monolog2",
                "date": "2019-09-08T09:59:12Z"
            },
            {
                "name": "",
                "date": "2019-09-03T17:52:16Z"
            },
            {
                "name": "",
                "date": "2019-09-03T17:41:33Z"
            },
            {
                "name": "",
                "date": "2019-03-26T10:43:52Z"
            },
            {
                "name": "",
                "date": "2019-03-05T11:12:03Z"
            },
            {
                "name": "",
                "date": "2019-02-26T18:15:34Z"
            },
            {
                "name": "",
                "date": "2018-12-19T12:12:22Z"
            },
            {
                "name": "",
                "date": "2018-11-07T13:27:58Z"
            },
            {
                "name": "",
                "date": "2018-09-06T18:41:25Z"
            },
            {
                "name": "Support Laravel 5.7",
                "date": "2018-09-04T14:14:16Z"
            },
            {
                "name": "",
                "date": "2018-02-08T10:03:35Z"
            },
            {
                "name": "Support L5.6",
                "date": "2018-02-07T08:31:53Z"
            },
            {
                "name": "",
                "date": "2017-07-22T12:27:49Z"
            },
            {
                "name": "Laravel 5.5 support, new metadata format",
                "date": "2017-06-22T14:11:53Z"
            },
            {
                "name": "Add back Eloquent methods",
                "date": "2017-02-22T12:31:26Z"
            },
            {
                "name": "Skip Model facade",
                "date": "2017-02-20T12:59:50Z"
            },
            {
                "name": "Support namespaced Facades",
                "date": "2017-02-14T15:33:10Z"
            },
            {
                "name": "Laravel 5.4 support",
                "date": "2017-01-23T22:37:02Z"
            },
            {
                "name": "",
                "date": "2016-12-09T11:13:01Z"
            }
        ]
    }
}