{
    "https://api.github.com/repos/thoughtbot/dotfiles": {
        "forks": 1859,
        "watchers": 8005,
        "stars": 8005,
        "languages": {
            "Shell": 11755,
            "Vim Script": 6308
        },
        "commits": [
            "2024-11-20T19:28:37Z",
            "2024-08-19T07:52:37Z",
            "2024-08-16T13:40:59Z",
            "2024-08-02T22:25:48Z",
            "2024-08-02T22:25:06Z",
            "2024-08-02T22:24:29Z",
            "2024-05-10T14:46:43Z",
            "2024-05-02T12:35:31Z",
            "2024-03-23T00:13:45Z",
            "2024-03-15T15:59:07Z",
            "2024-03-14T22:03:14Z",
            "2023-12-07T11:09:21Z",
            "2023-11-28T12:18:32Z",
            "2023-11-17T14:16:17Z",
            "2023-11-02T16:42:15Z",
            "2023-10-20T16:57:25Z",
            "2023-08-08T15:30:25Z",
            "2023-08-05T19:29:50Z",
            "2023-06-13T15:01:29Z",
            "2023-06-05T12:25:51Z",
            "2023-06-04T12:18:49Z",
            "2023-06-04T12:15:55Z",
            "2023-06-04T12:11:11Z",
            "2022-12-14T14:48:04Z",
            "2022-12-13T14:33:10Z",
            "2022-10-04T09:30:47Z",
            "2022-09-23T20:39:36Z",
            "2022-09-23T15:33:17Z",
            "2022-05-08T09:17:14Z",
            "2022-05-01T00:31:05Z"
        ],
        "creation_date": "2011-01-13T22:34:40Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 193,
        "readme": "# thoughtbot dotfiles\n\n![prompt](http://images.thoughtbot.com/thoughtbot-dotfiles-prompt.png)\n\n## Requirements\n\nSet zsh as your login shell:\n\n    chsh -s $(which zsh)\n\n## Install\n\nClone onto your laptop:\n\n    git clone git@github.com:thoughtbot/dotfiles.git ~/dotfiles\n\n(Or, [fork and keep your fork\nupdated](http://robots.thoughtbot.com/keeping-a-github-fork-updated)).\n\nInstall [rcm](https://github.com/thoughtbot/rcm):\n\n    brew install rcm\n\nInstall the dotfiles:\n\n    env RCRC=$HOME/dotfiles/rcrc rcup\n\nAfter the initial installation, you can run `rcup` without the one-time variable\n`RCRC` being set (`rcup` will symlink the repo's `rcrc` to `~/.rcrc` for future\nruns of `rcup`). [See\nexample](https://github.com/thoughtbot/dotfiles/blob/master/rcrc).\n\nThis command will create symlinks for config files in your home directory.\nSetting the `RCRC` environment variable tells `rcup` to use standard\nconfiguration options:\n\n- Exclude the `README.md`, `README-ES.md` and `LICENSE` files, which are part of\n  the `dotfiles` repository but do not need to be symlinked in.\n- Give precedence to personal overrides which by default are placed in\n  `~/dotfiles-local`\n- Please configure the `rcrc` file if you'd like to make personal\n  overrides in a different directory\n\n## Update\n\nFrom time to time you should pull down any updates to these dotfiles, and run\n\n    rcup\n\nto link any new files and install new vim plugins. **Note** You _must_ run\n`rcup` after pulling to ensure that all files in plugins are properly installed,\nbut you can safely run `rcup` multiple times so update early and update often!\n\n## Make your own customizations\n\nCreate a directory for your personal customizations:\n\n    mkdir ~/dotfiles-local\n\nPut your customizations in `~/dotfiles-local` appended with `.local`:\n\n- `~/dotfiles-local/aliases.local`\n- `~/dotfiles-local/git_template.local/*`\n- `~/dotfiles-local/gitconfig.local`\n- `~/dotfiles-local/psqlrc.local` (we supply a blank `.psqlrc.local` to prevent `psql` from\n  throwing an error, but you should overwrite the file with your own copy)\n- `~/dotfiles-local/tmux.conf.local`\n- `~/dotfiles-local/vimrc.local`\n- `~/dotfiles-local/vimrc.bundles.local`\n- `~/dotfiles-local/zshrc.local`\n- `~/dotfiles-local/zsh/configs/*`\n\nFor example, your `~/dotfiles-local/aliases.local` might look like this:\n\n    # Productivity\n    alias todo='$EDITOR ~/.todo'\n\nYour `~/dotfiles-local/gitconfig.local` might look like this:\n\n    [alias]\n      l = log --pretty=colored\n    [pretty]\n      colored = format:%Cred%h%Creset %s %Cgreen(%cr) %C(bold blue)%an%Creset\n    [user]\n      name = Dan Croak\n      email = dan@thoughtbot.com\n\nYour `~/dotfiles-local/vimrc.local` might look like this:\n\n    \" Color scheme\n    colorscheme github\n    highlight NonText guibg=#060606\n    highlight Folded  guibg=#0A0A0A guifg=#9090D0\n\nIf you don't wish to install a vim plugin from the default set of vim plugins in\n`.vimrc.bundles`, you can ignore the plugin by calling it out with `UnPlug` in\nyour `~/.vimrc.bundles.local`.\n\n    \" Don't install vim-scripts/tComment (notice the username of the plugin is\n    removed)\n\n    UnPlug 'tComment'\n\n`UnPlug` can be used to install your own fork of a plugin or to install a shared\nplugin with different custom options.\n\n    \" Only load vim-coffee-script if a Coffeescript buffer is created\n    UnPlug 'vim-coffee-script'\n    Plug 'kchmck/vim-coffee-script', { 'for': 'coffee' }\n\n    \" Use a personal fork of vim-run-interactive\n    UnPlug 'vim-run-interactive'\n    Plug '$HOME/plugins/vim-run-interactive'\n\nTo extend your `git` hooks, create executable scripts in\n`~/dotfiles-local/git_template.local/hooks/*` files.\n\nYour `~/dotfiles-local/zshrc.local` might look like this:\n\n    # load pyenv if available\n    if which pyenv &>/dev/null ; then\n      eval \"$(pyenv init -)\"\n    fi\n\nYour `~/dotfiles-local/vimrc.bundles.local` might look like this:\n\n    Plug 'Lokaltog/vim-powerline'\n    Plug 'stephenmckinney/vim-solarized-powerline'\n\n## zsh Configurations\n\nAdditional zsh configuration can go under the `~/dotfiles-local/zsh/configs` directory. This\nhas two special subdirectories: `pre` for files that must be loaded first, and\n`post` for files that must be loaded last.\n\nFor example, `~/dotfiles-local/zsh/configs/pre/virtualenv` makes use of various shell\nfeatures which may be affected by your settings, so load it first:\n\n    # Load the virtualenv wrapper\n    . /usr/local/bin/virtualenvwrapper.sh\n\nSetting a key binding can happen in `~/dotfiles-local/zsh/configs/keys`:\n\n    # Grep anywhere with ^G\n    bindkey -s '^G' ' | grep '\n\nSome changes, like `chpwd`, must happen in `~/dotfiles-local/zsh/configs/post/chpwd`:\n\n    # Show the entries in a directory whenever you cd in\n    function chpwd {\n      ls\n    }\n\nThis directory is handy for combining dotfiles from multiple teams; one team\ncan add the `virtualenv` file, another `keys`, and a third `chpwd`.\n\nThe `~/dotfiles-local/zshrc.local` is loaded after `~/dotfiles-local/zsh/configs`.\n\n## vim Configurations\n\nSimilarly to the zsh configuration directory as described above, vim\nautomatically loads all files in the `~/dotfiles-local/vim/plugin` directory. This does not\nhave the same `pre` or `post` subdirectory support that our `zshrc` has.\n\nThis is an example `~/dotfiles-local/vim/plugin/c.vim`. It is loaded every time vim starts,\nregardless of the file name:\n\n    # Indent C programs according to BSD style(9)\n    set cinoptions=:0,t0,+4,(4\n    autocmd BufNewFile,BufRead *.[ch] setlocal sw=0 ts=8 noet\n\n## What's in it?\n\n[vim](http://www.vim.org/) configuration:\n\n- [fzf](https://github.com/junegunn/fzf.vim) for fuzzy file/buffer/tag finding.\n- [Rails.vim](https://github.com/tpope/vim-rails) for enhanced navigation of\n  Rails file structure via `gf` and `:A` (alternate), `:Rextract` partials,\n  `:Rinvert` migrations, etc.\n- Run many kinds of tests [from vim]([https://github.com/janko-m/vim-test)\n- Set `<leader>` to a single space.\n- Switch between the last two files with space-space.\n- Syntax highlighting for Markdown, HTML, JavaScript, Ruby, Go, Elixir, more.\n- Use [Ag](https://github.com/ggreer/the_silver_searcher) instead of Grep when\n  available.\n- Map `<leader>ct` to re-index ctags.\n- Use [vim-mkdir](https://github.com/pbrisbin/vim-mkdir) for automatically\n  creating non-existing directories before writing the buffer.\n- Use [vim-plug](https://github.com/junegunn/vim-plug) to manage plugins.\n\n[tmux](http://robots.thoughtbot.com/a-tmux-crash-course)\nconfiguration:\n\n- Improve color resolution.\n- Remove administrative debris (session name, hostname, time) in status bar.\n- Set prefix to `Ctrl+s`\n- Soften status bar color from harsh green to light gray.\n\n[git](http://git-scm.com/) configuration:\n\n- Adds a `co-upstream-pr $PR_NUMBER $LOCAL_BRANCH_NAME` subcommand to checkout remote upstream branch into a local branch.\n- Adds a `create-branch` alias to create feature branches.\n- Adds a `delete-branch` alias to delete feature branches.\n- Adds a `merge-branch` alias to merge feature branches into master.\n- Adds an `up` alias to fetch and rebase `origin/master` into the feature\n  branch. Use `git up -i` for interactive rebases.\n- Adds `post-{checkout,commit,merge}` hooks to re-index your ctags.\n- Adds `pre-commit` and `prepare-commit-msg` stubs that delegate to your local\n  config.\n- Adds `trust-bin` alias to append a project's `bin/` directory to `$PATH`.\n\n[Ruby](https://www.ruby-lang.org/en/) configuration:\n\n- Add trusted binstubs to the `PATH`.\n- Load the ASDF version manager.\n\n[Rails](https://rubyonrails.org)\n\n- Adds [railsrc][] with the following options to integrate with [Suspenders][].\n\n```\n--database=postgresql\n--skip-test\n-m=https://raw.githubusercontent.com/thoughtbot/suspenders/main/lib/install/web.rb\n```\n\nIf you want to skip this file altogether, run `rails new my_app --no_rc`.\n\n[railsrc]: https://github.com/rails/rails/blob/7f7f9df8641e35a076fe26bd097f6a1b22cb4e2d/railties/lib/rails/generators/rails/app/USAGE#L5C1-L7\n[Suspenders]: https://github.com/thoughtbot/suspenders\n\nShell aliases and scripts:\n\n- `...` for quicker navigation to the parent's parent directory.\n- `b` for `bundle`.\n- `g` with no arguments is `git status` and with arguments acts like `git`.\n- `migrate` for `bin/rails db:migrate db:rollback && bin/rails db:migrate db:test:prepare`.\n- `mcd` to make a directory and change into it.\n- `replace foo bar **/*.rb` to find and replace within a given list of files.\n- `tat` to attach to tmux session named the same as the current directory.\n- `v` for `$VISUAL`.\n\n## Thanks\n\nThank you, [contributors](https://github.com/thoughtbot/dotfiles/contributors)!\nAlso, thank you to Corey Haines, Gary Bernhardt, and others for sharing your\ndotfiles and other shell scripts from which we derived inspiration for items\nin this project.\n\n## License\n\ndotfiles is copyright \u00a9 2009 thoughtbot. It is free software, and may be\nredistributed under the terms specified in the [`LICENSE`] file.\n\n[`LICENSE`]: /LICENSE\n\n<!-- START /templates/footer.md -->\n## About thoughtbot\n\n![thoughtbot](https://thoughtbot.com/thoughtbot-logo-for-readmes.svg)\n\nThis repo is maintained and funded by thoughtbot, inc.\nThe names and logos for thoughtbot are trademarks of thoughtbot, inc.\n\nWe love open source software!\nSee [our other projects][community].\nWe are [available for hire][hire].\n\n[community]: https://thoughtbot.com/community?utm_source=github\n[hire]: https://thoughtbot.com/hire-us?utm_source=github\n\n\n<!-- END /templates/footer.md -->\n",
        "releases": [
            {
                "name": "20171006",
                "date": "2017-10-06T17:26:10Z"
            },
            {
                "name": "20170915",
                "date": "2017-09-15T19:08:55Z"
            }
        ]
    }
}