{
    "https://api.github.com/repos/DioxusLabs/dioxus": {
        "forks": 957,
        "watchers": 24701,
        "stars": 24701,
        "languages": {
            "Rust": 3087114,
            "HTML": 113520,
            "R": 68336,
            "TypeScript": 52899,
            "JavaScript": 27454,
            "CSS": 23090,
            "Handlebars": 5269,
            "RenderScript": 2484,
            "Nix": 2109,
            "Shell": 1271,
            "Dockerfile": 349
        },
        "commits": [
            "2025-01-22T03:29:30Z",
            "2025-01-22T02:55:15Z",
            "2025-01-22T02:52:56Z",
            "2025-01-22T02:46:59Z",
            "2025-01-22T02:33:43Z",
            "2025-01-21T23:14:45Z",
            "2025-01-21T22:57:31Z",
            "2025-01-21T19:33:00Z",
            "2025-01-21T18:52:07Z",
            "2025-01-21T17:17:23Z",
            "2025-01-21T08:33:29Z",
            "2025-01-21T08:32:39Z",
            "2025-01-21T08:13:05Z",
            "2025-01-21T07:34:30Z",
            "2025-01-21T05:16:55Z",
            "2025-01-21T02:58:50Z",
            "2025-01-21T02:36:17Z",
            "2025-01-21T02:35:41Z",
            "2025-01-21T02:02:59Z",
            "2025-01-21T01:42:13Z",
            "2025-01-21T00:35:32Z",
            "2025-01-21T00:35:19Z",
            "2025-01-17T20:00:38Z",
            "2025-01-17T01:53:09Z",
            "2025-01-17T01:35:14Z",
            "2025-01-17T00:49:30Z",
            "2025-01-16T23:34:18Z",
            "2025-01-16T23:17:33Z",
            "2025-01-16T21:27:07Z",
            "2025-01-14T18:51:39Z"
        ],
        "creation_date": "2021-01-15T01:57:26Z",
        "contributors": 30,
        "topics": [
            "android",
            "css",
            "desktop",
            "html",
            "ios",
            "native",
            "react",
            "rust",
            "ssr",
            "ui",
            "virtualdom",
            "wasm",
            "web"
        ],
        "subscribers": 123,
        "readme": "<p>\n    <p align=\"center\" >\n      <!-- <img src=\"./notes/header-light-updated.svg#gh-light-mode-only\" >\n      <img src=\"./notes/header-dark-updated.svg#gh-dark-mode-only\" > -->\n      <!-- <a href=\"https://dioxuslabs.com\">\n          <img src=\"./notes/flat-splash.avif\">\n      </a> -->\n      <img src=\"./notes/splash-header-darkmode.svg#gh-dark-mode-only\" style=\"width: 80%; height: auto;\">\n      <img src=\"./notes/splash-header.svg#gh-light-mode-only\" style=\"width: 80%; height: auto;\">\n      <img src=\"./notes/image-splash.avif\">\n      <br>\n    </p>\n</p>\n<div align=\"center\">\n  <!-- Crates version -->\n  <a href=\"https://crates.io/crates/dioxus\">\n    <img src=\"https://img.shields.io/crates/v/dioxus.svg?style=flat-square\"\n    alt=\"Crates.io version\" />\n  </a>\n  <!-- Downloads -->\n  <a href=\"https://crates.io/crates/dioxus\">\n    <img src=\"https://img.shields.io/crates/d/dioxus.svg?style=flat-square\"\n      alt=\"Download\" />\n  </a>\n  <!-- docs -->\n  <a href=\"https://docs.rs/dioxus\">\n    <img src=\"https://img.shields.io/badge/docs-latest-blue.svg?style=flat-square\"\n      alt=\"docs.rs docs\" />\n  </a>\n  <!-- CI -->\n  <a href=\"https://github.com/jkelleyrtp/dioxus/actions\">\n    <img src=\"https://github.com/dioxuslabs/dioxus/actions/workflows/main.yml/badge.svg\"\n      alt=\"CI status\" />\n  </a>\n\n  <!--Awesome -->\n  <a href=\"https://dioxuslabs.com/awesome\">\n    <img src=\"https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg\" alt=\"Awesome Page\" />\n  </a>\n  <!-- Discord -->\n  <a href=\"https://discord.gg/XgGxMSkvUM\">\n    <img src=\"https://img.shields.io/discord/899851952891002890.svg?logo=discord&style=flat-square\" alt=\"Discord Link\" />\n  </a>\n</div>\n\n<div align=\"center\">\n  <h3>\n    <a href=\"https://dioxuslabs.com\"> Website </a>\n    <span> | </span>\n    <a href=\"https://github.com/DioxusLabs/dioxus/tree/main/examples\"> Examples </a>\n    <span> | </span>\n    <a href=\"https://dioxuslabs.com/learn/0.6/guide\"> Guide </a>\n    <span> | </span>\n    <a href=\"https://github.com/DioxusLabs/dioxus/blob/main/translations/zh-cn/README.md\"> \u4e2d\u6587 </a>\n    <span> | </span>\n    <a href=\"https://github.com/DioxusLabs/dioxus/blob/main/translations/pt-br/README.md\"> PT-BR </a>\n    <span> | </span>\n    <a href=\"https://github.com/DioxusLabs/dioxus/blob/main/translations/ja-jp/README.md\"> \u65e5\u672c\u8a9e </a>\n    <span> | </span>\n    <a href=\"https://github.com/DioxusLabs/dioxus/blob/main/translations/tr-tr\"> T\u00fcrk\u00e7e </a>\n    <span> | </span>\n    <a href=\"https://github.com/DioxusLabs/dioxus/blob/main/translations/ko-kr\"> \ud55c\uad6d\uc5b4 </a>\n  </h3>\n</div>\n<br>\n<p align=\"center\">\n  <a href=\"https://dioxuslabs.com/blog/release-060/\">\u2728 Dioxus 0.6 is released - check it out here! \u2728</a>\n</p>\n<br>\n\nBuild for web, desktop, and mobile, and more with a single codebase. Zero-config setup, integrated hot-reloading, and signals-based state management. Add backend functionality with Server Functions and bundle with our CLI.\n\n```rust\nfn app() -> Element {\n    let mut count = use_signal(|| 0);\n\n    rsx! {\n        h1 { \"High-Five counter: {count}\" }\n        button { onclick: move |_| count += 1, \"Up high!\" }\n        button { onclick: move |_| count -= 1, \"Down low!\" }\n    }\n}\n```\n\n## \u2b50\ufe0f Unique features:\n\n- Cross-platform apps in three lines of code (web, desktop, mobile, server, and more)\n- [Ergonomic state management](https://dioxuslabs.com/blog/release-050) combines the best of React, Solid, and Svelte\n- Type-safe Routing and server functions to leverage Rust's powerful compile-time guarantees\n- Integrated bundler for deploying to the web, macOS, Linux, and Windows\n- And more! [Take a tour of Dioxus](https://dioxuslabs.com/learn/0.6/).\n\n## Instant hot-reloading\n\nWith one command, `dx serve` and your app is running. Edit your markup and styles and see the results in real time.\n\n<div align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/DioxusLabs/screenshots/refs/heads/main/blitz/hotreload-video.webp\">\n  <!-- <video src=\"https://private-user-images.githubusercontent.com/10237910/386919031-6da371d5-3340-46da-84ff-628216851ba6.mov\" width=\"500\"></video> -->\n  <!-- <video src=\"https://private-user-images.githubusercontent.com/10237910/386919031-6da371d5-3340-46da-84ff-628216851ba6.mov\" width=\"500\"></video> -->\n</div>\n\n\n## First-class Android and iOS support\n\nDioxus is the fastest way to build native mobile apps with Rust. Simply run `dx serve --platform android` and your app is running in an emulator or on device in seconds. Call directly into JNI and Native APIs.\n\n<div align=\"center\">\n  <img src=\"./notes/android_and_ios2.avif\" width=\"500\">\n</div>\n\n## Bundle for web, desktop, and mobile\n\nSimply run `dx bundle` and your app will be built and bundled with maximization optimizations. On the web, take advantage of [`.avif` generation, `.wasm` compression, minification](https://dioxuslabs.com/learn/0.6/guides/assets), and more. Build WebApps weighing [less than 50kb](https://github.com/ealmloff/tiny-dioxus/) and desktop/mobile apps less than 5mb.\n\n<div align=\"center\">\n  <img src=\"./notes/bundle.gif\">\n</div>\n\n\n## Fantastic documentation\n\nWe've put a ton of effort into building clean, readable, and comprehensive documentation. All html elements and listeners are documented with MDN docs, and our Docs runs continuous integration with Dioxus itself to ensure that the docs are always up to date. Check out the [Dioxus website](https://dioxuslabs.com/learn/0.6/) for guides, references, recipes, and more. Fun fact: we use the Dioxus website as a testbed for new Dioxus features - [check it out!](https://github.com/dioxusLabs/docsite)\n\n<div align=\"center\">\n  <img src=\"./notes/docs.avif\">\n</div>\n\n## Community\n\nDioxus is a community-driven project, with a very active [Discord](https://discord.gg/XgGxMSkvUM) and [GitHub](https://github.com/DioxusLabs/dioxus/issues) community. We're always looking for help, and we're happy to answer questions and help you get started. [Our SDK](https://github.com/DioxusLabs/dioxus-std) is community-run and we even have a [GitHub organization](https://github.com/dioxus-community/) for the best Dioxus crates that receive free upgrades and support.\n\n<div align=\"center\">\n  <img src=\"./notes/dioxus-community.avif\">\n</div>\n\n## Full-time core team\n\nDioxus has grown from a side project to a small team of fulltime engineers. Thanks to the generous support of FutureWei, Satellite.im, the GitHub Accelerator program, we're able to work on Dioxus full-time. Our long term goal is for Dioxus to become self-sustaining by providing paid high-quality enterprise tools. If your company is interested in adopting Dioxus and would like to work with us, please reach out!\n\n## Supported Platforms\n\n<div align=\"center\">\n  <table style=\"width:100%\">\n    <tr>\n      <td>\n      <b>Web</b>\n      </td>\n      <td>\n        <ul>\n          <li>Render directly to the DOM using WebAssembly</li>\n          <li>Pre-render with SSR and rehydrate on the client</li>\n          <li>Simple \"hello world\" at about 50kb, comparable to React</li>\n          <li>Built-in dev server and hot reloading for quick iteration</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>\n      <b>Desktop</b>\n      </td>\n      <td>\n        <ul>\n          <li>Render using Webview or - experimentally - with WGPU or <a href=\"https://freyaui.dev\">Freya</a> (Skia) </li>\n          <li>Zero-config setup. Simply `cargo run` or `dx serve` to build your app </li>\n          <li>Full support for native system access without IPC </li>\n          <li>Supports macOS, Linux, and Windows. Portable <3mb binaries </li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>\n      <b>Mobile</b>\n      </td>\n      <td>\n        <ul>\n          <li>Render using Webview or - experimentally - with WGPU or Skia </li>\n          <li>Build .ipa and .apk files for iOS and Android </li>\n          <li>Call directly into Java and Objective-C with minimal overhead</li>\n          <li>From \"hello world\" to running on device in seconds</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>\n      <b>Server-side Rendering</b>\n      </td>\n      <td>\n        <ul>\n          <li>Suspense, hydration, and server-side rendering</li>\n          <li>Quickly drop in backend functionality with server functions</li>\n          <li>Extractors, middleware, and routing integrations</li>\n          <li>Static-site generation and incremental regeneration</li>\n        </ul>\n      </td>\n    </tr>\n  </table>\n</div>\n\n## Running the examples\n\n> The examples in the main branch of this repository target the git version of dioxus and the CLI. If you are looking for examples that work with the latest stable release of dioxus, check out the [0.6 branch](https://github.com/DioxusLabs/dioxus/tree/v0.6/examples).\n\nThe examples in the top level of this repository can be run with:\n\n```sh\ncargo run --example <example>\n```\n\nHowever, we encourage you to download the dioxus-cli. If you are running the git version of dioxus, you can install the matching version of the CLI with:\n\n```sh\ncargo install --git https://github.com/DioxusLabs/dioxus dioxus-cli --locked\n```\n\nWith the CLI, you can also run examples with the web platform. You just need to disable the default desktop feature and enable the web feature with this command:\n\n```sh\ndx serve --example <example> --platform web -- --no-default-features\n```\n\n## Dioxus vs other frameworks\n\nWe love all frameworks and enjoy watching innovation in the Rust ecosystem. In fact, many of our projects are shared with other frameworks. For example, our flex-box library [Taffy](https://github.com/DioxusLabs/taffy) is used by [Bevy](https://bevyengine.org/), [Zed](https://zed.dev/), [Lapce](https://lapce.dev/), [Iced](https://github.com/iced-rs/iced), and many more.\n\nDioxus places an emphasis on a few key points that make it different from other frameworks:\n\n- **React-like**: we rely on concepts like components, props, and hooks to build UIs, with our state management being closer to Svelte than to SolidJS.\n- **HTML and CSS**: we lean completely into HTML and CSS, quirks and all.\n- **Renderer-agnostic**: you can swap out the renderer for any platform you want thanks to [our fast VirtualDOM](https://dioxuslabs.com/blog/templates-diffing).\n- **Collaborative**: whenever possible, we spin out crates like [Taffy](https://github.com/DioxusLabs/taffy), [manganis](https://github.com/DioxusLabs/manganis), [include_mdbook](https://github.com/DioxusLabs/include_mdbook), and [blitz](http://github.com/dioxusLabs/blitz) so the ecosystem can grow together.\n\n### Dioxus vs Tauri\n\nTauri is a framework for building desktop mobile apps where your frontend is written in a web-based framework like React, Vue, Svelte, etc. Whenever you need to do native work, you can write Rust functions and call them from your frontend.\n\n- **Natively Rust**: Tauri's architecture limits your UI to either JavaScript or WebAssembly. With Dioxus, your Rust code is running natively on the user's machine, letting you do things like spawning threads, accessing the filesystem, without any IPC bridge. This drastically simplifies your app's architecture and makes it easier to build. You can build a Tauri app with Dioxus-Web as a frontend if you'd like.\n\n- **Different scopes**: Tauri needs to support JavaScript and its complex build tooling, limiting the scope of what you can do with it. Since Dioxus is exclusively focused on Rust, we're able to provide extra utilities like Server Functions, advanced bundling, and a native renderer.\n\n- **Shared DNA**: While Tauri and Dioxus are separate projects, they do share libraries like Tao and Wry: windowing and webview libraries maintained by the Tauri team.\n\n### Dioxus vs Leptos\n\nLeptos is a library for building fullstack web-apps, similar to SolidJS and SolidStart. The two libraries share similar goals on the web, but have several key differences:\n\n- **Reactivity model**: Leptos uses signals to drive both reactivity and rendering, while Dioxus uses signals just for reactivity. For managing re-renders, Dioxus uses a highly optimized VirtualDOM to support desktop and mobile architectures. Both Dioxus and Leptos are extremely fast.\n\n- **Different scopes**: Dioxus provides renderers for web, desktop, mobile, LiveView, and more. We also maintain community libraries and a cross-platform SDK. Leptos has a tighter focus on the fullstack web with features that Dioxus doesn't have like islands, `<Form />` components, and other web-specific utilities.\n\n- **Different DSLs**: Dioxus uses its own custom Rust-like DSL for building UIs while Leptos uses an HTML-like syntax. We chose this to retain compatibility with IDE features like code-folding and syntax highlighting. Generally, Dioxus leans into more \"magic\" with its DSL including automatic formatting of strings and hot-reloading of simple Rust expressions.\n\n```rust\n// dioxus\nrsx! {\n  div {\n    class: \"my-class\",\n    enabled: true,\n    \"Hello, {name}\"\n  }\n}\n\n// leptos\nview! {\n  <div class=\"my-class\" enabled={true}>\n    \"Hello \"\n    {name}\n  </div>\n}\n```\n\n### Dioxus vs Yew\n\nYew is a framework for building single-page web apps and initially served as an inspiration for Dioxus. Unfortunately, the architecture of Yew didn't support the various features we wanted, and thus Dioxus was born.\n\n- **Single-page apps**: Yew is designed exclusively for single-page web apps and is intrinsically tied to the web platform. Dioxus is fullstack and cross-platform, making it suitable for building web, desktop, mobile, and server apps.\n\n- **Developer Tooling**: Dioxus provides a number of utilities like autoformatting, hot-reloading, and a bundler.\n\n- **Ongoing support**: Dioxus is very actively maintained with new features and bug fixes being added on a daily basis.\n\n### Dioxus vs egui\n\negui is a cross-platform GUI library for Rust powering tools like [Rerun.io](https://www.rerun.io).\n\n- **Immediate vs Retained**: egui is designed to be re-rendered on every frame. This is suitable for games and other interactive applications, but it does not retain style and layout state between frames. Dioxus is a retained UI framework, meaning that the UI is built once and then modified between frames. This enables Dioxus to use native web technologies like HTML and CSS with better battery life and performance.\n\n- **Customizable**: egui brings its own styling and layout solution while Dioxus expects you to use the built-in HTML and CSS. This enables dioxus apps to use any CSS library like Tailwind or Material UI.\n\n- **State management**: egui's state management is based on a single global state object. Dioxus encourages encapsulation of state by using components and props, making components more reusable.\n\n### Dioxus vs Iced\n\nIced is a cross-platform GUI library inspired by Elm. Iced renders natively with WGPU and supports the web using DOM nodes.\n\n- **Elm state management**: Iced uses Elm's state management model, which is based on message passing and reducers. This is simply a different state management model than Dioxus and can be rather verbose at times.\n\n- **Native Feel**: Since Dioxus uses a webview as its renderer, it automatically gets native text input, paste handling, and other native features like accessibility. Iced's renderer currently doesn't implement these features, making it feel less native.\n\n- **WGPU**: Dioxus' WGPU renderer is currently quite immature and not yet ready for production use. Iced's WGPU renderer is much more mature and is being used in production. This enables certain types of apps that need GPU access to be built with Iced that can't currently be built with Dioxus.\n\n### Dioxus vs Electron\n\nDioxus and Electron are two entirely different projects with similar goals. Electron makes it possible for developers to build cross-platform desktop apps using web technologies like HTML, CSS, and JavaScript.\n\n- **Lightweight**: Dioxus uses the system's native WebView - or optionally, a WGPU renderer - to render the UI. This makes a typical Dioxus app about 15mb on macOS in comparison to Electron's 100mb. Electron also ships an embedded chromium instance which cannot share system resources with the host OS in the same way as Dioxus.\n\n- **Maturity**: Electron is a mature project with a large community and a lot of tooling. Dioxus is still quite young in comparison to Electron. Expect to run into features like deep-linking that require extra work to implement.\n\n## Contributing\n\n- Check out the website [section on contributing](https://dioxuslabs.com/learn/0.6/contributing).\n- Report issues on our [issue tracker](https://github.com/dioxuslabs/dioxus/issues).\n- [Join](https://discord.gg/XgGxMSkvUM) the discord and ask questions!\n\n<a href=\"https://github.com/dioxuslabs/dioxus/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=dioxuslabs/dioxus&max=30&columns=10\" />\n</a>\n\n## License\n\nThis project is licensed under either the [MIT license] or the [Apache-2 License].\n\n[apache-2 license]: https://github.com/DioxusLabs/dioxus/blob/master/LICENSE-APACHE\n[mit license]: https://github.com/DioxusLabs/dioxus/blob/master/LICENSE-MIT\n\nUnless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in Dioxus by you, shall be licensed as MIT or Apache-2, without any additional\nterms or conditions.\n",
        "releases": [
            {
                "name": "Dioxus v0.6.2",
                "date": "2025-01-22T03:35:47Z"
            },
            {
                "name": "Dioxus v0.6.1",
                "date": "2024-12-18T02:31:25Z"
            },
            {
                "name": "Dioxus 0.6",
                "date": "2024-12-09T18:19:08Z"
            },
            {
                "name": "v0.6.0-rc.0",
                "date": "2024-12-03T02:11:16Z"
            },
            {
                "name": "v0.6.0-alpha.5",
                "date": "2024-11-16T05:15:58Z"
            },
            {
                "name": "v0.6.0-alpha.4",
                "date": "2024-11-01T23:52:27Z"
            },
            {
                "name": "v0.6.0-alpha.2",
                "date": "2024-08-07T23:39:58Z"
            },
            {
                "name": "v0.5.1: Bug fixes!",
                "date": "2024-04-05T00:14:00Z"
            },
            {
                "name": "v0.5.0",
                "date": "2024-03-28T01:27:49Z"
            },
            {
                "name": "v0.5.0-alpha.0: first prerelease",
                "date": "2024-02-23T02:36:05Z"
            },
            {
                "name": "v0.4.3",
                "date": "2024-02-23T02:28:22Z"
            },
            {
                "name": "v0.4.2",
                "date": "2023-12-07T00:37:46Z"
            },
            {
                "name": "v0.4.1",
                "date": "2023-09-04T20:12:25Z"
            },
            {
                "name": "v0.4.0",
                "date": "2023-08-02T17:15:48Z"
            },
            {
                "name": "v0.3.2",
                "date": "2023-05-10T13:01:12Z"
            },
            {
                "name": "v0.2.4",
                "date": "2022-05-03T04:11:10Z"
            },
            {
                "name": "v0.2.0",
                "date": "2022-03-10T14:14:26Z"
            },
            {
                "name": "v0.1.7",
                "date": "2022-01-08T07:32:41Z"
            },
            {
                "name": "Dioxus v0.1.0",
                "date": "2022-01-03T07:31:47Z"
            }
        ]
    }
}