{
    "https://api.github.com/repos/Vision-CAIR/MiniGPT-4": {
        "forks": 2926,
        "watchers": 25537,
        "stars": 25537,
        "languages": {
            "Python": 428234,
            "Shell": 605
        },
        "commits": [
            "2024-09-02T09:07:21Z",
            "2024-09-02T09:05:13Z",
            "2024-01-03T19:35:53Z",
            "2023-12-22T06:32:03Z",
            "2023-12-22T06:31:36Z",
            "2023-12-22T06:31:03Z",
            "2023-12-22T06:30:26Z",
            "2023-12-22T06:29:03Z",
            "2023-12-13T11:12:08Z",
            "2023-12-10T11:02:24Z",
            "2023-12-10T11:01:57Z",
            "2023-12-10T11:01:00Z",
            "2023-12-10T11:00:19Z",
            "2023-12-08T06:49:58Z",
            "2023-12-07T23:44:26Z",
            "2023-12-07T23:43:15Z",
            "2023-12-07T23:42:46Z",
            "2023-12-07T23:42:21Z",
            "2023-12-07T23:25:47Z",
            "2023-12-07T23:25:06Z",
            "2023-12-07T23:24:43Z",
            "2023-12-07T23:24:16Z",
            "2023-12-07T23:23:07Z",
            "2023-12-07T23:22:38Z",
            "2023-12-07T06:51:44Z",
            "2023-12-07T06:51:05Z",
            "2023-12-07T06:49:46Z",
            "2023-12-07T06:49:04Z",
            "2023-12-07T06:48:19Z",
            "2023-11-16T20:26:13Z"
        ],
        "creation_date": "2023-04-15T22:17:09Z",
        "contributors": 13,
        "topics": [],
        "subscribers": 217,
        "readme": "# MiniGPT-V\n\n<font size='5'>**MiniGPT-v2: Large Language Model as a Unified Interface for Vision-Language Multi-task Learning**</font>\n\nJun Chen, Deyao Zhu, Xiaoqian Shen, Xiang Li, Zechun Liu, Pengchuan Zhang, Raghuraman Krishnamoorthi, Vikas Chandra, Yunyang Xiong\u2628, Mohamed Elhoseiny\u2628\n\n\u2628equal last author\n\n<a href='https://minigpt-v2.github.io'><img src='https://img.shields.io/badge/Project-Page-Green'></a> <a href='https://arxiv.org/abs/2310.09478.pdf'><img src='https://img.shields.io/badge/Paper-Arxiv-red'></a>  <a href='https://huggingface.co/spaces/Vision-CAIR/MiniGPT-v2'><img src='https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue'> <a href='https://minigpt-v2.github.io'><img src='https://img.shields.io/badge/Gradio-Demo-blue'></a> [![YouTube](https://badges.aleen42.com/src/youtube.svg)](https://www.youtube.com/watch?v=atFCwV2hSY4)\n\n\n<font size='5'> **MiniGPT-4: Enhancing Vision-language Understanding with Advanced Large Language Models**</font>\n\nDeyao Zhu*, Jun Chen*, Xiaoqian Shen, Xiang Li, Mohamed Elhoseiny\n\n*equal contribution\n\n<a href='https://minigpt-4.github.io'><img src='https://img.shields.io/badge/Project-Page-Green'></a>  <a href='https://arxiv.org/abs/2304.10592'><img src='https://img.shields.io/badge/Paper-Arxiv-red'></a> <a href='https://huggingface.co/spaces/Vision-CAIR/minigpt4'><img src='https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue'></a> <a href='https://huggingface.co/Vision-CAIR/MiniGPT-4'><img src='https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Model-blue'></a> [![Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1OK4kYsZphwt5DXchKkzMBjYF6jnkqh4R?usp=sharing) [![YouTube](https://badges.aleen42.com/src/youtube.svg)](https://www.youtube.com/watch?v=__tftoxpBAw&feature=youtu.be)\n\n*King Abdullah University of Science and Technology*\n\n## \ud83d\udca1 Get help - [Q&A](https://github.com/Vision-CAIR/MiniGPT-4/discussions/categories/q-a) or [Discord \ud83d\udcac](https://discord.gg/5WdJkjbAeE)\n\n<font size='4'> **Example Community Efforts Built on Top of MiniGPT-4 ** </font> \n  \n* <a href='https://github.com/waltonfuture/InstructionGPT-4?tab=readme-ov-file'><img src='https://img.shields.io/badge/Project-Page-Green'></a> **InstructionGPT-4**: A 200-Instruction Paradigm for Fine-Tuning MiniGPT-4 Lai Wei, Zihao Jiang, Weiran Huang, Lichao Sun, Arxiv, 2023\n\n* <a href='https://openaccess.thecvf.com/content/ICCV2023W/CLVL/papers/Aubakirova_PatFig_Generating_Short_and_Long_Captions_for_Patent_Figures_ICCVW_2023_paper.pdf'><img src='https://img.shields.io/badge/Project-Page-Green'></a> **PatFig**: Generating Short and Long Captions for Patent Figures.\", Aubakirova, Dana, Kim Gerdes, and Lufei Liu, ICCVW, 2023 \n\n\n* <a href='https://github.com/JoshuaChou2018/SkinGPT-4'><img src='https://img.shields.io/badge/Project-Page-Green'></a> **SkinGPT-4**: An Interactive Dermatology Diagnostic System with Visual Large Language Model, Juexiao Zhou and Xiaonan He and Liyuan Sun and Jiannan Xu and Xiuying Chen and Yuetan Chu and Longxi Zhou and Xingyu Liao and Bin Zhang and Xin Gao,  Arxiv, 2023 \n\n\n* <a href='https://huggingface.co/Tyrannosaurus/ArtGPT-4'><img src='https://img.shields.io/badge/Project-Page-Green'></a> **ArtGPT-4**: Artistic Vision-Language Understanding with Adapter-enhanced MiniGPT-4.\",  Yuan, Zhengqing, Huiwen Xue, Xinyi Wang, Yongming Liu, Zhuanzhe Zhao, and Kun Wang, Arxiv, 2023 \n\n\n</font>\n\n## News\n[Oct.31 2023] We release the evaluation code of our MiniGPT-v2.  \n\n[Oct.24 2023] We release the finetuning code of our MiniGPT-v2.\n\n[Oct.13 2023] Breaking! We release the first major update with our MiniGPT-v2\n\n[Aug.28 2023] We now provide a llama 2 version of MiniGPT-4\n\n## Online Demo\n\nClick the image to chat with MiniGPT-v2 around your images\n[![demo](figs/minigpt2_demo.png)](https://minigpt-v2.github.io/)\n\nClick the image to chat with MiniGPT-4 around your images\n[![demo](figs/online_demo.png)](https://minigpt-4.github.io)\n\n\n## MiniGPT-v2 Examples\n\n![MiniGPT-v2 demos](figs/demo.png)\n\n\n\n## MiniGPT-4 Examples\n  |   |   |\n:-------------------------:|:-------------------------:\n![find wild](figs/examples/wop_2.png) |  ![write story](figs/examples/ad_2.png)\n![solve problem](figs/examples/fix_1.png)  |  ![write Poem](figs/examples/rhyme_1.png)\n\nMore examples can be found in the [project page](https://minigpt-4.github.io).\n\n\n\n## Getting Started\n### Installation\n\n**1. Prepare the code and the environment**\n\nGit clone our repository, creating a python environment and activate it via the following command\n\n```bash\ngit clone https://github.com/Vision-CAIR/MiniGPT-4.git\ncd MiniGPT-4\nconda env create -f environment.yml\nconda activate minigptv\n```\n\n\n**2. Prepare the pretrained LLM weights**\n\n**MiniGPT-v2** is based on Llama2 Chat 7B. For **MiniGPT-4**, we have both Vicuna V0 and Llama 2 version.\nDownload the corresponding LLM weights from the following huggingface space via clone the repository using git-lfs.\n\n|                            Llama 2 Chat 7B                             |                                           Vicuna V0 13B                                           |                                          Vicuna V0 7B                                          |\n:------------------------------------------------------------------------------------------------:|:----------------------------------------------------------------------------------------------:|:----------------------------------------------------------------------------------------------:\n[Download](https://huggingface.co/meta-llama/Llama-2-7b-chat-hf/tree/main) | [Downlad](https://huggingface.co/Vision-CAIR/vicuna/tree/main) | [Download](https://huggingface.co/Vision-CAIR/vicuna-7b/tree/main) \n\n\nThen, set the variable *llama_model* in the model config file to the LLM weight path.\n\n* For MiniGPT-v2, set the LLM path \n[here](minigpt4/configs/models/minigpt_v2.yaml#L15) at Line 14.\n\n* For MiniGPT-4 (Llama2), set the LLM path \n[here](minigpt4/configs/models/minigpt4_llama2.yaml#L15) at Line 15.\n\n* For MiniGPT-4 (Vicuna), set the LLM path \n[here](minigpt4/configs/models/minigpt4_vicuna0.yaml#L18) at Line 18\n\n**3. Prepare the pretrained model checkpoints**\n\nDownload the pretrained model checkpoints\n\n\n| MiniGPT-v2 (after stage-2) | MiniGPT-v2 (after stage-3) | MiniGPT-v2 (online developing demo)| \n|------------------------------|------------------------------|------------------------------|\n| [Download](https://drive.google.com/file/d/1Vi_E7ZtZXRAQcyz4f8E6LtLh2UXABCmu/view?usp=sharing) |[Download](https://drive.google.com/file/d/1HkoUUrjzFGn33cSiUkI-KcT-zysCynAz/view?usp=sharing) | [Download](https://drive.google.com/file/d/1aVbfW7nkCSYx99_vCRyP1sOlQiWVSnAl/view?usp=sharing) |\n\n\nFor **MiniGPT-v2**, set the path to the pretrained checkpoint in the evaluation config file \nin [eval_configs/minigptv2_eval.yaml](eval_configs/minigptv2_eval.yaml#L10) at Line 8.\n\n\n\n| MiniGPT-4 (Vicuna 13B) | MiniGPT-4 (Vicuna 7B) | MiniGPT-4 (LLaMA-2 Chat 7B) |\n|----------------------------|---------------------------|---------------------------------|\n| [Download](https://drive.google.com/file/d/1a4zLvaiDBr-36pasffmgpvH5P7CKmpze/view?usp=share_link) | [Download](https://drive.google.com/file/d/1RY9jV0dyqLX-o38LrumkKRh6Jtaop58R/view?usp=sharing) | [Download](https://drive.google.com/file/d/11nAPjEok8eAGGEG1N2vXo3kBLCg0WgUk/view?usp=sharing) |\n\nFor **MiniGPT-4**, set the path to the pretrained checkpoint in the evaluation config file \nin [eval_configs/minigpt4_eval.yaml](eval_configs/minigpt4_eval.yaml#L10) at Line 8 for Vicuna version or [eval_configs/minigpt4_llama2_eval.yaml](eval_configs/minigpt4_llama2_eval.yaml#L10) for LLama2 version.   \n\n\n\n### Launching Demo Locally\n\nFor MiniGPT-v2, run\n```\npython demo_v2.py --cfg-path eval_configs/minigptv2_eval.yaml  --gpu-id 0\n```\n\nFor MiniGPT-4 (Vicuna version), run\n\n```\npython demo.py --cfg-path eval_configs/minigpt4_eval.yaml  --gpu-id 0\n```\n\nFor MiniGPT-4 (Llama2 version), run\n\n```\npython demo.py --cfg-path eval_configs/minigpt4_llama2_eval.yaml  --gpu-id 0\n```\n\n\nTo save GPU memory, LLMs loads as 8 bit by default, with a beam search width of 1. \nThis configuration requires about 23G GPU memory for 13B LLM and 11.5G GPU memory for 7B LLM. \nFor more powerful GPUs, you can run the model\nin 16 bit by setting `low_resource` to `False` in the relevant config file:\n\n* MiniGPT-v2: [minigptv2_eval.yaml](eval_configs/minigptv2_eval.yaml#6) \n* MiniGPT-4 (Llama2): [minigpt4_llama2_eval.yaml](eval_configs/minigpt4_llama2_eval.yaml#6)\n* MiniGPT-4 (Vicuna): [minigpt4_eval.yaml](eval_configs/minigpt4_eval.yaml#6)\n\nThanks [@WangRongsheng](https://github.com/WangRongsheng), you can also run MiniGPT-4 on [Colab](https://colab.research.google.com/drive/1OK4kYsZphwt5DXchKkzMBjYF6jnkqh4R?usp=sharing)\n\n\n### Training\nFor training details of MiniGPT-4, check [here](MiniGPT4_Train.md).\n\nFor finetuning details of MiniGPT-v2, check [here](MiniGPTv2_Train.md)\n\n\n### Evaluation\nFor finetuning details of MiniGPT-v2, check [here](eval_scripts/EVAL_README.md)  \n\n\n## Acknowledgement\n\n+ [BLIP2](https://huggingface.co/docs/transformers/main/model_doc/blip-2) The model architecture of MiniGPT-4 follows BLIP-2. Don't forget to check this great open-source work if you don't know it before!\n+ [Lavis](https://github.com/salesforce/LAVIS) This repository is built upon Lavis!\n+ [Vicuna](https://github.com/lm-sys/FastChat) The fantastic language ability of Vicuna with only 13B parameters is just amazing. And it is open-source!\n+ [LLaMA](https://github.com/facebookresearch/llama) The strong open-sourced LLaMA 2 language model.\n\n\nIf you're using MiniGPT-4/MiniGPT-v2 in your research or applications, please cite using this BibTeX:\n```bibtex\n\n\n@article{chen2023minigptv2,\n      title={MiniGPT-v2: large language model as a unified interface for vision-language multi-task learning}, \n      author={Chen, Jun and Zhu, Deyao and Shen, Xiaoqian and Li, Xiang and Liu, Zechu and Zhang, Pengchuan and Krishnamoorthi, Raghuraman and Chandra, Vikas and Xiong, Yunyang and Elhoseiny, Mohamed},\n      year={2023},\n      journal={arXiv preprint arXiv:2310.09478},\n}\n\n@article{zhu2023minigpt,\n  title={MiniGPT-4: Enhancing Vision-Language Understanding with Advanced Large Language Models},\n  author={Zhu, Deyao and Chen, Jun and Shen, Xiaoqian and Li, Xiang and Elhoseiny, Mohamed},\n  journal={arXiv preprint arXiv:2304.10592},\n  year={2023}\n}\n```\n\n\n## License\nThis repository is under [BSD 3-Clause License](LICENSE.md).\nMany codes are based on [Lavis](https://github.com/salesforce/LAVIS) with \nBSD 3-Clause License [here](LICENSE_Lavis.md).\n",
        "releases": []
    }
}