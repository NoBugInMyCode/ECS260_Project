{
    "https://api.github.com/repos/dbader/schedule": {
        "forks": 969,
        "watchers": 11943,
        "stars": 11943,
        "languages": {
            "Python": 100136
        },
        "commits": [
            "2024-05-25T18:40:33Z",
            "2024-05-20T11:05:11Z",
            "2024-04-28T12:39:23Z",
            "2023-12-10T09:31:47Z",
            "2023-11-17T22:04:13Z",
            "2023-10-22T22:51:27Z",
            "2023-10-01T14:16:00Z",
            "2023-10-01T13:50:01Z",
            "2023-10-01T13:36:33Z",
            "2023-04-11T15:40:50Z",
            "2023-04-10T10:09:10Z",
            "2023-04-09T21:10:56Z",
            "2023-04-09T20:54:20Z",
            "2023-04-09T20:49:54Z",
            "2023-04-09T20:41:53Z",
            "2023-04-09T20:36:11Z",
            "2023-04-09T20:27:32Z",
            "2022-04-23T10:54:55Z",
            "2022-04-16T08:20:12Z",
            "2022-04-10T16:31:13Z",
            "2022-04-10T16:19:34Z",
            "2022-04-10T16:10:30Z",
            "2022-04-04T19:26:24Z",
            "2022-04-04T18:25:13Z",
            "2022-04-04T18:13:30Z",
            "2022-04-04T18:09:41Z",
            "2021-06-26T14:30:47Z",
            "2021-04-10T10:45:52Z",
            "2021-04-04T19:18:44Z",
            "2021-03-27T14:12:30Z"
        ],
        "creation_date": "2013-05-19T12:51:20Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 208,
        "readme": "`schedule <https://schedule.readthedocs.io/>`__\n===============================================\n\n\n.. image:: https://github.com/dbader/schedule/workflows/Tests/badge.svg\n        :target: https://github.com/dbader/schedule/actions?query=workflow%3ATests+branch%3Amaster\n\n.. image:: https://coveralls.io/repos/dbader/schedule/badge.svg?branch=master\n        :target: https://coveralls.io/r/dbader/schedule\n\n.. image:: https://img.shields.io/pypi/v/schedule.svg\n        :target: https://pypi.python.org/pypi/schedule\n\nPython job scheduling for humans. Run Python functions (or any other callable) periodically using a friendly syntax.\n\n- A simple to use API for scheduling jobs, made for humans.\n- In-process scheduler for periodic jobs. No extra processes needed!\n- Very lightweight and no external dependencies.\n- Excellent test coverage.\n- Tested on Python and 3.7, 3.8, 3.9, 3.10, 3.11, 3.12\n\nUsage\n-----\n\n.. code-block:: bash\n\n    $ pip install schedule\n\n.. code-block:: python\n\n    import schedule\n    import time\n\n    def job():\n        print(\"I'm working...\")\n\n    schedule.every(10).seconds.do(job)\n    schedule.every(10).minutes.do(job)\n    schedule.every().hour.do(job)\n    schedule.every().day.at(\"10:30\").do(job)\n    schedule.every(5).to(10).minutes.do(job)\n    schedule.every().monday.do(job)\n    schedule.every().wednesday.at(\"13:15\").do(job)\n    schedule.every().day.at(\"12:42\", \"Europe/Amsterdam\").do(job)\n    schedule.every().minute.at(\":17\").do(job)\n\n    def job_with_argument(name):\n        print(f\"I am {name}\")\n\n    schedule.every(10).seconds.do(job_with_argument, name=\"Peter\")\n\n    while True:\n        schedule.run_pending()\n        time.sleep(1)\n\nDocumentation\n-------------\n\nSchedule's documentation lives at `schedule.readthedocs.io <https://schedule.readthedocs.io/>`_.\n\n\nMeta\n----\n\nDaniel Bader - `@dbader_org <https://twitter.com/dbader_org>`_ - mail@dbader.org\n\nInspired by `Adam Wiggins' <https://github.com/adamwiggins>`_ article `\"Rethinking Cron\" <https://adam.herokuapp.com/past/2010/4/13/rethinking_cron/>`_ and the `clockwork <https://github.com/Rykian/clockwork>`_ Ruby module.\n\nDistributed under the MIT license. See `LICENSE.txt <https://github.com/dbader/schedule/blob/master/LICENSE.txt>`_ for more information.\n\nhttps://github.com/dbader/schedule\n",
        "releases": []
    }
}