{
    "https://api.github.com/repos/optuna/optuna": {
        "forks": 1053,
        "watchers": 11265,
        "stars": 11265,
        "languages": {
            "Python": 2343645,
            "Shell": 2407,
            "Dockerfile": 798,
            "Mako": 494
        },
        "commits": [
            "2025-01-20T08:01:22Z",
            "2025-01-20T07:39:10Z",
            "2025-01-20T05:24:28Z",
            "2025-01-17T09:27:22Z",
            "2025-01-17T09:10:07Z",
            "2025-01-17T05:44:00Z",
            "2025-01-17T05:12:50Z",
            "2025-01-16T04:42:40Z",
            "2025-01-10T08:47:08Z",
            "2025-01-10T05:38:29Z",
            "2025-01-15T03:56:35Z",
            "2025-01-15T01:07:52Z",
            "2025-01-14T03:50:14Z",
            "2025-01-14T02:30:02Z",
            "2024-12-28T05:09:20Z",
            "2025-01-08T06:33:48Z",
            "2025-01-08T05:15:15Z",
            "2025-01-08T04:29:14Z",
            "2025-01-08T04:20:01Z",
            "2025-01-07T08:54:01Z",
            "2025-01-07T08:52:03Z",
            "2025-01-07T07:45:35Z",
            "2025-01-07T07:44:36Z",
            "2025-01-07T05:32:49Z",
            "2025-01-07T01:52:51Z",
            "2025-01-06T08:59:44Z",
            "2025-01-06T08:01:06Z",
            "2025-01-06T06:34:21Z",
            "2025-01-06T04:53:19Z",
            "2025-01-06T04:31:13Z"
        ],
        "creation_date": "2018-02-21T06:12:56Z",
        "contributors": 30,
        "topics": [
            "distributed",
            "hacktoberfest",
            "hyperparameter-optimization",
            "machine-learning",
            "parallel",
            "python"
        ],
        "subscribers": 118,
        "readme": "<div align=\"center\"><img src=\"https://raw.githubusercontent.com/optuna/optuna/master/docs/image/optuna-logo.png\" width=\"800\"/></div>\n\n# Optuna: A hyperparameter optimization framework\n\n[![Python](https://img.shields.io/badge/python-3.8%20%7C%203.9%20%7C%203.10%20%7C%203.11%20%7C%203.12%20%7C%203.13-blue)](https://www.python.org)\n[![pypi](https://img.shields.io/pypi/v/optuna.svg)](https://pypi.python.org/pypi/optuna)\n[![conda](https://img.shields.io/conda/vn/conda-forge/optuna.svg)](https://anaconda.org/conda-forge/optuna)\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/optuna/optuna)\n[![Read the Docs](https://readthedocs.org/projects/optuna/badge/?version=stable)](https://optuna.readthedocs.io/en/stable/)\n[![Codecov](https://codecov.io/gh/optuna/optuna/branch/master/graph/badge.svg)](https://codecov.io/gh/optuna/optuna)\n\n:link: [**Website**](https://optuna.org/)\n| :page_with_curl: [**Docs**](https://optuna.readthedocs.io/en/stable/)\n| :gear: [**Install Guide**](https://optuna.readthedocs.io/en/stable/installation.html)\n| :pencil: [**Tutorial**](https://optuna.readthedocs.io/en/stable/tutorial/index.html)\n| :bulb: [**Examples**](https://github.com/optuna/optuna-examples)\n| [**Twitter**](https://twitter.com/OptunaAutoML)\n| [**LinkedIn**](https://www.linkedin.com/showcase/optuna/)\n| [**Medium**](https://medium.com/optuna)\n\n*Optuna* is an automatic hyperparameter optimization software framework, particularly designed\nfor machine learning. It features an imperative, *define-by-run* style user API. Thanks to our\n*define-by-run* API, the code written with Optuna enjoys high modularity, and the user of\nOptuna can dynamically construct the search spaces for the hyperparameters.\n\n## :loudspeaker: News\n<!-- TODO: when you add a new line, please delete the oldest line -->\n* **Jan 20, 2025**: Optuna 4.2.0 and OptunaHub 0.2.0 are out! Try the newest Optuna and OptunaHub! Check out [the release note](https://github.com/optuna/optuna/releases/tag/v4.2.0) for details.\n* **Jan 16, 2025**: A new article [Overview of Python Free Threading (v3.13t) Support in Optuna](https://medium.com/optuna/overview-of-python-free-threading-v3-13t-support-in-optuna-ad9ab62a11ba) has been published.\n* **Nov 12, 2024**: We released Optuna 4.1 with new features, Python 3.13 support and much more! Check out [the release note](https://github.com/optuna/optuna/releases/tag/v4.1.0) for details.\n* **Nov 6, 2024**: A new article [AutoSampler: Automatic Selection of Optimization Algorithms in Optuna](https://medium.com/optuna/autosampler-automatic-selection-of-optimization-algorithms-in-optuna-1443875fd8f9) has been published.\n* **Oct 21, 2024**: We posted [an article](https://medium.com/optuna/an-introduction-to-moea-d-and-examples-of-multi-objective-optimization-comparisons-8630565a4e89) introducing [MOEA/D](https://hub.optuna.org/samplers/moead/) and an example comparison with other optimization methods.\n* **Oct 15, 2024**: We posted [an article](https://medium.com/optuna/introducing-a-new-terminator-early-termination-of-black-box-optimization-based-on-expected-9a660774fcdb) about `Terminator`, which is expanded in Optuna 4.0.\n\n## :fire: Key Features\n\nOptuna has modern functionalities as follows:\n\n- [Lightweight, versatile, and platform agnostic architecture](https://optuna.readthedocs.io/en/stable/tutorial/10_key_features/001_first.html)\n  - Handle a wide variety of tasks with a simple installation that has few requirements.\n- [Pythonic search spaces](https://optuna.readthedocs.io/en/stable/tutorial/10_key_features/002_configurations.html)\n  - Define search spaces using familiar Python syntax including conditionals and loops.\n- [Efficient optimization algorithms](https://optuna.readthedocs.io/en/stable/tutorial/10_key_features/003_efficient_optimization_algorithms.html)\n  - Adopt state-of-the-art algorithms for sampling hyperparameters and efficiently pruning unpromising trials.\n- [Easy parallelization](https://optuna.readthedocs.io/en/stable/tutorial/10_key_features/004_distributed.html)\n  - Scale studies to tens or hundreds of workers with little or no changes to the code.\n- [Quick visualization](https://optuna.readthedocs.io/en/stable/tutorial/10_key_features/005_visualization.html)\n  - Inspect optimization histories from a variety of plotting functions.\n\n\n## Basic Concepts\n\nWe use the terms *study* and *trial* as follows:\n\n- Study: optimization based on an objective function\n- Trial: a single execution of the objective function\n\nPlease refer to the sample code below. The goal of a *study* is to find out the optimal set of\nhyperparameter values (e.g., `regressor` and `svr_c`) through multiple *trials* (e.g.,\n`n_trials=100`). Optuna is a framework designed for automation and acceleration of\noptimization *studies*.\n\n<details open>\n<summary>Sample code with scikit-learn</summary>\n\n[![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](http://colab.research.google.com/github/optuna/optuna-examples/blob/main/quickstart.ipynb)\n\n```python\nimport ...\n\n# Define an objective function to be minimized.\ndef objective(trial):\n\n    # Invoke suggest methods of a Trial object to generate hyperparameters.\n    regressor_name = trial.suggest_categorical('regressor', ['SVR', 'RandomForest'])\n    if regressor_name == 'SVR':\n        svr_c = trial.suggest_float('svr_c', 1e-10, 1e10, log=True)\n        regressor_obj = sklearn.svm.SVR(C=svr_c)\n    else:\n        rf_max_depth = trial.suggest_int('rf_max_depth', 2, 32)\n        regressor_obj = sklearn.ensemble.RandomForestRegressor(max_depth=rf_max_depth)\n\n    X, y = sklearn.datasets.fetch_california_housing(return_X_y=True)\n    X_train, X_val, y_train, y_val = sklearn.model_selection.train_test_split(X, y, random_state=0)\n\n    regressor_obj.fit(X_train, y_train)\n    y_pred = regressor_obj.predict(X_val)\n\n    error = sklearn.metrics.mean_squared_error(y_val, y_pred)\n\n    return error  # An objective value linked with the Trial object.\n\nstudy = optuna.create_study()  # Create a new study.\nstudy.optimize(objective, n_trials=100)  # Invoke optimization of the objective function.\n```\n</details>\n\n> [!NOTE]\n> More examples can be found in [optuna/optuna-examples](https://github.com/optuna/optuna-examples).\n>\n> The examples cover diverse problem setups such as multi-objective optimization, constrained optimization, pruning, and distributed optimization.\n\n## Installation\n\nOptuna is available at [the Python Package Index](https://pypi.org/project/optuna/) and on [Anaconda Cloud](https://anaconda.org/conda-forge/optuna).\n\n```bash\n# PyPI\n$ pip install optuna\n```\n\n```bash\n# Anaconda Cloud\n$ conda install -c conda-forge optuna\n```\n\n> [!IMPORTANT]\n> Optuna supports Python 3.8 or newer.\n>\n> Also, we provide Optuna docker images on [DockerHub](https://hub.docker.com/r/optuna/optuna).\n\n## Integrations\n\nOptuna has integration features with various third-party libraries. Integrations can be found in [optuna/optuna-integration](https://github.com/optuna/optuna-integration) and the document is available [here](https://optuna-integration.readthedocs.io/en/stable/index.html).\n\n<details>\n<summary>Supported integration libraries</summary>\n\n* [Catboost](https://github.com/optuna/optuna-examples/tree/main/catboost/catboost_pruning.py)\n* [Dask](https://github.com/optuna/optuna-examples/tree/main/dask/dask_simple.py)\n* [fastai](https://github.com/optuna/optuna-examples/tree/main/fastai/fastai_simple.py)\n* [Keras](https://github.com/optuna/optuna-examples/tree/main/keras/keras_integration.py)\n* [LightGBM](https://github.com/optuna/optuna-examples/tree/main/lightgbm/lightgbm_integration.py)\n* [MLflow](https://github.com/optuna/optuna-examples/tree/main/mlflow/keras_mlflow.py)\n* [PyTorch](https://github.com/optuna/optuna-examples/tree/main/pytorch/pytorch_simple.py)\n* [PyTorch Ignite](https://github.com/optuna/optuna-examples/tree/main/pytorch/pytorch_ignite_simple.py)\n* [PyTorch Lightning](https://github.com/optuna/optuna-examples/tree/main/pytorch/pytorch_lightning_simple.py)\n* [TensorBoard](https://github.com/optuna/optuna-examples/tree/main/tensorboard/tensorboard_simple.py)\n* [TensorFlow](https://github.com/optuna/optuna-examples/tree/main/tensorflow/tensorflow_estimator_integration.py)\n* [tf.keras](https://github.com/optuna/optuna-examples/tree/main/tfkeras/tfkeras_integration.py)\n* [Weights & Biases](https://github.com/optuna/optuna-examples/tree/main/wandb/wandb_integration.py)\n* [XGBoost](https://github.com/optuna/optuna-examples/tree/main/xgboost/xgboost_integration.py)\n</details>\n\n## Web Dashboard\n\n[Optuna Dashboard](https://github.com/optuna/optuna-dashboard) is a real-time web dashboard for Optuna.\nYou can check the optimization history, hyperparameter importance, etc. in graphs and tables.\nYou don't need to create a Python script to call [Optuna's visualization](https://optuna.readthedocs.io/en/stable/reference/visualization/index.html) functions.\nFeature requests and bug reports are welcome!\n\n![optuna-dashboard](https://user-images.githubusercontent.com/5564044/204975098-95c2cb8c-0fb5-4388-abc4-da32f56cb4e5.gif)\n\n`optuna-dashboard` can be installed via pip:\n\n```shell\n$ pip install optuna-dashboard\n```\n\n> [!TIP]\n> Please check out the convenience of Optuna Dashboard using the sample code below.\n\n<details>\n<summary>Sample code to launch Optuna Dashboard</summary>\n\nSave the following code as `optimize_toy.py`.\n\n```python\nimport optuna\n\n\ndef objective(trial):\n    x1 = trial.suggest_float(\"x1\", -100, 100)\n    x2 = trial.suggest_float(\"x2\", -100, 100)\n    return x1 ** 2 + 0.01 * x2 ** 2\n\n\nstudy = optuna.create_study(storage=\"sqlite:///db.sqlite3\")  # Create a new study with database.\nstudy.optimize(objective, n_trials=100)\n```\n\nThen try the commands below:\n\n```shell\n# Run the study specified above\n$ python optimize_toy.py\n\n# Launch the dashboard based on the storage `sqlite:///db.sqlite3`\n$ optuna-dashboard sqlite:///db.sqlite3\n...\nListening on http://localhost:8080/\nHit Ctrl-C to quit.\n```\n\n</details>\n\n\n## OptunaHub\n\n[OptunaHub](https://hub.optuna.org/) is a feature-sharing platform for Optuna.\nYou can use the registered features and publish your packages.\n\n### Use registered features\n\n`optunahub` can be installed via pip:\n\n```shell\n$ pip install optunahub\n# Install AutoSampler dependencies (CPU only is sufficient for PyTorch)\n$ pip install cmaes scipy torch --extra-index-url https://download.pytorch.org/whl/cpu\n```\n\nYou can load registered module with `optunahub.load_module`.\n\n```python\nimport optuna\nimport optunahub\n\n\ndef objective(trial: optuna.Trial) -> float:\n    x = trial.suggest_float(\"x\", -5, 5)\n    y = trial.suggest_float(\"y\", -5, 5)\n    return x**2 + y**2\n\n\nmodule = optunahub.load_module(package=\"samplers/auto_sampler\")\nstudy = optuna.create_study(sampler=module.AutoSampler())\nstudy.optimize(objective, n_trials=10)\n\nprint(study.best_trial.value, study.best_trial.params)\n```\n\nFor more details, please refer to [the optunahub documentation](https://optuna.github.io/optunahub/).\n\n### Publish your packages\n\nYou can publish your package via [optunahub-registry](https://github.com/optuna/optunahub-registry).\nSee the [OptunaHub tutorial](https://optuna.github.io/optunahub-registry/index.html).\n\n\n## Communication\n\n- [GitHub Discussions] for questions.\n- [GitHub Issues] for bug reports and feature requests.\n\n[GitHub Discussions]: https://github.com/optuna/optuna/discussions\n[GitHub issues]: https://github.com/optuna/optuna/issues\n\n\n## Contribution\n\nAny contributions to Optuna are more than welcome!\n\nIf you are new to Optuna, please check the [good first issues](https://github.com/optuna/optuna/labels/good%20first%20issue). They are relatively simple, well-defined, and often good starting points for you to get familiar with the contribution workflow and other developers.\n\nIf you already have contributed to Optuna, we recommend the other [contribution-welcome issues](https://github.com/optuna/optuna/labels/contribution-welcome).\n\nFor general guidelines on how to contribute to the project, take a look at [CONTRIBUTING.md](./CONTRIBUTING.md).\n\n\n## Reference\n\nIf you use Optuna in one of your research projects, please cite [our KDD paper](https://doi.org/10.1145/3292500.3330701) \"Optuna: A Next-generation Hyperparameter Optimization Framework\":\n\n<details open>\n<summary>BibTeX</summary>\n\n```bibtex\n@inproceedings{akiba2019optuna,\n  title={{O}ptuna: A Next-Generation Hyperparameter Optimization Framework},\n  author={Akiba, Takuya and Sano, Shotaro and Yanase, Toshihiko and Ohta, Takeru and Koyama, Masanori},\n  booktitle={The 25th ACM SIGKDD International Conference on Knowledge Discovery \\& Data Mining},\n  pages={2623--2631},\n  year={2019}\n}\n```\n</details>\n\n\n## License\n\nMIT License (see [LICENSE](./LICENSE)).\n\nOptuna uses the codes from SciPy and fdlibm projects (see [LICENSE_THIRD_PARTY](./LICENSE_THIRD_PARTY)).\n",
        "releases": [
            {
                "name": "v4.2.0",
                "date": "2025-01-20T07:13:34Z"
            },
            {
                "name": "v4.1.0",
                "date": "2024-11-11T05:20:54Z"
            },
            {
                "name": "v4.0.0",
                "date": "2024-09-02T05:16:46Z"
            },
            {
                "name": "v4.0.0-b0",
                "date": "2024-07-16T04:17:08Z"
            },
            {
                "name": "v3.6.1",
                "date": "2024-04-01T06:02:58Z"
            },
            {
                "name": "v3.6.0",
                "date": "2024-03-18T06:01:11Z"
            },
            {
                "name": "v3.5.0",
                "date": "2023-12-11T05:04:29Z"
            },
            {
                "name": "v3.4.0",
                "date": "2023-10-17T07:04:18Z"
            },
            {
                "name": "v3.3.0",
                "date": "2023-08-07T07:12:54Z"
            },
            {
                "name": "v3.2.0",
                "date": "2023-05-30T05:59:24Z"
            },
            {
                "name": "v3.1.1",
                "date": "2023-04-06T07:39:03Z"
            },
            {
                "name": "v3.0.6",
                "date": "2023-03-09T07:13:34Z"
            },
            {
                "name": "v3.1.0",
                "date": "2023-01-18T05:39:18Z"
            },
            {
                "name": "v3.1.0-b0",
                "date": "2022-12-22T07:10:14Z"
            },
            {
                "name": "v3.0.5",
                "date": "2022-12-19T08:00:35Z"
            },
            {
                "name": "v3.0.4",
                "date": "2022-12-01T06:13:56Z"
            },
            {
                "name": "v3.0.3",
                "date": "2022-10-11T07:16:18Z"
            },
            {
                "name": "v3.0.2",
                "date": "2022-09-15T06:56:54Z"
            },
            {
                "name": "v3.0.1",
                "date": "2022-09-08T09:14:35Z"
            },
            {
                "name": "v3.0.0",
                "date": "2022-08-29T05:12:49Z"
            },
            {
                "name": "v3.0.0-rc0",
                "date": "2022-08-08T06:14:30Z"
            },
            {
                "name": "v2.10.1",
                "date": "2022-06-13T05:38:25Z"
            },
            {
                "name": "v3.0.0-b1",
                "date": "2022-06-06T07:08:51Z"
            },
            {
                "name": "v3.0.0-b0",
                "date": "2022-04-12T04:15:25Z"
            },
            {
                "name": "v3.0.0-a2",
                "date": "2022-02-14T04:41:44Z"
            },
            {
                "name": "v3.0.0-a1",
                "date": "2022-02-07T06:50:44Z"
            },
            {
                "name": "v3.0.0-a0",
                "date": "2021-12-06T06:45:08Z"
            },
            {
                "name": "v2.10.0",
                "date": "2021-10-04T06:36:18Z"
            },
            {
                "name": "v2.9.1",
                "date": "2021-08-03T05:50:26Z"
            },
            {
                "name": "v2.9.0",
                "date": "2021-08-02T06:37:06Z"
            },
            {
                "name": "v2.8.0",
                "date": "2021-06-07T07:06:10Z"
            },
            {
                "name": "v2.7.0",
                "date": "2021-04-05T03:38:51Z"
            },
            {
                "name": "v2.6.0",
                "date": "2021-03-08T06:44:17Z"
            },
            {
                "name": "v2.5.0",
                "date": "2021-02-01T06:17:15Z"
            },
            {
                "name": "v2.4.0",
                "date": "2021-01-12T07:33:47Z"
            },
            {
                "name": "v2.3.0",
                "date": "2020-11-04T04:28:46Z"
            },
            {
                "name": "v2.2.0",
                "date": "2020-10-05T04:15:15Z"
            },
            {
                "name": "v2.1.0",
                "date": "2020-09-07T04:27:36Z"
            },
            {
                "name": "v2.0.0",
                "date": "2020-07-29T00:13:26Z"
            },
            {
                "name": "v2.0.0-rc0",
                "date": "2020-07-06T05:33:09Z"
            },
            {
                "name": "v1.5.0",
                "date": "2020-06-01T08:37:06Z"
            },
            {
                "name": "v1.4.0",
                "date": "2020-05-11T08:49:11Z"
            },
            {
                "name": "v1.3.0",
                "date": "2020-04-02T04:54:34Z"
            },
            {
                "name": "v1.2.0",
                "date": "2020-03-05T01:53:58Z"
            },
            {
                "name": "v1.1.0",
                "date": "2020-02-06T02:17:49Z"
            },
            {
                "name": "v1.0.0",
                "date": "2020-01-14T04:21:59Z"
            },
            {
                "name": "v0.19.0",
                "date": "2019-11-18T02:41:59Z"
            },
            {
                "name": "v0.18.1",
                "date": "2019-11-08T05:06:11Z"
            },
            {
                "name": "v0.18.0",
                "date": "2019-11-07T03:20:15Z"
            },
            {
                "name": "v0.17.1",
                "date": "2019-10-15T02:56:30Z"
            },
            {
                "name": "v0.17.0",
                "date": "2019-10-11T02:57:08Z"
            },
            {
                "name": "v0.16.0",
                "date": "2019-09-12T01:36:03Z"
            },
            {
                "name": "v0.15.0",
                "date": "2019-08-29T01:29:58Z"
            },
            {
                "name": "v0.14.0",
                "date": "2019-08-01T01:26:58Z"
            },
            {
                "name": "v0.13.0",
                "date": "2019-07-04T01:54:32Z"
            },
            {
                "name": "v0.12.0",
                "date": "2019-06-06T02:16:38Z"
            },
            {
                "name": "v0.11.0",
                "date": "2019-05-23T02:08:18Z"
            },
            {
                "name": "v0.10.0",
                "date": "2019-04-22T05:59:56Z"
            },
            {
                "name": "v0.9.0",
                "date": "2019-03-19T08:17:44Z"
            },
            {
                "name": "v0.8.0",
                "date": "2019-02-26T01:34:17Z"
            },
            {
                "name": "v0.7.0",
                "date": "2019-01-24T04:14:52Z"
            },
            {
                "name": "v0.6.0",
                "date": "2019-01-10T01:55:22Z"
            },
            {
                "name": "v0.5.0",
                "date": "2018-12-14T02:12:29Z"
            },
            {
                "name": "v0.4.0",
                "date": "2018-12-03T04:35:14Z"
            },
            {
                "name": "v0.3.0",
                "date": "2018-11-14T08:23:34Z"
            },
            {
                "name": "v0.2.1",
                "date": "2018-09-06T10:54:21Z"
            },
            {
                "name": "v0.2.0",
                "date": "2018-08-15T08:17:19Z"
            },
            {
                "name": "v0.1.0",
                "date": "2018-05-10T08:42:25Z"
            }
        ]
    }
}