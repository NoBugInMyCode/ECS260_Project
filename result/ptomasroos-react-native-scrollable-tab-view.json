{
    "https://api.github.com/repos/ptomasroos/react-native-scrollable-tab-view": {
        "forks": 2275,
        "watchers": 6941,
        "stars": 6941,
        "languages": {
            "JavaScript": 36771,
            "Objective-C": 4408,
            "Starlark": 1724,
            "Java": 1403
        },
        "commits": [
            "2023-01-17T19:53:06Z",
            "2022-12-06T20:52:03Z",
            "2020-07-24T12:22:49Z",
            "2020-07-24T12:21:10Z",
            "2020-05-23T19:29:11Z",
            "2020-04-02T06:02:18Z",
            "2019-12-17T10:10:10Z",
            "2019-10-28T12:32:51Z",
            "2019-10-20T10:25:11Z",
            "2019-10-20T06:25:04Z",
            "2019-10-10T11:53:24Z",
            "2019-10-10T08:14:49Z",
            "2019-10-08T05:35:09Z",
            "2019-10-06T04:33:03Z",
            "2019-09-10T07:30:54Z",
            "2019-09-10T07:30:40Z",
            "2019-09-10T07:30:24Z",
            "2019-08-30T20:50:18Z",
            "2019-08-29T22:54:52Z",
            "2019-08-29T22:53:23Z",
            "2018-11-09T09:20:21Z",
            "2018-11-09T09:18:55Z",
            "2018-10-25T09:14:15Z",
            "2018-10-25T08:49:56Z",
            "2018-10-25T08:41:05Z",
            "2018-08-17T18:04:51Z",
            "2018-08-17T17:17:51Z",
            "2018-07-16T13:44:02Z",
            "2018-07-05T21:13:25Z",
            "2018-05-15T05:32:59Z"
        ],
        "creation_date": "2015-06-11T05:01:07Z",
        "contributors": 30,
        "topics": [
            "animated",
            "react-native",
            "swipe",
            "tabs"
        ],
        "subscribers": 138,
        "readme": "\n## react-native-scrollable-tab-view\n[![npm version](https://badge.fury.io/js/react-native-scrollable-tab-view.svg)](https://badge.fury.io/js/react-native-scrollable-tab-view)\n\nThis is probably my favorite navigation pattern on Android, I wish it\nwere more common on iOS! This is a very simple JavaScript-only\nimplementation of it for React Native. For more information about how\nthe animations behind this work, check out the Rebound section of the\n[React Native Animation Guide](https://facebook.github.io/react-native/docs/animations.html)\n\n\n## Add it to your project\n\n1. Run `npm install react-native-scrollable-tab-view --save`\n2. `var ScrollableTabView = require('react-native-scrollable-tab-view');`\n\n## Demo\n<a href=\"https://appetize.io/embed/6qfv7eydjtm34mhn6qwj2nt3xm?embed=true&screenOnly=false&xdocMsg=true&debug=true&scale=100&deviceColor=black&orientation=portrait&device=iphone6s&osVersion=9.3&deviceId=RGV2aWNlOjU2Y2FjNTExZWQwOTM2MTEwMGRhYTNlNg&platform=ios&width=375&height=668&phoneWidth=416&phoneHeight=870&screenOffsetLeft=21&screenOffsetTop=100&params=%7B%7D\" target=\"_blank\"><strong>Run this example</strong></a>\n\n<a href=\"https://raw.githubusercontent.com/brentvatne/react-native-scrollable-tab-view/master/demo_images/demo.gif\"><img src=\"https://raw.githubusercontent.com/brentvatne/react-native-scrollable-tab-view/master/demo_images/demo.gif\" width=\"350\"></a>\n<a href=\"https://raw.githubusercontent.com/brentvatne/react-native-scrollable-tab-view/master/demo_images/demo-fb.gif\"><img src=\"https://raw.githubusercontent.com/brentvatne/react-native-scrollable-tab-view/master/demo_images/demo-fb.gif\" width=\"350\"></a>\n\n## Basic usage\n\n```javascript\nvar ScrollableTabView = require('react-native-scrollable-tab-view');\n\nvar App = React.createClass({\n  render() {\n    return (\n      <ScrollableTabView>\n        <ReactPage tabLabel=\"React\" />\n        <FlowPage tabLabel=\"Flow\" />\n        <JestPage tabLabel=\"Jest\" />\n      </ScrollableTabView>\n    );\n  }\n});\n```\n\n## Injecting a custom tab bar\n\nSuppose we had a custom tab bar called `CustomTabBar`, we would inject\nit into our `ScrollableTabView` like this:\n\n```javascript\nvar ScrollableTabView = require('react-native-scrollable-tab-view');\nvar CustomTabBar = require('./CustomTabBar');\n\nvar App = React.createClass({\n  render() {\n    return (\n      <ScrollableTabView renderTabBar={() => <CustomTabBar someProp={'here'} />}>\n        <ReactPage tabLabel=\"React\" />\n        <FlowPage tabLabel=\"Flow\" />\n        <JestPage tabLabel=\"Jest\" />\n      </ScrollableTabView>\n    );\n  }\n});\n```\nTo start you can just copy [DefaultTabBar](https://github.com/skv-headless/react-native-scrollable-tab-view/blob/master/DefaultTabBar.js).\n\n## Examples\n\n[SimpleExample](https://github.com/skv-headless/react-native-scrollable-tab-view/blob/master/Example/SimpleExample.js).\n\n[ScrollableTabsExample](https://github.com/skv-headless/react-native-scrollable-tab-view/blob/master/Example/ScrollableTabsExample.js).\n\n[OverlayExample](https://github.com/skv-headless/react-native-scrollable-tab-view/blob/master/Example/OverlayExample.js).\n\n[FacebookExample](https://github.com/skv-headless/react-native-scrollable-tab-view/blob/master/Example/FacebookExample.js).\n\n## Props\n\n- **`renderTabBar`** _(Function:ReactComponent)_ - accept 1 argument `props` and should return a component to use as\n  the tab bar. The component has `goToPage`, `tabs`, `activeTab` and\n  `ref` added to the props, and should implement `setAnimationValue` to\n  be able to animate itself along with the tab content. You can manually pass the `props` to the TabBar component.\n- **`tabBarPosition`** _(String)_ Defaults to `\"top\"`.\n  - `\"bottom\"` to position the tab bar below content.\n  - `\"overlayTop\"` or `\"overlayBottom\"` for a semitransparent tab bar that overlays content. Custom tab bars must consume a style prop on their outer element to support this feature: `style={this.props.style}`.\n- **`onChangeTab`** _(Function)_ - function to call when tab changes, should accept 1 argument which is an Object containing two keys: `i`: the index of the tab that is selected, `ref`: the ref of the tab that is selected\n- **`onScroll`** _(Function)_ - function to call when the pages are sliding, should accept 1 argument which is an Float number representing the page position in the slide frame.\n- **`locked`** _(Bool)_ - disables horizontal dragging to scroll between tabs, default is false.\n- **`initialPage`** _(Integer)_ - the index of the initially selected tab, defaults to 0 === first tab.\n- **`page`** _(Integer)_ - set selected tab(can be buggy see  [#126](https://github.com/brentvatne/react-native-scrollable-tab-view/issues/126)\n- **`children`** _(ReactComponents)_ - each top-level child component should have a `tabLabel` prop that can be used by the tab bar component to render out the labels. The default tab bar expects it to be a string, but you can use anything you want if you make a custom tab bar.\n- **`tabBarUnderlineStyle`** _([View.propTypes.style](https://facebook.github.io/react-native/docs/view.html#style))_ - style of the default tab bar's underline.\n- **`tabBarBackgroundColor`** _(String)_ - color of the default tab bar's background, defaults to `white`\n- **`tabBarActiveTextColor`** _(String)_ - color of the default tab bar's text when active, defaults to `navy`\n- **`tabBarInactiveTextColor`** _(String)_ - color of the default tab bar's text when inactive, defaults to `black`\n- **`tabBarTextStyle`** _(Object)_ - Additional styles to the tab bar's text. Example: `{fontFamily: 'Roboto', fontSize: 15}`\n- **`style`** _([View.propTypes.style](https://facebook.github.io/react-native/docs/view.html#style))_\n- **`contentProps`** _(Object)_ - props that are applied to root `ScrollView`/`ViewPagerAndroid`. Note that overriding defaults set by the library may break functionality; see the source for details.\n- **`scrollWithoutAnimation`** _(Bool)_ - on tab press change tab without animation.\n- **`prerenderingSiblingsNumber`** _(Integer)_ - pre-render nearby # sibling, `Infinity` === render all the siblings, default to 0 === render current page.\n\n## Contribution\n**Issues** are welcome. Please add a screenshot of bug and code snippet. Quickest way to solve issue is to reproduce it on one of the examples.\n\n**Pull requests** are welcome. If you want to change API or making something big better to create issue and discuss it first. Before submiting PR please run ```eslint .``` Also all eslint fixes are welcome.\n\nPlease attach video or gif to PR's and issues it is super helpful.\n\n<a href=\"http://www.abeautifulsite.net/recording-a-screencast-with-quicktime/\" target=\"_blank\">How to make video</a>\n\n<a href=\"https://github.com/jclem/gifify\" target=\"_blank\">How to make gif from video</a>\n\n---\n\n**MIT Licensed**\n",
        "releases": [
            {
                "name": "v1.0.0",
                "date": "2019-10-28T12:35:59Z"
            },
            {
                "name": "v0.10.0",
                "date": "2018-11-09T09:22:43Z"
            }
        ]
    }
}