{
    "https://api.github.com/repos/nothings/stb": {
        "forks": 7755,
        "watchers": 27610,
        "stars": 27610,
        "languages": {
            "C": 3803346,
            "C++": 415533,
            "Shell": 1125,
            "Makefile": 697,
            "Batchfile": 18
        },
        "commits": [
            "2024-11-09T07:02:08Z",
            "2024-11-09T07:01:49Z",
            "2024-11-08T12:05:02Z",
            "2024-11-08T11:58:10Z",
            "2024-11-08T12:00:39Z",
            "2024-11-08T11:58:29Z",
            "2024-10-18T17:26:20Z",
            "2024-10-18T05:22:02Z",
            "2024-10-18T04:19:29Z",
            "2024-10-18T03:47:31Z",
            "2024-10-02T19:41:37Z",
            "2024-09-09T02:05:03Z",
            "2024-07-29T04:39:05Z",
            "2024-07-27T21:12:30Z",
            "2024-07-15T15:30:22Z",
            "2024-07-15T15:29:18Z",
            "2024-07-15T15:28:08Z",
            "2024-06-19T17:41:02Z",
            "2024-05-31T17:43:47Z",
            "2024-05-25T17:56:08Z",
            "2024-05-25T01:48:38Z",
            "2024-02-13T07:49:35Z",
            "2024-02-13T06:14:27Z",
            "2024-02-13T06:10:02Z",
            "2024-02-08T21:24:06Z",
            "2024-02-08T20:53:51Z",
            "2024-02-08T18:36:54Z",
            "2024-02-04T22:42:51Z",
            "2023-12-14T18:59:23Z",
            "2023-12-14T11:11:33Z"
        ],
        "creation_date": "2014-05-25T16:51:23Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 627,
        "readme": "<!---   THIS FILE IS AUTOMATICALLY GENERATED, DO NOT CHANGE IT BY HAND   --->\n\nstb\n===\n\nsingle-file public domain (or MIT licensed) libraries for C/C++\n\n# This project discusses security-relevant bugs in public in Github Issues and Pull Requests, and it may take significant time for security fixes to be implemented or merged. If this poses an unreasonable risk to your project, do not use stb libraries.\n\nNoteworthy:\n\n* image loader: [stb_image.h](stb_image.h)\n* image writer: [stb_image_write.h](stb_image_write.h)\n* image resizer: [stb_image_resize2.h](stb_image_resize2.h)\n* font text rasterizer: [stb_truetype.h](stb_truetype.h)\n* typesafe containers: [stb_ds.h](stb_ds.h)\n\nMost libraries by stb, except: stb_dxt by Fabian \"ryg\" Giesen, original stb_image_resize\nby Jorge L. \"VinoBS\" Rodriguez, and stb_image_resize2 and stb_sprintf by Jeff Roberts.\n\n<a name=\"stb_libs\"></a>\n\nlibrary    | lastest version | category | LoC | description\n--------------------- | ---- | -------- | --- | --------------------------------\n**[stb_vorbis.c](stb_vorbis.c)** | 1.22 | audio | 5584 | decode ogg vorbis files from file/memory to float/16-bit signed output\n**[stb_hexwave.h](stb_hexwave.h)** | 0.5 | audio | 680 | audio waveform synthesizer\n**[stb_image.h](stb_image.h)** | 2.30 | graphics | 7988 | image loading/decoding from file/memory: JPG, PNG, TGA, BMP, PSD, GIF, HDR, PIC\n**[stb_truetype.h](stb_truetype.h)** | 1.26 | graphics | 5079 | parse, decode, and rasterize characters from truetype fonts\n**[stb_image_write.h](stb_image_write.h)** | 1.16 | graphics | 1724 | image writing to disk: PNG, TGA, BMP\n**[stb_image_resize2.h](stb_image_resize2.h)** | 2.12 | graphics | 10601 | resize images larger/smaller with good quality\n**[stb_rect_pack.h](stb_rect_pack.h)** | 1.01 | graphics | 623 | simple 2D rectangle packer with decent quality\n**[stb_perlin.h](stb_perlin.h)** | 0.5 | graphics | 428 | perlin's revised simplex noise w/ different seeds\n**[stb_ds.h](stb_ds.h)** | 0.67 | utility | 1895 | typesafe dynamic array and hash tables for C, will compile in C++\n**[stb_sprintf.h](stb_sprintf.h)** | 1.10 | utility | 1906 | fast sprintf, snprintf for C/C++\n**[stb_textedit.h](stb_textedit.h)** | 1.14 | user&nbsp;interface | 1429 | guts of a text editor for games etc implementing them from scratch\n**[stb_voxel_render.h](stb_voxel_render.h)** | 0.89 | 3D&nbsp;graphics | 3807 | Minecraft-esque voxel rendering \"engine\" with many more features\n**[stb_dxt.h](stb_dxt.h)** | 1.12 | 3D&nbsp;graphics | 719 | Fabian \"ryg\" Giesen's real-time DXT compressor\n**[stb_easy_font.h](stb_easy_font.h)** | 1.1 | 3D&nbsp;graphics | 305 | quick-and-dirty easy-to-deploy bitmap font for printing frame rate, etc\n**[stb_tilemap_editor.h](stb_tilemap_editor.h)** | 0.42 | game&nbsp;dev | 4187 | embeddable tilemap editor\n**[stb_herringbone_wa...](stb_herringbone_wang_tile.h)** | 0.7 | game&nbsp;dev | 1221 | herringbone Wang tile map generator\n**[stb_c_lexer.h](stb_c_lexer.h)** | 0.12 | parsing | 941 | simplify writing parsers for C-like languages\n**[stb_divide.h](stb_divide.h)** | 0.94 | math | 433 | more useful 32-bit modulus e.g. \"euclidean divide\"\n**[stb_connected_comp...](stb_connected_components.h)** | 0.96 | misc | 1049 | incrementally compute reachability on grids\n**[stb_leakcheck.h](stb_leakcheck.h)** | 0.6 | misc | 194 | quick-and-dirty malloc/free leak-checking\n**[stb_include.h](stb_include.h)** | 0.02 | misc | 295 | implement recursive #include support, particularly for GLSL\n\nTotal libraries: 21\nTotal lines of C code: 51088\n\n\nFAQ\n---\n\n#### What's the license?\n\nThese libraries are in the public domain. You can do anything you\nwant with them. You have no legal obligation\nto do anything else, although I appreciate attribution.\n\nThey are also licensed under the MIT open source license, if you have lawyers\nwho are unhappy with public domain. Every source file includes an explicit\ndual-license for you to choose from.\n\n#### How do I use these libraries?\n\nThe idea behind single-header file libraries is that they're easy to distribute and deploy\nbecause all the code is contained in a single file. By default, the .h files in here act as\ntheir own header files, i.e. they declare the functions contained in the file but don't\nactually result in any code getting compiled.\n\nSo in addition, you should select _exactly one_ C/C++ source file that actually instantiates\nthe code, preferably a file you're not editing frequently. This file should define a\nspecific macro (this is documented per-library) to actually enable the function definitions.\nFor example, to use stb_image, you should have exactly one C/C++ file that doesn't\ninclude stb_image.h regularly, but instead does\n\n    #define STB_IMAGE_IMPLEMENTATION\n    #include \"stb_image.h\"\n\nThe right macro to define is pointed out right at the top of each of these libraries.\n\n#### <a name=\"other_libs\"></a> Are there other single-file public-domain/open source libraries with minimal dependencies out there?\n\n[Yes.](https://github.com/nothings/single_file_libs)\n\n#### If I wrap an stb library in a new library, does the new library have to be public domain/MIT?\n\nNo, because it's public domain you can freely relicense it to whatever license your new\nlibrary wants to be.\n\n#### What's the deal with SSE support in GCC-based compilers?\n\nstb_image will either use SSE2 (if you compile with -msse2) or\nwill not use any SIMD at all, rather than trying to detect the\nprocessor at runtime and handle it correctly. As I understand it,\nthe approved path in GCC for runtime-detection require\nyou to use multiple source files, one for each CPU configuration.\nBecause stb_image is a header-file library that compiles in only\none source file, there's no approved way to build both an\nSSE-enabled and a non-SSE-enabled variation.\n\nWhile we've tried to work around it, we've had multiple issues over\nthe years due to specific versions of gcc breaking what we're doing,\nso we've given up on it. See https://github.com/nothings/stb/issues/280\nand https://github.com/nothings/stb/issues/410 for examples.\n\n#### Some of these libraries seem redundant to existing open source libraries. Are they better somehow?\n\nGenerally they're only better in that they're easier to integrate,\neasier to use, and easier to release (single file; good API; no\nattribution requirement). They may be less featureful, slower,\nand/or use more memory. If you're already using an equivalent\nlibrary, there's probably no good reason to switch.\n\n#### Can I link directly to the table of stb libraries?\n\nYou can use [this URL](https://github.com/nothings/stb#stb_libs) to link directly to that list.\n\n#### Why do you list \"lines of code\"? It's a terrible metric.\n\nJust to give you some idea of the internal complexity of the library,\nto help you manage your expectations, or to let you know what you're\ngetting into. While not all the libraries are written in the same\nstyle, they're certainly similar styles, and so comparisons between\nthe libraries are probably still meaningful.\n\nNote though that the lines do include both the implementation, the\npart that corresponds to a header file, and the documentation.\n\n#### Why single-file headers?\n\nWindows doesn't have standard directories where libraries\nlive. That makes deploying libraries in Windows a lot more\npainful than open source developers on Unix-derivates generally\nrealize. (It also makes library dependencies a lot worse in Windows.)\n\nThere's also a common problem in Windows where a library was built\nagainst a different version of the runtime library, which causes\nlink conflicts and confusion. Shipping the libs as headers means\nyou normally just compile them straight into your project without\nmaking libraries, thus sidestepping that problem.\n\nMaking them a single file makes it very easy to just\ndrop them into a project that needs them. (Of course you can\nstill put them in a proper shared library tree if you want.)\n\nWhy not two files, one a header and one an implementation?\nThe difference between 10 files and 9 files is not a big deal,\nbut the difference between 2 files and 1 file is a big deal.\nYou don't need to zip or tar the files up, you don't have to\nremember to attach *two* files, etc.\n\n#### Why \"stb\"? Is this something to do with Set-Top Boxes?\n\nNo, they are just the initials for my name, Sean T. Barrett.\nThis was not chosen out of egomania, but as a moderately sane\nway of namespacing the filenames and source function names.\n\n#### Will you add more image types to stb_image.h?\n\nNo. As stb_image use has grown, it has become more important\nfor us to focus on security of the codebase. Adding new image\nformats increases the amount of code we need to secure, so it\nis no longer worth adding new formats.\n\n#### Do you have any advice on how to create my own single-file library?\n\nYes. https://github.com/nothings/stb/blob/master/docs/stb_howto.txt\n\n#### Why public domain?\n\nI prefer it over GPL, LGPL, BSD, zlib, etc. for many reasons.\nSome of them are listed here:\nhttps://github.com/nothings/stb/blob/master/docs/why_public_domain.md\n\n#### Why C?\n\nPrimarily, because I use C, not C++. But it does also make it easier\nfor other people to use them from other languages.\n\n#### Why not C99? stdint.h, declare-anywhere, etc.\n\nI still use MSVC 6 (1998) as my IDE because it has better human factors\nfor me than later versions of MSVC.\n",
        "releases": []
    }
}