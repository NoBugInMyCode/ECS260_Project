{
    "https://api.github.com/repos/a1studmuffin/SpaceshipGenerator": {
        "forks": 438,
        "watchers": 7694,
        "stars": 7694,
        "languages": {
            "Python": 38796
        },
        "commits": [
            "2020-12-23T00:56:07Z",
            "2020-12-22T22:17:10Z",
            "2020-07-25T05:30:09Z",
            "2020-07-25T05:27:32Z",
            "2020-06-24T12:42:48Z",
            "2020-06-24T12:38:21Z",
            "2020-06-08T19:47:20Z",
            "2020-06-07T12:15:59Z",
            "2020-06-06T20:02:58Z",
            "2020-06-01T10:47:33Z",
            "2018-02-22T23:21:54Z",
            "2017-08-10T02:11:16Z",
            "2016-11-20T10:53:10Z",
            "2016-11-20T10:47:29Z",
            "2016-07-10T13:04:24Z",
            "2016-06-24T09:16:23Z",
            "2016-06-21T05:11:04Z",
            "2016-06-21T04:56:20Z",
            "2016-06-20T00:58:42Z",
            "2016-06-20T00:55:55Z",
            "2016-06-19T10:26:33Z",
            "2016-06-19T09:28:54Z",
            "2016-06-19T08:12:07Z",
            "2016-06-19T08:03:34Z",
            "2016-06-19T02:41:00Z",
            "2016-06-19T01:52:53Z",
            "2016-06-18T23:48:28Z",
            "2016-06-16T01:27:13Z",
            "2016-06-15T09:21:32Z",
            "2016-06-15T09:19:01Z"
        ],
        "creation_date": "2016-06-14T03:16:07Z",
        "contributors": 4,
        "topics": [
            "3d",
            "blender-scripts",
            "game-development",
            "procedural-generation",
            "python",
            "spaceship"
        ],
        "subscribers": 222,
        "readme": "# Spaceship Generator\n\nA Blender script to procedurally generate 3D spaceships from a random seed.\n\n![Spaceship screenshots](https://raw.githubusercontent.com/a1studmuffin/SpaceshipGenerator/master/screenshots/spaceships_grid.jpg)\n\nUsage\n-----\n* Install Blender 2.80 or greater: http://blender.org/download/\n* Download newest `add_mesh_SpaceshipGenerator.zip` from the [Releases](https://github.com/a1studmuffin/SpaceshipGenerator/releases) section\n* Under Edit > Preferences... > Add-ons > Install... open the downloaded ZIP file\n* Under Edit > Preferences... > Add-ons enable the \"Add Mesh: Spaceship Generator\" script (search for \"spaceship\")\n* Add a spaceship in the 3D View under Add > Mesh > Spaceship\n* Expand the Spaceship tab that appears in the bottom left of the viewport to adjust procedural generation settings\n\nHow it works\n------------\n\n![Step-by-step animation](https://raw.githubusercontent.com/a1studmuffin/SpaceshipGenerator/master/screenshots/step-by-step-animation.gif)\n\nWatch on YouTube: https://www.youtube.com/watch?v=xJZyXqJ6nog\n\n* Start with a box.\n* Build the hull: Extrude the front/rear faces several times, adding random translation/scaling/rotation along the way.\n* Add asymmetry to the hull: Pick random faces and extrude them out in a similar manner, reducing in scale each time.\n* Add detail to the hull: Categorize each face by its orientation and generate details on it such as engines, antenna, weapon turrets, lights etc.\n* Sometimes apply horizontal symmetry.\n* Add a Bevel modifier to angularize the shape a bit.\n* Apply materials to the final result.\n* Take over the universe with your new infinite fleet of spaceships.\n\nExtreme examples\n----------------\nThe following screenshots were created using extreme values for the number of hull segments and asymmetry segments to show how the algorithm works.\n\n![Extreme spaceship screenshots](https://raw.githubusercontent.com/a1studmuffin/SpaceshipGenerator/master/screenshots/extreme_examples.jpg)\n\nTips and Tricks\n---------------\n* By default the script will delete all objects starting with `Spaceship` before generating a new spaceship. To disable this feature, remove or comment out the call to `reset_scene()` around line 735 in the main function.\n* You can provide a seed to the `generate_spaceship()` function to always generate the same spaceship. For example, `generate_spaceship('michael')`.\n* The `generate_spaceship()` function takes many more parameters that affect the generation process. Try playing with them!\n* You can replace the textures with your own ones. All textures are applied using global-space cube UVs. `hull_normal.png` is a normal map that adds extra surface \"greebles\". `hull_lights_diffuse.png` is an additive diffuse texture to set the color of the window lights. `hull_lights_emit.png` is an emissive texture to make the windows glow in darkness.\n\nCredits\n-------\nWritten for fun as part of the [/r/proceduralgeneration](https://www.reddit.com/r/proceduralgeneration/) June 2016 [monthly challenge](https://www.reddit.com/r/proceduralgeneration/comments/4mn9gj/monthly_challenge_7_june_2016_procedural/).\n\nReleased under the [MIT License].\n\nAuthored and maintained by Michael Davies.\n\n> GitHub [@a1studmuffin](https://github.com/a1studmuffin)\n> Twitter [@butterparty](https://twitter.com/butterparty)\n\nSpecial thanks to [@panzi](https://github.com/panzi) for bugfixes, a proper GUI and build script. Also to [@mjrthemes](https://github.com/mjrthemes) for bugfixing, and [@LendoK](https://github.com/LendoK) for the 2.80 port.\n\n[MIT License]: http://mit-license.org/\n",
        "releases": [
            {
                "name": "Version 1.1.3",
                "date": "2020-07-25T05:33:40Z"
            },
            {
                "name": "Version 1.1.2",
                "date": "2016-11-20T10:56:26Z"
            },
            {
                "name": "Version 0.1.1",
                "date": "2016-06-21T05:04:33Z"
            },
            {
                "name": "Version 0.1.0",
                "date": "2016-06-19T08:07:59Z"
            }
        ]
    }
}