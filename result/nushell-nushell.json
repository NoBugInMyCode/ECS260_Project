{
    "https://api.github.com/repos/nushell/nushell": {
        "forks": 1721,
        "watchers": 33499,
        "stars": 33499,
        "languages": {
            "Rust": 9711605,
            "Nushell": 219772,
            "Python": 8420,
            "Dockerfile": 4148,
            "Shell": 3955,
            "PowerShell": 989,
            "Batchfile": 765
        },
        "commits": [
            "2025-01-21T20:39:39Z",
            "2025-01-21T17:54:52Z",
            "2025-01-21T16:11:40Z",
            "2025-01-21T15:50:53Z",
            "2025-01-21T12:35:34Z",
            "2025-01-20T22:49:07Z",
            "2025-01-20T19:03:03Z",
            "2025-01-19T21:46:48Z",
            "2025-01-17T15:57:35Z",
            "2025-01-17T12:24:00Z",
            "2025-01-17T12:21:59Z",
            "2025-01-17T12:21:32Z",
            "2025-01-17T12:20:00Z",
            "2025-01-16T22:38:42Z",
            "2025-01-16T19:59:39Z",
            "2025-01-15T22:29:34Z",
            "2025-01-15T22:10:28Z",
            "2025-01-15T12:21:58Z",
            "2025-01-15T12:12:34Z",
            "2025-01-15T01:30:09Z",
            "2025-01-15T01:29:52Z",
            "2025-01-15T01:29:37Z",
            "2025-01-14T22:51:30Z",
            "2025-01-14T17:44:31Z",
            "2025-01-14T13:16:44Z",
            "2025-01-13T14:04:17Z",
            "2025-01-13T13:00:21Z",
            "2025-01-13T13:00:01Z",
            "2025-01-12T04:15:19Z",
            "2025-01-11T21:28:08Z"
        ],
        "creation_date": "2019-05-10T16:59:42Z",
        "contributors": 30,
        "topics": [
            "rust",
            "shell"
        ],
        "subscribers": 190,
        "readme": "# Nushell <!-- omit in toc -->\n[![Crates.io](https://img.shields.io/crates/v/nu.svg)](https://crates.io/crates/nu)\n[![Build Status](https://img.shields.io/github/actions/workflow/status/nushell/nushell/ci.yml?branch=main)](https://github.com/nushell/nushell/actions)\n[![Nightly Build](https://github.com/nushell/nushell/actions/workflows/nightly-build.yml/badge.svg)](https://github.com/nushell/nushell/actions/workflows/nightly-build.yml)\n[![Discord](https://img.shields.io/discord/601130461678272522.svg?logo=discord)](https://discord.gg/NtAbbGn)\n[![The Changelog #363](https://img.shields.io/badge/The%20Changelog-%23363-61c192.svg)](https://changelog.com/podcast/363)\n[![@nu_shell](https://img.shields.io/badge/twitter-@nu_shell-1DA1F3?style=flat-square)](https://twitter.com/nu_shell)\n[![GitHub commit activity](https://img.shields.io/github/commit-activity/m/nushell/nushell)](https://github.com/nushell/nushell/graphs/commit-activity)\n[![GitHub contributors](https://img.shields.io/github/contributors/nushell/nushell)](https://github.com/nushell/nushell/graphs/contributors)\n\nA new type of shell.\n\n![Example of nushell](assets/nushell-autocomplete6.gif \"Example of nushell\")\n\n## Table of Contents <!-- omit in toc -->\n\n- [Status](#status)\n- [Learning About Nu](#learning-about-nu)\n- [Installation](#installation)\n- [Configuration](#configuration)\n- [Philosophy](#philosophy)\n  - [Pipelines](#pipelines)\n  - [Opening files](#opening-files)\n  - [Plugins](#plugins)\n- [Goals](#goals)\n- [Officially Supported By](#officially-supported-by)\n- [Contributing](#contributing)\n- [License](#license)\n\n## Status\n\nThis project has reached a minimum-viable-product level of quality. Many people use it as their daily driver, but it may be unstable for some commands. Nu's design is subject to change as it matures.\n\n## Learning About Nu\n\nThe [Nushell book](https://www.nushell.sh/book/) is the primary source of Nushell documentation. You can find [a full list of Nu commands in the book](https://www.nushell.sh/commands/), and we have many examples of using Nu in our [cookbook](https://www.nushell.sh/cookbook/).\n\nWe're also active on [Discord](https://discord.gg/NtAbbGn) and [Twitter](https://twitter.com/nu_shell); come and chat with us!\n\n## Installation\n\nTo quickly install Nu:\n\n```bash\n# Linux and macOS\nbrew install nushell\n# Windows\nwinget install nushell\n```\n\nTo use `Nu` in GitHub Action, check [setup-nu](https://github.com/marketplace/actions/setup-nu) for more detail.\n\nDetailed installation instructions can be found in the [installation chapter of the book](https://www.nushell.sh/book/installation.html). Nu is available via many package managers:\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/nushell.svg?columns=3)](https://repology.org/project/nushell/versions)\n\nFor details about which platforms the Nushell team actively supports, see [our platform support policy](devdocs/PLATFORM_SUPPORT.md).\n\n## Configuration\n\nThe default configurations can be found at [sample_config](crates/nu-utils/src/default_files)\nwhich are the configuration files one gets when they startup Nushell for the first time.\n\nIt sets all of the default configuration to run Nushell.  From here one can\nthen customize this file for their specific needs.\n\nTo see where *config.nu* is located on your system simply type this command.\n\n```rust\n$nu.config-path\n```\n\nPlease see our [book](https://www.nushell.sh) for all of the Nushell documentation.\n\n\n## Philosophy\n\nNu draws inspiration from projects like PowerShell, functional programming languages, and modern CLI tools.\nRather than thinking of files and data as raw streams of text, Nu looks at each input as something with structure.\nFor example, when you list the contents of a directory what you get back is a table of rows, where each row represents an item in that directory.\nThese values can be piped through a series of steps, in a series of commands called a 'pipeline'.\n\n### Pipelines\n\nIn Unix, it's common to pipe between commands to split up a sophisticated command over multiple steps.\nNu takes this a step further and builds heavily on the idea of _pipelines_.\nAs in the Unix philosophy, Nu allows commands to output to stdout and read from stdin.\nAdditionally, commands can output structured data (you can think of this as a third kind of stream).\nCommands that work in the pipeline fit into one of three categories:\n\n-   Commands that produce a stream (e.g., `ls`)\n-   Commands that filter a stream (e.g., `where type == \"dir\"`)\n-   Commands that consume the output of the pipeline (e.g., `table`)\n\nCommands are separated by the pipe symbol (`|`) to denote a pipeline flowing left to right.\n\n```shell\nls | where type == \"dir\" | table\n# => \u256d\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n# => \u2502 #  \u2502   name   \u2502 type \u2502  size   \u2502   modified    \u2502\n# => \u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n# => \u2502  0 \u2502 .cargo   \u2502 dir  \u2502     0 B \u2502 9 minutes ago \u2502\n# => \u2502  1 \u2502 assets   \u2502 dir  \u2502     0 B \u2502 2 weeks ago   \u2502\n# => \u2502  2 \u2502 crates   \u2502 dir  \u2502 4.0 KiB \u2502 2 weeks ago   \u2502\n# => \u2502  3 \u2502 docker   \u2502 dir  \u2502     0 B \u2502 2 weeks ago   \u2502\n# => \u2502  4 \u2502 docs     \u2502 dir  \u2502     0 B \u2502 2 weeks ago   \u2502\n# => \u2502  5 \u2502 images   \u2502 dir  \u2502     0 B \u2502 2 weeks ago   \u2502\n# => \u2502  6 \u2502 pkg_mgrs \u2502 dir  \u2502     0 B \u2502 2 weeks ago   \u2502\n# => \u2502  7 \u2502 samples  \u2502 dir  \u2502     0 B \u2502 2 weeks ago   \u2502\n# => \u2502  8 \u2502 src      \u2502 dir  \u2502 4.0 KiB \u2502 2 weeks ago   \u2502\n# => \u2502  9 \u2502 target   \u2502 dir  \u2502     0 B \u2502 a day ago     \u2502\n# => \u2502 10 \u2502 tests    \u2502 dir  \u2502 4.0 KiB \u2502 2 weeks ago   \u2502\n# => \u2502 11 \u2502 wix      \u2502 dir  \u2502     0 B \u2502 2 weeks ago   \u2502\n# => \u2570\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n```\n\nBecause most of the time you'll want to see the output of a pipeline, `table` is assumed.\nWe could have also written the above:\n\n```shell\nls | where type == \"dir\"\n```\n\nBeing able to use the same commands and compose them differently is an important philosophy in Nu.\nFor example, we could use the built-in `ps` command to get a list of the running processes, using the same `where` as above.\n\n```shell\nps | where cpu > 0\n# => \u256d\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n# => \u2502 # \u2502  pid  \u2502   name    \u2502  cpu  \u2502    mem    \u2502  virtual  \u2502\n# => \u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n# => \u2502 0 \u2502  2240 \u2502 Slack.exe \u2502 16.40 \u2502 178.3 MiB \u2502 232.6 MiB \u2502\n# => \u2502 1 \u2502 16948 \u2502 Slack.exe \u2502 16.32 \u2502 205.0 MiB \u2502 197.9 MiB \u2502\n# => \u2502 2 \u2502 17700 \u2502 nu.exe    \u2502  3.77 \u2502  26.1 MiB \u2502   8.8 MiB \u2502\n# => \u2570\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n```\n\n### Opening files\n\nNu can load file and URL contents as raw text or structured data (if it recognizes the format).\nFor example, you can load a .toml file as structured data and explore it:\n\n```shell\nopen Cargo.toml\n# => \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n# => \u2502 bin              \u2502 [table 1 row]      \u2502\n# => \u2502 dependencies     \u2502 {record 25 fields} \u2502\n# => \u2502 dev-dependencies \u2502 {record 8 fields}  \u2502\n# => \u2502 features         \u2502 {record 10 fields} \u2502\n# => \u2502 package          \u2502 {record 13 fields} \u2502\n# => \u2502 patch            \u2502 {record 1 field}   \u2502\n# => \u2502 profile          \u2502 {record 3 fields}  \u2502\n# => \u2502 target           \u2502 {record 3 fields}  \u2502\n# => \u2502 workspace        \u2502 {record 1 field}   \u2502\n# => \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n```\n\nWe can pipe this into a command that gets the contents of one of the columns:\n\n```shell\nopen Cargo.toml | get package\n# => \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n# => \u2502 authors       \u2502 [list 1 item]                      \u2502\n# => \u2502 default-run   \u2502 nu                                 \u2502\n# => \u2502 description   \u2502 A new type of shell                \u2502\n# => \u2502 documentation \u2502 https://www.nushell.sh/book/       \u2502\n# => \u2502 edition       \u2502 2018                               \u2502\n# => \u2502 exclude       \u2502 [list 1 item]                      \u2502\n# => \u2502 homepage      \u2502 https://www.nushell.sh             \u2502\n# => \u2502 license       \u2502 MIT                                \u2502\n# => \u2502 metadata      \u2502 {record 1 field}                   \u2502\n# => \u2502 name          \u2502 nu                                 \u2502\n# => \u2502 repository    \u2502 https://github.com/nushell/nushell \u2502\n# => \u2502 rust-version  \u2502 1.60                               \u2502\n# => \u2502 version       \u2502 0.72.0                             \u2502\n# => \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n```\n\nAnd if needed we can drill down further:\n\n```shell\nopen Cargo.toml | get package.version\n# => 0.72.0\n```\n\n### Plugins\n\nNu supports plugins that offer additional functionality to the shell and follow the same structured data model that built-in commands use. There are a few examples in the `crates/nu_plugins_*` directories.\n\nPlugins are binaries that are available in your path and follow a `nu_plugin_*` naming convention.\nThese binaries interact with nu via a simple JSON-RPC protocol where the command identifies itself and passes along its configuration, making it available for use.\nIf the plugin is a filter, data streams to it one element at a time, and it can stream data back in return via stdin/stdout.\nIf the plugin is a sink, it is given the full vector of final data and is given free reign over stdin/stdout to use as it pleases.\n\nThe [awesome-nu repo](https://github.com/nushell/awesome-nu#plugins) lists a variety of nu-plugins while the [showcase repo](https://github.com/nushell/showcase) *shows* off informative blog posts that have been written about Nushell along with videos that highlight technical\ntopics that have been presented.\n\n## Goals\n\nNu adheres closely to a set of goals that make up its design philosophy. As features are added, they are checked against these goals.\n\n-   First and foremost, Nu is cross-platform. Commands and techniques should work across platforms and Nu has [first-class support for Windows, macOS, and Linux](devdocs/PLATFORM_SUPPORT.md).\n\n-   Nu ensures compatibility with existing platform-specific executables.\n\n-   Nu's workflow and tools should have the usability expected of modern software in 2022 (and beyond).\n\n-   Nu views data as either structured or unstructured. It is a structured shell like PowerShell.\n\n-   Finally, Nu views data functionally. Rather than using mutation, pipelines act as a means to load, change, and save data without mutable state.\n\n## Officially Supported By\n\nPlease submit an issue or PR to be added to this list.\n\n-   [zoxide](https://github.com/ajeetdsouza/zoxide)\n-   [starship](https://github.com/starship/starship)\n-   [oh-my-posh](https://ohmyposh.dev)\n-   [Couchbase Shell](https://couchbase.sh)\n-   [virtualenv](https://github.com/pypa/virtualenv)\n-   [atuin](https://github.com/ellie/atuin)\n-   [clap](https://github.com/clap-rs/clap/tree/master/clap_complete_nushell)\n-   [Dorothy](http://github.com/bevry/dorothy)\n-   [Direnv](https://github.com/direnv/direnv/blob/master/docs/hook.md#nushell)\n-   [x-cmd](https://x-cmd.com/mod/nu)\n\n## Contributing\n\nSee [Contributing](CONTRIBUTING.md) for details. Thanks to all the people who already contributed!\n\n<a href=\"https://github.com/nushell/nushell/graphs/contributors\">\n  <img src=\"https://contributors-img.web.app/image?repo=nushell/nushell&max=750&columns=20\" />\n</a>\n\n## License\n\nThe project is made available under the MIT license. See the `LICENSE` file for more information.\n",
        "releases": [
            {
                "name": "0.101.0",
                "date": "2024-12-22T19:03:20Z"
            },
            {
                "name": "0.100.0",
                "date": "2024-11-13T08:35:38Z"
            },
            {
                "name": "0.99.1",
                "date": "2024-10-20T20:53:50Z"
            },
            {
                "name": "0.99.0",
                "date": "2024-10-16T06:13:45Z"
            },
            {
                "name": "0.98.0",
                "date": "2024-09-18T08:24:35Z"
            },
            {
                "name": "0.97.1",
                "date": "2024-08-21T03:56:23Z"
            },
            {
                "name": "0.96.1",
                "date": "2024-07-30T00:04:32Z"
            },
            {
                "name": "0.96.0",
                "date": "2024-07-24T01:50:18Z"
            },
            {
                "name": "0.95.0",
                "date": "2024-06-26T00:12:30Z"
            },
            {
                "name": "0.94.2",
                "date": "2024-06-03T19:55:23Z"
            },
            {
                "name": "0.94.1",
                "date": "2024-05-30T23:38:47Z"
            },
            {
                "name": "0.94.0",
                "date": "2024-05-28T19:41:32Z"
            },
            {
                "name": "0.93.0",
                "date": "2024-04-30T23:31:27Z"
            },
            {
                "name": "0.92.2",
                "date": "2024-04-10T21:56:54Z"
            },
            {
                "name": "0.92.1",
                "date": "2024-04-04T15:36:30Z"
            },
            {
                "name": "0.92.0",
                "date": "2024-04-02T18:57:27Z"
            },
            {
                "name": "0.91.0",
                "date": "2024-03-05T22:24:48Z"
            },
            {
                "name": "0.90.1",
                "date": "2024-02-07T03:14:16Z"
            },
            {
                "name": "0.89.0",
                "date": "2024-01-09T21:03:29Z"
            },
            {
                "name": "0.88.1",
                "date": "2023-12-14T18:18:45Z"
            },
            {
                "name": "0.88.0",
                "date": "2023-12-12T18:36:55Z"
            },
            {
                "name": "0.87.1",
                "date": "2023-11-20T18:53:58Z"
            },
            {
                "name": "0.87.0",
                "date": "2023-11-14T22:12:14Z"
            },
            {
                "name": "0.86.0",
                "date": "2023-10-17T18:07:37Z"
            },
            {
                "name": "0.85.0",
                "date": "2023-09-19T20:30:55Z"
            },
            {
                "name": "0.84.0",
                "date": "2023-08-22T22:09:54Z"
            },
            {
                "name": "0.83.1",
                "date": "2023-07-30T19:23:48Z"
            },
            {
                "name": "0.83.0",
                "date": "2023-07-25T20:34:00Z"
            },
            {
                "name": "0.82.0",
                "date": "2023-06-27T18:21:33Z"
            },
            {
                "name": "0.81.0",
                "date": "2023-06-07T03:15:48Z"
            },
            {
                "name": "0.80.0",
                "date": "2023-05-17T00:36:47Z"
            },
            {
                "name": "0.79.0",
                "date": "2023-04-25T21:48:16Z"
            },
            {
                "name": "0.78.0",
                "date": "2023-04-04T20:01:50Z"
            },
            {
                "name": "0.77.1",
                "date": "2023-03-17T07:55:56Z"
            },
            {
                "name": "0.77.0",
                "date": "2023-03-14T21:44:39Z"
            },
            {
                "name": "0.76.0",
                "date": "2023-02-21T22:50:59Z"
            },
            {
                "name": "0.75.0",
                "date": "2023-01-31T22:00:26Z"
            },
            {
                "name": "0.74.0",
                "date": "2023-01-10T21:38:46Z"
            },
            {
                "name": "0.73.0",
                "date": "2022-12-20T19:46:37Z"
            },
            {
                "name": "0.72.1",
                "date": "2022-12-05T17:56:01Z"
            },
            {
                "name": "0.72.0",
                "date": "2022-11-29T18:41:04Z"
            },
            {
                "name": "0.71.0",
                "date": "2022-11-08T21:04:56Z"
            },
            {
                "name": "0.70.0",
                "date": "2022-10-19T00:39:57Z"
            },
            {
                "name": "0.69.1",
                "date": "2022-09-28T05:58:29Z"
            },
            {
                "name": "0.68.1",
                "date": "2022-09-09T00:27:26Z"
            },
            {
                "name": "0.68.0",
                "date": "2022-09-06T23:36:47Z"
            },
            {
                "name": "0.67.0",
                "date": "2022-08-17T05:26:49Z"
            },
            {
                "name": "0.66.2",
                "date": "2022-07-29T00:26:56Z"
            },
            {
                "name": "0.66.1",
                "date": "2022-07-27T22:29:13Z"
            },
            {
                "name": "0.66.0",
                "date": "2022-07-27T00:18:01Z"
            },
            {
                "name": "0.65.0",
                "date": "2022-07-05T18:40:13Z"
            },
            {
                "name": "0.64.0",
                "date": "2022-06-15T06:36:23Z"
            },
            {
                "name": "0.63.0 Release",
                "date": "2022-05-25T02:43:29Z"
            },
            {
                "name": "0.62.0 Release",
                "date": "2022-05-03T23:24:04Z"
            },
            {
                "name": "0.61.0 Release",
                "date": "2022-04-12T22:27:43Z"
            },
            {
                "name": "0.60.0 Release",
                "date": "2022-03-22T21:04:52Z"
            },
            {
                "name": "0.44.0 Release",
                "date": "2022-02-08T11:29:52Z"
            },
            {
                "name": "0.43.0 Release",
                "date": "2022-01-18T19:43:51Z"
            },
            {
                "name": "0.42.0 Release",
                "date": "2021-12-28T20:41:51Z"
            },
            {
                "name": "0.41.0 Release",
                "date": "2021-12-07T19:12:07Z"
            },
            {
                "name": "0.40.0 Release",
                "date": "2021-11-16T18:48:20Z"
            },
            {
                "name": "0.39.0 Release",
                "date": "2021-10-27T01:51:13Z"
            },
            {
                "name": "0.38.0 Release",
                "date": "2021-10-05T19:35:49Z"
            },
            {
                "name": "0.37.0 Release",
                "date": "2021-09-14T22:12:11Z"
            },
            {
                "name": "0.36.0 Release",
                "date": "2021-08-24T22:11:01Z"
            },
            {
                "name": "0.35.0 Release",
                "date": "2021-08-03T18:51:32Z"
            },
            {
                "name": "0.34.0 Release",
                "date": "2021-07-13T20:00:52Z"
            },
            {
                "name": "0.33.0 Release",
                "date": "2021-06-22T19:17:21Z"
            },
            {
                "name": "0.32.0 Release",
                "date": "2021-06-01T17:33:07Z"
            },
            {
                "name": "0.31.0 Release",
                "date": "2021-05-11T19:55:01Z"
            },
            {
                "name": "0.30.0 Release",
                "date": "2021-04-21T06:03:05Z"
            },
            {
                "name": "0.29.0 Release",
                "date": "2021-03-30T20:57:28Z"
            },
            {
                "name": "0.28.0 Release",
                "date": "2021-03-09T21:39:09Z"
            },
            {
                "name": "0.27.1 Release",
                "date": "2021-02-19T05:00:31Z"
            },
            {
                "name": "0.27.0 Release",
                "date": "2021-02-16T17:13:56Z"
            },
            {
                "name": "0.26.0 Release",
                "date": "2021-01-27T05:44:05Z"
            },
            {
                "name": "0.25.1 Release",
                "date": "2021-01-06T03:41:05Z"
            },
            {
                "name": "0.25.0 Release",
                "date": "2021-01-05T19:43:09Z"
            },
            {
                "name": "0.24.1 Release",
                "date": "2020-12-15T20:58:28Z"
            },
            {
                "name": "0.24.0 Release",
                "date": "2020-12-15T18:27:56Z"
            },
            {
                "name": "0.23.0 Release",
                "date": "2020-11-25T06:17:17Z"
            },
            {
                "name": "0.22.0 Release",
                "date": "2020-11-03T21:57:37Z"
            },
            {
                "name": "0.21.0 Release",
                "date": "2020-10-14T03:07:30Z"
            },
            {
                "name": "0.20.0 Release",
                "date": "2020-09-22T18:52:01Z"
            },
            {
                "name": "0.19.0 Release",
                "date": "2020-09-02T04:54:52Z"
            },
            {
                "name": "0.18.1 Release",
                "date": "2020-08-12T05:22:47Z"
            },
            {
                "name": "0.17.0 Release",
                "date": "2020-07-21T22:37:51Z"
            },
            {
                "name": "0.16.0 Release",
                "date": "2020-06-30T21:08:39Z"
            },
            {
                "name": "0.15.0 Release ",
                "date": "2020-06-09T21:19:59Z"
            },
            {
                "name": "0.14.0 Release",
                "date": "2020-05-12T18:10:23Z"
            },
            {
                "name": "0.13.0 Release",
                "date": "2020-04-21T19:15:34Z"
            },
            {
                "name": "0.12.0 Release",
                "date": "2020-03-31T19:56:02Z"
            },
            {
                "name": "0.11.0 Release",
                "date": "2020-03-11T03:18:11Z"
            },
            {
                "name": "0.10.0 Release",
                "date": "2020-02-18T18:31:14Z"
            },
            {
                "name": "0.9.0 Release",
                "date": "2020-01-29T04:38:28Z"
            },
            {
                "name": "0.8.0 Release",
                "date": "2020-01-07T17:18:48Z"
            },
            {
                "name": "0.7.0 Release",
                "date": "2019-12-18T23:43:02Z"
            },
            {
                "name": "0.6.1 release",
                "date": "2019-11-30T18:41:23Z"
            },
            {
                "name": "0.6.0 release",
                "date": "2019-11-27T04:24:05Z"
            },
            {
                "name": "0.5.0 Release",
                "date": "2019-11-06T05:58:26Z"
            },
            {
                "name": "Release 0.4.0",
                "date": "2019-10-16T02:14:29Z"
            },
            {
                "name": "0.3.0 Release",
                "date": "2019-09-24T18:48:34Z"
            },
            {
                "name": "0.2.0 Release",
                "date": "2019-08-24T00:30:32Z"
            }
        ]
    }
}