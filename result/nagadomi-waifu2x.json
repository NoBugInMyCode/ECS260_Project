{
    "https://api.github.com/repos/nagadomi/waifu2x": {
        "forks": 2712,
        "watchers": 27691,
        "stars": 27691,
        "languages": {
            "Lua": 242547,
            "HTML": 126594,
            "Shell": 18074,
            "JavaScript": 9568,
            "Python": 8681,
            "CSS": 7924,
            "Ruby": 1520,
            "Dockerfile": 627
        },
        "commits": [
            "2023-02-23T01:32:03Z",
            "2023-02-23T01:06:14Z",
            "2023-02-05T04:22:25Z",
            "2022-11-25T06:41:45Z",
            "2022-07-06T01:47:27Z",
            "2022-07-06T01:44:05Z",
            "2022-07-06T01:31:40Z",
            "2022-07-06T01:22:29Z",
            "2022-07-05T14:29:14Z",
            "2022-07-05T14:28:16Z",
            "2021-06-03T21:52:26Z",
            "2021-06-02T05:26:53Z",
            "2021-06-02T05:26:50Z",
            "2021-01-27T23:13:33Z",
            "2021-01-27T23:07:43Z",
            "2021-01-27T23:05:20Z",
            "2020-11-18T14:14:07Z",
            "2020-11-18T14:11:47Z",
            "2020-10-28T00:40:40Z",
            "2020-10-04T05:13:11Z",
            "2020-10-04T05:08:38Z",
            "2020-10-04T05:08:03Z",
            "2020-10-04T05:03:02Z",
            "2020-10-04T05:01:38Z",
            "2020-10-02T14:10:49Z",
            "2020-06-18T00:02:24Z",
            "2020-06-17T12:18:38Z",
            "2020-03-26T01:59:11Z",
            "2020-03-26T01:50:40Z",
            "2020-03-26T01:45:43Z"
        ],
        "creation_date": "2015-05-17T07:29:15Z",
        "contributors": 30,
        "topics": [
            "super-resolution",
            "torch",
            "waifu2x"
        ],
        "subscribers": 704,
        "readme": "# waifu2x\n\nImage Super-Resolution for Anime-style art using Deep Convolutional Neural Networks.\nAnd it supports photo.\n\nThe demo application can be found at https://waifu2x.udp.jp/ (Cloud version), https://unlimited.waifu2x.net/ (In-Browser version).\n\n## 2023/02 PyTorch version\n\n[nunif](https://github.com/nagadomi/nunif)\n\nwaifu2x development has already been moved to the repository above.\n\n## Summary\n\nClick to see the slide show.\n\n![slide](https://raw.githubusercontent.com/nagadomi/waifu2x/master/images/slide.png)\n\n## References\n\nwaifu2x is inspired by SRCNN [1]. 2D character picture (HatsuneMiku) is licensed under CC BY-NC by piapro [2].\n\n- [1] Chao Dong, Chen Change Loy, Kaiming He, Xiaoou Tang, \"Image Super-Resolution Using Deep Convolutional Networks\", http://arxiv.org/abs/1501.00092\n- [2] \"For Creators\", https://piapro.net/intl/en_for_creators.html\n## Public AMI\n\nTODO\n\n## Third Party Software\n\n[Third-Party](https://github.com/nagadomi/waifu2x/wiki/Third-Party)\n\nIf you are a windows user, I recommend you to use [waifu2x-caffe](https://github.com/lltcggie/waifu2x-caffe)(Just download from `releases` tab), [waifu2x-ncnn-vulkan](https://github.com/nihui/waifu2x-ncnn-vulkan) or [waifu2x-conver-cpp](https://github.com/DeadSix27/waifu2x-converter-cpp).\n\n## Dependencies\n\n### Hardware\n- NVIDIA GPU\n\n### Platform\n\n- [Torch7](http://torch.ch/)\n- [NVIDIA CUDA](https://developer.nvidia.com/cuda-toolkit)\n\n### LuaRocks packages (excludes torch7's default packages)\n- lua-csnappy\n- md5\n- uuid\n- csvigo\n- [turbo](https://github.com/kernelsauce/turbo)\n\n## Installation\n\n### Setting Up the Command Line Tool Environment\n (on Ubuntu 16.04)\n\n#### Install CUDA\n\nSee: [NVIDIA CUDA Getting Started Guide for Linux](http://docs.nvidia.com/cuda/cuda-getting-started-guide-for-linux/#ubuntu-installation)\n\nDownload [CUDA](http://developer.nvidia.com/cuda-downloads)\n\n```\nsudo dpkg -i cuda-repo-ubuntu1404_7.5-18_amd64.deb\nsudo apt-get update\nsudo apt-get install cuda\n```\n\n#### Install Package\n\n```\nsudo apt-get install libsnappy-dev\nsudo apt-get install libgraphicsmagick1-dev\nsudo apt-get install libssl1.0-dev # for web server\n```\n\nNote: waifu2x requires little-cms2 linked graphicsmagick. if you use macOS/homebrew, See [#174](https://github.com/nagadomi/waifu2x/issues/174#issuecomment-384466451).\n\n#### Install Torch7\n\nSee: [Getting started with Torch](http://torch.ch/docs/getting-started.html).\n\n- For CUDA9.x/CUDA8.x, see [#222](https://github.com/nagadomi/waifu2x/issues/222)\n- For CUDA10.x, see [#253](https://github.com/nagadomi/waifu2x/issues/253#issuecomment-445448928)\n\n#### Getting waifu2x\n\n```\ngit clone --depth 1 https://github.com/nagadomi/waifu2x.git\n```\n\nand install lua modules.\n\n```\ncd waifu2x\n./install_lua_modules.sh\n```\n\n#### Validation\n\nTesting the waifu2x command line tool.\n```\nth waifu2x.lua\n```\n\n## Web Application\n```\nth web.lua\n```\n\nView at: http://localhost:8812/\n\n## Command line tools\nNotes: If you have cuDNN library, than you can use cuDNN with `-force_cudnn 1` option. cuDNN is too much faster than default kernel. If you got GPU out of memory error, you can avoid it with `-crop_size` option (e.g. `-crop_size 128`).\n\n### Noise Reduction\n```\nth waifu2x.lua -m noise -noise_level 1 -i input_image.png -o output_image.png\n```\n```\nth waifu2x.lua -m noise -noise_level 0 -i input_image.png -o output_image.png\nth waifu2x.lua -m noise -noise_level 2 -i input_image.png -o output_image.png\nth waifu2x.lua -m noise -noise_level 3 -i input_image.png -o output_image.png\n```\n\n### 2x Upscaling\n```\nth waifu2x.lua -m scale -i input_image.png -o output_image.png\n```\n\n### Noise Reduction + 2x Upscaling\n```\nth waifu2x.lua -m noise_scale -noise_level 1 -i input_image.png -o output_image.png\n```\n```\nth waifu2x.lua -m noise_scale -noise_level 0 -i input_image.png -o output_image.png\nth waifu2x.lua -m noise_scale -noise_level 2 -i input_image.png -o output_image.png\nth waifu2x.lua -m noise_scale -noise_level 3 -i input_image.png -o output_image.png\n```\n\n### Batch conversion\n\n```\nfind /path/to/imagedir -name \"*.png\" -o -name \"*.jpg\" > image_list.txt\nth waifu2x.lua -m scale -l ./image_list.txt -o /path/to/outputdir/prefix_%d.png\n```\n\nThe output format supports `%s` and `%d`(e.g. %06d). `%s` will be replaced the basename of the source filename. `%d` will be replaced a sequence number.\nFor example, when input filename is `piyo.png`, `%s_%03d.png` will be replaced `piyo_001.png`.\n\nSee also `th waifu2x.lua -h`.\n\n### Using photo model\n\nPlease add `-model_dir models/photo` to command line option, if you want to use photo model.\nFor example,\n\n```\nth waifu2x.lua -model_dir models/photo -m scale -i input_image.png -o output_image.png\n```\n\n### Video Encoding\n\n\\* `avconv` is alias of `ffmpeg` on Ubuntu 14.04.\n\nExtracting images and audio from a video. (range: 00:09:00 ~ 00:12:00)\n```\nmkdir frames\navconv -i data/raw.avi -ss 00:09:00 -t 00:03:00 -r 24 -f image2 frames/%06d.png\navconv -i data/raw.avi -ss 00:09:00 -t 00:03:00 audio.mp3\n```\n\nGenerating a image list.\n```\nfind ./frames -name \"*.png\" |sort > data/frame.txt\n```\n\nwaifu2x (for example, noise reduction)\n```\nmkdir new_frames\nth waifu2x.lua -m noise -noise_level 1 -resume 1 -l data/frame.txt -o new_frames/%d.png\n```\n\nGenerating a video from waifu2xed images and audio.\n```\navconv -f image2 -framerate 24 -i new_frames/%d.png -i audio.mp3 -r 24 -vcodec libx264 -crf 16 video.mp4\n```\n\n## Train Your Own Model\nNote1: If you have cuDNN library, you can use cudnn kernel with `-backend cudnn` option. And, you can convert trained cudnn model to cunn model with `tools/rebuild.lua`.\n\nNote2: The command that was used to train for waifu2x's pretrained models is available at `appendix/train_upconv_7_art.sh`, `appendix/train_upconv_7_photo.sh`. Maybe it is helpful.\n\n### Data Preparation\n\nGenrating a file list.\n```\nfind /path/to/image/dir -name \"*.png\" > data/image_list.txt\n```\nYou should use noise free images. In my case, waifu2x is trained with 6000 high-resolution-noise-free-PNG images.\n\nConverting training data.\n```\nth convert_data.lua\n```\n\n### Train a Noise Reduction(level1) model\n\n```\nmkdir models/my_model\nth train.lua -model_dir models/my_model -method noise -noise_level 1 -test images/miku_noisy.png\n# usage\nth waifu2x.lua -model_dir models/my_model -m noise -noise_level 1 -i images/miku_noisy.png -o output.png\n```\nYou can check the performance of model with `models/my_model/noise1_best.png`.\n\n### Train a Noise Reduction(level2) model\n\n```\nth train.lua -model_dir models/my_model -method noise -noise_level 2 -test images/miku_noisy.png\n# usage\nth waifu2x.lua -model_dir models/my_model -m noise -noise_level 2 -i images/miku_noisy.png -o output.png\n```\nYou can check the performance of model with `models/my_model/noise2_best.png`.\n\n### Train a 2x UpScaling model\n\n```\nth train.lua -model upconv_7 -model_dir models/my_model -method scale -scale 2 -test images/miku_small.png\n# usage\nth waifu2x.lua -model_dir models/my_model -m scale -scale 2 -i images/miku_small.png -o output.png\n```\nYou can check the performance of model with `models/my_model/scale2.0x_best.png`.\n\n### Train a 2x and noise reduction fusion model\n\n```\nth train.lua -model upconv_7 -model_dir models/my_model -method noise_scale -scale 2 -noise_level 1 -test images/miku_small.png\n# usage\nth waifu2x.lua -model_dir models/my_model -m noise_scale -scale 2 -noise_level 1 -i images/miku_small.png -o output.png\n```\nYou can check the performance of model with `models/my_model/noise1_scale2.0x_best.png`.\n\n## Docker\n\n( Docker image is available at https://hub.docker.com/r/nagadomi/waifu2x )\n\nRequires [nvidia-docker](https://github.com/NVIDIA/nvidia-docker).\n\n```\ndocker build -t waifu2x .\ndocker run --gpus all -p 8812:8812 waifu2x th web.lua\ndocker run --gpus all -v `pwd`/images:/images waifu2x th waifu2x.lua -force_cudnn 1 -m scale -scale 2 -i /images/miku_small.png -o /images/output.png\n```\n\nNote that running waifu2x in without [JIT caching](https://devblogs.nvidia.com/parallelforall/cuda-pro-tip-understand-fat-binaries-jit-caching/) is very slow, which is what would happen if you use docker.\nFor a workaround, you can mount a host volume to the `CUDA_CACHE_PATH`, for instance,\n\n```\ndocker run --gpus all -v $PWD/ComputeCache:/root/.nv/ComputeCache waifu2x th waifu2x.lua --help\n```\n",
        "releases": [
            {
                "name": "v0.13.2",
                "date": "2018-11-18T11:21:02Z"
            },
            {
                "name": "v0.13.1",
                "date": "2016-08-16T12:44:53Z"
            },
            {
                "name": "v0.13",
                "date": "2016-07-22T16:26:21Z"
            }
        ]
    }
}