{
    "https://api.github.com/repos/CodeSeven/toastr": {
        "forks": 2042,
        "watchers": 12029,
        "stars": 12029,
        "languages": {
            "JavaScript": 126111,
            "CSS": 46308,
            "HTML": 16481
        },
        "commits": [
            "2018-06-16T03:54:40Z",
            "2018-06-16T03:37:37Z",
            "2018-06-16T03:34:39Z",
            "2017-12-08T05:46:32Z",
            "2017-12-08T05:46:14Z",
            "2017-12-08T05:36:08Z",
            "2017-12-08T05:31:16Z",
            "2017-12-08T03:06:13Z",
            "2017-06-01T14:32:01Z",
            "2017-05-27T17:19:44Z",
            "2017-04-11T02:04:25Z",
            "2017-04-11T02:04:01Z",
            "2017-04-08T18:46:26Z",
            "2016-10-31T06:28:20Z",
            "2016-07-27T11:55:41Z",
            "2016-07-27T11:53:02Z",
            "2016-07-26T15:11:18Z",
            "2016-07-22T16:52:12Z",
            "2016-07-22T16:48:48Z",
            "2016-07-22T16:43:11Z",
            "2016-07-21T16:40:07Z",
            "2016-07-21T15:00:59Z",
            "2016-07-21T14:56:07Z",
            "2016-07-21T14:54:03Z",
            "2016-07-21T14:34:10Z",
            "2016-07-21T14:00:50Z",
            "2016-07-20T23:16:44Z",
            "2016-07-19T23:04:12Z",
            "2016-07-07T22:54:37Z",
            "2016-07-07T22:10:45Z"
        ],
        "creation_date": "2012-05-01T01:38:04Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 339,
        "readme": "# toastr\n**toastr** is a Javascript library for non-blocking notifications. jQuery is required. The goal is to create a simple core library that can be customized and extended.\n\n[![Build Status](https://travis-ci.org/CodeSeven/toastr.svg)](https://travis-ci.org/CodeSeven/toastr)\nBrowser testing provided by BrowserStack.\n\n## Current Version\n2.1.4\n\n## Demo\n- Demo can be found at http://codeseven.github.io/toastr/demo.html\n- [Demo using FontAwesome icons with toastr](http://plnkr.co/edit/6W9URNyyp2ItO4aUWzBB?p=preview)\n\n## CDNs\n[![cdnjs](https://img.shields.io/cdnjs/v/toastr.js.svg)](https://cdnjs.com/libraries/toastr.js)\n[![jsdelivr](https://data.jsdelivr.com/v1/package/npm/toastr/badge)](https://www.jsdelivr.com/package/npm/toastr)\n\nToastr is hosted at cdnjs and jsdelivr\n\n#### Debug\n- [//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.css](//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.css)\n\n#### Minified\n- [//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js](//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js)\n- [//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css](//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css)\n\n## Install\n\n#### [NuGet Gallery](http://nuget.org/packages/toastr)\n```\nInstall-Package toastr\n```\n\n#### [Bower](http://bower.io/search/?q=toastr)\n```\nbower install toastr\n```\n\n#### [npm](https://www.npmjs.com/package/toastr)\n```\nnpm install --save toastr\n```\n\n#### [yarn](https://yarnpkg.com/en/package/toastr)\n```\nyarn add toastr\n```\n\n#### [Ruby on Rails](https://github.com/tylergannon/toastr-rails)\n```ruby\n# Gemfile\n\ngem 'toastr-rails'\n```\n\n```coffee\n# application.coffee\n\n#= require toastr\n```\n\n```scss\n// application.scss\n\n@import \"toastr\";\n```\n\n\n\n\n## Wiki and Change Log\n[Wiki including Change Log](https://github.com/CodeSeven/toastr/wiki)\n\n## Breaking Changes\n\n#### Animation Changes\nThe following animations options have been deprecated and should be replaced:\n\n - Replace `options.fadeIn` with `options.showDuration`\n - Replace `options.onFadeIn` with `options.onShown`\n - Replace `options.fadeOut` with `options.hideDuration`\n - Replace `options.onFadeOut` with `options.onHidden`\n\n## Quick Start\n\n### 3 Easy Steps\nFor other API calls, see the [demo](http://codeseven.github.io/toastr/demo.html).\n\n1. Link to toastr.css `<link href=\"toastr.css\" rel=\"stylesheet\"/>`\n\n2. Link to toastr.js `<script src=\"toastr.js\"></script>`\n\n3. use toastr to display a toast for info, success, warning or error\n\t```js\n\t// Display an info toast with no title\n\ttoastr.info('Are you the 6 fingered man?')\n\t```\n\n### Other Options\n```js\n// Display a warning toast, with no title\ntoastr.warning('My name is Inigo Montoya. You killed my father, prepare to die!')\n\n// Display a success toast, with a title\ntoastr.success('Have fun storming the castle!', 'Miracle Max Says')\n\n// Display an error toast, with a title\ntoastr.error('I do not think that word means what you think it means.', 'Inconceivable!')\n\n// Immediately remove current toasts without using animation\ntoastr.remove()\n\n// Remove current toasts using animation\ntoastr.clear()\n\n// Override global options\ntoastr.success('We do have the Kapua suite available.', 'Turtle Bay Resort', {timeOut: 5000})\n```\n\n### Escape HTML characters\nIn case you want to escape HTML characters in title and message\n\n\ttoastr.options.escapeHtml = true;\n\n### Close Button\nOptionally enable a close button\n```js\ntoastr.options.closeButton = true;\n````\n\nOptionally override the close button's HTML.\n\n```js\ntoastr.options.closeHtml = '<button><i class=\"icon-off\"></i></button>';\n```\n\nYou can also override the CSS/LESS for `#toast-container .toast-close-button`\n\nOptionally override the hide animation when the close button is clicked (falls back to hide configuration).\n```js\ntoastr.options.closeMethod = 'fadeOut';\ntoastr.options.closeDuration = 300;\ntoastr.options.closeEasing = 'swing';\n```\n\n### Display Sequence\nShow newest toast at bottom (top is default)\n```js\ntoastr.options.newestOnTop = false;\n```\n\n### Callbacks\n```js\n// Define a callback for when the toast is shown/hidden/clicked\ntoastr.options.onShown = function() { console.log('hello'); }\ntoastr.options.onHidden = function() { console.log('goodbye'); }\ntoastr.options.onclick = function() { console.log('clicked'); }\ntoastr.options.onCloseClick = function() { console.log('close button clicked'); }\n```\n\n### Animation Options\nToastr will supply default animations, so you do not have to provide any of these settings. However you have the option to override the animations if you like.\n\n#### Easings\nOptionally override the animation easing to show or hide the toasts. Default is swing. swing and linear are built into jQuery.\n```js\ntoastr.options.showEasing = 'swing';\ntoastr.options.hideEasing = 'linear';\ntoastr.options.closeEasing = 'linear';\n```\n\nUsing the jQuery Easing plugin (http://www.gsgd.co.uk/sandbox/jquery/easing/)\n```js\ntoastr.options.showEasing = 'easeOutBounce';\ntoastr.options.hideEasing = 'easeInBack';\ntoastr.options.closeEasing = 'easeInBack';\n```\n\n#### Animation Method\nUse the jQuery show/hide method of your choice. These default to fadeIn/fadeOut. The methods fadeIn/fadeOut, slideDown/slideUp, and show/hide are built into jQuery.\n```js\ntoastr.options.showMethod = 'slideDown';\ntoastr.options.hideMethod = 'slideUp';\ntoastr.options.closeMethod = 'slideUp';\n```\n\n### Prevent Duplicates\nRather than having identical toasts stack, set the preventDuplicates property to true. Duplicates are matched to the previous toast based on their message content.\n```js\ntoastr.options.preventDuplicates = true;\n```\n\n### Timeouts\nControl how toastr interacts with users by setting timeouts appropriately.\n```js\ntoastr.options.timeOut = 30; // How long the toast will display without user interaction\ntoastr.options.extendedTimeOut = 60; // How long the toast will display after a user hovers over it\n```\n\n### Prevent from Auto Hiding\nTo prevent toastr from closing based on the timeouts, set the `timeOut` and `extendedTimeOut` options to `0`. The toastr will persist until selected.\n\n```js\ntoastr.options.timeOut = 0;\ntoastr.options.extendedTimeOut = 0;\n```\n\n### Progress Bar\nVisually indicate how long before a toast expires.\n```js\ntoastr.options.progressBar = true;\n```\n\n### rtl\nFlip the toastr to be displayed properly for right-to-left languages.\n```js\ntoastr.options.rtl = true;\n```\n\n## Building Toastr\n\nTo build the minified and css versions of Toastr you will need [node](http://nodejs.org) installed. (Use Homebrew or Chocolatey.)\n\n```\nnpm install -g gulp karma-cli\nnpm install\n```\n\nAt this point the dependencies have been installed and you can build Toastr\n\n- Run the analytics `gulp analyze`\n- Run the test `gulp test`\n- Run the build `gulp`\n\n## Contributing\n\nFor a pull request to be considered it must resolve a bug, or add a feature which is beneficial to a large audience.\n\nPull requests must pass existing unit tests, CI processes, and add additional tests to indicate successful operation of a new feature, or the resolution of an identified bug.\n\nRequests must be made against the `develop` branch. Pull requests submitted against the `master` branch will not be considered.\n\nAll pull requests are subject to approval by the repository owners, who have sole discretion over acceptance or denial.\n\n## Authors\n**John Papa**\n\n+ [http://twitter.com/John_Papa](http://twitter.com/John_Papa)\n\n**Tim Ferrell**\n\n+ [http://twitter.com/ferrell_tim](http://twitter.com/ferrell_tim)\n\n**Hans Fj\u00e4llemark**\n\n+ [http://twitter.com/hfjallemark](http://twitter.com/hfjallemark)\n\n## Credits\nInspired by https://github.com/Srirangan/notifer.js/.\n\n## Copyright\nCopyright \u00a9 2012-2015\n\n## License\ntoastr is under MIT license - http://www.opensource.org/licenses/mit-license.php\n",
        "releases": [
            {
                "name": "2.1.1 Release",
                "date": "2015-03-13T03:57:50Z"
            }
        ]
    }
}