{
    "https://api.github.com/repos/fdehau/tui-rs": {
        "forks": 488,
        "watchers": 10838,
        "stars": 10838,
        "languages": {
            "Rust": 486145
        },
        "commits": [
            "2023-08-06T07:35:02Z",
            "2022-08-14T13:58:02Z",
            "2022-08-14T13:51:04Z",
            "2022-08-14T13:27:06Z",
            "2022-08-14T13:07:05Z",
            "2022-08-14T12:37:08Z",
            "2022-08-14T12:42:47Z",
            "2022-07-19T09:08:11Z",
            "2022-08-14T11:58:53Z",
            "2022-04-24T14:49:57Z",
            "2022-04-24T13:37:55Z",
            "2022-04-24T12:57:12Z",
            "2022-04-24T12:47:54Z",
            "2022-04-24T12:25:50Z",
            "2022-01-22T11:30:50Z",
            "2022-01-22T12:07:35Z",
            "2021-12-23T18:02:10Z",
            "2021-12-23T17:46:25Z",
            "2021-12-23T17:45:46Z",
            "2021-12-23T17:51:13Z",
            "2021-11-28T11:45:25Z",
            "2021-11-22T07:05:17Z",
            "2021-11-21T19:47:04Z",
            "2021-11-11T14:56:37Z",
            "2021-11-11T15:13:42Z",
            "2021-11-01T21:27:46Z",
            "2021-10-17T17:38:43Z",
            "2021-10-17T16:44:00Z",
            "2021-10-17T15:12:50Z",
            "2021-10-17T15:05:51Z"
        ],
        "creation_date": "2016-11-08T09:19:25Z",
        "contributors": 30,
        "topics": [
            "dashboard",
            "rust",
            "terminal",
            "tui"
        ],
        "subscribers": 76,
        "readme": "# tui-rs\n\n\u26a0\ufe0f **August 2023: This crate is no longer maintained. See https://github.com/ratatui-org/ratatui for an actively maintained fork.** \u26a0\ufe0f\n\n[![Build Status](https://github.com/fdehau/tui-rs/workflows/CI/badge.svg)](https://github.com/fdehau/tui-rs/actions?query=workflow%3ACI+)\n[![Crate Status](https://img.shields.io/crates/v/tui.svg)](https://crates.io/crates/tui)\n[![Docs Status](https://docs.rs/tui/badge.svg)](https://docs.rs/crate/tui/)\n\n<img src=\"./assets/demo.gif\" alt=\"Demo cast under Linux Termite with Inconsolata font 12pt\">\n\n`tui-rs` is a [Rust](https://www.rust-lang.org) library to build rich terminal\nuser interfaces and dashboards. It is heavily inspired by the `Javascript`\nlibrary [blessed-contrib](https://github.com/yaronn/blessed-contrib) and the\n`Go` library [termui](https://github.com/gizak/termui).\n\nThe library supports multiple backends:\n  - [crossterm](https://github.com/crossterm-rs/crossterm) [default]\n  - [termion](https://github.com/ticki/termion)\n\nThe library is based on the principle of immediate rendering with intermediate\nbuffers. This means that at each new frame you should build all widgets that are\nsupposed to be part of the UI. While providing a great flexibility for rich and\ninteractive UI, this may introduce overhead for highly dynamic content. So, the\nimplementation try to minimize the number of ansi escapes sequences generated to\ndraw the updated UI. In practice, given the speed of `Rust` the overhead rather\ncomes from the terminal emulator than the library itself.\n\nMoreover, the library does not provide any input handling nor any event system and\nyou may rely on the previously cited libraries to achieve such features.\n\n**I'm actively looking for help maintaining this crate. See [this issue](https://github.com/fdehau/tui-rs/issues/654)**\n\n### Rust version requirements\n\nSince version 0.17.0, `tui` requires **rustc version 1.56.1 or greater**.\n\n### [Documentation](https://docs.rs/tui)\n\n### Demo\n\nThe demo shown in the gif can be run with all available backends.\n\n```\n# crossterm\ncargo run --example demo --release -- --tick-rate 200\n# termion\ncargo run --example demo --no-default-features --features=termion --release -- --tick-rate 200\n```\n\nwhere `tick-rate` is the UI refresh rate in ms.\n\nThe UI code is in [examples/demo/ui.rs](https://github.com/fdehau/tui-rs/blob/v0.19.0/examples/demo/ui.rs) while the\napplication state is in [examples/demo/app.rs](https://github.com/fdehau/tui-rs/blob/v0.19.0/examples/demo/app.rs).\n\nIf the user interface contains glyphs that are not displayed correctly by your terminal, you may want to run\nthe demo without those symbols:\n\n```\ncargo run --example demo --release -- --tick-rate 200 --enhanced-graphics false\n```\n\n### Widgets\n\nThe library comes with the following list of widgets:\n\n  * [Block](https://github.com/fdehau/tui-rs/blob/v0.19.0/examples/block.rs)\n  * [Gauge](https://github.com/fdehau/tui-rs/blob/v0.19.0/examples/gauge.rs)\n  * [Sparkline](https://github.com/fdehau/tui-rs/blob/v0.19.0/examples/sparkline.rs)\n  * [Chart](https://github.com/fdehau/tui-rs/blob/v0.19.0/examples/chart.rs)\n  * [BarChart](https://github.com/fdehau/tui-rs/blob/v0.19.0/examples/barchart.rs)\n  * [List](https://github.com/fdehau/tui-rs/blob/v0.19.0/examples/list.rs)\n  * [Table](https://github.com/fdehau/tui-rs/blob/v0.19.0/examples/table.rs)\n  * [Paragraph](https://github.com/fdehau/tui-rs/blob/v0.19.0/examples/paragraph.rs)\n  * [Canvas (with line, point cloud, map)](https://github.com/fdehau/tui-rs/blob/v0.19.0/examples/canvas.rs)\n  * [Tabs](https://github.com/fdehau/tui-rs/blob/v0.19.0/examples/tabs.rs)\n\nClick on each item to see the source of the example. Run the examples with with \ncargo (e.g. to run the gauge example `cargo run --example gauge`), and quit by pressing `q`.\n\nYou can run all examples by running `cargo make run-examples` (require\n`cargo-make` that can be installed with `cargo install cargo-make`).\n\n### Third-party widgets\n\n* [tui-logger](https://github.com/gin66/tui-logger)\n* [tui-textarea](https://github.com/rhysd/tui-textarea): simple yet powerful multi-line text editor widget supporting several key shortcuts, undo/redo, text search, etc.\n* [tui-rs-tree-widgets](https://github.com/EdJoPaTo/tui-rs-tree-widget): widget for tree data structures.\n\n### Apps using tui\n\n* [spotify-tui](https://github.com/Rigellute/spotify-tui)\n* [bandwhich](https://github.com/imsnif/bandwhich)\n* [kmon](https://github.com/orhun/kmon)\n* [gpg-tui](https://github.com/orhun/gpg-tui)\n* [ytop](https://github.com/cjbassi/ytop)\n* [zenith](https://github.com/bvaisvil/zenith)\n* [bottom](https://github.com/ClementTsang/bottom)\n* [oha](https://github.com/hatoo/oha)\n* [gitui](https://github.com/extrawurst/gitui)\n* [rust-sadari-cli](https://github.com/24seconds/rust-sadari-cli)\n* [desed](https://github.com/SoptikHa2/desed)\n* [diskonaut](https://github.com/imsnif/diskonaut)\n* [tickrs](https://github.com/tarkah/tickrs)\n* [rusty-krab-manager](https://github.com/aryakaul/rusty-krab-manager)\n* [termchat](https://github.com/lemunozm/termchat)\n* [taskwarrior-tui](https://github.com/kdheepak/taskwarrior-tui)\n* [gping](https://github.com/orf/gping/)\n* [Vector](https://vector.dev)\n* [KDash](https://github.com/kdash-rs/kdash)\n* [xplr](https://github.com/sayanarijit/xplr)\n* [minesweep](https://github.com/cpcloud/minesweep-rs)\n* [Battleship.rs](https://github.com/deepu105/battleship-rs)\n* [termscp](https://github.com/veeso/termscp)\n* [joshuto](https://github.com/kamiyaa/joshuto)\n* [adsb_deku/radar](https://github.com/wcampbell0x2a/adsb_deku#radar-tui)\n* [hoard](https://github.com/Hyde46/hoard)\n* [tokio-console](https://github.com/tokio-rs/console): a diagnostics and debugging tool for asynchronous Rust programs.\n* [hwatch](https://github.com/blacknon/hwatch): a alternative watch command that records the result of command execution and can display its history and diffs.\n* [ytui-music](https://github.com/sudipghimire533/ytui-music): listen to music from youtube inside your terminal.\n* [mqttui](https://github.com/EdJoPaTo/mqttui): subscribe or publish to a MQTT Topic quickly from the terminal.\n* [meteo-tui](https://github.com/16arpi/meteo-tui): french weather via the command line.\n* [picterm](https://github.com/ksk001100/picterm): preview images in your terminal.\n* [gobang](https://github.com/TaKO8Ki/gobang): a cross-platform TUI database management tool.\n* [oxker](https://github.com/mrjackwills/oxker): a simple tui to view & control docker containers.\n* [trippy](https://github.com/fujiapple852/trippy): a network diagnostic tool.\n* [cotp](https://github.com/replydev/cotp): a trustworthy, encrypted, command-line TOTP/HOTP authenticator app with import functionality.\n* [hg-tui](https://github.com/kaixinbaba/hg-tui): view [hellogithub.com](https://hellogithub.com/) website on the terminal.\n\n### Alternatives\n\nYou might want to checkout [Cursive](https://github.com/gyscos/Cursive) for an\nalternative solution to build text user interfaces in Rust.\n\n## License\n\n[MIT](LICENSE)\n",
        "releases": [
            {
                "name": "v0.19.0",
                "date": "2022-08-14T14:02:13Z"
            },
            {
                "name": "v0.18.0",
                "date": "2022-04-24T13:08:48Z"
            },
            {
                "name": "v0.17.0",
                "date": "2022-01-22T12:36:05Z"
            },
            {
                "name": "v.0.16.0",
                "date": "2021-08-01T18:14:50Z"
            },
            {
                "name": "v0.15.0",
                "date": "2021-05-02T17:06:15Z"
            },
            {
                "name": "",
                "date": "2021-01-01T13:52:55Z"
            },
            {
                "name": "",
                "date": "2020-11-14T16:41:46Z"
            },
            {
                "name": "",
                "date": "2020-09-27T18:11:46Z"
            },
            {
                "name": "",
                "date": "2020-09-27T18:12:43Z"
            },
            {
                "name": "",
                "date": "2020-09-27T18:14:15Z"
            },
            {
                "name": "v0.9.0",
                "date": "2020-04-14T17:54:31Z"
            },
            {
                "name": "v0.8.0",
                "date": "2020-04-14T17:51:06Z"
            },
            {
                "name": "v0.7.0",
                "date": "2019-11-29T09:07:49Z"
            },
            {
                "name": "",
                "date": "2019-06-16T21:08:37Z"
            },
            {
                "name": "v0.6.0",
                "date": "2019-05-18T17:01:22Z"
            },
            {
                "name": "",
                "date": "2019-03-10T17:31:55Z"
            },
            {
                "name": "",
                "date": "2019-02-03T22:12:33Z"
            },
            {
                "name": "",
                "date": "2018-11-04T19:32:33Z"
            },
            {
                "name": "v0.3.0-beta.3",
                "date": "2018-09-24T06:11:43Z"
            },
            {
                "name": "v0.3.0-beta.2",
                "date": "2018-09-23T19:21:04Z"
            },
            {
                "name": "",
                "date": "2018-09-08T07:26:45Z"
            },
            {
                "name": "v0.3.0-beta.0",
                "date": "2018-09-04T21:17:14Z"
            },
            {
                "name": "",
                "date": "2018-06-09T09:52:25Z"
            },
            {
                "name": "",
                "date": "2018-05-06T10:39:29Z"
            },
            {
                "name": "",
                "date": "2018-04-01T17:53:02Z"
            },
            {
                "name": "v0.2.0",
                "date": "2017-12-26T21:17:24Z"
            }
        ]
    }
}