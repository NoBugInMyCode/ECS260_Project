{
    "https://api.github.com/repos/zardus/ctf-tools": {
        "forks": 1902,
        "watchers": 8644,
        "stars": 8644,
        "languages": {
            "Shell": 70695,
            "Python": 3716,
            "Dockerfile": 1534,
            "Makefile": 790
        },
        "commits": [
            "2018-02-02T19:19:21Z",
            "2023-11-21T08:28:57Z",
            "2023-11-21T08:25:32Z",
            "2023-06-25T03:38:41Z",
            "2023-06-25T03:21:26Z",
            "2022-03-02T20:28:22Z",
            "2022-03-02T10:01:25Z",
            "2022-03-01T18:54:27Z",
            "2022-03-01T10:01:58Z",
            "2022-03-01T09:26:29Z",
            "2022-02-28T08:33:01Z",
            "2022-02-27T07:40:53Z",
            "2022-02-25T02:30:31Z",
            "2020-05-22T06:49:33Z",
            "2020-01-02T04:38:56Z",
            "2019-10-23T06:45:55Z",
            "2018-12-09T01:30:57Z",
            "2019-10-09T23:32:11Z",
            "2019-09-25T06:16:48Z",
            "2019-09-25T00:35:58Z",
            "2019-03-14T04:32:56Z",
            "2019-02-22T05:44:42Z",
            "2019-02-14T06:48:29Z",
            "2019-02-13T23:29:58Z",
            "2019-02-13T23:27:15Z",
            "2019-02-10T18:34:49Z",
            "2019-02-06T00:17:59Z",
            "2019-02-06T00:13:30Z",
            "2019-02-05T21:36:15Z",
            "2019-02-05T18:58:23Z"
        ],
        "creation_date": "2015-05-07T11:02:26Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 294,
        "readme": "# ctf-tools\n[![Build Status](https://travis-ci.org/zardus/ctf-tools.svg?branch=master)](https://travis-ci.org/zardus/ctf-tools)\n[![IRC](https://img.shields.io/badge/freenode-%23ctf--tools-green.svg)](http://webchat.freenode.net/?channels=#ctf-tools)\n\nThis is a collection of setup scripts to create an install of various security research tools.\nOf course, this isn't a hard problem, but it's really nice to have them in one place that's easily deployable to new machines and so forth.\nThe install-scripts for these tools are checked regularly, the results can be found on [the build status page](_buildstatus/index.md).\n\nInstallers for the following tools are included:\n\n| Category | Source | Tool | Description |\n|----------|--------|------|-------------|\n| binary | Directory | [afl](http://lcamtuf.coredump.cx/afl/) | State-of-the-art fuzzer. | <!--tool--> <!--times-out-->\n| binary | Directory | [angr](http://angr.io) | Next-generation binary analysis engine from Shellphish. | <!--tool--> <!--no-test-->\n| binary | Directory | [barf](https://github.com/programa-stic/barf-project) | Binary Analysis and Reverse-engineering Framework. | <!--tool--><!--times-out-->\n| binary | Directory | [bindead](https://bitbucket.org/mihaila/bindead/wiki/Home) | A static analysis tool for binaries. | <!--tool--><!--failing-->\n| binary | Library | [capstone](http://www.capstone-engine.org) | Multi-architecture disassembly framework. | <!--tool--><!--test-->\n| binary | Directory | [checksec](https://github.com/slimm609/checksec.sh) | Check binary hardening settings. | <!--tool--><!--test-->\n| binary | Directory | [codereason](https://github.com/trailofbits/codereason) | Semantic Binary Code Analysis Framework. | <!--tool--><!--failing-->\n| binary | Directory | [crosstool-ng](http://crosstool-ng.org/) | Cross-compilers and cross-architecture tools. | <!--tool--><!--no-test-->\n| binary | Directory | [cross2](http://kozos.jp/books/asm/asm.html) | A set of cross-compilation tools from a Japanese book on C. | <!--tool--><!--no-test-->\n| binary | Directory | [elfkickers](http://www.muppetlabs.com/~breadbox/software/elfkickers.html) | A set of utilities for working with ELF files. | <!--tool--><!--test-->\n| binary | Directory | [elfparser](http://www.elfparser.com/) | Quickly determine the capabilities of an ELF binary through static analysis. | <!--tool--><!--test-->\n| binary | Directory | [evilize](http://www.mathstat.dal.ca/~selinger/md5collision/) | Tool to create MD5 colliding binaries | <!--tool--><!--test-->\n| binary | Directory | [gdb](http://www.gnu.org/software/gdb/) | Up-to-date gdb with python2 bindings. | <!--tool--><!--failing-->\n| binary | Directory | [gdb-heap](https://github.com/rogerhu/gdb-heap) | gdb extension for debugging heap issues. | <!--tool--><!--test-->\n| binary | Directory | [gef](https://github.com/hugsy/gef) | Enhanced environment for gdb. | <!--tool--><!--no-test-->\n| binary | Directory | [hongfuzz](https://github.com/google/honggfuzz) | A general-purpose, easy-to-use fuzzer with interesting analysis options. | <!--tool--><!--test-->\n| binary | Library | [keystone](http://www.keystone-engine.org) | Lightweight multi-architecture assembler framework. | <!--tool--><!--test-->\n| binary | Directory | [libheap](https://github.com/cloudburst/libheap) | gdb python library for examining the glibc heap (ptmalloc) | <!--tool--><!--no-test-->\n| binary | Library | [lief](https://lief.quarkslab.com/) | Library to Instrument Executable Formats. | <!--tool--><!--test-->\n| binary | Directory | [miasm](https://github.com/cea-sec/miasm) | Reverse engineering framework in Python. | <!--tool--> <!--test-->\n| binary | Directory | [one_gadget](https://github.com/david942j/one_gadget) | Magic gadget search for libc. | <!--tool--> <!--test-->\n| binary | Directory | [panda](https://github.com/moyix/panda) | Platform for Architecture-Neutral Dynamic Analysis. | <!--tool--><!--no-test-->\n| binary | Directory | [pathgrind](https://github.com/codelion/pathgrind) | Path-based, symbolically-assisted fuzzer. | <!--tool--><!--failing-->\n| binary | Directory | [peda](https://github.com/longld/peda) | Enhanced environment for gdb. | <!--tool--><!--test-->\n| binary | Directory | [preeny](https://github.com/zardus/preeny) | A collection of helpful preloads (compiled for many architectures!). | <!--tool--><!--no-test-->\n| binary | Directory | [pwndbg](https://github.com/zachriggle/pwndbg) | Enhanced environment for gdb. Especially for pwning. | <!--tool--><!--no-test-->\n| binary | Directory | [pwntools](https://github.com/Gallopsled/pwntools) | Useful CTF utilities. | <!--tool--><!--no-test-->\n| binary | Directory | [python-pin](https://github.com/blankwall/Python_Pin) | Python bindings for pin. | <!--tool--><!--test-->\n| binary | Directory | [qemu](http://qemu.org) | Latest version of qemu! | <!--tool--><!--times-out-->\n| binary | Directory | [qira](http://qira.me) | Parallel, timeless debugger. | <!--tool--><!--times-out-->\n| binary | Directory | [radare2](http://www.radare.org/) | Some crazy thing crowell likes. | <!--tool--><!--test-->\n| binary | Directory | [rappel](https://github.com/yrp604/rappel) | A linux-based assembly REPL. | <!--tool--><!--test-->\n| binary | Directory | [ropper](https://github.com/sashs/Ropper) | Another gadget finder. | <!--tool--><!--test-->\n| binary | Directory | [rp++](https://github.com/0vercl0k/rp) | Another gadget finder. | <!--tool--><!--test-->\n| binary | Directory | [rr](http://rr-project.org) | Record and Replay Debugging Framework | <!--tool--><!--test-->\n| binary | Directory | [scratchabit](https://github.com/pfalcon/ScratchABit) | Easily retargetable and hackable interactive disassembler | <!--tool--><!--test-->\n| binary | Directory | [scratchablock](https://github.com/pfalcon/ScratchABlock) | Yet another crippled decompiler project | <!--tool--><!--test-->\n| binary | Directory | [seccomp-tools](https://github.com/david942j/seccomp-tools) | Provides powerful tools for seccomp analysis | <!--tool--><!--test-->\n| binary | Directory | [shellnoob](https://github.com/reyammer/shellnoob) | Shellcode writing helper. | <!--tool--><!--test-->\n| binary | Directory | [shellsploit](https://github.com/b3mb4m/shellsploit-framework) | Shellcode development kit. | <!--tool--><!--test-->\n| binary | Directory | [snowman](https://github.com/yegord/snowman) | Cross-architecture decompiler. | <!--tool--><!--test-->\n| binary | Directory | [taintgrind](https://github.com/wmkhoo/taintgrind) | A valgrind taint analysis tool. | <!--tool--><!--failing-->\n| binary | Library | [unicorn](http://www.unicorn-engine.org) | Multi-architecture CPU emulator framework. | <!--tool--><!--test-->\n| binary | Directory | [valgrind](http://valgrind.org) | A Dynamic Binary Instrumentation framework with some built-in tools. | <!--tool--><!--test-->\n| binary | Directory | [villoc](https://github.com/wapiflapi/villoc) | Visualization of heap operations. | <!--tool--><!--test-->\n| binary | Directory | [virtualsocket](https://github.com/antoniobianchi333/virtualsocket) | A nice library to interact with binaries. | <!--tool--><!--test-->\n| binary | Directory | [wcc](https://github.com/endrazine/wcc) |  The Witchcraft Compiler Collection is a collection of compilation tools to perform binary black magic on the GNU/Linux and other POSIX platforms. | <!--tool--><!--no-test-->\n| binary | Directory | [xrop](https://github.com/acama/xrop) | Gadget finder. | <!--tool--><!--failing-->\n| binary | Directory | [manticore](https://github.com/trailofbits/manticore) | Manticore is a prototyping tool for dynamic binary analysis, with support for symbolic execution, taint analysis, and binary instrumentation. | <!--tool--><!--no-test-->\n| forensics | Directory | [binwalk](https://github.com/devttys0/binwalk.git) | Firmware (and arbitrary file) analysis tool. | <!--tool--><!--test-->\n| forensics | Directory | [dislocker](http://www.hsc.fr/ressources/outils/dislocker/) | Tool for reading Bitlocker encrypted partitions. | <!--tool--><!--test-->\n| forensics | Directory | [exetractor](https://github.com/kholia/exetractor-clone) | Unpacker for packed Python executables. Supports PyInstaller and py2exe. | <!--tool--><!--test-->\n| forensics | Directory | [firmware-mod-kit](https://code.google.com/p/firmware-mod-kit/) | Tools for firmware packing/unpacking. | <!--tool--><!--test-->\n| forensics | apt | [foremost](http://foremost.sourceforge.net/) | File carver. | <!--deb-tool-->\n| forensics | Directory | [pdf-parser](http://blog.didierstevens.com/programs/pdf-tools/) | Tool for digging in PDF files | <!--tool--><!--test-->\n| forensics | Directory | [peepdf](https://github.com/jesparza/peepdf) | Powerful Python tool to analyze PDF documents. | <!--tool--><!--test-->\n| forensics | Directory | [scrdec](https://gist.github.com/bcse/1834878) | A decoder for encoded Windows Scripts. | <!--tool--><!--test-->\n| forensics | Directory | [testdisk](http://www.cgsecurity.org/wiki/TestDisk) | Testdisk and photorec for file recovery. | <!--tool--><!--test-->\n| crypto | Library | [codext](https://github.com/dhondta/python-codext) | Python codecs extension featuring CLI tools for encoding/decoding anything including AI-based guessing mode. | <!--tool--><!--test-->\n| crypto | Directory | [cribdrag](https://github.com/SpiderLabs/cribdrag) | Interactive crib dragging tool (for crypto). | <!--tool--><!--test-->\n| crypto | Directory | [fastcoll](https://www.win.tue.nl/hashclash/) | An md5sum collision generator. | <!--tool--><!--test-->\n| crypto | Directory | [foresight](https://github.com/ALSchwalm/foresight) | A tool for predicting the output of random number generators. To run, launch \"foresee\". | <!--tool--><!--test-->\n| crypto | Directory | [featherduster](https://github.com/nccgroup/featherduster) |  An automated, modular cryptanalysis tool. | <!--tool--><!--no-test-->\n| crypto | Directory | [galois](http://web.eecs.utk.edu/~plank/plank/papers/CS-07-593) | A fast galois field arithmetic library/toolkit. | <!--tool--><!--test-->\n| crypto | Directory | [hashkill](https://github.com/gat3way/hashkill) | Hash cracker. | <!--tool--><!--test-->\n| crypto | Directory | [hashpump](https://github.com/bwall/HashPump) | A tool for performing hash length extension attaacks. | <!--tool--><!--test-->\n| crypto | Directory | [hashpump-partialhash](https://github.com/mheistermann/HashPump-partialhash) | Hashpump, supporting partially-unknown hashes. | <!--tool--><!--test-->\n| crypto | Directory | [hash-identifier](https://code.google.com/p/hash-identifier/source/checkout) | Simple hash algorithm identifier. | <!--tool--><!--test-->\n| crypto | Directory | [libc-database](https://github.com/niklasb/libc-database) | Build a database of libc offsets to simplify exploitation. | <!--tool--><!--test-->\n| crypto | Directory | [littleblackbox](https://github.com/devttys0/littleblackbox) | Database of private SSL/SSH keys for embedded devices. | <!--tool--><!--test-->\n| crypto | Directory | [msieve](http://sourceforge.net/projects/msieve/) | Msieve is a C library implementing a suite of algorithms to factor large integers. | <!--tool--><!--test-->\n| crypto | Directory | [nonce-disrespect](https://github.com/nonce-disrespect/nonce-disrespect) | Nonce-Disrespecting Adversaries: Practical Forgery Attacks on GCM in TLS. | <!--tool--><!--test-->\n| crypto | Directory | [pemcrack](https://github.com/robertdavidgraham/pemcrack) | SSL PEM file cracker. | <!--tool--><!--test-->\n| crypto | Directory | [pkcrack](https://www.unix-ag.uni-kl.de/~conrad/krypto/pkcrack.html) | PkZip encryption cracker. | <!--tool--><!--test-->\n| crypto | Directory | [python-paddingoracle](https://github.com/mwielgoszewski/python-paddingoracle) | Padding oracle attack automation. | <!--tool--><!--test-->\n| crypto | Directory | [reveng](http://reveng.sourceforge.net/) | CRC finder. | <!--tool--><!--test-->\n| crypto | Directory | [ssh_decoder](https://github.com/jjyg/ssh_decoder) | A tool for decoding ssh traffic. You will need `ruby1.8` from `https://launchpad.net/~brightbox/+archive/ubuntu/ruby-ng` to run this. Run with `ssh_decoder --help` for help, as running it with no arguments causes it to crash. | <!--tool--><!--test-->\n| crypto | Directory | [sslsplit](https://github.com/droe/sslsplit) | SSL/TLS MITM. | <!--tool--><!--test-->\n| crypto | Directory | [xortool](https://github.com/hellman/xortool) | XOR analysis tool. | <!--tool--><!--test-->\n| crypto | Directory | [yafu](http://sourceforge.net/projects/yafu/) | Automated integer factorization. | <!--tool--><!--test-->\n| web | Directory | [burpsuite](http://portswigger.net/burp) | Web proxy to do naughty web stuff. | <!--tool--><!--failing-->\n| web | Directory | [commix](https://github.com/stasinopoulos/commix) | Command injection and exploitation tool. | <!--tool--><!--test-->\n| web | Directory | [dirb](http://dirb.sourceforge.net/) | Web path scanner. | <!--tool--><!--test-->\n| web | Directory | [dirsearch](https://github.com/maurosoria/dirsearch) | Web path scanner. | <!--tool--><!--test-->\n| web | Directory | [mitmproxy](https://mitmproxy.org/) | CLI Web proxy and python library.  | <!--tool--><!--no-test-->\n| web | Directory | [sqlmap](http://sqlmap.org/) | SQL injection automation engine. | <!--tool--><!--test-->\n| web | Directory | [subbrute](https://github.com/TheRook/subbrute) | A DNS meta-query spider that enumerates DNS records, and subdomains. | <!--tool--><!--test-->\n| web | Library | [webgrep](https://github.com/dhondta/webgrep) | `grep` for Web pages, with JS deobfuscation, CSS unminifying and OCR on images. | <!--tool--><!--test-->\n| stego | apt | [pngtools](https://launchpad.net/ubuntu/+source/pngtools) | PNG's analysis tool. | <!--deb-tool-->\n| stego | Directory | [sound-visualizer](http://www.sonicvisualiser.org/) | Audio file visualization. | <!--tool--><!--failing-->\n| stego | Directory | [steganabara](http://www.caesum.com/handbook/stego.htm) | Another image stenography solver. | <!--tool--><!--test-->\n| stego | Directory | [stegano-tools](https://github.com/dhondta/stegano-tools) | A collection of text and image steganography tools (incl LSB, PVD, PIT). | <!--tool--><!--test-->\n| stego | Directory | [stegdetect](http://www.outguess.org/) | Stenography detection/breaking tool. | <!--tool--><!--test-->\n| stego | Docker | [stego-toolkit](https://github.com/DominicBreuker/stego-toolkit) | A docker image with dozens of steg tools. | <!--tool--><!--no-test-->\n| stego | Directory | [stegsolve](http://www.caesum.com/handbook/stego.htm) | Image stenography solver. | <!--tool--><!--test-->\n| stego | Directory | [stegosaurus](https://github.com/AngelKitty/stegosaurus) | A steganography tool for embedding arbitrary payloads in Python bytecode (pyc or pyo) files. | <!--tool--><!--no-test-->\n| stego | Directory | [zsteg](https://github.com/zed-0xff/zsteg) | detect stegano-hidden data in PNG & BMP. | <!--tool--><!--no-test-->\n| dsniff | apt | [dsniff](http://www.monkey.org/~dugsong/dsniff/) | Grabs passwords and other data from pcaps/network streams. | <!--deb-tool-->\n| android | Directory | [apktool](https://ibotpeaches.github.io/Apktool/) | Dissect, dis-assemble, and re-pack Android APKs | <!--tool--><!--test-->\n| android | Directory | [android-sdk](http://developer.android.com/sdk) | The android SDK (adb, emulator, etc). | <!--tool--><!--no-test-->\n| misc | Directory | [xspy](http://git.kali.org/gitweb/?p=packages/xspy.git;a=summary) | Tiny tool to spy on X sessions. | <!--tool--><!--test-->\n| misc | Directory | [z3](https://github.com/Z3Prover/z3) | Theorem prover from Microsoft Research. | <!--tool--><!--times-out-->\n| misc | Directory | [jdgui](http://jd.benow.ca/) | Java decompiler. | <!--tool--><!--test-->\n| misc | Directory | [veles](https://codisec.com/veles/) | Binary data analysis and visualization tool. | <!--tool--><!--test-->\n| misc | Directory | [youtube-dl](https://yt-dl.org/) | Latest version of the popular youtube downloader. | <!--tool--><!--test-->\n\nThere are also some installers for non-CTF stuff to break the monotony!\n\n| Category | Tool | Description |\n|----------|------|-------------|\n| C magic | [C-bind](https://github.com/zwimer/C-bind) | A library used to enable function binding in C! |\n| game | [Dwarf Fortress](http://www.bay12games.com/dwarves/) | Something to help you relax after a CTF! | <!--tool-->\n| pyvmmonitor | [pyvmmonitor](http://www.pyvmmonitor.com/) | PyVmMonitor is a profiler with a simple goal: being the best way to profile a Python program. | <!--tool--><!--test-->\n| library collection | [single\\_file\\_libs](https://github.com/nothings/single_file_libs) | A large collection of useful single file include libraries written for C/C++ |\n| dolphin | [sudolphin](https://sudolph.in/) | If your friend ever leaves their laptop unlocked, `curl -sSL sh.sudolph.in \\| sh` then wait and see! |\n| tor-browser | [tor-browser](https://www.torproject.org/projects/torbrowser.html.en) | Useful when you need to hit a web challenge from different IPs. | <!--tool--><!--test-->\n\n## Usage\n\nTo use, do:\n\n```bash\n# set up the path\n/path/to/ctf-tools/bin/manage-tools setup\nsource ~/.bashrc\n\n# list the available tools\nmanage-tools list\n\n# install gdb, allowing it to try to sudo install dependencies\nmanage-tools -s install gdb\n\n# install pwntools, but don't let it sudo install dependencies\nmanage-tools install pwntools\n\n# install qemu, but use \"nice\" to avoid degrading performance during compilation\nmanage-tools -n install qemu\n\n# uninstall gdb\nmanage-tools uninstall gdb\n\n# uninstall all tools\nmanage-tools uninstall all\n\n# search for a tool\nmanage-tools search preload\n```\n\nWhere possible, the tools keep the installs very self-contained (i.e., in to tool/ directory), and most uninstalls are just calls to `git clean` (**NOTE**, this is **NOT** careful; everything under the tool directory, including whatever you were working on, is blown away during an uninstall).\nOne exception to this are python tools, which are installed using the `pip`\npackage manager if possible. A `ctftools` virtualenv is created during the\n`manage-tools setup` command and can be accessed using the command\n`workon ctftools`.\n\n## Help!\n\nSomething not working?\nI didn't write (almost) any of these tools, but hit up [#ctf-tools on freenode](http://webchat.freenode.net/?channels=#ctf-tools) if you're desperate.\nMaybe some kind soul will help!\n\n## Docker (version 1.7+)\n\nBy popular demand, a Dockerfile has been included.\nYou can build a docker image with:\n\n```bash\ngit clone https://github.com/zardus/ctf-tools\ncd ctf-tools\ndocker build -t ctf-tools .\n```\n\nAnd run it with:\n\n```bash\ndocker run -it ctf-tools\n```\n\nThe built image will have ctf-tools cloned and ready to go, but you will still need to install the tools themselves (see above).\n\nAlternatively, you can also pull ctf-tools (with some tools preinstalled) from dockerhub:\n\n```bash\ndocker run -it zardus/ctf-tools\n```\n\n## Vagrant\n\nYou can build a Vagrant VM with:\n\n```bash\nwget https://raw.githubusercontent.com/zardus/ctf-tools/master/Vagrantfile\nvagrant plugin install vagrant-vbguest\nvagrant up\n```\n\nAnd connect to it via:\n\n```bash\nvagrant ssh\n```\n\n## Kali Linux\n\nKali Linux (Sana and Rolling), due to manually setting certain libraries to not use the latest version available (sometimes being out of date by years) causes some tools to not install at all, or fail in strange ways. AFL and Panda comes to mind, in fact any tool that uses QEMU 2.30 will probably fail during compilation under Kali.\nOverriding these libraries breaks other tools included in Kali so your only solution is to either live with some of Kali's tools being broken, or running another distribution separately such as Ubuntu.\n\nMost tools aren't affected though.\n\n## Adding Tools\n\nTo add a tool (say, named *toolname*), do the following:\n\n1. Create a `toolname` directory.\n2. Create an `install` script.\n3. (optional) if special uninstall steps are required, create an `uninstall` script.\n\n### Install Scripts\n\nThe install script will be run with `$PWD` being `toolname`. It should install the tool into this directory, in as contained a manner as possible.\nIdeally, full uninstallation should be possible with a `git clean`.\n\nThe install script should create a `bin` directory and put its executables there.\nThese executables will be automatically linked into the main `bin` directory for the repo.\nThey could be launched from any directory, so don't make assumptions about the location of `$0`!\n\n## License\n\nThe individual tools are all licensed under their own licenses.\nAs for ctf-tools itself, it is licensed under BSD 2-Clause License.\nIf you find it useful, star it on github (https://github.com/zardus/ctf-tools).\n\nGood luck!\n\n# See Also\n\nThere's a curated list of CTF tools, but without installers, here: https://github.com/apsdehal/aWEsoMe-cTf.\n\nThere's a Vagrant config with a lot of the bigger frameworks here: https://github.com/thebarbershopper/epictreasure.\n",
        "releases": []
    }
}