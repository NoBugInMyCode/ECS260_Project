{
    "https://api.github.com/repos/eclipse/mosquitto": {
        "forks": 2432,
        "watchers": 9329,
        "stars": 9329,
        "languages": {
            "C": 1906314,
            "Python": 837179,
            "Makefile": 75278,
            "C++": 39559,
            "Dockerfile": 34233,
            "CMake": 23838,
            "Shell": 11961,
            "NSIS": 11682,
            "HTML": 7778,
            "CSS": 3918,
            "Perl": 3238,
            "XSLT": 1018
        },
        "commits": [
            "2025-01-20T22:13:43Z",
            "2025-01-15T06:01:10Z",
            "2025-01-15T05:58:57Z",
            "2024-11-02T10:26:16Z",
            "2024-10-16T19:28:05Z",
            "2024-10-16T17:17:07Z",
            "2024-10-16T16:55:10Z",
            "2024-10-16T15:25:26Z",
            "2024-10-16T15:25:08Z",
            "2024-10-16T14:58:03Z",
            "2024-10-16T14:21:55Z",
            "2024-10-15T13:02:21Z",
            "2024-10-14T10:37:41Z",
            "2024-10-14T10:58:50Z",
            "2024-10-12T16:00:40Z",
            "2024-10-11T17:24:23Z",
            "2024-10-11T17:17:45Z",
            "2024-10-11T16:56:49Z",
            "2024-10-09T18:00:05Z",
            "2024-10-08T23:54:30Z",
            "2024-10-08T16:27:53Z",
            "2024-10-06T20:07:27Z",
            "2024-10-03T21:40:04Z",
            "2024-10-02T10:16:48Z",
            "2024-10-02T10:08:06Z",
            "2024-10-02T10:06:22Z",
            "2024-10-02T09:48:45Z",
            "2024-10-02T09:41:52Z",
            "2024-10-02T09:24:19Z",
            "2024-07-17T12:38:34Z"
        ],
        "creation_date": "2016-03-10T20:19:09Z",
        "contributors": 30,
        "topics": [
            "broker",
            "eclipse-iot",
            "libwebsockets",
            "mosquitto",
            "mqtt"
        ],
        "subscribers": 283,
        "readme": "Eclipse Mosquitto\n=================\n\nMosquitto is an open source implementation of a server for version 5.0, 3.1.1,\nand 3.1 of the MQTT protocol. It also includes a C and C++ client library, and\nthe `mosquitto_pub` and `mosquitto_sub` utilities for publishing and\nsubscribing.\n\n## Links\n\nSee the following links for more information on MQTT:\n\n- Community page: <http://mqtt.org/>\n- MQTT v3.1.1 standard: <https://docs.oasis-open.org/mqtt/mqtt/v3.1.1/mqtt-v3.1.1.html>\n- MQTT v5.0 standard: <https://docs.oasis-open.org/mqtt/mqtt/v5.0/mqtt-v5.0.html>\n\nMosquitto project information is available at the following locations:\n\n- Main homepage: <https://mosquitto.org/>\n- Find existing bugs or submit a new bug: <https://github.com/eclipse/mosquitto/issues>\n- Source code repository: <https://github.com/eclipse/mosquitto>\n\nThere is also a public test server available at <https://test.mosquitto.org/>\n\n## Installing\n\nSee <https://mosquitto.org/download/> for details on installing binaries for\nvarious platforms.\n\n## Quick start\n\nIf you have installed a binary package the broker should have been started\nautomatically. If not, it can be started with a very basic configuration:\n\n    mosquitto\n\nThen use `mosquitto_sub` to subscribe to a topic:\n\n    mosquitto_sub -t 'test/topic' -v\n\nAnd to publish a message:\n\n    mosquitto_pub -t 'test/topic' -m 'hello world'\n\nNote that starting the broker like this allows anonymous/unauthenticated access\nbut only from the local computer, so it's only really useful for initial testing.\n\nIf you want to have clients from another computer connect, you will need to\nprovide a configuration file. If you have installed from a binary package, you\nwill probably already have a configuration file at somewhere like\n`/etc/mosquitto/mosquitto.conf`. If you've compiled from source, you can write\nyour config file then run as `mosquitto -c /path/to/mosquitto.conf`.\n\nTo start your config file you define a listener and you will need to think\nabout what authentication you require. It is not advised to run your broker\nwith anonymous access when it is publically available.\n\nFor details on how to do this, look at the\n[authentication methods](https://mosquitto.org/documentation/authentication-methods/)\navailable and the [dynamic security plugin](https://mosquitto.org/documentation/dynamic-security/).\n\n## Documentation\n\nDocumentation for the broker, clients and client library API can be found in\nthe man pages, which are available online at <https://mosquitto.org/man/>. There\nare also pages with an introduction to the features of MQTT, the\n`mosquitto_passwd` utility for dealing with username/passwords, and a\ndescription of the configuration file options available for the broker.\n\nDetailed client library API documentation can be found at <https://mosquitto.org/api/>\n\n## Building from source\n\nTo build from source the recommended route for end users is to download the\narchive from <https://mosquitto.org/download/>.\n\nOn Windows and Mac, use `cmake` to build. On other platforms, just run `make`\nto build. For Windows, see also `README-windows.md`.\n\nIf you are building from the git repository then the documentation will not\nalready be built. Use `make binary` to skip building the man pages, or install\n`docbook-xsl` on Debian/Ubuntu systems.\n\n### Build Dependencies\n\n* c-ares (libc-ares-dev on Debian based systems) - only when compiled with `make WITH_SRV=yes`\n* cJSON - for client JSON output support. Disable with `make WITH_CJSON=no` Auto detected with CMake.\n* libwebsockets (libwebsockets-dev) - enable with `make WITH_WEBSOCKETS=yes`\n* openssl (libssl-dev on Debian based systems) - disable with `make WITH_TLS=no`\n* pthreads - for client library thread support. This is required to support the\n  `mosquitto_loop_start()` and `mosquitto_loop_stop()` functions. If compiled\n  without pthread support, the library isn't guaranteed to be thread safe.\n* uthash / utlist - bundled versions of these headers are provided, disable their use with `make WITH_BUNDLED_DEPS=no`\n* xsltproc (xsltproc and docbook-xsl on Debian based systems) - only needed when building from git sources - disable with `make WITH_DOCS=no`\n\nEquivalent options for enabling/disabling features are available when using the CMake build.\n\n\n## Credits\n\nMosquitto was written by Roger Light <roger@atchoo.org>\n",
        "releases": []
    }
}