{
    "https://api.github.com/repos/tornadoweb/tornado": {
        "forks": 5521,
        "watchers": 21806,
        "stars": 21806,
        "languages": {
            "Python": 1600155,
            "Shell": 4070,
            "C": 1524,
            "Cython": 780,
            "HTML": 25
        },
        "commits": [
            "2025-01-06T14:51:06Z",
            "2024-12-24T00:24:14Z",
            "2024-12-05T21:34:29Z",
            "2024-11-21T19:48:05Z",
            "2024-11-21T20:31:17Z",
            "2024-11-21T20:30:53Z",
            "2024-11-21T20:30:03Z",
            "2024-11-21T19:50:36Z",
            "2024-11-21T11:50:57Z",
            "2024-11-13T17:39:13Z",
            "2024-10-30T18:27:15Z",
            "2024-10-30T18:14:40Z",
            "2024-10-24T14:19:06Z",
            "2024-10-24T13:33:13Z",
            "2024-10-23T18:20:16Z",
            "2024-10-23T18:32:20Z",
            "2024-10-23T18:17:13Z",
            "2024-10-18T19:51:00Z",
            "2024-10-18T19:35:39Z",
            "2024-09-23T19:05:05Z",
            "2024-09-17T20:25:17Z",
            "2024-09-04T19:20:15Z",
            "2024-09-04T19:14:30Z",
            "2024-08-19T12:25:15Z",
            "2024-08-18T17:58:11Z",
            "2024-07-26T13:51:43Z",
            "2024-07-15T16:47:18Z",
            "2024-07-11T19:50:21Z",
            "2024-07-11T19:46:50Z",
            "2024-07-11T19:43:32Z"
        ],
        "creation_date": "2009-09-09T04:55:16Z",
        "contributors": 30,
        "topics": [
            "asynchronous",
            "python"
        ],
        "subscribers": 977,
        "readme": "Tornado Web Server\n==================\n\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n   :alt: Join the chat at https://gitter.im/tornadoweb/tornado\n   :target: https://gitter.im/tornadoweb/tornado?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\n`Tornado <http://www.tornadoweb.org>`_ is a Python web framework and\nasynchronous networking library, originally developed at `FriendFeed\n<http://friendfeed.com>`_.  By using non-blocking network I/O, Tornado\ncan scale to tens of thousands of open connections, making it ideal for\n`long polling <http://en.wikipedia.org/wiki/Push_technology#Long_Polling>`_,\n`WebSockets <http://en.wikipedia.org/wiki/WebSocket>`_, and other\napplications that require a long-lived connection to each user.\n\nHello, world\n------------\n\nHere is a simple \"Hello, world\" example web app for Tornado:\n\n.. code-block:: python\n\n    import asyncio\n    import tornado\n\n    class MainHandler(tornado.web.RequestHandler):\n        def get(self):\n            self.write(\"Hello, world\")\n\n    def make_app():\n        return tornado.web.Application([\n            (r\"/\", MainHandler),\n        ])\n\n    async def main():\n        app = make_app()\n        app.listen(8888)\n        await asyncio.Event().wait()\n\n    if __name__ == \"__main__\":\n        asyncio.run(main())\n\nThis example does not use any of Tornado's asynchronous features; for\nthat see this `simple chat room\n<https://github.com/tornadoweb/tornado/tree/stable/demos/chat>`_.\n\nDocumentation\n-------------\n\nDocumentation and links to additional resources are available at\nhttps://www.tornadoweb.org\n",
        "releases": []
    }
}