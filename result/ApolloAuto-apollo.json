{
    "https://api.github.com/repos/ApolloAuto/apollo": {
        "forks": 9749,
        "watchers": 25434,
        "stars": 25434,
        "languages": {
            "C++": 22274613,
            "TypeScript": 1879182,
            "Python": 1645643,
            "Shell": 1381982,
            "Starlark": 945943,
            "JavaScript": 682759,
            "C": 476550,
            "Cuda": 331248,
            "Smarty": 80298,
            "MDX": 62353,
            "SCSS": 60260,
            "Less": 25119,
            "Dockerfile": 21784,
            "HTML": 11752,
            "GLSL": 7000,
            "Makefile": 6626,
            "CMake": 3327,
            "Assembly": 1922,
            "CSS": 1748,
            "Handlebars": 991,
            "Batchfile": 791,
            "Vim Script": 483
        },
        "commits": [
            "2024-12-31T10:54:14Z",
            "2024-12-19T03:40:25Z",
            "2024-12-18T12:24:37Z",
            "2024-12-16T04:40:02Z",
            "2024-12-03T22:08:15Z",
            "2024-11-19T08:34:13Z",
            "2024-11-18T11:19:09Z",
            "2024-11-11T07:11:21Z",
            "2024-11-04T09:44:18Z",
            "2024-10-14T10:37:25Z",
            "2024-10-14T09:35:55Z",
            "2024-09-25T08:57:17Z",
            "2024-09-25T08:53:15Z",
            "2024-09-24T06:58:08Z",
            "2024-09-24T06:46:52Z",
            "2024-09-18T11:01:45Z",
            "2024-09-18T10:34:46Z",
            "2024-09-10T07:51:57Z",
            "2024-09-10T07:50:50Z",
            "2024-09-09T12:56:53Z",
            "2024-09-09T11:59:37Z",
            "2024-09-09T11:59:17Z",
            "2024-09-06T12:31:48Z",
            "2024-09-06T12:29:25Z",
            "2024-09-06T12:28:44Z",
            "2024-09-05T04:18:56Z",
            "2024-08-28T03:59:02Z",
            "2024-08-27T09:47:56Z",
            "2024-08-27T09:47:37Z",
            "2024-08-22T00:47:32Z"
        ],
        "creation_date": "2017-07-04T19:03:31Z",
        "contributors": 30,
        "topics": [
            "apollo",
            "autonomous-driving",
            "autonomous-vehicles",
            "autonomy",
            "self-driving-car"
        ],
        "subscribers": 1105,
        "readme": "![](docs/02_Quick%20Start/demo_guide/images/Apollo_logo.png)\n\n[![Build Status](http://180.76.142.62:8111/app/rest/builds/buildType:Apollo_Build/statusIcon)](http://180.76.142.62:8111/viewType.html?buildTypeId=Apollo_Build&guest=1)\n[![Simulation Status](https://azure.apollo.auto/dailybuildstatus.svg)](https://azure.apollo.auto/daily-build/public)\n\n```\n\nWe choose to go to the moon in this decade and do the other things,\n\nnot because they are easy, but because they are hard.\n\n-- John F. Kennedy, 1962\n\n```\n\nWelcome to Apollo's GitHub page!\n\n[Apollo](http://apollo.auto) is a high performance, flexible architecture which accelerates the development, testing, and deployment of Autonomous Vehicles.\n\nFor business and partnership, please visit [our website](http://apollo.auto).\n\n## Table of Contents\n\n1. [Introduction](#introduction)\n2. [Prerequisites](#prerequisites)\n3. [Individual Versions](#individual-versions)\n4. [Architecture](#architecture)\n5. [Installation](#installation)\n6. [Quick Starts](#quick-starts)\n7. [Documents](#documents)\n\n## Introduction\n\nApollo is loaded with new modules and features but needs to be calibrated and configured perfectly before you take it for a spin. Please review the prerequisites and installation steps in detail to ensure that you are well equipped to build and launch Apollo. You could also check out Apollo's architecture overview for a greater understanding of Apollo's core technology and platforms.\n\n## Prerequisites\n\n**[New 2024-11]** The Apollo platform (stable version) is now upgraded with\nsoftware packages and library dependencies of newer versions including:\n\n1. CUDA upgraded to version 11.8 to support Nvidia Ada Lovelace (40x0 series) GPUs,\n   with NVIDIA driver >= 520.61.05\n2. LibTorch (only for arm64, both CPU and GPU version) bumped to version 1.11.0 accordingly, and for x86_64, still version 1.7.0.\n\nWe do not expect a disruption to your current work, but to ease your life of\nmigration, you would need to:\n\n1. Update NVIDIA driver on your host to version >= 510.61.05.\n   ([Web link](https://www.nvidia.com/Download/index.aspx?lang=en-us))\n2. Pull latest code and run the following commands after restarting and\n   logging into Apollo Development container:\n\n```bash\n# Remove Bazel output of previous builds\nrm -rf /apollo/.cache/{bazel,build,repos}\n```\n\n3. Restart dev container\n\n```bash\n./docker/scripts/dev_start.sh\n```\n\n---\n\n- The vehicle equipped with the by-wire system, including but not limited to brake-by-wire, steering-by-wire, throttle-by-wire and shift-by-wire (Apollo is currently tested on Lincoln MKZ)\n\n- A machine with a 8-core processor and 16GB memory minimum\n\n- NVIDIA Turing GPU / AMD GFX9/RDNA/CDNA GPU is strongly recommended\n\n- Ubuntu 18.04, 20.04, 22.04 are supported\n\n- NVIDIA driver version 520.61.05 and above ([Web link](https://www.nvidia.com/Download/index.aspx?lang=en-us)) or [ROCm v5.1](https://docs.amd.com/bundle/ROCm-Installation-Guide-v5.1/page/Prerequisite_Actions.html) and above.\n\n- Docker-CE version 19.03 and above ([Official doc](https://docs.docker.com/engine/install/ubuntu/))\n\n- NVIDIA Container Toolkit ([Official doc](https://github.com/NVIDIA/nvidia-docker))\n\n**Please note**, it is recommended that you install the versions of Apollo in the following order: **1.0 -> whichever version you would like to test out**. The reason behind this recommendation is that you need to confirm whether individual hardware components and modules are functioning correctly, and clear various version test cases before progressing to a higher and more capable version for your safety and the safety of those around you.\n\n## Individual Versions:\n\nThe following diagram highlights the scope and features of each Apollo release:\n\n![](docs/02_Quick%20Start/demo_guide/images/Apollo_Roadmap_8_0.png)\n\n[**Apollo 1.0:**](docs/11_Hardware%20Integration%20and%20Calibration/%E8%BD%A6%E8%BE%86%E9%9B%86%E6%88%90/%E7%A1%AC%E4%BB%B6%E5%AE%89%E8%A3%85hardware%20installation/apollo_1_0_hardware_system_installation_guide.md)\n\nApollo 1.0, also referred to as the Automatic GPS Waypoint Following, works in an enclosed venue such as a test track or parking lot. This installation is necessary to ensure that Apollo works perfectly with your vehicle. The diagram below lists the various modules in Apollo 1.0.\n\n![](docs/02_Quick%20Start/demo_guide/images/Apollo_1.png)\n\n[**Apollo 1.5:**](docs/11_Hardware%20Integration%20and%20Calibration/%E8%BD%A6%E8%BE%86%E9%9B%86%E6%88%90/%E7%A1%AC%E4%BB%B6%E5%AE%89%E8%A3%85hardware%20installation/apollo_1_5_hardware_system_installation_guide.md)\n\nApollo 1.5 is meant for fixed lane cruising. With the addition of LiDAR, vehicles with this version now have better perception of its surroundings and can better map its current position and plan its trajectory for safer maneuvering on its lane. Please note, the modules highlighted in Yellow are additions or upgrades for version 1.5.\n\n![](docs/02_Quick%20Start/demo_guide/images/Apollo_1_5.png)\n\n[**Apollo 2.0:**](docs/11_Hardware%20Integration%20and%20Calibration/%E8%BD%A6%E8%BE%86%E9%9B%86%E6%88%90/%E7%A1%AC%E4%BB%B6%E5%AE%89%E8%A3%85hardware%20installation/apollo_2_0_hardware_system_installation_guide_v1.md#key-hardware-components)\n\nApollo 2.0 supports vehicles autonomously driving on simple urban roads. Vehicles are able to cruise on roads safely, avoid collisions with obstacles, stop at traffic lights, and change lanes if needed to reach their destination. Please note, the modules highlighted in Red are additions or upgrades for version 2.0.\n\n![](docs/02_Quick%20Start/demo_guide/images/Apollo_2.png)\n\n[**Apollo 2.5:**](docs/11_Hardware%20Integration%20and%20Calibration/%E8%BD%A6%E8%BE%86%E9%9B%86%E6%88%90/%E7%A1%AC%E4%BB%B6%E5%AE%89%E8%A3%85hardware%20installation/apollo_2_5_hardware_system_installation_guide_v1.md)\n\nApollo 2.5 allows the vehicle to autonomously run on geo-fenced highways with a camera for obstacle detection. Vehicles are able to maintain lane control, cruise and avoid collisions with vehicles ahead of them.\n\n```\nPlease note, if you need to test Apollo 2.5; for safety purposes, please seek the help of the\nApollo Engineering team. Your safety is our #1 priority,\nand we want to ensure Apollo 2.5 was integrated correctly with your vehicle before you hit the road.\n```\n\n![](docs/02_Quick%20Start/demo_guide/images/Apollo_2_5.png)\n\n[**Apollo 3.0:**](docs/02_Quick%20Start/apollo_3_0_quick_start.md)\n\nApollo 3.0's primary focus is to provide a platform for developers to build upon in a closed venue low-speed environment. Vehicles are able to maintain lane control, cruise and avoid collisions with vehicles ahead of them.\n\n![](docs/02_Quick%20Start/demo_guide/images/Apollo_3.0_diagram.png)\n\n[**Apollo 3.5:**](docs/02_Quick%20Start/apollo_3_5_quick_start.md)\n\nApollo 3.5 is capable of navigating through complex driving scenarios such as residential and downtown areas. The car now has 360-degree visibility, along with upgraded perception algorithms to handle the changing conditions of urban roads, making the car more secure and aware. Scenario-based planning can navigate through complex scenarios, including unprotected turns and narrow streets often found in residential areas and roads with stop signs.\n\n![](docs/02_Quick%20Start/demo_guide/images/Apollo_3_5_Architecture.png)\n\n[**Apollo 5.0:**](docs/02_Quick%20Start/apollo_3_5_quick_start.md)\n\nApollo 5.0 is an effort to support volume production for Geo-Fenced Autonomous Driving.\nThe car now has 360-degree visibility, along with upgraded perception deep learning model to handle the changing conditions of complex road scenarios, making the car more secure and aware. Scenario-based planning has been enhanced to support additional scenarios like pull over and crossing bare intersections.\n\n![](docs/02_Quick%20Start/demo_guide/images/Apollo_5_0_diagram1.png)\n\n[**Apollo 5.5:**](docs/02_Quick%20Start/apollo_5_5_quick_start.md)\n\nApollo 5.5 enhances the complex urban road autonomous driving capabilities of previous Apollo releases, by introducing curb-to-curb driving support. With this new addition, Apollo is now a leap closer to fully autonomous urban road driving. The car has complete 360-degree visibility, along with upgraded perception deep learning model and a brand new prediction model to handle the changing conditions of complex road and junction scenarios, making the car more secure and aware.\n\n![](docs/02_Quick%20Start/demo_guide/images/Apollo_5_5_Architecture.png)\n\n[**Apollo 6.0:**](docs/02_Quick%20Start/apollo_6_0_quick_start.md)\n\nApollo 6.0 incorporates new deep learning models to enhance the capabilities for certain Apollo modules. This version works seamlessly with new additions of data pipeline services to better serve Apollo developers. Apollo 6.0 is also the first version to integrate certain features as a demonstration of our continuous exploration and experimentation efforts towards driverless technology.\n\n![](docs/02_Quick%20Start/demo_guide/images/Apollo_6_0.png)\n\n**Apollo 7.0:**\n\nApollo 7.0 incorporates 3 brand new deep learning models to enhance the capabilities for Apollo Perception and Prediction modules. Apollo Studio is introduced in this version, combining with Data Pipeline, to provide a one-stop online development platform to better serve Apollo developers. Apollo 7.0 also publishes the PnC reinforcement learning model training and simulation evaluation service based on previous simulation service.\n\n![](docs/02_Quick%20Start/demo_guide/images/Apollo_7_0.png)\n\n[**Apollo 8.0:**](docs/02_Quick%20Start/apollo_8_0_quick_start.md)\n\nApollo 8.0 is an effort to provide an extensible software framework and complete development cycle for Autonomous Driving developer. Apollo 8.0 introduces easily-reused \u201cPackage\u201d to organize software modules. Apollo 8.0 integrates the whole process of perception development ,by combining model training service, model deployment tool and end-to-end visual validation tool . And another 3 new deep learning models are incorporated in Apollo 8.0 for perception module. Simulation service is upgraded by integrating local simulator in Dreamview to provide powerful debug tool for PnC developer.\n\n![](docs/02_Quick%20Start/demo_guide/images/Apollo_8_0.png)\n\n[**Apollo 9.0:**](https://apollo.baidu.com/docs/apollo/9.0/md_docs_2_xE5_xAE_x89_xE8_xA3_x85_xE6_x8C_x87_xE5_x8D_x97_2_xE5_x8C_x85_xE7_xAE_xA1_xE7_x90_x86_410bb1324792103828eeacd86377c551.html)\n\nApollo Open Source Platform 9.0 further focuses on enhancing the development and debugging experience, dedicated to provide autonomous driving developers with a unified development tool platform and easy-to-extend PnC and perception software framework interfaces. The new version reshapes the PnC and perception extension development method based on package management. It optimizes component splitting and configuration management according to business logic, simplifying the process of calling. In addition to the component extension method, a more lightweight plugin extension method has been added, simplifying the process of extending. The new version introduces Dreamview Plus, a brand-new developer tool that introduces modes for convenient multi-scenario use, a panel layout customizing visualization, and a resource center providing richer development resources. Furthermore, the LiDAR and Camera detection models in the new version have been upgraded for improved results, and incremental training methods have been opened up for easy extension. At the same time, support for 4D millimeter-wave radar has been added. Finally, the new version is adapted to the ARM architecture, and supports compilation and running on Orin, providing developers with additional device options.\n\n![](docs/02_Quick%20Start/demo_guide/images/Apollo_9_0.png)\n\n[**Apollo 10.0:**](https://apollo.baidu.com/docs/apollo/latest/md_docs_2_xE5_x8F_x91_xE7_x89_x88_xE8_xAF_xB4_xE6_x98_x8E_2_xE6_x96_xB0_xE7_x89_x88_xE8_xAF_xB4_xE6_x98_x8E.html)\n\nIn Apollo 8.0, the concept of package management tailored for user learning scenarios was introduced to enable users to deploy and use Apollo more conveniently and efficiently. In Apollo 9.0, the package management tool was updated to Version 2.0, making it easier for users to conduct secondary development and effortlessly build their own autonomous driving applications based on Apollo. In Apollo 10.0, we realize that autonomous driving cannot remain at the stage of local validation. Instead, it requires a comprehensive upgrade, and needs to be applied to scenarios on a large scale. In terms of performance, the performance and stability of various layers and modules are optimied, and extensive tools are provided to improve optimization efficiency. At the cost level, the hardware costs are recuded by enriching the hardware ecosystem which provides users with more options. Besides, the software development costs are lowered by upgrading the operating system, establishing communication with other frameworks, and reusing ecological software capabilities. Regarding safety, functional safety strategies and functional safety framework capabilities are reinforced. See [Release Notes](./RELEASE.md) for more details.\n\n![](docs/02_Quick%20Start/demo_guide/images/Apollo_10_0.png)\n\n## Architecture\n\n- **Hardware/ Vehicle Overview**\n\n![](docs/02_Quick%20Start/demo_guide/images/Hardware_overview_3_5.png)\n\n- **Hardware Connection Overview**\n\n![](docs/02_Quick%20Start/demo_guide/images/Hardware_connection_3_5_1.png)\n\n- **Software Overview**\n\n![](docs/02_Quick%20Start/demo_guide/images/Apollo_3_5_software_architecture.png)\n\n## Installation\n\n- [Hardware installation guide](docs/11_Hardware%20Integration%20and%20Calibration/%E8%BD%A6%E8%BE%86%E9%9B%86%E6%88%90/%E7%A1%AC%E4%BB%B6%E5%AE%89%E8%A3%85hardware%20installation/apollo_3_5_hardware_system_installation_guide.md)\n- [Software installation_guide](https://apollo.baidu.com/docs/apollo/9.0/md_docs_2_xE5_xAE_x89_xE8_xA3_x85_xE6_x8C_x87_xE5_x8D_x97_2_xE5_x8C_x85_xE7_xAE_xA1_xE7_x90_x86_410bb1324792103828eeacd86377c551.html) - **This step is required**\n\nCongratulations! You have successfully built out Apollo without Hardware. If you do have a vehicle and hardware setup for a particular version, please pick the Quickstart guide most relevant to your setup:\n\n## Quick Starts:\n\n- [Apollo 10.0 QuickStart Guide](https://apollo.baidu.com/docs/apollo/10.x/md_docs_2_xE5_xAE_x89_xE8_xA3_x85_xE6_x8C_x87_xE5_x8D_x97_2_xE5_xAE_x89_xE8_xA3_x85_xE6_x8C_x87_xE5_x8D_x97.html)\n\n- [Apollo 9.0 QuickStart Guide](https://apollo.baidu.com/docs/apollo/9.x/md_docs_2_xE5_xAE_x89_xE8_xA3_x85_xE6_x8C_x87_xE5_x8D_x97_2_xE5_x8C_x85_xE7_xAE_xA1_xE7_x90_x86_410bb1324792103828eeacd86377c551.html)\n\n- [Apollo 8.0 QuickStart Guide](docs/02_Quick%20Start/apollo_8_0_quick_start.md)\n\n- [Apollo 6.0 QuickStart Guide](docs/02_Quick%20Start/apollo_6_0_quick_start.md)\n\n- [Apollo 5.5 QuickStart Guide](docs/02_Quick%20Start/apollo_5_5_quick_start.md)\n\n- [Apollo 5.0 QuickStart Guide](docs/02_Quick%20Start/apollo_5_0_quick_start.md)\n\n- [Apollo 3.5 QuickStart Guide](docs/02_Quick%20Start/apollo_3_5_quick_start.md)\n\n- [Apollo 3.0 QuickStart Guide](docs/02_Quick%20Start/apollo_3_0_quick_start.md)\n\n- [Apollo 2.5 QuickStart Guide](docs/02_Quick%20Start/apollo_2_5_quick_start.md)\n\n- [Apollo 2.0 QuickStart Guide](docs/02_Quick%20Start/apollo_2_0_quick_start.md)\n\n- [Apollo 1.5 QuickStart Guide](docs/02_Quick%20Start/apollo_1_5_quick_start.md)\n\n- [Apollo 1.0 QuickStart Guide](docs/02_Quick%20Start/apollo_1_0_quick_start.md)\n\n## Documents\n\n- [Installation Instructions](docs/01_Installation%20Instructions/)\n\n- [Quick Start](docs/02_Quick%20Start/)\n\n- [Package Management](docs/03_Package%20Management/)\n\n- [CyberRT](docs/04_CyberRT/)\n\n- [Localization](docs/05_Localization/)\n\n- [Perception](docs/06_Perception/)\n\n- [Prediction](docs/07_Prediction/)\n\n- [Planning](docs/08_Planning/)\n\n- [Decider](docs/09_Decider/)\n\n- [Control](docs/10_Control/)\n\n- [Hardware Integration and Calibration](docs/11_Hardware%20Integration%20and%20Calibration/)\n\n- [Map acquisition](docs/12_Map%20acquisition/)\n\n- [Apollo Tool](docs/13_Apollo%20Tool/)\n\n- [Others](docs/14_Others/)\n\n- [FAQs](docs/15_FAQS/README.md)\n\n## Questions\n\nYou are welcome to submit questions and bug reports as [GitHub Issues](https://github.com/ApolloAuto/apollo/issues).\n\n## Copyright and License\n\nApollo is provided under the [Apache-2.0 license](https://github.com/ApolloAuto/apollo/blob/master/LICENSE).\n\n## Disclaimer\n\nApollo open source platform only has the source code for models, algorithms and processes, which will be integrated with cybersecurity defense strategy in the deployment for commercialization and productization.\n\nPlease refer to the Disclaimer of Apollo in [Apollo's official website](https://developer.apollo.auto/docs/disclaimer.html).\n\n## Connect with us\n\n- [Have suggestions for our GitHub page?](https://github.com/ApolloAuto/apollo/issues)\n- [Twitter](https://twitter.com/apolloplatform)\n- [YouTube](https://www.youtube.com/channel/UC8wR_NX_NShUTSSqIaEUY9Q)\n- [Blog](https://www.medium.com/apollo-auto)\n- [Newsletter](http://eepurl.com/c-mLSz)\n- Interested in our turnKey solutions or partnering with us Mail us at: apollopartner@baidu.com\n",
        "releases": [
            {
                "name": "apollo-v9.0.0",
                "date": "2023-12-18T12:36:54Z"
            },
            {
                "name": "apollo-v8.0.0",
                "date": "2022-12-25T10:21:56Z"
            },
            {
                "name": "apollo-v7.0.0",
                "date": "2021-12-28T13:36:17Z"
            },
            {
                "name": "apollo-v6.0.0",
                "date": "2020-09-21T21:03:27Z"
            },
            {
                "name": "apollo-v5.5.0",
                "date": "2020-01-06T18:46:58Z"
            },
            {
                "name": "apollo-v5.0.0",
                "date": "2019-06-29T15:09:14Z"
            },
            {
                "name": "apollo-v3.5.0",
                "date": "2019-01-07T17:55:28Z"
            },
            {
                "name": "apollo-v3.0.0",
                "date": "2018-07-03T22:22:56Z"
            },
            {
                "name": "apollo-v2.5.0",
                "date": "2018-04-18T02:55:11Z"
            },
            {
                "name": "apollo-v2.0.0",
                "date": "2017-12-30T01:24:16Z"
            },
            {
                "name": "apollo-v1.5.0",
                "date": "2017-09-19T22:10:59Z"
            },
            {
                "name": "apollo-v1.0.0",
                "date": "2017-07-04T21:00:49Z"
            }
        ]
    }
}