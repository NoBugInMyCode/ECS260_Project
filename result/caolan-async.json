{
    "https://api.github.com/repos/caolan/async": {
        "forks": 2413,
        "watchers": 28203,
        "stars": 28203,
        "languages": {
            "JavaScript": 607797,
            "CSS": 16257,
            "Shell": 4920,
            "Makefile": 4804
        },
        "commits": [
            "2024-12-02T21:47:53Z",
            "2024-12-02T21:47:45Z",
            "2024-12-02T21:47:37Z",
            "2024-12-02T21:47:18Z",
            "2024-12-02T21:46:48Z",
            "2024-12-02T21:46:01Z",
            "2024-10-14T20:10:20Z",
            "2024-10-02T19:14:57Z",
            "2024-10-02T19:14:41Z",
            "2024-10-02T19:14:30Z",
            "2024-09-02T20:29:02Z",
            "2024-09-02T19:45:22Z",
            "2024-09-02T19:44:57Z",
            "2024-08-19T23:26:28Z",
            "2024-08-19T23:23:56Z",
            "2024-08-19T23:23:53Z",
            "2024-08-08T17:49:30Z",
            "2024-08-02T19:43:55Z",
            "2024-08-02T17:43:32Z",
            "2024-08-02T17:43:18Z",
            "2024-08-02T17:43:00Z",
            "2024-08-02T17:42:49Z",
            "2024-08-02T17:42:42Z",
            "2024-08-02T17:42:28Z",
            "2024-07-02T23:35:05Z",
            "2024-07-02T23:34:30Z",
            "2024-07-02T23:34:15Z",
            "2024-06-03T01:29:06Z",
            "2024-06-03T01:28:57Z",
            "2024-06-03T01:28:48Z"
        ],
        "creation_date": "2010-06-01T21:01:30Z",
        "contributors": 30,
        "topics": [
            "async",
            "callbacks",
            "javascript"
        ],
        "subscribers": 656,
        "readme": "![Async Logo](https://raw.githubusercontent.com/caolan/async/master/logo/async-logo_readme.jpg)\n\n![Github Actions CI status](https://github.com/caolan/async/actions/workflows/ci.yml/badge.svg)\n[![NPM version](https://img.shields.io/npm/v/async.svg)](https://www.npmjs.com/package/async)\n[![Coverage Status](https://coveralls.io/repos/caolan/async/badge.svg?branch=master)](https://coveralls.io/r/caolan/async?branch=master)\n[![Join the chat at https://gitter.im/caolan/async](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/caolan/async?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![jsDelivr Hits](https://data.jsdelivr.com/v1/package/npm/async/badge?style=rounded)](https://www.jsdelivr.com/package/npm/async)\n\n<!--\n|Linux|Windows|MacOS|\n|-|-|-|\n|[![Linux Build Status](https://dev.azure.com/caolanmcmahon/async/_apis/build/status/caolan.async?branchName=master&jobName=Linux&configuration=Linux%20node_10_x)](https://dev.azure.com/caolanmcmahon/async/_build/latest?definitionId=1&branchName=master) | [![Windows Build Status](https://dev.azure.com/caolanmcmahon/async/_apis/build/status/caolan.async?branchName=master&jobName=Windows&configuration=Windows%20node_10_x)](https://dev.azure.com/caolanmcmahon/async/_build/latest?definitionId=1&branchName=master) | [![MacOS Build Status](https://dev.azure.com/caolanmcmahon/async/_apis/build/status/caolan.async?branchName=master&jobName=OSX&configuration=OSX%20node_10_x)](https://dev.azure.com/caolanmcmahon/async/_build/latest?definitionId=1&branchName=master)| -->\n\nAsync is a utility module which provides straight-forward, powerful functions for working with [asynchronous JavaScript](http://caolan.github.io/async/v3/global.html). Although originally designed for use with [Node.js](https://nodejs.org/) and installable via `npm i async`, it can also be used directly in the browser.  An ESM/MJS version is included in the main `async` package that should automatically be used with compatible bundlers such as Webpack and Rollup.\n\nA pure ESM version of Async is available as [`async-es`](https://www.npmjs.com/package/async-es).\n\nFor Documentation, visit <https://caolan.github.io/async/>\n\n*For Async v1.5.x documentation, go [HERE](https://github.com/caolan/async/blob/v1.5.2/README.md)*\n\n\n```javascript\n// for use with Node-style callbacks...\nvar async = require(\"async\");\n\nvar obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\nvar configs = {};\n\nasync.forEachOf(obj, (value, key, callback) => {\n    fs.readFile(__dirname + value, \"utf8\", (err, data) => {\n        if (err) return callback(err);\n        try {\n            configs[key] = JSON.parse(data);\n        } catch (e) {\n            return callback(e);\n        }\n        callback();\n    });\n}, err => {\n    if (err) console.error(err.message);\n    // configs is now a map of JSON data\n    doSomethingWith(configs);\n});\n```\n\n```javascript\nvar async = require(\"async\");\n\n// ...or ES2017 async functions\nasync.mapLimit(urls, 5, async function(url) {\n    const response = await fetch(url)\n    return response.body\n}, (err, results) => {\n    if (err) throw err\n    // results is now an array of the response bodies\n    console.log(results)\n})\n```\n",
        "releases": [
            {
                "name": "",
                "date": "2017-04-06T21:32:14Z"
            },
            {
                "name": "",
                "date": "2017-04-06T21:33:08Z"
            },
            {
                "name": "",
                "date": "2017-04-06T21:33:20Z"
            },
            {
                "name": "",
                "date": "2017-04-06T21:33:38Z"
            },
            {
                "name": "",
                "date": "2017-04-06T21:33:57Z"
            },
            {
                "name": "",
                "date": "2017-04-06T21:34:21Z"
            },
            {
                "name": "",
                "date": "2017-04-06T21:35:24Z"
            }
        ]
    }
}