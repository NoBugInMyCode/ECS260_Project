{
    "https://api.github.com/repos/LuckSiege/PictureSelector": {
        "forks": 3026,
        "watchers": 13374,
        "stars": 13374,
        "languages": {
            "Java": 1949736,
            "Kotlin": 2591
        },
        "commits": [
            "2023-12-17T10:12:58Z",
            "2023-12-17T10:09:00Z",
            "2023-12-17T09:52:43Z",
            "2023-12-15T15:52:04Z",
            "2023-12-15T13:59:47Z",
            "2023-12-15T13:58:57Z",
            "2023-12-15T10:31:29Z",
            "2023-12-15T09:34:14Z",
            "2023-12-15T09:28:08Z",
            "2023-12-15T05:32:59Z",
            "2023-12-13T11:35:24Z",
            "2023-12-13T11:23:52Z",
            "2023-10-31T08:05:57Z",
            "2023-10-31T08:05:04Z",
            "2023-10-31T07:57:35Z",
            "2023-10-31T07:51:39Z",
            "2023-10-24T03:23:15Z",
            "2023-10-24T03:22:11Z",
            "2023-10-16T08:03:28Z",
            "2023-09-13T08:17:12Z",
            "2023-09-13T07:48:08Z",
            "2023-08-18T09:48:48Z",
            "2023-08-03T07:45:38Z",
            "2023-07-30T03:52:07Z",
            "2023-07-30T03:51:39Z",
            "2023-07-30T03:50:07Z",
            "2023-07-30T03:49:10Z",
            "2023-07-30T03:46:51Z",
            "2023-07-30T03:46:09Z",
            "2023-07-30T03:45:04Z"
        ],
        "creation_date": "2017-01-04T07:47:39Z",
        "contributors": 10,
        "topics": [
            "android",
            "android-image-selector",
            "camera",
            "compress",
            "glide",
            "image-compression",
            "image-picker",
            "images",
            "multi-selector",
            "photo",
            "photoview",
            "picker",
            "picture-selector",
            "video"
        ],
        "subscribers": 197,
        "readme": "# PictureSelector 3.0 \n   A PictureSelector for Android platform, which supports obtaining pictures, videos, audio & photos from photo albums, cutting (single picture or multi picture cutting), compression, theme custom configuration and other functions, and supports dynamic access & an open source picture selection framework suitable for Android 5.0 + system<br> \n   \n   [\u7b80\u4f53\u4e2d\u6587\ud83c\udde8\ud83c\uddf3](README_CN.md)\n\n   [Download Demo Apk](https://github.com/LuckSiege/PictureSelector/raw/version_component/app/demo/demo_2023-12-17_060744_v3.11.2.apk)<br>\n\n[![Maven Central](https://img.shields.io/badge/maven%20central-v3.11.2-yellow)](https://github.com/LuckSiege)\n[![PRs Welcome](https://img.shields.io/badge/PRs-Welcome-brightgreen.svg)](https://github.com/LuckSiege)\n[![Star](https://img.shields.io/github/stars/LuckSiege/PictureSelector.svg)](https://github.com/LuckSiege/PictureSelector)\n\n\n## Contents\n-[Latest version](https://github.com/LuckSiege/PictureSelector/releases/tag/v3.11.2)<br>\n-[Download](#Download)<br>\n-[Usage](#Usage)<br>\n-[Permission](#Permission)<br>\n-[Result description](https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-LocalMedia%E8%AF%B4%E6%98%8E)<br>\n-[Effect](#Effect)<br>\n-[ProGuard](#ProGuard)<br>\n-[Common errors](https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF)<br>\n-[Issues](https://github.com/LuckSiege/PictureSelector/wiki/%E5%A6%82%E4%BD%95%E6%8F%90Issues%3F)<br>\n-[License](#License)<br>\n\n\n## Download\n\nUse Gradle\n\n```sh\nrepositories {\n  google()\n  mavenCentral()\n}\n\ndependencies {\n  // PictureSelector basic (Necessary)\n  implementation 'io.github.lucksiege:pictureselector:v3.11.2'\n\n  // image compress library (Not necessary)\n  implementation 'io.github.lucksiege:compress:v3.11.2'\n\n  // uCrop library (Not necessary)\n  implementation 'io.github.lucksiege:ucrop:v3.11.2'\n\n  // simple camerax library (Not necessary)\n  implementation 'io.github.lucksiege:camerax:v3.11.2'\n}\n```\n\nKotlin Version [Demo](https://github.com/LuckSiege/PictureSelector/tree/master)\n\n```sh\ndependencies {\n  // Please do not upgrade across versions, please check the Kotlin version demo first\n  implementation 'io.github.lucksiege:pictureselector:kotlin-v1.0.0-beta'\n}\n```\n\nOr Maven:\n\n```sh\n<dependency>\n  <groupId>io.github.lucksiege</groupId>\n  <artifactId>pictureselector</artifactId>\n  <version>v3.11.2</version>\n</dependency>\n\n<dependency>\n  <groupId>io.github.lucksiege</groupId>\n  <artifactId>compress</artifactId>\n  <version>v3.11.2</version>\n</dependency>\n\n<dependency>\n  <groupId>io.github.lucksiege</groupId>\n  <artifactId>ucrop</artifactId>\n  <version>v3.11.2</version>\n</dependency>\n\n<dependency>\n  <groupId>io.github.lucksiege</groupId>\n  <artifactId>camerax</artifactId>\n  <version>v3.11.2</version>\n</dependency>\n```\n\n## Permission  \n\nPermission describe\uff0csee [documentation](https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E6%9D%83%E9%99%90%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E)\n\n```sh\n<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n<uses-permission android:name=\"android.permission.WRITE_MEDIA_STORAGE\" />\n<uses-permission android:name=\"android.permission.WRITE_SETTINGS\" />\n<uses-permission android:name=\"android.permission.MODIFY_AUDIO_SETTINGS\" />\n<uses-permission android:name=\"android.permission.MANAGE_EXTERNAL_STORAGE\" />\n<uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" />\n<uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\n<uses-permission android:name=\"android.permission.CAMERA\" />\n<uses-permission android:name=\"android.permission.VIBRATE\" />\n\nAndroid 13\u7248\u672c\u9002\u914d\uff0c\u7ec6\u5316\u5b58\u50a8\u6743\u9650\n<uses-permission android:name=\"android.permission.READ_MEDIA_IMAGES\" />\n<uses-permission android:name=\"android.permission.READ_MEDIA_AUDIO\" />\n<uses-permission android:name=\"android.permission.READ_MEDIA_VIDEO\" />\n```\n\nAndroid 11 use camera\uff0cAndroidManifest.xm add the code\uff1a\n\n```sh\n<queries package=\"${applicationId}\">\n    <intent>\n        <action android:name=\"android.media.action.IMAGE_CAPTURE\">\n\n        </action>\n    </intent>\n    <intent>\n        <action android:name=\"android.media.action.ACTION_VIDEO_CAPTURE\">\n\n        </action>\n    </intent>\n</queries>\n```\n\n## ImageEngine\n[GlideEngine](https://github.com/LuckSiege/PictureSelector/blob/version_component/app/src/main/java/com/luck/pictureselector/GlideEngine.java)<br> \n[PicassoEngine](https://github.com/LuckSiege/PictureSelector/blob/version_component/app/src/main/java/com/luck/pictureselector/PicassoEngine.java)<br>\n[CoilEngine](https://github.com/LuckSiege/PictureSelector/blob/version_component/app/src/main/java/com/luck/pictureselector/CoilEngine.java)<br>\n\n## Usage\nFor more features, see [documentation](https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%8A%9F%E8%83%BDapi%E8%AF%B4%E6%98%8E)\n\nA simple use case is shown below:\n\n1\u3001Get picture \n\n```sh\nPictureSelector.create(this)\n   .openGallery(SelectMimeType.ofImage())\n   .setImageEngine(GlideEngine.createGlideEngine())\n   .forResult(new OnResultCallbackListener<LocalMedia>() {\n      @Override\n      public void onResult(ArrayList<LocalMedia> result) {\n\n      }\n\n      @Override\n      public void onCancel() {\n\n     }\n});\n```\n\nUsing system albums\n\n```sh\nPictureSelector.create(this)\n     .openSystemGallery(SelectMimeType.ofImage())\n     .forResult(new OnResultCallbackListener<LocalMedia>() {\n        @Override\n        public void onResult(ArrayList<LocalMedia> result) {\n\n        }\n\n        @Override\n        public void onCancel() {\n\n        }\n});\n```\n\n2\u3001Only use camera\n\n```sh\nPictureSelector.create(this)\n     .openCamera(SelectMimeType.ofImage())\n     .forResult(new OnResultCallbackListener<LocalMedia>() {\n        @Override\n        public void onResult(ArrayList<LocalMedia> result) {\n\n        }\n\n        @Override\n        public void onCancel() {\n\n        }\n});\n```\n\nTo take photos separately in the Navigation Fragment scene, please use the following methods:\n\n```sh\nPictureSelector.create(this)\n     .openCamera(SelectMimeType.ofImage())\n     .forResultActivity(new OnResultCallbackListener<LocalMedia>() {\n        @Override\n        public void onResult(ArrayList<LocalMedia> result) {\n\n        }\n\n        @Override\n        public void onCancel() {\n\n        }\n});\n```\n\n3\u3001You can also use the following example\uff1a\n\n(1)\u3001Inject into any view fragment\n\n```sh\n\nPictureSelector.create(this)\n   .openGallery(SelectMimeType.ofAll())\n   .setImageEngine(GlideEngine.createGlideEngine())\n   .buildLaunch(R.id.fragment_container, new OnResultCallbackListener<LocalMedia>() {\n      @Override\n      public void onResult(ArrayList<LocalMedia> result) {\n      \n      }\n\n      @Override\n      public void onCancel() {\n      \n      }\n});\n\t\t\t\n```\n\n(2)\u3001Custom Inject into any view fragment\n\n```sh\n\nPictureSelectorFragment selectorFragment = PictureSelector.create(this)\n     .openGallery(SelectMimeType.ofAll())\n     .setImageEngine(GlideEngine.createGlideEngine())\n     .build();\n     \ngetSupportFragmentManager().beginTransaction()\n     .add(R.id.fragment_container, selectorFragment, selectorFragment.getFragmentTag())\n     .addToBackStack(selectorFragment.getFragmentTag())\n     .commitAllowingStateLoss();\n\t\t\t\n```\n\n4\u3001Only query data source\n\n(1)\u3001get album data\n\n```sh\n\nPictureSelector.create(this)\n    .dataSource(SelectMimeType.ofAll())\n    .obtainAlbumData(new OnQueryDataSourceListener<LocalMediaFolder>() {\n        @Override\n        public void onComplete(List<LocalMediaFolder> result) {\n\n        }\n   );\n\n```\n\n(2)\u3001get media data\n\n```sh\n\nPictureSelector.create(this)\n    .dataSource(SelectMimeType.ofAll())\n    .obtainMediaData(new OnQueryDataSourceListener<LocalMedia>() {\n        @Override\n        public void onComplete(List<LocalMedia> result) {\n\n        }\n   );\n\n```\n\n(3)\u3001IBridgeMediaLoader get data \n\n```sh\n\nIBridgeMediaLoader loader = PictureSelector.create(this)\n    .dataSource(SelectMimeType.ofImage()).buildMediaLoader();\n    loader.loadAllAlbum(new OnQueryAllAlbumListener<LocalMediaFolder>() {\n        @Override\n        public void onComplete(List<LocalMediaFolder> result) {\n\n        }\n  });\n\n```\n\n5\u3001Preview image\u3001video\u3001audio\n\nIf you preview the online video AndroidManifest XML add the following code\n\n```sh\nandroid:usesCleartextTraffic=\"true\"\n```\n\n```sh\n\nPictureSelector.create(this)\n    .openPreview()\n    .setImageEngine(GlideEngine.createGlideEngine())\n    .setExternalPreviewEventListener(new OnExternalPreviewEventListener() {\n       @Override\n       public void onPreviewDelete(int position) {\n\n       }\n\n        @Override\n       public boolean onLongPressDownload(LocalMedia media) {\n           return false;\n       }\n    }).startActivityPreview(position, true, \"data\");\n\n```\n\n\nSet theme\uff0csee [documentation](https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E4%B8%BB%E9%A2%98api%E8%AF%B4%E6%98%8E)\n\n```sh\n.setSelectorUIStyle();\n```\nOr Overload layout\uff0csee [documentation](https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E9%87%8D%E8%BD%BD%E5%B8%83%E5%B1%80%EF%BC%9F)\n\n```sh\n.setInjectLayoutResourceListener(new OnInjectLayoutResourceListener() {\n   @Override\n   public int getLayoutResourceId(Context context, int resourceSource) {\n\treturn 0;\n}\n```\n\nThe advanced use cases are as follow\uff1a\n\n1\u3001Use the custom camera,See [documentation](https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%B8%E6%9C%BA%EF%BC%9F)\n\n```sh\n.setCameraInterceptListener(new OnCameraInterceptListener() {\n    @Override\n    public void openCamera(Fragment fragment, int cameraMode, int requestCode){\n\n    }\n});\n```\n\n2\u3001Use the image compress,See [documentation](https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E5%8E%8B%E7%BC%A9%EF%BC%9F)\n\n```sh\n.setCompressEngine(new CompressFileEngine() {\n   @Override\n   public void onStartCompress(Context context, ArrayList<Uri> source, OnKeyValueResultCallbackListener call){\n\n   }\n});\n```\n\n3\u3001Use the image uCrop,See [documentation](https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E8%A3%81%E5%89%AA%EF%BC%9F)\n\n```sh\n\n.setCropEngine(new CropFileEngine() {\n   @Override\n   public void onStartCrop(Fragment fragment, Uri srcUri, Uri destinationUri, ArrayList<String> dataSource, int requestCode) {\n\n   }\n});\n```\n\n4\u3001Use the image edit,See [documentation](https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E7%BC%96%E8%BE%91%E5%9B%BE%E7%89%87%EF%BC%9F)\n\n```sh\n.setEditMediaInterceptListener(new OnMediaEditInterceptListener() {\n    @Override\n    public void onStartMediaEdit(Fragment fragment, LocalMedia currentLocalMedia, int requestCode) {\n\n    }\n});\n\n```\n\n5\u3001Use the custom load data,See [documentation](https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E5%8A%A0%E8%BD%BD%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E6%BA%90%EF%BC%9F)\n\n```sh\n.setExtendLoaderEngine(new ExtendLoaderEngine() {\n    @Override\n    public void loadAllAlbumData(Context context, OnQueryAllAlbumListener<LocalMediaFolder> query) {\n                                    \n    }\n\n    @Override\n    public void loadOnlyInAppDirAllMediaData(Context context, OnQueryAlbumListener<LocalMediaFolder> query) {\n\n    }\n\n    @Override\n    public void loadFirstPageMediaData(Context context, long bucketId, int page, int pageSize, OnQueryDataResultListener<LocalMedia> query) {\n\n    }\n\n    @Override\n    public void loadMoreMediaData(Context context, long bucketId, int page, int limit, int pageSize, OnQueryDataResultListener<LocalMedia> query) {\n\n    }\n });\n\n```\n\n6\u3001Use the custom apply Permissions,See [documentation](https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9D%83%E9%99%90%E7%94%B3%E8%AF%B7-%EF%BC%9F)\n\n```sh\n.setPermissionsInterceptListener(new OnPermissionsInterceptListener() {\n      @Override\n      public void requestPermission(Fragment fragment, String[] permissionArray, OnRequestPermissionListener call) {\n\n      }\n\n      @Override\n      public boolean hasPermissions(Fragment fragment, String[] permissionArray) {\n      return false;\n  }\n});\n\n```\n\n7\u3001Android 10 and above, Sandbox mechanism, file processing\uff0cPermissions,See [documentation](https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E6%B2%99%E7%9B%92%E5%A4%96%E8%B5%84%E6%BA%90%EF%BC%9F)\n\n```sh\n.setSandboxFileEngine(new UriToFileTransformEngine() {\n    @Override\n    public void onUriToFileAsyncTransform(Context context, String srcPath, String mineType, OnKeyValueResultCallbackListener call) {\n                                        \n    }\n});\n```\n\n## ProGuard\n```sh\n-keep class com.luck.picture.lib.** { *; }\n\n// use Camerax\n-keep class com.luck.lib.camerax.** { *; }\n\n// use uCrop\n-dontwarn com.yalantis.ucrop**\n-keep class com.yalantis.ucrop** { *; }\n-keep interface com.yalantis.ucrop** { *; }\n```\n## License\n```sh\nCopyright 2016 Luck\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n\n\n## Effect\n\n| Function list |\n|:-----------:|\n|![](image/home.jpg)|\n\n| Default Style | Preview | Multiple Crop |\n|:-----------:|:--------:|:---------:|\n|![](image/picture_default_style_1.jpg) | <img src=\"image/picture_default_style_2.jpg\"/> | ![](image/picture_default_style_new_3.jpg)|\n\n| Digital Style | Preview | Multiple Crop |\n|:-----------:|:--------:|:---------:|\n|![](image/picture_num_style_new_1.jpg) | ![](image/picture_num_style_new_2.jpg) | ![](image/picture_num_style_new_3.jpg)|\n\n| White Style | Preview | Single Crop |\n|:-----------:|:--------:|:---------:|\n|![](image/picture_sina_style_1.jpg) | ![](image/picture_sina_style_new_2.jpg) | ![](image/picture_sina_style_new_3.jpg)|\n\n| New Style | Preview | Multiple Crop |\n|:-----------:|:--------:|:---------:|\n|![](image/picture_wechat_style_1.jpg) | ![](image/picture_wechat_style_2.jpg) | ![](image/picture_wechat_style_new_3.jpg)|\n\n| Photo Album Directory | Single Mode | Circular Crop|\n|:-----------:|:--------:|:--------:|\n|![](image/picture_wechat_album_style.jpg) |![](image/picture_wechat_single_style_3.jpg) | ![](image/picture_circular_crop_new_style.jpg)|\n\n| White Style | Video | Audio |\n|:-----------:|:-----------:|:--------:|\n|![](image/picture_white_style.jpeg) |![](image/picture_video.jpg) | ![](image/picture_audio.jpg)|\n\n",
        "releases": [
            {
                "name": "v3.11.2",
                "date": "2023-12-17T10:30:28Z"
            },
            {
                "name": "v3.11.1",
                "date": "2023-04-16T14:17:25Z"
            },
            {
                "name": "v3.11.0",
                "date": "2023-04-09T12:24:48Z"
            },
            {
                "name": "v3.10.8",
                "date": "2023-03-13T02:17:20Z"
            },
            {
                "name": "v3.10.7",
                "date": "2022-11-13T13:48:01Z"
            },
            {
                "name": "v3.10.6",
                "date": "2022-08-14T13:24:47Z"
            },
            {
                "name": "v3.10.5",
                "date": "2022-07-03T09:51:02Z"
            },
            {
                "name": "v3.10.3",
                "date": "2022-06-26T10:38:14Z"
            },
            {
                "name": "v3.10.2",
                "date": "2022-06-12T10:46:56Z"
            },
            {
                "name": "v3.10.1",
                "date": "2022-06-08T16:36:34Z"
            },
            {
                "name": "v3.0.9",
                "date": "2022-04-05T14:41:14Z"
            },
            {
                "name": "v3.0.8",
                "date": "2022-03-27T12:58:04Z"
            },
            {
                "name": "v3.0.7",
                "date": "2022-03-20T13:46:26Z"
            },
            {
                "name": "v3.0.6",
                "date": "2022-03-13T13:24:50Z"
            },
            {
                "name": "v3.0.5",
                "date": "2022-02-20T09:35:42Z"
            },
            {
                "name": "v3.0.4",
                "date": "2022-02-13T13:13:14Z"
            },
            {
                "name": "v3.0.3",
                "date": "2022-01-23T12:09:14Z"
            },
            {
                "name": "v3.0.2",
                "date": "2022-01-16T11:24:15Z"
            },
            {
                "name": "v2.7.3-rc10",
                "date": "2021-11-14T05:14:26Z"
            },
            {
                "name": "v2.7.3-rc09",
                "date": "2021-07-18T14:00:51Z"
            },
            {
                "name": "",
                "date": "2021-07-04T13:16:53Z"
            },
            {
                "name": "",
                "date": "2021-05-18T13:48:55Z"
            },
            {
                "name": "",
                "date": "2021-05-13T18:06:33Z"
            },
            {
                "name": "",
                "date": "2021-05-02T14:18:17Z"
            },
            {
                "name": "",
                "date": "2021-04-12T04:18:43Z"
            },
            {
                "name": "",
                "date": "2020-11-22T14:00:22Z"
            },
            {
                "name": "",
                "date": "2020-09-06T14:16:14Z"
            },
            {
                "name": "",
                "date": "2020-06-01T04:46:18Z"
            },
            {
                "name": "",
                "date": "2020-05-11T13:40:43Z"
            },
            {
                "name": "",
                "date": "2020-05-11T02:34:46Z"
            },
            {
                "name": "",
                "date": "2020-04-24T09:55:28Z"
            },
            {
                "name": "",
                "date": "2020-04-12T14:33:18Z"
            },
            {
                "name": "",
                "date": "2020-03-29T11:46:06Z"
            },
            {
                "name": "",
                "date": "2020-03-22T15:37:47Z"
            },
            {
                "name": "",
                "date": "2020-03-11T10:56:25Z"
            },
            {
                "name": "",
                "date": "2020-03-10T01:52:55Z"
            },
            {
                "name": "",
                "date": "2020-01-17T14:33:19Z"
            },
            {
                "name": "",
                "date": "2020-01-05T14:19:22Z"
            },
            {
                "name": "",
                "date": "2019-12-22T15:15:24Z"
            },
            {
                "name": "",
                "date": "2019-12-18T14:15:25Z"
            },
            {
                "name": "",
                "date": "2019-12-15T13:52:14Z"
            },
            {
                "name": "",
                "date": "2019-12-07T11:38:26Z"
            },
            {
                "name": "",
                "date": "2019-12-03T15:02:50Z"
            },
            {
                "name": "",
                "date": "2019-12-02T15:32:33Z"
            },
            {
                "name": "",
                "date": "2019-12-01T16:00:51Z"
            },
            {
                "name": "",
                "date": "2019-11-24T14:25:26Z"
            },
            {
                "name": "",
                "date": "2019-11-23T15:51:17Z"
            },
            {
                "name": "",
                "date": "2019-11-21T03:02:54Z"
            },
            {
                "name": "",
                "date": "2019-11-21T02:52:27Z"
            },
            {
                "name": "",
                "date": "2019-11-19T10:06:55Z"
            },
            {
                "name": "",
                "date": "2019-11-12T13:41:31Z"
            },
            {
                "name": "",
                "date": "2019-11-11T05:42:20Z"
            },
            {
                "name": "",
                "date": "2019-11-09T17:59:54Z"
            },
            {
                "name": "",
                "date": "2019-09-23T04:25:40Z"
            },
            {
                "name": "",
                "date": "2019-08-22T02:58:01Z"
            },
            {
                "name": "",
                "date": "2018-04-14T09:15:09Z"
            },
            {
                "name": "",
                "date": "2018-03-30T07:09:56Z"
            },
            {
                "name": "",
                "date": "2018-03-08T02:17:42Z"
            },
            {
                "name": "",
                "date": "2018-02-01T04:56:18Z"
            },
            {
                "name": "",
                "date": "2017-11-16T03:25:56Z"
            },
            {
                "name": "",
                "date": "2017-11-04T06:01:01Z"
            },
            {
                "name": "",
                "date": "2017-10-29T15:19:01Z"
            },
            {
                "name": "",
                "date": "2017-10-19T05:30:43Z"
            },
            {
                "name": "",
                "date": "2017-08-06T02:49:46Z"
            },
            {
                "name": "",
                "date": "2017-06-27T07:17:39Z"
            },
            {
                "name": "",
                "date": "2017-06-25T06:10:29Z"
            },
            {
                "name": "",
                "date": "2017-06-20T09:00:04Z"
            },
            {
                "name": "",
                "date": "2017-06-20T01:10:22Z"
            },
            {
                "name": "",
                "date": "2017-06-19T01:47:16Z"
            },
            {
                "name": "",
                "date": "2017-06-14T09:21:10Z"
            },
            {
                "name": "",
                "date": "2017-06-13T08:43:31Z"
            },
            {
                "name": "",
                "date": "2017-06-11T06:37:39Z"
            },
            {
                "name": "",
                "date": "2017-06-08T09:17:52Z"
            },
            {
                "name": "",
                "date": "2017-06-07T13:19:50Z"
            },
            {
                "name": "",
                "date": "2017-05-22T06:57:03Z"
            },
            {
                "name": "",
                "date": "2017-05-17T09:27:20Z"
            },
            {
                "name": "",
                "date": "2017-05-16T09:45:02Z"
            },
            {
                "name": "",
                "date": "2017-05-11T08:41:43Z"
            },
            {
                "name": "",
                "date": "2017-05-08T07:57:38Z"
            },
            {
                "name": "",
                "date": "2017-05-07T14:31:29Z"
            },
            {
                "name": "",
                "date": "2017-05-07T08:24:49Z"
            },
            {
                "name": "",
                "date": "2017-05-05T07:48:17Z"
            },
            {
                "name": "",
                "date": "2017-05-03T09:25:34Z"
            },
            {
                "name": "",
                "date": "2017-05-03T03:50:23Z"
            },
            {
                "name": "",
                "date": "2017-05-02T10:17:16Z"
            },
            {
                "name": "",
                "date": "2017-05-01T05:16:05Z"
            },
            {
                "name": "",
                "date": "2017-04-30T07:26:45Z"
            },
            {
                "name": "",
                "date": "2017-04-30T05:43:53Z"
            },
            {
                "name": "",
                "date": "2017-04-29T07:55:28Z"
            },
            {
                "name": "",
                "date": "2017-04-27T09:33:28Z"
            },
            {
                "name": "",
                "date": "2017-04-27T08:57:10Z"
            },
            {
                "name": "",
                "date": "2017-04-27T06:09:57Z"
            },
            {
                "name": "",
                "date": "2017-04-26T10:01:55Z"
            },
            {
                "name": "",
                "date": "2017-04-25T07:54:52Z"
            },
            {
                "name": "",
                "date": "2017-04-24T08:26:49Z"
            },
            {
                "name": "",
                "date": "2017-04-24T07:29:54Z"
            },
            {
                "name": "",
                "date": "2017-04-21T10:55:32Z"
            },
            {
                "name": "",
                "date": "2017-04-19T05:12:07Z"
            },
            {
                "name": "",
                "date": "2017-03-21T03:04:32Z"
            },
            {
                "name": "",
                "date": "2017-03-16T02:03:05Z"
            },
            {
                "name": "",
                "date": "2017-02-09T11:51:49Z"
            },
            {
                "name": "",
                "date": "2017-01-24T17:27:27Z"
            },
            {
                "name": "",
                "date": "2017-01-24T17:10:33Z"
            },
            {
                "name": "",
                "date": "2017-01-21T02:06:05Z"
            },
            {
                "name": "",
                "date": "2017-01-20T09:40:39Z"
            },
            {
                "name": "",
                "date": "2017-01-20T08:25:43Z"
            },
            {
                "name": "",
                "date": "2017-01-19T16:14:18Z"
            },
            {
                "name": "",
                "date": "2017-01-19T16:07:27Z"
            },
            {
                "name": "",
                "date": "2017-01-18T08:32:54Z"
            },
            {
                "name": "",
                "date": "2017-01-17T11:56:10Z"
            },
            {
                "name": "",
                "date": "2017-01-17T11:40:20Z"
            },
            {
                "name": "",
                "date": "2017-01-17T09:56:41Z"
            },
            {
                "name": "",
                "date": "2017-01-17T05:01:31Z"
            },
            {
                "name": "",
                "date": "2017-01-13T14:15:37Z"
            },
            {
                "name": "",
                "date": "2017-01-13T09:57:24Z"
            },
            {
                "name": "",
                "date": "2017-01-13T04:51:46Z"
            }
        ]
    }
}