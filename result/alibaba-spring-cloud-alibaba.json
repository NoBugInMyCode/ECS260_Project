{
    "https://api.github.com/repos/alibaba/spring-cloud-alibaba": {
        "forks": 8358,
        "watchers": 28172,
        "stars": 28172,
        "languages": {
            "Java": 1393595,
            "HTML": 9491,
            "Shell": 2729,
            "Dockerfile": 1686,
            "JavaScript": 1483
        },
        "commits": [
            "2024-11-28T13:40:48Z",
            "2024-11-28T03:57:02Z",
            "2024-11-26T06:34:22Z",
            "2024-11-20T02:17:43Z",
            "2024-11-20T02:16:44Z",
            "2024-11-16T07:09:43Z",
            "2024-11-15T03:13:04Z",
            "2024-11-15T02:51:38Z",
            "2024-11-15T02:05:47Z",
            "2024-10-31T10:11:52Z",
            "2024-10-31T08:54:20Z",
            "2024-10-28T07:34:56Z",
            "2024-10-28T03:01:56Z",
            "2024-09-27T12:04:25Z",
            "2024-09-18T13:25:49Z",
            "2024-09-14T06:56:24Z",
            "2024-09-14T03:36:02Z",
            "2024-09-11T01:38:11Z",
            "2024-09-10T06:44:15Z",
            "2024-09-03T14:45:43Z",
            "2024-08-14T02:56:37Z",
            "2024-08-10T15:23:59Z",
            "2024-08-01T02:19:54Z",
            "2024-07-29T04:52:52Z",
            "2024-07-22T04:20:28Z",
            "2024-07-21T07:45:36Z",
            "2024-07-16T09:08:29Z",
            "2024-07-16T05:59:32Z",
            "2024-07-15T08:02:26Z",
            "2024-07-15T08:02:05Z"
        ],
        "creation_date": "2017-12-01T20:49:15Z",
        "contributors": 30,
        "topics": [
            "alibaba",
            "alibaba-middleware",
            "alibaba-oss",
            "aliyun",
            "circuit-breaker",
            "cloud-native",
            "distributed-configuration",
            "distributed-messaging",
            "distributed-transaction",
            "dubbo",
            "java",
            "microservices",
            "nacos",
            "rocketmq",
            "service-discovery",
            "service-registry",
            "spring",
            "spring-cloud",
            "spring-cloud-alibaba",
            "spring-cloud-core"
        ],
        "subscribers": 969,
        "readme": "# Spring Cloud Alibaba\n\n[![CircleCI](https://circleci.com/gh/alibaba/spring-cloud-alibaba/tree/2023.x.svg?style=svg)](https://circleci.com/gh/alibaba/spring-cloud-alibaba/tree/2023.x)\n[![Maven Central](https://img.shields.io/maven-central/v/com.alibaba.cloud/spring-cloud-alibaba-dependencies.svg?label=Maven%20Central)](https://search.maven.org/search?q=g:com.alibaba.cloud%20AND%20a:spring-cloud-alibaba-dependencies)\n[![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg)](https://www.apache.org/licenses/LICENSE-2.0.html)\n[![actions](https://github.com/alibaba/spring-cloud-alibaba/workflows/Integration%20Testing/badge.svg)](https://github.com/alibaba/spring-cloud-alibaba/actions)\n[![Leaderboard](https://img.shields.io/badge/SCA-Check%20Your%20Contribution-orange)](https://opensource.alibaba.com/contribution_leaderboard/details?projectValue=sca)\n\nA project maintained by Alibaba.\n\nSee the [\u4e2d\u6587\u6587\u6863](https://github.com/alibaba/spring-cloud-alibaba/blob/2023.x/README-zh.md) for Chinese readme.\n\nSpring Cloud Alibaba provides a one-stop solution for distributed application development. It contains all the components required to develop distributed applications, making it easy for you to develop your applications using Spring Cloud.\n\nWith Spring Cloud Alibaba, you only need to add some annotations and a small amount of configurations to connect Spring Cloud applications to the distributed solutions of Alibaba, and build a distributed application system with Alibaba middleware.\n\n\n## Features\n\n* **Flow control and service degradation**: Flow control for HTTP services is supported by default. You can also customize flow control and service degradation rules using annotations. The rules can be changed dynamically.\n* **Service registration and discovery**: Service can be registered and clients can discover the instances using Spring-managed beans. Load balancing is consistent with that supported by the corresponding Spring Cloud.\n* **Distributed configuration**: Support for externalized configuration in a distributed system, auto refresh when configuration changes.\n* **Event-driven**: Support for building highly scalable event-driven microservices connected with shared messaging systems.\n* **Distributed Transaction**: Support for distributed transaction solution with high performance and ease of use.\n* **Alibaba Cloud Object Storage**: Massive, secure, low-cost, and highly reliable cloud storage services. Support for storing and accessing any type of data in any application, anytime, anywhere.\n* **Alibaba Cloud SchedulerX**: Accurate, highly reliable, and highly available scheduled job scheduling services with response time within seconds.\n* **Alibaba Cloud SMS**: A messaging service that covers the globe, Alibaba SMS provides convenient, efficient, and intelligent communication capabilities that help businesses quickly contact their customers.\n\nFor more features, please refer to [Roadmap](https://github.com/alibaba/spring-cloud-alibaba/blob/2023.x/Roadmap.md).\n\nIn addition to the above-mentioned features, for the needs of enterprise users' scenarios, [Microservices Engine (MSE)](https://www.aliyun.com/product/aliware/mse?spm=github.spring.com.topbar) of Spring Cloud Alibaba's enterprise version provides an enterprise-level microservices governance center, which includes more powerful governance capabilities such as Grayscale Release, Service Warm-up, Lossless Online and Offline and Outlier Ejection. At the same time, it also provides a variety of products and solutions such as enterprise-level Nacos registration / configuration center, enterprise-level cloud native gateway.\n\n\n## Components\n\n**[Sentinel](https://github.com/alibaba/Sentinel)**: Sentinel takes \"traffic flow\" as the breakthrough point, and provides solutions in areas such as flow control, concurrency, circuit breaking, and load protection to protect service stability.\n\n**[Nacos](https://github.com/alibaba/Nacos)**: An easy-to-use dynamic service discovery, configuration and service management platform for building cloud native applications.\n\n**[RocketMQ](https://rocketmq.apache.org/)**: A distributed messaging and streaming platform with low latency, high performance and reliability, trillion-level capacity and flexible scalability.\n\n**[Seata](https://github.com/seata/seata)**: A distributed transaction solution with high performance and ease of use for microservices architecture.\n\n**[Alibaba Cloud OSS](https://www.aliyun.com/product/oss)**: An encrypted and secure cloud storage service which stores, processes and accesses massive amounts of data from anywhere in the world.\n\n**[Alibaba Cloud SMS](https://www.aliyun.com/product/sms)**: A messaging service that covers the globe, Alibaba SMS provides convenient, efficient, and intelligent communication capabilities that help businesses quickly contact their customers.\n\n**[Alibaba Cloud SchedulerX](https://www.aliyun.com/aliware/schedulerx?spm=5176.10695662.784137.1.4b07363dej23L3)**: Accurate, highly reliable, and highly available scheduled job scheduling services with response time within seconds.\n\nFor more features please refer to [Roadmap](https://github.com/alibaba/spring-cloud-alibaba/blob/2023.x/Roadmap.md).\n\n## How to build\n* **2023.x branch**: Corresponds to Spring Cloud 2023 & Spring Boot 3.2.x, JDK 17 or later versions are supported.\n* **2022.x branch**: Corresponds to Spring Cloud 2022 & Spring Boot 3.0.x, JDK 17 or later versions are supported.\n* **2021.x branch**: Corresponds to Spring Cloud 2021 & Spring Boot 2.6.x. JDK 1.8 or later versions are supported.\n* **2020.0 branch**: Corresponds to Spring Cloud 2020 & Spring Boot 2.4.x. JDK 1.8 or later versions are supported.\n* **2.2.x branch**: Corresponds to Spring Cloud Hoxton & Spring Boot 2.2.x. JDK 1.8 or later versions are supported.\n* **greenwich branch**: Corresponds to Spring Cloud Greenwich & Spring Boot 2.1.x. JDK 1.8 or later versions are supported.\n* **finchley branch**: Corresponds to Spring Cloud Finchley & Spring Boot 2.0.x. JDK 1.8 or later versions are supported.\n* **1.x branch**: Corresponds to Spring Cloud Edgware & Spring Boot 1.x, JDK 1.7 or later versions are supported.\n\nSpring Cloud uses Maven for most build-related activities, and you should be able to get off the ground quite quickly by cloning the project you are interested in and typing:\n```bash\n./mvnw install\n```\n\n## How to Use\n\n### Add maven dependency \n\nThese artifacts are available from Maven Central and Spring Release repository via BOM:\n```xml\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>com.alibaba.cloud</groupId>\n            <artifactId>spring-cloud-alibaba-dependencies</artifactId>\n            <version>2023.0.1.0</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n```\nadd the module in  `dependencies`. If you want to choose an older version, you can refer to the [Release Notes](https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E).\n\n## Examples\n\nA `spring-cloud-alibaba-examples` module is included in our project for you to get started with Spring Cloud Alibaba quickly. It contains an example, and you can refer to the readme file in the example project for a quick walkthrough.\n\nExamples\uff1a\n\n[Sentinel Example](https://github.com/alibaba/spring-cloud-alibaba/tree/2023.x/spring-cloud-alibaba-examples/sentinel-example/sentinel-core-example/readme.md)\n\n[Nacos Example](https://github.com/alibaba/spring-cloud-alibaba/blob/2023.x/spring-cloud-alibaba-examples/nacos-example/readme.md)\n\n[RocketMQ Example](https://github.com/alibaba/spring-cloud-alibaba/blob/2023.x/spring-cloud-alibaba-examples/rocketmq-example/readme.md)\n\n[Alibaba Cloud OSS Example](https://github.com/alibaba/aliyun-spring-boot/tree/master/aliyun-spring-boot-samples/aliyun-oss-spring-boot-sample)\n\n## Version control guidelines\nThe version number of the project is in the form of x.x.x, where x is a number, starting from 0, and is not limited to the range 0~9. When the project is in the incubator phase, the version number is 0.x.x.\n\nAs the interfaces and annotations of Spring Boot 1 and Spring Boot 2 have been changed significantly in the Actuator module, and spring-cloud-commons is also changed quite a lot from 1.x.x to 2.0.0, we take the same version rule as SpringBoot version number.\n\n* 1.5.x for Spring Boot 1.5.x\n* 2.0.x for Spring Boot 2.0.x\n* 2.1.x for Spring Boot 2.1.x\n* 2.2.x for Spring Boot 2.2.x\n* 2020.x for Spring Boot 2.4.x\n* 2021.x for Spring Boot 2.6.x\n* 2022.x for Spring Boot 3.0.x\n* 2023.x for Spring Boot 3.2.x\n\n## Code of Conduct\nThis project is a sub-project of Spring Cloud, it adheres to the Contributor Covenant [code of conduct](https://sca.aliyun.com/en-us/community/developer/contributor-guide/new-contributor-guide_dev/). By participating, you are expected to uphold this code. Please report unacceptable behavior to spring-code-of-conduct@pivotal.io.\n\n## Code Conventions and Housekeeping\nNone of these is essential for a pull request, but they will all help. They can also be added after the original pull request but before a merge.\n\nUse the Spring Framework code format conventions. If you use Eclipse you can import formatter settings using the eclipse-code-formatter.xml file from the Spring Cloud Build project. If using IntelliJ, you can use the Eclipse Code Formatter Plugin to import the same file.\n\nMake sure all new .java files to have a simple Javadoc class comment with at least an @author tag identifying you, and preferably at least a paragraph on what the class is for.\n\nAdd the ASF license header comment to all new .java files (copy from existing files in the project)\n\nAdd yourself as an @author to the .java files that you modify substantially (more than cosmetic changes).\n\nAdd some Javadocs and, if you change the namespace, some XSD doc elements.\n\nA few unit tests would help a lot as well\u2009\u2014\u2014\u2009someone has to do it.\n\nIf no-one else is using your branch, please rebase it against the current 2023.x (or other target branch in the main project).\n\nWhen writing a commit message please follow these conventions, if you are fixing an existing issue please add Fixes gh-XXXX at the end of the commit message (where XXXX is the issue number).\n\n## Contact Us\nMailing list is recommended for discussing almost anything related to spring-cloud-alibaba. \n\nspring-cloud-alibaba@googlegroups.com: You can ask questions here if you encounter any problem when using or developing spring-cloud-alibaba.\n",
        "releases": [
            {
                "name": "2022.0.0.2",
                "date": "2024-12-12T02:08:13Z"
            },
            {
                "name": "2023.0.3.2",
                "date": "2024-12-12T02:07:20Z"
            },
            {
                "name": "2021.0.6.2",
                "date": "2024-12-12T02:09:08Z"
            },
            {
                "name": "2.2.11",
                "date": "2024-12-12T02:10:18Z"
            },
            {
                "name": "2023.0.1.3",
                "date": "2024-10-28T09:47:16Z"
            },
            {
                "name": "2023.0.1.2",
                "date": "2024-07-16T02:30:36Z"
            },
            {
                "name": "2021.0.6.1",
                "date": "2024-07-09T08:33:09Z"
            },
            {
                "name": "2.2.10",
                "date": "2024-07-09T08:35:07Z"
            },
            {
                "name": "2023.0.1.0",
                "date": "2024-04-24T06:40:05Z"
            },
            {
                "name": "2023.0.0.0-RC1",
                "date": "2024-02-26T02:36:25Z"
            },
            {
                "name": "2021.0.6.0",
                "date": "2024-02-02T01:55:42Z"
            },
            {
                "name": "2.2.10-RC2",
                "date": "2024-02-02T01:56:08Z"
            },
            {
                "name": "2022.0.0.0",
                "date": "2023-07-26T16:20:19Z"
            },
            {
                "name": "2022.0.0.0-RC2",
                "date": "2023-04-27T15:19:57Z"
            },
            {
                "name": "2021.0.5.0",
                "date": "2023-03-23T06:57:55Z"
            },
            {
                "name": "2.2.10-RC1",
                "date": "2023-01-12T09:35:12Z"
            },
            {
                "name": "2022.0.0.0-RC1",
                "date": "2022-12-22T15:47:05Z"
            },
            {
                "name": "2021.0.4.0",
                "date": "2022-09-15T08:57:51Z"
            },
            {
                "name": "2.2.9.RELEASE",
                "date": "2022-09-15T10:06:53Z"
            },
            {
                "name": "2.2.8.RELEASE",
                "date": "2022-06-24T04:06:03Z"
            },
            {
                "name": "2021.0.1.0",
                "date": "2022-02-28T02:35:03Z"
            },
            {
                "name": "2.2.7.RELEASE",
                "date": "2021-12-02T07:00:49Z"
            },
            {
                "name": "2.2.6.RELEASE",
                "date": "2021-07-12T01:55:13Z"
            },
            {
                "name": "2.2.6.RC1",
                "date": "2021-07-05T09:20:29Z"
            },
            {
                "name": "2021.1",
                "date": "2021-04-09T02:07:00Z"
            },
            {
                "name": "2.2.5-RocketMQ-RC1",
                "date": "2021-04-09T07:46:00Z"
            },
            {
                "name": "2020.0.RC1",
                "date": "2021-03-22T02:36:19Z"
            },
            {
                "name": "2.0.4.RELEASE",
                "date": "2021-03-22T02:04:45Z"
            },
            {
                "name": "2.1.4.RELEASE",
                "date": "2021-03-22T02:03:23Z"
            },
            {
                "name": "2.2.5.RELEASE",
                "date": "2021-02-01T02:09:17Z"
            },
            {
                "name": "2.2.4.RELEASE",
                "date": "2021-01-17T11:34:47Z"
            },
            {
                "name": "v.2.0.3.RELEASE",
                "date": "2020-09-22T02:09:31Z"
            },
            {
                "name": "v.2.1.3.RELEASE",
                "date": "2020-09-18T15:38:59Z"
            },
            {
                "name": "v2.2.3.RELEASE",
                "date": "2020-09-18T02:12:01Z"
            },
            {
                "name": "v2.2.2.RELEASE",
                "date": "2020-09-12T09:43:08Z"
            },
            {
                "name": "v.2.0.2.RELEASE",
                "date": "2020-04-15T02:39:42Z"
            },
            {
                "name": "v.2.1.2.RELEASE",
                "date": "2020-04-14T12:31:22Z"
            },
            {
                "name": "v2.2.1.RELEASE",
                "date": "2020-04-13T03:09:48Z"
            },
            {
                "name": "v2.2.0.RELEASE",
                "date": "2020-02-12T01:35:53Z"
            },
            {
                "name": "v2.1.1.RELEASE",
                "date": "2019-11-15T12:15:26Z"
            },
            {
                "name": "v2.0.1.RELEASE",
                "date": "2019-11-16T02:45:06Z"
            },
            {
                "name": "v1.5.1.RELEASE",
                "date": "2019-11-15T06:23:11Z"
            },
            {
                "name": "",
                "date": "2019-08-01T09:26:56Z"
            },
            {
                "name": "",
                "date": "2019-08-01T15:39:56Z"
            },
            {
                "name": "",
                "date": "2019-08-01T17:19:19Z"
            },
            {
                "name": "",
                "date": "2019-04-22T06:01:59Z"
            },
            {
                "name": "",
                "date": "2018-12-21T16:15:51Z"
            }
        ]
    }
}