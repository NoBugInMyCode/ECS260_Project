{
    "https://api.github.com/repos/PRQL/prql": {
        "forks": 222,
        "watchers": 10053,
        "stars": 10053,
        "languages": {
            "Rust": 1126708,
            "JavaScript": 49968,
            "CSS": 32999,
            "HTML": 25686,
            "Elixir": 12768,
            "C#": 12508,
            "PHP": 12217,
            "Java": 11606,
            "TypeScript": 8176,
            "C": 6540,
            "C++": 5070,
            "Python": 5004,
            "Zig": 4477,
            "Shell": 3744,
            "Nix": 2882,
            "Makefile": 1077,
            "Dockerfile": 775,
            "Handlebars": 292
        },
        "commits": [
            "2025-01-22T06:28:31Z",
            "2025-01-21T03:07:28Z",
            "2025-01-20T18:52:45Z",
            "2025-01-20T18:37:20Z",
            "2025-01-20T17:12:02Z",
            "2025-01-16T17:49:40Z",
            "2025-01-16T17:41:23Z",
            "2025-01-14T18:10:00Z",
            "2025-01-13T18:56:27Z",
            "2025-01-13T18:32:57Z",
            "2025-01-13T17:17:18Z",
            "2025-01-13T07:09:19Z",
            "2025-01-12T06:36:51Z",
            "2025-01-06T18:44:43Z",
            "2025-01-06T17:57:07Z",
            "2025-01-06T17:57:02Z",
            "2025-01-06T17:56:21Z",
            "2025-01-05T01:12:12Z",
            "2024-12-31T18:09:02Z",
            "2024-12-30T18:24:05Z",
            "2024-12-24T17:25:28Z",
            "2024-12-23T18:28:06Z",
            "2024-12-23T17:17:30Z",
            "2024-12-21T16:46:37Z",
            "2024-12-20T17:37:07Z",
            "2024-12-20T17:28:39Z",
            "2024-12-19T15:45:34Z",
            "2024-12-18T18:05:46Z",
            "2024-12-16T17:14:17Z",
            "2024-12-09T20:23:50Z"
        ],
        "creation_date": "2022-01-18T00:37:55Z",
        "contributors": 30,
        "topics": [
            "data",
            "pipeline",
            "sql"
        ],
        "subscribers": 44,
        "readme": "# PRQL\n\n<!-- User badges on first line (language docs & chat) -->\n\n<!-- Discord online count is blocked rate limits, can try swapping back [![Discord](https://img.shields.io/discord/936728116712316989?label=discord%20chat&style=for-the-badge)](https://discord.gg/eQcfaCmsNc) -->\n<!-- Twitter followers doesn't work, but leaving the badge there -->\n\n[![Website](https://img.shields.io/badge/INTRO-WEB-blue?style=for-the-badge)](https://prql-lang.org)\n[![Playground](https://img.shields.io/badge/INTRO-PLAYGROUND-blue?style=for-the-badge)](https://prql-lang.org/playground)\n[![Language Docs](https://img.shields.io/badge/DOCS-BOOK-blue?style=for-the-badge)](https://prql-lang.org/book)\n[![Discord](https://img.shields.io/badge/DISCORD-CHAT-indigo?style=for-the-badge&logo=discord)](https://discord.gg/eQcfaCmsNc)\n[![Twitter](https://img.shields.io/twitter/follow/prql_lang?color=%231DA1F2&style=for-the-badge&logo=x)](https://twitter.com/prql_lang)\n\n<!-- Dev badges on second line -->\n\n[![GitHub CI Status](https://img.shields.io/github/actions/workflow/status/prql/prql/tests.yaml?event=push&branch=main&logo=github&style=for-the-badge)](https://github.com/PRQL/prql/actions?query=branch%3Amain+workflow%3Atests)\n[![GitHub contributors](https://img.shields.io/github/contributors/PRQL/prql?style=for-the-badge&logo=github)](https://github.com/PRQL/prql/graphs/contributors)\n[![Stars](https://img.shields.io/github/stars/PRQL/prql?style=for-the-badge&logo=github)](https://github.com/PRQL/prql/stargazers)\n\n**P**ipelined **R**elational **Q**uery **L**anguage, pronounced \"Prequel\".\n\nPRQL is a modern language for transforming data \u2014 a simple, powerful, pipelined\nSQL replacement. Like SQL, it's readable, explicit and declarative. Unlike SQL,\nit forms a logical pipeline of transformations, and supports abstractions such\nas variables and functions. It can be used with any database that uses SQL,\nsince it compiles to SQL.\n\nPRQL can be as simple as:\n\n```elm\nfrom tracks\nfilter artist == \"Bob Marley\"                 # Each line transforms the previous result\naggregate {                                   # `aggregate` reduces each column to a value\n  plays    = sum plays,\n  longest  = max length,\n  shortest = min length,                      # Trailing commas are allowed\n}\n```\n\nHere's a larger example of the language:\n\n```elm\nfrom employees\nfilter start_date > @2021-01-01               # Clear date syntax\nderive {                                      # `derive` adds columns / variables\n  gross_salary = salary + (tax ?? 0),         # Terse coalesce\n  gross_cost = gross_salary + benefits_cost,  # Variables can use other variables\n}\nfilter gross_cost > 0\ngroup {title, country} (                      # `group` runs a pipeline over each group\n  aggregate {                                 # `aggregate` reduces each group to a value\n    average gross_salary,\n    sum_gross_cost = sum gross_cost,          # `=` sets a column name\n  }\n)\nfilter sum_gross_cost > 100_000               # `filter` replaces both of SQL's `WHERE` & `HAVING`\nderive id = f\"{title}_{country}\"              # F-strings like Python\nderive country_code = s\"LEFT(country, 2)\"     # S-strings allow using SQL as an escape hatch\nsort {sum_gross_cost, -country}               # `-country` means descending order\ntake 1..20                                    # Range expressions (also valid here as `take 20`)\n```\n\nFor more on the language, more examples & comparisons with SQL, visit\n[prql-lang.org][prql website]. To experiment with PRQL in the browser, check out\n[PRQL Playground][prql playground].\n\n## Current Status - October 2024\n\nPRQL is being actively developed by a growing community. It's ready to use by\nthe intrepid, either with our supported integrations, or within your own tools,\nusing one of our supported language bindings.\n\nPRQL still has some bugs and some missing features, and is probably only ready\nto be rolled out to non-technical teams for fairly simple queries.\n\nIn particular, we're working on a new resolver, which will let us squash many\nbugs and simplify our code a lot. It'll also let us scale the language without\nscaling the complexity of the compiler.\n\nWhile we work on that, we're also focusing on\n\n- Ensuring our supported features feel extremely robust; resolving any\n  [priority bugs](https://github.com/PRQL/prql/issues?q=is%3Aissue+is%3Aopen+label%3Abug+label%3Apriority).\n  As more folks have started using PRQL, we've had more bug reports \u2014 good news,\n  but also gives us more to work on.\n- Filling remaining feature gaps, so that PRQL is possible to use for almost all\n  standard SQL queries.\n- Expanding our set of supported features \u2014 we are working to add experimental\n  support for modules / multi-file projects, and for auto-formatting.\n\nWe're also spending time thinking about:\n\n- Making it really easy to start using PRQL. We're doing that by building\n  integrations with tools that folks already use; for example a VS Code\n  extension, Jupyter integration, and the recent\n  [QStudio](https://www.timestored.com/qstudio/prql-ide) integration. If there\n  are tools you're familiar with that you think would be open to integrating\n  with PRQL, please let us know in an issue.\n- Whether all our initial decisions were correct \u2014\u00a0for example\n  [how we handle window functions outside of a `window` transform](https://github.com/PRQL/prql/issues/2723).\n- Making it easier to contribute to the compiler. We have a wide group of\n  contributors to the project, but contributions to the compiler itself are\n  quite concentrated. We're keen to expand this;\n  [#1840](https://github.com/PRQL/prql/issues/1840) for feedback, some\n  suggestions on starter issues are below.\n\n## Get involved\n\nTo stay in touch with PRQL:\n\n- Follow us on [Twitter](https://twitter.com/prql_lang)\n- Join us on [Discord](https://discord.gg/eQcfaCmsNc)\n- Star this repo\n- [Contribute][contributing] \u2014\u00a0join us in building PRQL, through writing code\n  [(send us your use-cases!)](https://github.com/PRQL/prql/discussions), or\n  inspiring others to use it.\n- See the [development][development] documentation for PRQL. It's easy to get\n  started \u2014 the project can be built in a couple of commands, and we're a really\n  friendly community!\n- For those who might be interested in contributing to the code now, check out\n  issues with the\n  [good first issue](https://github.com/PRQL/prql/labels/good%20first%20issue)\n  label. Always feel free to ask questions or open a draft PR.\n\n## Explore\n\n- [PRQL Playground][prql playground] \u2014\u00a0experiment with PRQL in the browser.\n- [PRQL Book][prql book] \u2014 the language documentation.\n- [Jupyter magic](https://pyprql.readthedocs.io/en/latest/magic_readme.html) \u2014\n  run PRQL in Jupyter, either against a DB, or a Pandas DataFrame / CSV /\n  Parquet file through DuckDB.\n- [pyprql Docs](https://pyprql.readthedocs.io) \u2014 the pyprql documentation, the\n  Python bindings to PRQL, including Jupyter magic.\n- [PRQL VS Code extension](https://marketplace.visualstudio.com/items?itemName=prql-lang.prql-vscode)\n- [prqlc-js](https://www.npmjs.com/package/prqlc) \u2014\u00a0JavaScript bindings for\n  PRQL.\n\n## Repo organization\n\nThis repo is composed of:\n\n- **[prqlc](./prqlc/)** \u2014 the compiler, written in rust, whose main role is to\n  compile PRQL into SQL. Also contains the CLI and bindings from various\n  languages.\n- **[web](./web/)** \u2014 our web content: the [Book][prql book],\n  [Website][prql website], and [Playground][prql playground].\n\nIt also contains our testing / CI infrastructure and development tools. Check\nout our [development docs][development] for more details.\n\n## Contributors\n\nMany thanks to those who've made our progress possible:\n\n[![Contributors](https://contrib.rocks/image?repo=PRQL/prql)](https://github.com/PRQL/prql/graphs/contributors)\n\n[prql book]: https://prql-lang.org/book\n[prql website]: https://prql-lang.org\n[contributing]: https://prql-lang.org/book/project/contributing/\n[development]: https://prql-lang.org/book/project/contributing/development.html\n[prql playground]: https://prql-lang.org/playground\n",
        "releases": [
            {
                "name": "0.13.2",
                "date": "2024-10-11T23:20:37Z"
            },
            {
                "name": "0.13.1",
                "date": "2024-10-11T16:40:51Z"
            },
            {
                "name": "0.13.0",
                "date": "2024-07-25T17:27:49Z"
            },
            {
                "name": "0.12.2",
                "date": "2024-06-10T06:31:48Z"
            },
            {
                "name": "0.12.1",
                "date": "2024-06-09T01:03:15Z"
            },
            {
                "name": "0.12.0",
                "date": "2024-06-08T23:14:52Z"
            },
            {
                "name": "0.11.4",
                "date": "2024-02-26T04:45:25Z"
            },
            {
                "name": "0.11.3",
                "date": "2024-02-11T03:46:56Z"
            },
            {
                "name": "0.11.2",
                "date": "2024-02-08T00:36:10Z"
            },
            {
                "name": "0.11.1",
                "date": "2023-12-26T17:53:48Z"
            },
            {
                "name": "0.11.0",
                "date": "2023-12-20T01:39:26Z"
            },
            {
                "name": "0.10.1",
                "date": "2023-11-14T11:34:01Z"
            },
            {
                "name": "0.10.0",
                "date": "2023-10-26T20:02:07Z"
            },
            {
                "name": "0.9.5",
                "date": "2023-09-17T03:05:24Z"
            },
            {
                "name": "0.9.4",
                "date": "2023-08-23T22:51:51Z"
            },
            {
                "name": "0.9.3",
                "date": "2023-08-02T18:48:24Z"
            },
            {
                "name": "0.9.2",
                "date": "2023-07-25T21:04:33Z"
            },
            {
                "name": "0.9.1",
                "date": "2023-07-25T17:58:53Z"
            },
            {
                "name": "0.9.0",
                "date": "2023-07-25T05:44:55Z"
            },
            {
                "name": "0.8.1",
                "date": "2023-04-30T02:20:14Z"
            },
            {
                "name": "0.8.0",
                "date": "2023-04-14T22:29:05Z"
            },
            {
                "name": "0.7.1",
                "date": "2023-04-04T05:53:36Z"
            },
            {
                "name": "0.7.0",
                "date": "2023-04-02T00:53:50Z"
            },
            {
                "name": "0.6.1",
                "date": "2023-03-13T06:24:16Z"
            },
            {
                "name": "0.6.0",
                "date": "2023-03-09T06:34:36Z"
            },
            {
                "name": "0.5.2",
                "date": "2023-02-19T02:33:56Z"
            },
            {
                "name": "0.5.1",
                "date": "2023-02-17T19:56:08Z"
            },
            {
                "name": "0.5.0",
                "date": "2023-02-09T02:44:58Z"
            },
            {
                "name": "0.4.2",
                "date": "2023-01-26T05:10:51Z"
            },
            {
                "name": "0.4.1",
                "date": "2023-01-19T06:06:34Z"
            },
            {
                "name": "0.4.0",
                "date": "2023-01-16T04:50:28Z"
            },
            {
                "name": "0.3.1",
                "date": "2022-12-04T00:53:24Z"
            },
            {
                "name": "0.3.0",
                "date": "2022-11-30T07:18:17Z"
            },
            {
                "name": "0.2.11",
                "date": "2022-11-20T23:30:57Z"
            },
            {
                "name": "0.2.9",
                "date": "2022-10-14T17:51:06Z"
            },
            {
                "name": "",
                "date": "2022-10-11T01:12:48Z"
            },
            {
                "name": "0.2.7",
                "date": "2022-09-17T22:58:37Z"
            },
            {
                "name": "0.2.6",
                "date": "2022-08-06T03:25:26Z"
            },
            {
                "name": "0.2.5",
                "date": "2022-07-29T20:49:13Z"
            },
            {
                "name": "0.2.4",
                "date": "2022-07-28T18:40:58Z"
            },
            {
                "name": "0.2.3",
                "date": "2022-07-25T05:24:58Z"
            },
            {
                "name": "0.2.2",
                "date": "2022-07-10T22:10:15Z"
            },
            {
                "name": "0.2.0",
                "date": "2022-06-27T16:49:29Z"
            },
            {
                "name": "0.1.1",
                "date": "2022-04-02T22:22:21Z"
            },
            {
                "name": "0.1.0",
                "date": "2022-03-21T06:38:57Z"
            }
        ]
    }
}