{
    "https://api.github.com/repos/markdown-it/markdown-it": {
        "forks": 1722,
        "watchers": 18737,
        "stars": 18737,
        "languages": {
            "JavaScript": 217005,
            "HTML": 3868,
            "CSS": 2597
        },
        "commits": [
            "2024-03-18T23:10:30Z",
            "2024-03-13T05:53:45Z",
            "2024-03-02T21:45:42Z",
            "2024-03-02T20:20:57Z",
            "2024-03-02T19:40:09Z",
            "2024-03-02T19:33:58Z",
            "2024-03-02T19:31:42Z",
            "2024-03-01T23:08:23Z",
            "2024-03-01T23:00:44Z",
            "2024-03-01T19:49:38Z",
            "2024-03-01T20:30:03Z",
            "2024-01-06T17:22:37Z",
            "2023-12-11T20:07:30Z",
            "2023-12-08T02:31:35Z",
            "2023-12-08T02:27:37Z",
            "2023-12-08T02:19:55Z",
            "2023-12-08T01:24:17Z",
            "2023-12-08T01:11:12Z",
            "2023-12-08T00:02:17Z",
            "2023-12-07T14:33:23Z",
            "2023-12-07T13:59:32Z",
            "2023-12-06T04:24:51Z",
            "2023-12-02T02:25:52Z",
            "2023-12-02T02:13:38Z",
            "2023-12-02T02:06:39Z",
            "2023-12-02T00:53:45Z",
            "2023-12-02T00:44:05Z",
            "2023-12-01T22:19:52Z",
            "2023-12-01T22:02:05Z",
            "2023-12-01T21:03:28Z"
        ],
        "creation_date": "2014-12-19T22:54:53Z",
        "contributors": 30,
        "topics": [
            "commonmark",
            "javascript",
            "markdown"
        ],
        "subscribers": 177,
        "readme": "# markdown-it <!-- omit in toc -->\n\n[![CI](https://github.com/markdown-it/markdown-it/actions/workflows/ci.yml/badge.svg)](https://github.com/markdown-it/markdown-it/actions/workflows/ci.yml)\n[![NPM version](https://img.shields.io/npm/v/markdown-it.svg?style=flat)](https://www.npmjs.org/package/markdown-it)\n[![Coverage Status](https://coveralls.io/repos/markdown-it/markdown-it/badge.svg?branch=master&service=github)](https://coveralls.io/github/markdown-it/markdown-it?branch=master)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/markdown-it/markdown-it)\n\n> Markdown parser done right. Fast and easy to extend.\n\n__[Live demo](https://markdown-it.github.io)__\n\n- Follows the __[CommonMark spec](http://spec.commonmark.org/)__ + adds syntax extensions & sugar (URL autolinking, typographer).\n- Configurable syntax! You can add new rules and even replace existing ones.\n- High speed.\n- [Safe](https://github.com/markdown-it/markdown-it/tree/master/docs/security.md) by default.\n- Community-written __[plugins](https://www.npmjs.org/browse/keyword/markdown-it-plugin)__ and [other packages](https://www.npmjs.org/browse/keyword/markdown-it) on npm.\n\n__Table of content__\n\n- [Install](#install)\n- [Usage examples](#usage-examples)\n  - [Simple](#simple)\n  - [Init with presets and options](#init-with-presets-and-options)\n  - [Plugins load](#plugins-load)\n  - [Syntax highlighting](#syntax-highlighting)\n  - [Linkify](#linkify)\n- [API](#api)\n- [Syntax extensions](#syntax-extensions)\n  - [Manage rules](#manage-rules)\n- [Benchmark](#benchmark)\n- [markdown-it for enterprise](#markdown-it-for-enterprise)\n- [Authors](#authors)\n- [References / Thanks](#references--thanks)\n\n## Install\n\n**node.js**:\n\n```bash\nnpm install markdown-it\n```\n\n**browser (CDN):**\n\n- [jsDeliver CDN](http://www.jsdelivr.com/#!markdown-it \"jsDelivr CDN\")\n- [cdnjs.com CDN](https://cdnjs.com/libraries/markdown-it \"cdnjs.com\")\n\n\n## Usage examples\n\nSee also:\n\n- __[API documentation](https://markdown-it.github.io/markdown-it/)__ - for more\n  info and examples.\n- [Development info](https://github.com/markdown-it/markdown-it/tree/master/docs) -\n  for plugins writers.\n\n\n### Simple\n\n```js\n// node.js\n// can use `require('markdown-it')` for CJS\nimport markdownit from 'markdown-it'\nconst md = markdownit()\nconst result = md.render('# markdown-it rulezz!');\n\n// browser with UMD build, added to \"window\" on script load\n// Note, there is no dash in \"markdownit\".\nconst md = window.markdownit();\nconst result = md.render('# markdown-it rulezz!');\n```\n\nSingle line rendering, without paragraph wrap:\n\n```js\nimport markdownit from 'markdown-it'\nconst md = markdownit()\nconst result = md.renderInline('__markdown-it__ rulezz!');\n```\n\n\n### Init with presets and options\n\n(*) presets define combinations of active rules and options. Can be\n`\"commonmark\"`, `\"zero\"` or `\"default\"` (if skipped). See\n[API docs](https://markdown-it.github.io/markdown-it/#MarkdownIt.new) for more details.\n\n```js\nimport markdownit from 'markdown-it'\n\n// commonmark mode\nconst md = markdownit('commonmark')\n\n// default mode\nconst md = markdownit()\n\n// enable everything\nconst md = markdownit({\n  html: true,\n  linkify: true,\n  typographer: true\n})\n\n// full options list (defaults)\nconst md = markdownit({\n  // Enable HTML tags in source\n  html:         false,\n\n  // Use '/' to close single tags (<br />).\n  // This is only for full CommonMark compatibility.\n  xhtmlOut:     false,\n\n  // Convert '\\n' in paragraphs into <br>\n  breaks:       false,\n\n  // CSS language prefix for fenced blocks. Can be\n  // useful for external highlighters.\n  langPrefix:   'language-',\n\n  // Autoconvert URL-like text to links\n  linkify:      false,\n\n  // Enable some language-neutral replacement + quotes beautification\n  // For the full list of replacements, see https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs\n  typographer:  false,\n\n  // Double + single quotes replacement pairs, when typographer enabled,\n  // and smartquotes on. Could be either a String or an Array.\n  //\n  // For example, you can use '\u00ab\u00bb\u201e\u201c' for Russian, '\u201e\u201c\u201a\u2018' for German,\n  // and ['\u00ab\\xA0', '\\xA0\u00bb', '\u2039\\xA0', '\\xA0\u203a'] for French (including nbsp).\n  quotes: '\u201c\u201d\u2018\u2019',\n\n  // Highlighter function. Should return escaped HTML,\n  // or '' if the source string is not changed and should be escaped externally.\n  // If result starts with <pre... internal wrapper is skipped.\n  highlight: function (/*str, lang*/) { return ''; }\n});\n```\n\n### Plugins load\n\n```js\nimport markdownit from 'markdown-it'\n\nconst md = markdownit\n  .use(plugin1)\n  .use(plugin2, opts, ...)\n  .use(plugin3);\n```\n\n\n### Syntax highlighting\n\nApply syntax highlighting to fenced code blocks with the `highlight` option:\n\n```js\nimport markdownit from 'markdown-it'\nimport hljs from 'highlight.js' // https://highlightjs.org\n\n// Actual default values\nconst md = markdownit({\n  highlight: function (str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return hljs.highlight(str, { language: lang }).value;\n      } catch (__) {}\n    }\n\n    return ''; // use external default escaping\n  }\n});\n```\n\nOr with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n\n```js\nimport markdownit from 'markdown-it'\nimport hljs from 'highlight.js' // https://highlightjs.org\n\n// Actual default values\nconst md = markdownit({\n  highlight: function (str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return '<pre><code class=\"hljs\">' +\n               hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n               '</code></pre>';\n      } catch (__) {}\n    }\n\n    return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n  }\n});\n```\n\n### Linkify\n\n`linkify: true` uses [linkify-it](https://github.com/markdown-it/linkify-it). To\nconfigure linkify-it, access the linkify instance through `md.linkify`:\n\n```js\nmd.linkify.set({ fuzzyEmail: false });  // disables converting email to link\n```\n\n\n## API\n\n__[API documentation](https://markdown-it.github.io/markdown-it/)__\n\nIf you are going to write plugins, please take a look at\n[Development info](https://github.com/markdown-it/markdown-it/tree/master/docs).\n\n\n## Syntax extensions\n\nEmbedded (enabled by default):\n\n- [Tables](https://help.github.com/articles/organizing-information-with-tables/) (GFM)\n- [Strikethrough](https://help.github.com/articles/basic-writing-and-formatting-syntax/#styling-text) (GFM)\n\nVia plugins:\n\n- [subscript](https://github.com/markdown-it/markdown-it-sub)\n- [superscript](https://github.com/markdown-it/markdown-it-sup)\n- [footnote](https://github.com/markdown-it/markdown-it-footnote)\n- [definition list](https://github.com/markdown-it/markdown-it-deflist)\n- [abbreviation](https://github.com/markdown-it/markdown-it-abbr)\n- [emoji](https://github.com/markdown-it/markdown-it-emoji)\n- [custom container](https://github.com/markdown-it/markdown-it-container)\n- [insert](https://github.com/markdown-it/markdown-it-ins)\n- [mark](https://github.com/markdown-it/markdown-it-mark)\n- ... and [others](https://www.npmjs.org/browse/keyword/markdown-it-plugin)\n\n\n### Manage rules\n\nBy default all rules are enabled, but can be restricted by options. On plugin\nload all its rules are enabled automatically.\n\n```js\nimport markdownit from 'markdown-it'\n\n// Activate/deactivate rules, with currying\nconst md = markdownit()\n  .disable(['link', 'image'])\n  .enable(['link'])\n  .enable('image');\n\n// Enable everything\nconst md = markdownit({\n  html: true,\n  linkify: true,\n  typographer: true,\n});\n```\n\nYou can find all rules in sources:\n\n- [`parser_core.mjs`](lib/parser_core.mjs)\n- [`parser_block.mjs`](lib/parser_block.mjs)\n- [`parser_inline.mjs`](lib/parser_inline.mjs)\n\n\n## Benchmark\n\nHere is the result of readme parse at MB Pro Retina 2013 (2.4 GHz):\n\n```bash\nnpm run benchmark-deps\nbenchmark/benchmark.mjs readme\n\nSelected samples: (1 of 28)\n > README\n\nSample: README.md (7774 bytes)\n > commonmark-reference x 1,222 ops/sec \u00b10.96% (97 runs sampled)\n > current x 743 ops/sec \u00b10.84% (97 runs sampled)\n > current-commonmark x 1,568 ops/sec \u00b10.84% (98 runs sampled)\n > marked x 1,587 ops/sec \u00b14.31% (93 runs sampled)\n```\n\n__Note.__ CommonMark version runs with [simplified link normalizers](https://github.com/markdown-it/markdown-it/blob/master/benchmark/implementations/current-commonmark/index.mjs)\nfor more \"honest\" compare. Difference is \u22481.5\u00d7.\n\nAs you can see, `markdown-it` doesn't pay with speed for its flexibility.\nSlowdown of \"full\" version caused by additional features not available in\nother implementations.\n\n\n## markdown-it for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of `markdown-it` and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-markdown-it?utm_source=npm-markdown-it&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n\n## Authors\n\n- Alex Kocharin [github/rlidwka](https://github.com/rlidwka)\n- Vitaly Puzrin [github/puzrin](https://github.com/puzrin)\n\n_markdown-it_ is the result of the decision of the authors who contributed to\n99% of the _Remarkable_ code to move to a project with the same authorship but\nnew leadership (Vitaly and Alex). It's not a fork.\n\n## References / Thanks\n\nBig thanks to [John MacFarlane](https://github.com/jgm) for his work on the\nCommonMark spec and reference implementations. His work saved us a lot of time\nduring this project's development.\n\n**Related Links:**\n\n- https://github.com/jgm/CommonMark - reference CommonMark implementations in C & JS,\n  also contains latest spec & online demo.\n- http://talk.commonmark.org - CommonMark forum, good place to collaborate\n  developers' efforts.\n\n**Ports**\n\n- [motion-markdown-it](https://github.com/digitalmoksha/motion-markdown-it) - Ruby/RubyMotion\n- [markdown-it-py](https://github.com/ExecutableBookProject/markdown-it-py)- Python\n",
        "releases": []
    }
}