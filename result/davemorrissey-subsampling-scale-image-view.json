{
    "https://api.github.com/repos/davemorrissey/subsampling-scale-image-view": {
        "forks": 1206,
        "watchers": 7916,
        "stars": 7916,
        "languages": {
            "Java": 188051
        },
        "commits": [
            "2020-12-30T19:43:32Z",
            "2020-05-20T17:06:09Z",
            "2020-04-23T19:55:38Z",
            "2020-04-23T19:53:41Z",
            "2020-02-27T06:24:27Z",
            "2020-02-27T00:20:19Z",
            "2020-02-27T00:19:24Z",
            "2020-01-12T20:49:37Z",
            "2020-01-12T20:39:18Z",
            "2020-01-12T20:24:35Z",
            "2020-01-05T09:52:57Z",
            "2018-03-15T06:49:29Z",
            "2018-03-15T06:47:20Z",
            "2018-03-14T06:46:10Z",
            "2018-03-13T18:33:31Z",
            "2018-03-13T07:08:56Z",
            "2018-03-13T06:58:37Z",
            "2018-03-09T13:36:24Z",
            "2018-03-08T11:33:03Z",
            "2018-01-28T15:08:18Z",
            "2018-01-28T15:07:41Z",
            "2018-01-28T12:04:29Z",
            "2018-01-19T08:20:05Z",
            "2017-12-17T09:43:12Z",
            "2017-12-17T09:41:33Z",
            "2017-12-15T08:50:04Z",
            "2017-12-15T08:47:39Z",
            "2017-12-15T08:34:05Z",
            "2017-12-13T08:14:12Z",
            "2017-12-12T08:36:25Z"
        ],
        "creation_date": "2013-08-26T16:45:25Z",
        "contributors": 20,
        "topics": [
            "android",
            "android-lib",
            "android-library",
            "android-libs",
            "deep-zoom-images",
            "large-images",
            "pan",
            "scale",
            "zoom-gestures",
            "zoom-images"
        ],
        "subscribers": 206,
        "readme": "Subsampling Scale Image View\n===========================\n\nA custom image view for Android, designed for photo galleries and displaying huge images (e.g. maps and building plans) without `OutOfMemoryError`s. Includes pinch to zoom, panning, rotation and animation support, and allows easy extension so you can add your own overlays and touch event detection.\n\nThe view optionally uses subsampling and tiles to support very large images - a low resolution base layer is loaded and as you zoom in, it is overlaid with smaller high resolution tiles for the visible area. This avoids holding too much data in memory. It's ideal for displaying large images while allowing you to zoom in to the high resolution details. You can disable tiling for smaller images and when displaying a bitmap object. There are some advantages and disadvantages to disabling tiling so to decide which is best, see [the wiki](https://github.com/davemorrissey/subsampling-scale-image-view/wiki/02.-Displaying-images).\n\n#### Guides\n\n* [Releases & downloads](https://github.com/davemorrissey/subsampling-scale-image-view/releases)\n* [Installation and setup](https://github.com/davemorrissey/subsampling-scale-image-view/wiki/01.-Setup)\n* [Image display notes & limitations](https://github.com/davemorrissey/subsampling-scale-image-view/wiki/02.-Displaying-images)\n* [Using preview images](https://github.com/davemorrissey/subsampling-scale-image-view/wiki/03.-Preview-images)\n* [Handling orientation changes](https://github.com/davemorrissey/subsampling-scale-image-view/wiki/05.-Orientation-changes)\n* [Advanced configuration](https://github.com/davemorrissey/subsampling-scale-image-view/wiki/07.-Configuration)\n* [Event handling](https://github.com/davemorrissey/subsampling-scale-image-view/wiki/09.-Events)\n* [Animation](https://github.com/davemorrissey/subsampling-scale-image-view/wiki/08.-Animation)\n* [Extension](https://github.com/davemorrissey/subsampling-scale-image-view/wiki/10.-Extension)\n* [Reference (JavaDocs)](http://davemorrissey.github.io/subsampling-scale-image-view/javadoc/)\n\n#### Migration guides\n\nVersions 3.9.0, 3.8.0 and 3.0.0 contain breaking changes. Migration instructions can be found [in the wiki](https://github.com/davemorrissey/subsampling-scale-image-view/wiki/X.--Migration-guides).\n\n#### Download the sample app\n\n[![Get it on Google Play](docs/images/google_play.png)](https://play.google.com/store/apps/details?id=com.davemorrissey.labs.subscaleview.sample)\n\n[Kotlin Sample App on GitHub](https://github.com/davemorrissey/ssiv-kotlin-sample)\n\n#### Demo\n\n![Demo](docs/images/demo.gif)\n\n## Features\n\n#### Image display\n\n* Display images from assets, resources, the file system or bitmaps\n* Automatically rotate images from the file system (e.g. the camera or gallery) according to EXIF\n* Manually rotate images in 90\u00b0 increments\n* Display a region of the source image\n* Use a preview image while large images load\n* Swap images at runtime\n* Use a custom bitmap decoder\n\n*With tiling enabled:*\n\n* Display huge images, larger than can be loaded into memory\n* Show high resolution detail on zooming in\n* Tested up to 20,000x20,000px, though larger images are slower\n\n#### Gesture detection\n\n* One finger pan\n* Two finger pinch to zoom\n* Quick scale (one finger zoom)\n* Pan while zooming\n* Seamless switch between pan and zoom\n* Fling momentum after panning\n* Double tap to zoom in and out\n* Options to disable pan and/or zoom gestures\n\n#### Animation\n\n* Public methods for animating the scale and center\n* Customisable duration and easing\n* Optional uninterruptible animations\n\n#### Overridable event detection\n* Supports `OnClickListener` and `OnLongClickListener`\n* Supports interception of events using `GestureDetector` and `OnTouchListener`\n* Extend to add your own gestures\n\n#### Easy integration\n* Use within a `ViewPager` to create a photo gallery\n* Easily restore scale, center and orientation after screen rotation\n* Can be extended to add overlay graphics that move and scale with the image\n* Handles view resizing and `wrap_content` layout\n\n## Quick start\n\n**1)** Add this library as a dependency in your app's build.gradle file.\n\n```gradle\ndependencies {\n    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'\n}\n```\n\nIf your project uses AndroidX, change the artifact name as follows:\n\n```gradle\ndependencies {\n    implementation 'com.davemorrissey.labs:subsampling-scale-image-view-androidx:3.10.0'\n}\n```\n\n**2)** Add the view to your layout XML.\n\n```xml\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" >\n\n    <com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView\n        android:id=\"@+id/imageView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"/>\n\n</LinearLayout>\n```\n\n**3a)** Now, in your fragment or activity, set the image resource, asset name or file path.\n\n```java\nSubsamplingScaleImageView imageView = (SubsamplingScaleImageView)findViewById(id.imageView);\nimageView.setImage(ImageSource.resource(R.drawable.monkey));\n// ... or ...\nimageView.setImage(ImageSource.asset(\"map.png\"))\n// ... or ...\nimageView.setImage(ImageSource.uri(\"/sdcard/DCIM/DSCM00123.JPG\"));\n```\n\n**3b)** Or, if you have a `Bitmap` object in memory, load it into the view. This is unsuitable for large images because it bypasses subsampling - you may get an `OutOfMemoryError`.\n\n```java\nSubsamplingScaleImageView imageView = (SubsamplingScaleImageView)findViewById(id.imageView);\nimageView.setImage(ImageSource.bitmap(bitmap));\n```\n\n## Photo credits\n\n* San Martino by Luca Bravo, via [unsplash.com](https://unsplash.com/photos/lWAOc0UuJ-A)\n* Swiss Road by Ludovic Fremondiere, via [unsplash.com](https://unsplash.com/photos/3XN-BNRDUyY)\n\n## About\n\nCopyright 2018 David Morrissey, and licensed under the Apache License, Version 2.0. No attribution is necessary but it's very much appreciated. Star this project if you like it!\n",
        "releases": [
            {
                "name": "Improved Kotlin support",
                "date": "2018-03-15T06:53:22Z"
            },
            {
                "name": "Performance improvements",
                "date": "2017-12-02T09:26:09Z"
            },
            {
                "name": "Capped image quality, remaining pan, visible source area, SCALE_TYPE_START",
                "date": "2017-11-16T13:01:29Z"
            },
            {
                "name": "Restored build changes",
                "date": "2017-11-01T09:46:09Z"
            },
            {
                "name": "Reverted build changes",
                "date": "2017-10-25T20:20:17Z"
            },
            {
                "name": "Configurable bitmap type, minor fixes",
                "date": "2017-10-20T07:20:31Z"
            },
            {
                "name": "Improved zoom animation, configurable tile dimensions, pan and zoom listener, off-screen loading support",
                "date": "2016-11-05T19:20:48Z"
            },
            {
                "name": "Double tap zoom duration, animation listener, report OOMEs",
                "date": "2016-04-03T10:18:51Z"
            },
            {
                "name": "Bug fixes",
                "date": "2015-10-13T19:57:25Z"
            },
            {
                "name": "Use BitmapDecoder when possible",
                "date": "2015-10-03T21:59:41Z"
            },
            {
                "name": "Parallel image loading support, content URI EXIF rotation",
                "date": "2015-09-30T19:38:37Z"
            },
            {
                "name": "Cached bitmap flag, FloatMath replacement",
                "date": "2015-08-30T09:13:26Z"
            },
            {
                "name": "Error reporting and preview fixes",
                "date": "2015-06-14T16:59:42Z"
            },
            {
                "name": "Matrix rotation",
                "date": "2015-03-24T22:35:15Z"
            },
            {
                "name": "Reverted matrix tile rotation",
                "date": "2015-03-15T20:08:44Z"
            },
            {
                "name": "Tile size bug fix",
                "date": "2015-03-15T10:38:44Z"
            },
            {
                "name": "Matrix rotation, moir\u00e9 fix",
                "date": "2015-03-10T08:30:47Z"
            },
            {
                "name": "Preview images, combined classes, event listener, region",
                "date": "2015-03-08T21:59:12Z"
            },
            {
                "name": "Quick scale, improved padding support",
                "date": "2015-02-23T21:33:38Z"
            },
            {
                "name": "Custom decoder",
                "date": "2015-01-12T21:52:18Z"
            },
            {
                "name": "Improved view pager support",
                "date": "2015-01-09T00:09:21Z"
            }
        ]
    }
}