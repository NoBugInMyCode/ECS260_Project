{
    "https://api.github.com/repos/google/googletest": {
        "forks": 10233,
        "watchers": 35339,
        "stars": 35339,
        "languages": {
            "C++": 3118103,
            "Python": 241193,
            "Starlark": 36039,
            "CMake": 35229,
            "C": 32314,
            "Shell": 7422,
            "Batchfile": 1774
        },
        "commits": [
            "2025-01-16T20:50:32Z",
            "2025-01-15T17:16:21Z",
            "2025-01-09T18:42:28Z",
            "2025-01-08T14:37:41Z",
            "2024-12-26T23:30:16Z",
            "2024-12-23T21:32:38Z",
            "2024-12-16T16:39:37Z",
            "2024-12-11T15:59:35Z",
            "2024-12-10T19:22:24Z",
            "2024-11-20T17:37:33Z",
            "2024-11-15T15:19:57Z",
            "2024-11-04T15:25:46Z",
            "2024-11-01T01:03:18Z",
            "2024-10-28T06:56:39Z",
            "2024-10-16T13:39:05Z",
            "2024-10-14T17:12:38Z",
            "2024-10-05T03:53:30Z",
            "2024-10-01T16:32:16Z",
            "2024-09-16T21:48:46Z",
            "2024-08-29T15:16:49Z",
            "2024-08-01T13:34:07Z",
            "2024-07-30T20:17:08Z",
            "2024-07-30T16:02:44Z",
            "2024-07-24T15:07:22Z",
            "2024-07-24T02:43:05Z",
            "2024-07-23T10:56:40Z",
            "2024-07-21T06:08:58Z",
            "2024-07-16T13:57:41Z",
            "2024-07-16T13:56:59Z",
            "2024-07-16T12:22:04Z"
        ],
        "creation_date": "2015-07-28T15:07:53Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 1230,
        "readme": "# GoogleTest\n\n### Announcements\n\n#### Live at Head\n\nGoogleTest now follows the\n[Abseil Live at Head philosophy](https://abseil.io/about/philosophy#upgrade-support).\nWe recommend\n[updating to the latest commit in the `main` branch as often as possible](https://github.com/abseil/abseil-cpp/blob/master/FAQ.md#what-is-live-at-head-and-how-do-i-do-it).\nWe do publish occasional semantic versions, tagged with\n`v${major}.${minor}.${patch}` (e.g. `v1.15.2`).\n\n#### Documentation Updates\n\nOur documentation is now live on GitHub Pages at\nhttps://google.github.io/googletest/. We recommend browsing the documentation on\nGitHub Pages rather than directly in the repository.\n\n#### Release 1.15.2\n\n[Release 1.15.2](https://github.com/google/googletest/releases/tag/v1.15.2) is\nnow available.\n\nThe 1.15.x branch requires at least C++14.\n\n#### Continuous Integration\n\nWe use Google's internal systems for continuous integration.\n\n#### Coming Soon\n\n*   We are planning to take a dependency on\n    [Abseil](https://github.com/abseil/abseil-cpp).\n\n## Welcome to **GoogleTest**, Google's C++ test framework!\n\nThis repository is a merger of the formerly separate GoogleTest and GoogleMock\nprojects. These were so closely related that it makes sense to maintain and\nrelease them together.\n\n### Getting Started\n\nSee the [GoogleTest User's Guide](https://google.github.io/googletest/) for\ndocumentation. We recommend starting with the\n[GoogleTest Primer](https://google.github.io/googletest/primer.html).\n\nMore information about building GoogleTest can be found at\n[googletest/README.md](googletest/README.md).\n\n## Features\n\n*   xUnit test framework: \\\n    Googletest is based on the [xUnit](https://en.wikipedia.org/wiki/XUnit)\n    testing framework, a popular architecture for unit testing\n*   Test discovery: \\\n    Googletest automatically discovers and runs your tests, eliminating the need\n    to manually register your tests\n*   Rich set of assertions: \\\n    Googletest provides a variety of assertions, such as equality, inequality,\n    exceptions, and more, making it easy to test your code\n*   User-defined assertions: \\\n    You can define your own assertions with Googletest, making it simple to\n    write tests that are specific to your code\n*   Death tests: \\\n    Googletest supports death tests, which verify that your code exits in a\n    certain way, making it useful for testing error-handling code\n*   Fatal and non-fatal failures: \\\n    You can specify whether a test failure should be treated as fatal or\n    non-fatal with Googletest, allowing tests to continue running even if a\n    failure occurs\n*   Value-parameterized tests: \\\n    Googletest supports value-parameterized tests, which run multiple times with\n    different input values, making it useful for testing functions that take\n    different inputs\n*   Type-parameterized tests: \\\n    Googletest also supports type-parameterized tests, which run with different\n    data types, making it useful for testing functions that work with different\n    data types\n*   Various options for running tests: \\\n    Googletest provides many options for running tests including running\n    individual tests, running tests in a specific order and running tests in\n    parallel\n\n## Supported Platforms\n\nGoogleTest follows Google's\n[Foundational C++ Support Policy](https://opensource.google/documentation/policies/cplusplus-support).\nSee\n[this table](https://github.com/google/oss-policies-info/blob/main/foundational-cxx-support-matrix.md)\nfor a list of currently supported versions of compilers, platforms, and build\ntools.\n\n## Who Is Using GoogleTest?\n\nIn addition to many internal projects at Google, GoogleTest is also used by the\nfollowing notable projects:\n\n*   The [Chromium projects](https://www.chromium.org/) (behind the Chrome\n    browser and Chrome OS).\n*   The [LLVM](https://llvm.org/) compiler.\n*   [Protocol Buffers](https://github.com/google/protobuf), Google's data\n    interchange format.\n*   The [OpenCV](https://opencv.org/) computer vision library.\n\n## Related Open Source Projects\n\n[GTest Runner](https://github.com/nholthaus/gtest-runner) is a Qt5 based\nautomated test-runner and Graphical User Interface with powerful features for\nWindows and Linux platforms.\n\n[GoogleTest UI](https://github.com/ospector/gtest-gbar) is a test runner that\nruns your test binary, allows you to track its progress via a progress bar, and\ndisplays a list of test failures. Clicking on one shows failure text. GoogleTest\nUI is written in C#.\n\n[GTest TAP Listener](https://github.com/kinow/gtest-tap-listener) is an event\nlistener for GoogleTest that implements the\n[TAP protocol](https://en.wikipedia.org/wiki/Test_Anything_Protocol) for test\nresult output. If your test runner understands TAP, you may find it useful.\n\n[gtest-parallel](https://github.com/google/gtest-parallel) is a test runner that\nruns tests from your binary in parallel to provide significant speed-up.\n\n[GoogleTest Adapter](https://marketplace.visualstudio.com/items?itemName=DavidSchuldenfrei.gtest-adapter)\nis a VS Code extension allowing to view GoogleTest in a tree view and run/debug\nyour tests.\n\n[C++ TestMate](https://github.com/matepek/vscode-catch2-test-adapter) is a VS\nCode extension allowing to view GoogleTest in a tree view and run/debug your\ntests.\n\n[Cornichon](https://pypi.org/project/cornichon/) is a small Gherkin DSL parser\nthat generates stub code for GoogleTest.\n\n## Contributing Changes\n\nPlease read\n[`CONTRIBUTING.md`](https://github.com/google/googletest/blob/main/CONTRIBUTING.md)\nfor details on how to contribute to this project.\n\nHappy testing!\n",
        "releases": [
            {
                "name": "v1.15.2",
                "date": "2024-07-31T13:36:23Z"
            },
            {
                "name": "v1.15.0",
                "date": "2024-07-15T17:52:15Z"
            },
            {
                "name": "v1.14.0",
                "date": "2023-08-02T16:32:20Z"
            },
            {
                "name": "v1.13.0",
                "date": "2023-01-17T18:52:03Z"
            },
            {
                "name": "v1.12.1",
                "date": "2022-06-30T13:46:47Z"
            },
            {
                "name": "v1.12.0",
                "date": "2022-06-23T14:17:10Z"
            },
            {
                "name": "v1.11.0",
                "date": "2021-06-12T03:08:40Z"
            },
            {
                "name": "v1.10.0",
                "date": "2019-10-03T16:34:44Z"
            },
            {
                "name": "v1.8.1",
                "date": "2018-08-31T15:53:24Z"
            }
        ]
    }
}