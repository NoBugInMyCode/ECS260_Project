{
    "https://api.github.com/repos/prestodb/presto": {
        "forks": 5404,
        "watchers": 16167,
        "stars": 16167,
        "languages": {
            "Java": 59549805,
            "C++": 1914637,
            "JavaScript": 1094594,
            "Python": 79824,
            "Roff": 52281,
            "Shell": 48032,
            "CMake": 42671,
            "HTML": 39033,
            "Mustache": 38957,
            "ANTLR": 33596,
            "CSS": 26800,
            "Makefile": 18884,
            "Thrift": 14675,
            "Dockerfile": 6100,
            "NASL": 4636,
            "Batchfile": 795
        },
        "commits": [
            "2025-01-21T21:49:28Z",
            "2025-01-21T18:38:42Z",
            "2025-01-21T18:17:58Z",
            "2025-01-17T04:14:00Z",
            "2025-01-16T11:54:37Z",
            "2024-12-18T19:45:40Z",
            "2025-01-21T09:08:39Z",
            "2025-01-19T19:16:29Z",
            "2025-01-17T07:28:35Z",
            "2025-01-16T20:02:24Z",
            "2025-01-16T02:34:51Z",
            "2025-01-16T16:43:04Z",
            "2025-01-16T16:32:35Z",
            "2025-01-16T15:29:39Z",
            "2025-01-16T15:26:24Z",
            "2024-12-19T18:42:45Z",
            "2025-01-15T17:46:46Z",
            "2025-01-15T14:51:30Z",
            "2025-01-14T10:13:57Z",
            "2025-01-14T21:32:33Z",
            "2025-01-13T09:51:27Z",
            "2025-01-14T02:48:34Z",
            "2025-01-14T15:08:22Z",
            "2025-01-10T13:48:06Z",
            "2025-01-13T19:22:44Z",
            "2024-12-18T19:48:51Z",
            "2024-12-02T17:15:18Z",
            "2025-01-13T01:59:31Z",
            "2024-12-02T23:34:58Z",
            "2024-12-02T23:34:23Z"
        ],
        "creation_date": "2012-08-09T01:03:37Z",
        "contributors": 30,
        "topics": [
            "big-data",
            "data",
            "hadoop",
            "hive",
            "java",
            "lakehouse",
            "presto",
            "query",
            "sql"
        ],
        "subscribers": 850,
        "readme": "# Presto\n\nPresto is a distributed SQL query engine for big data.\n\nSee the [Presto installation documentation](https://prestodb.io/docs/current/installation.html) for deployment instructions.\n\nSee the [Presto documentation](https://prestodb.io/docs/current/) for general documentation.\n\n\n## Mission and Architecture\n\nSee [PrestoDB: Mission and Architecture](ARCHITECTURE.md). \n\n## Requirements\n\n* Mac OS X or Linux\n* Java 8 Update 151 or higher (8u151+), 64-bit. Both Oracle JDK and OpenJDK are supported.\n* Maven 3.6.3+ (for building)\n* Python 2.4+ (for running with the launcher script)\n\n<details> <!-- from: https://github.com/prestodb/presto/blob/master/README.md -->\n  <summary><a id=\"building-presto\"><h2>Building Presto</h2></a></summary>\n\n### Overview (Java)\n\nPresto is a standard Maven project. Simply run the following command from the project root directory:\n\n    ./mvnw clean install\n\nOn the first build, Maven will download all the dependencies from the internet and cache them in the local repository (`~/.m2/repository`), which can take a considerable amount of time. Subsequent builds will be faster.\n\nPresto has a comprehensive set of unit tests that can take several minutes to run. You can disable the tests when building:\n\n    ./mvnw clean install -DskipTests\n\nAfter building Presto for the first time, you can load the project into your IDE and run the server. We recommend using [IntelliJ IDEA](http://www.jetbrains.com/idea/). Because Presto is a standard Maven project, you can import it into your IDE using the root `pom.xml` file. In IntelliJ, choose Open Project from the Quick Start box or choose Open from the File menu and select the root `pom.xml` file.\n\nAfter opening the project in IntelliJ, double check that the Java SDK is properly configured for the project:\n\n* Open the File menu and select Project Structure\n* In the SDKs section, ensure that a 1.8 JDK is selected (create one if none exist)\n* In the Project section, ensure the Project language level is set to 8.0 as Presto makes use of several Java 8 language features\n\nPresto comes with sample configuration that should work out-of-the-box for development. Use the following options to create a run configuration:\n\n* Main Class: `com.facebook.presto.server.PrestoServer`\n* VM Options: `-ea -XX:+UseG1GC -XX:G1HeapRegionSize=32M -XX:+UseGCOverheadLimit -XX:+ExplicitGCInvokesConcurrent -Xmx2G -Dconfig=etc/config.properties -Dlog.levels-file=etc/log.properties`\n* Working directory: `$MODULE_WORKING_DIR$` or `$MODULE_DIR$`(Depends your version of IntelliJ)\n* Use classpath of module: `presto-main`\n\nThe working directory should be the `presto-main` subdirectory. In IntelliJ, using `$MODULE_DIR$` accomplishes this automatically.\n\nAdditionally, the Hive plugin must be configured with location of your Hive metastore Thrift service. Add the following to the list of VM options, replacing `localhost:9083` with the correct host and port (or use the below value if you do not have a Hive metastore):\n\n    -Dhive.metastore.uri=thrift://localhost:9083\n\n### Using SOCKS for Hive or HDFS\n\nIf your Hive metastore or HDFS cluster is not directly accessible to your local machine, you can use SSH port forwarding to access it. Setup a dynamic SOCKS proxy with SSH listening on local port 1080:\n\n    ssh -v -N -D 1080 server\n\nThen add the following to the list of VM options:\n\n    -Dhive.metastore.thrift.client.socks-proxy=localhost:1080\n\n### Running the CLI\n\nStart the CLI to connect to the server and run SQL queries:\n\n    presto-cli/target/presto-cli-*-executable.jar\n\nRun a query to see the nodes in the cluster:\n\n    SELECT * FROM system.runtime.nodes;\n\nIn the sample configuration, the Hive connector is mounted in the `hive` catalog, so you can run the following queries to show the tables in the Hive database `default`:\n\n    SHOW TABLES FROM hive.default;\n\n### Building the Documentation\n\nTo build the Presto docs, see the [docs README](presto-docs/README.md).\n\n### Building the Presto Console\n\nThe Presto Console is composed of several React components and is written in JSX and ES6. This\nsource code is stored in the `presto-ui/` module. The compilation process generates\nbrowser-compatible javascript which is added as JAR resources during the maven build. When the\nresource JAR is included on the classpath of Presto coordinator, it will be able to serve the\nresources.\n\nNone of the Java code relies on the Presto UI project being compiled, so it is possible to exclude\nthis UI when building Presto. Add the property `-DskipUI` to the maven command to disable building\nthe `ui` maven module.\n\n    ./mvnw clean install -DskipUI\n\nYou must have [Node.js](https://nodejs.org/en/download/) and [Yarn](https://yarnpkg.com/en/) installed to build the UI. When using  Maven to build\nthe project, Node and yarn are installed in the `presto-ui/target` folder. Add the node and yarn\nexecutables to the `PATH` environment variable.\n\nTo update Presto Console after making changes, run:\n\n    yarn --cwd presto-ui/src install\n\nIf no JavaScript dependencies have changed (i.e., no changes to `package.json`), it is faster to run:\n\n    yarn --cwd presto-ui/src run package\n\nTo simplify iteration, you can also run in `watch` mode, which automatically re-compiles when\nchanges to source files are detected:\n\n    yarn --cwd presto-ui/src run watch\n\nTo iterate quickly, simply re-build the project in IntelliJ after packaging is complete. Project\nresources will be hot-reloaded and changes are reflected on browser refresh.\n\n## Presto native and Velox\n\n[Presto native](https://github.com/prestodb/presto/tree/master/presto-native-execution) is a C++ rewrite of Presto worker. [Presto native](https://github.com/prestodb/presto/tree/master/presto-native-execution) uses [Velox](https://github.com/facebookincubator/velox) as its primary engine to run presto workloads.\n\n[Velox](https://github.com/facebookincubator/velox) is a C++ database library which provides reusable, extensible, and high-performance data processing components.\n\nCheck out [building instructions](https://github.com/prestodb/presto/tree/master/presto-native-execution#build-from-source) to get started.\n\n\n<hr>\n</details>\n\n\n## Contributing!\n\nPlease refer to the [contribution guidelines](https://github.com/prestodb/presto/blob/master/CONTRIBUTING.md) to get started.\n\n## Questions?\n\n[Please join our Slack channel and ask in `#dev`](https://communityinviter.com/apps/prestodb/prestodb).\n\n## License\n\nBy contributing to Presto, you agree that your contributions will be licensed under the [Apache License Version 2.0 (APLv2)](LICENSE).\n\n",
        "releases": []
    }
}