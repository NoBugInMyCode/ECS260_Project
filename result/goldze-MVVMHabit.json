{
    "https://api.github.com/repos/goldze/MVVMHabit": {
        "forks": 1695,
        "watchers": 7622,
        "stars": 7622,
        "languages": {
            "Java": 479309
        },
        "commits": [
            "2022-08-11T09:18:55Z",
            "2021-10-08T01:09:02Z",
            "2021-08-12T09:17:27Z",
            "2021-08-12T09:17:11Z",
            "2021-07-16T13:54:57Z",
            "2021-07-16T07:32:00Z",
            "2021-07-16T06:59:05Z",
            "2021-07-16T03:12:25Z",
            "2021-07-16T02:13:18Z",
            "2021-07-16T02:12:33Z",
            "2021-07-16T01:32:54Z",
            "2021-07-16T01:32:54Z",
            "2021-01-27T06:00:17Z",
            "2021-01-27T05:59:48Z",
            "2020-06-05T06:04:07Z",
            "2020-06-05T05:56:24Z",
            "2020-06-05T05:55:44Z",
            "2020-06-05T05:47:43Z",
            "2020-06-05T05:46:35Z",
            "2020-03-25T03:26:35Z",
            "2020-03-25T02:55:25Z",
            "2020-03-25T02:42:31Z",
            "2019-12-20T09:20:38Z",
            "2019-12-06T01:06:50Z",
            "2019-11-30T08:06:11Z",
            "2019-11-29T03:19:59Z",
            "2019-11-29T03:14:07Z",
            "2019-11-27T06:15:18Z",
            "2019-11-27T06:12:08Z",
            "2019-11-15T01:22:50Z"
        ],
        "creation_date": "2017-07-21T10:38:40Z",
        "contributors": 1,
        "topics": [
            "aac",
            "databinding",
            "glide",
            "lifecycle",
            "mvvm",
            "mvvm-library",
            "okhttp",
            "retrofit",
            "retrofit2",
            "rxjava",
            "rxjava2"
        ],
        "subscribers": 179,
        "readme": "## \u6700\u65b0\u65e5\u5fd7\n**v4.0.0\uff1a2021\u5e7407\u670816\u65e5**\n\n- \u8fc1\u79fbAndroidX\u5206\u652f\u4f5c\u4e3a\u4e3b\u7ebf\u5206\u652f\uff1b\n- \u5347\u7ea7\u7b2c\u4e09\u65b9\u6846\u67b6\u4f9d\u8d56\u7248\u672c\uff1b\n- \u5347\u7ea7gradle\u63d2\u4ef6\u7248\u672c\u652f\u6301\uff1b\n- \u4f18\u5316\u6846\u67b6\u4ee3\u7801\uff0c\u89e3\u51b3\u5df2\u77e5Bug\uff1b\n- \u4fee\u6539\u6587\u6863\u8bf4\u660e\u3002\n#### [\u66f4\u591a\u65e5\u5fd7](./UpdateLog.md)\n\n***\n\n**\u6ce8\uff1a** \n\n[3.x\uff1aSupport\u7248\uff08\u6700\u540e\u7248\u672c\uff1a3.1.6\uff09](https://github.com/goldze/MVVMHabit/tree/20210716_v3.1.6_android) \n\n[4.x\uff1aAndroidX\u7248\uff08\u6700\u540e\u7248\u672c\uff1a4.0.0\uff09](https://github.com/goldze/MVVMHabit) \u5efa\u8bae\u4f7f\u7528\u5f53\u524d\u7248\u672c\n\n> **\u539f\u6587\u5730\u5740\uff1a** [https://github.com/goldze/MVVMHabit](https://github.com/goldze/MVVMHabit)\n\n\u2461\u7fa4 <a target=\"_blank\" href=\"https://jq.qq.com/?_wv=1027&k=V3luKUW7\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"MVVMHabit-Family2\" title=\"MVVMHabit-Family2\"></a>\n\n\u2460\u7fa4 <a target=\"_blank\" href=\"https://jq.qq.com/?_wv=1027&k=Fv9et98F\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"MVVMHabit-Family\" title=\"MVVMHabit-Family\"></a>\uff08\u5df2\u6ee1\uff09\n\n# MVVMHabit\n##\n\u76ee\u524d\uff0candroid\u6d41\u884c\u7684MVC\u3001MVP\u6a21\u5f0f\u7684\u5f00\u53d1\u6846\u67b6\u5f88\u591a\uff0c\u7136\u800c\u4e00\u6b3e\u57fa\u4e8eMVVM\u6a21\u5f0f\u5f00\u53d1\u6846\u67b6\u5374\u5f88\u5c11\u3002**MVVMHabit\u662f\u4ee5\u8c37\u6b4cDataBinding+LiveData+ViewModel\u6846\u67b6\u4e3a\u57fa\u7840\uff0c\u6574\u5408Okhttp+RxJava+Retrofit+Glide\u7b49\u6d41\u884c\u6a21\u5757\uff0c\u52a0\u4e0a\u5404\u79cd\u539f\u751f\u63a7\u4ef6\u81ea\u5b9a\u4e49\u7684BindingAdapter\uff0c\u8ba9\u4e8b\u4ef6\u4e0e\u6570\u636e\u6e90\u5b8c\u7f8e\u7ed1\u5b9a\u7684\u4e00\u6b3e\u5bb9\u6613\u4e0a\u763e\u7684\u5b9e\u7528\u6027MVVM\u5feb\u901f\u5f00\u53d1\u6846\u67b6**\u3002\u4ece\u6b64\u544a\u522bfindViewById()\uff0c\u544a\u522bsetText()\uff0c\u544a\u522bsetOnClickListener()...\n\n## \u6846\u67b6\u6d41\u7a0b\n![](./img/fc.png) \n\n## \u6846\u67b6\u7279\u70b9\n- **\u5feb\u901f\u5f00\u53d1**\n\n\t\u53ea\u9700\u8981\u5199\u9879\u76ee\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u4e0d\u7528\u518d\u53bb\u5173\u5fc3\u7f51\u7edc\u8bf7\u6c42\u3001\u6743\u9650\u7533\u8bf7\u3001View\u7684\u751f\u547d\u5468\u671f\u7b49\u95ee\u9898\uff0c\u64b8\u8d77\u8896\u5b50\u5c31\u662f\u5e72\u3002\n\n- **\u7ef4\u62a4\u65b9\u4fbf**\n\n\tMVVM\u5f00\u53d1\u6a21\u5f0f\uff0c\u4f4e\u8026\u5408\uff0c\u903b\u8f91\u5206\u660e\u3002Model\u5c42\u8d1f\u8d23\u5c06\u8bf7\u6c42\u7684\u6570\u636e\u4ea4\u7ed9ViewModel\uff1bViewModel\u5c42\u8d1f\u8d23\u5c06\u8bf7\u6c42\u5230\u7684\u6570\u636e\u505a\u4e1a\u52a1\u903b\u8f91\u5904\u7406\uff0c\u6700\u540e\u4ea4\u7ed9View\u5c42\u53bb\u5c55\u793a\uff0c\u4e0eView\u4e00\u4e00\u5bf9\u5e94\uff1bView\u5c42\u53ea\u8d1f\u8d23\u754c\u9762\u7ed8\u5236\u5237\u65b0\uff0c\u4e0d\u5904\u7406\u4e1a\u52a1\u903b\u8f91\uff0c\u975e\u5e38\u9002\u5408\u5206\u914d\u72ec\u7acb\u6a21\u5757\u5f00\u53d1\u3002\n\n- **\u6d41\u884c\u6846\u67b6**\n\n\t[retrofit](https://github.com/square/retrofit)+[okhttp](https://github.com/square/okhttp)+[rxJava](https://github.com/ReactiveX/RxJava)\u8d1f\u8d23\u7f51\u7edc\u8bf7\u6c42\uff1b[gson](https://github.com/google/gson)\u8d1f\u8d23\u89e3\u6790json\u6570\u636e\uff1b[glide](https://github.com/bumptech/glide)\u8d1f\u8d23\u52a0\u8f7d\u56fe\u7247\uff1b[rxlifecycle](https://github.com/trello/RxLifecycle)\u8d1f\u8d23\u7ba1\u7406view\u7684\u751f\u547d\u5468\u671f\uff1b\u4e0e\u7f51\u7edc\u8bf7\u6c42\u5171\u5b58\u4ea1\uff1b[rxbinding](https://github.com/JakeWharton/RxBinding)\u7ed3\u5408databinding\u6269\u5c55UI\u4e8b\u4ef6\uff1b[rxpermissions](https://github.com/tbruyelle/RxPermissions)\u8d1f\u8d23Android 6.0\u6743\u9650\u7533\u8bf7\uff1b[material-dialogs](https://github.com/afollestad/material-dialogs)\u4e00\u4e2a\u6f02\u4eae\u7684\u3001\u6d41\u7545\u7684\u3001\u53ef\u5b9a\u5236\u7684material design\u98ce\u683c\u7684\u5bf9\u8bdd\u6846\u3002\n\n- **\u6570\u636e\u7ed1\u5b9a**\n\n\t\u6ee1\u8db3google\u76ee\u524d\u63a7\u4ef6\u652f\u6301\u7684databinding\u53cc\u5411\u7ed1\u5b9a\uff0c\u5e76\u6269\u5c55\u539f\u63a7\u4ef6\u4e00\u4e9b\u4e0d\u652f\u6301\u7684\u6570\u636e\u7ed1\u5b9a\u3002\u4f8b\u5982\u5c06\u56fe\u7247\u7684url\u8def\u5f84\u7ed1\u5b9a\u5230ImageView\u63a7\u4ef6\u4e2d\uff0c\u5728BindingAdapter\u65b9\u6cd5\u91cc\u9762\u5219\u4f7f\u7528Glide\u52a0\u8f7d\u56fe\u7247\uff1bView\u7684OnClick\u4e8b\u4ef6\u5728BindingAdapter\u4e2d\u65b9\u6cd5\u4f7f\u7528RxView\u9632\u91cd\u590d\u70b9\u51fb\uff0c\u518d\u628a\u4e8b\u4ef6\u56de\u8c03\u5230ViewModel\u5c42\uff0c\u5b9e\u73b0xml\u4e0eViewModel\u4e4b\u95f4\u6570\u636e\u548c\u4e8b\u4ef6\u7684\u7ed1\u5b9a(\u6846\u67b6\u91cc\u9762\u90e8\u5206\u6269\u5c55\u63a7\u4ef6\u548c\u56de\u8c03\u547d\u4ee4\u4f7f\u7528\u7684\u662f@kelin\u539f\u521b\u7684)\u3002\n\n- **\u57fa\u7c7b\u5c01\u88c5**\n\n\t\u4e13\u95e8\u9488\u5bf9MVVM\u6a21\u5f0f\u6253\u9020\u7684BaseActivity\u3001BaseFragment\u3001BaseViewModel\uff0c\u5728View\u5c42\u4e2d\u4e0d\u518d\u9700\u8981\u5b9a\u4e49ViewDataBinding\u548cViewModel\uff0c\u76f4\u63a5\u5728BaseActivity\u3001BaseFragment\u4e0a\u9650\u5b9a\u6cdb\u578b\u5373\u53ef\u4f7f\u7528\u3002\u666e\u901a\u754c\u9762\u53ea\u9700\u8981\u7f16\u5199Fragment\uff0c\u7136\u540e\u4f7f\u7528ContainerActivity\u76db\u88c5(\u4ee3\u7406)\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u6bcf\u4e2a\u754c\u9762\u90fd\u5728AndroidManifest\u4e2d\u6ce8\u518c\u4e00\u904d\u3002\n\n- **\u5168\u5c40\u64cd\u4f5c**\n\t1. \u5168\u5c40\u7684Activity\u5806\u6808\u5f0f\u7ba1\u7406\uff0c\u5728\u7a0b\u5e8f\u4efb\u4f55\u5730\u65b9\u53ef\u4ee5\u6253\u5f00\u3001\u7ed3\u675f\u6307\u5b9a\u7684Activity\uff0c\u4e00\u952e\u9000\u51fa\u5e94\u7528\u7a0b\u5e8f\u3002\n\t2. LoggingInterceptor\u5168\u5c40\u62e6\u622a\u7f51\u7edc\u8bf7\u6c42\u65e5\u5fd7\uff0c\u6253\u5370Request\u548cResponse\uff0c\u683c\u5f0f\u5316json\u3001xml\u6570\u636e\u663e\u793a\uff0c\u65b9\u4fbf\u4e0e\u540e\u53f0\u8c03\u8bd5\u63a5\u53e3\u3002\n\t3. \u5168\u5c40Cookie\uff0c\u652f\u6301SharedPreferences\u548c\u5185\u5b58\u4e24\u79cd\u7ba1\u7406\u6a21\u5f0f\u3002\n\t4. \u901a\u7528\u7684\u7f51\u7edc\u8bf7\u6c42\u5f02\u5e38\u76d1\u542c\uff0c\u6839\u636e\u4e0d\u540c\u7684\u72b6\u6001\u7801\u6216\u5f02\u5e38\u8bbe\u7f6e\u76f8\u5e94\u7684message\u3002\n\t5. \u5168\u5c40\u7684\u5f02\u5e38\u6355\u83b7\uff0c\u7a0b\u5e8f\u53d1\u751f\u5f02\u5e38\u65f6\u4e0d\u4f1a\u5d29\u6e83\uff0c\u53ef\u8df3\u5165\u5f02\u5e38\u754c\u9762\u91cd\u542f\u5e94\u7528\u3002\n\t6. \u5168\u5c40\u4e8b\u4ef6\u56de\u8c03\uff0c\u63d0\u4f9bRxBus\u3001Messenger\u4e24\u79cd\u56de\u8c03\u65b9\u5f0f\u3002\n\t7. \u5168\u5c40\u4efb\u610f\u4f4d\u7f6e\u4e00\u884c\u4ee3\u7801\u5b9e\u73b0\u6587\u4ef6\u4e0b\u8f7d\u8fdb\u5ea6\u76d1\u542c\uff08\u6682\u4e0d\u652f\u6301\u591a\u6587\u4ef6\u8fdb\u5ea6\u76d1\u542c\uff09\u3002\n    8. \u5168\u5c40\u70b9\u51fb\u4e8b\u4ef6\u9632\u6296\u52a8\u5904\u7406\uff0c\u9632\u6b62\u70b9\u51fb\u8fc7\u5feb\u3002\n\n\n## 1\u3001\u51c6\u5907\u5de5\u4f5c\n> \u7f51\u4e0a\u7684\u5f88\u591a\u6709\u5173MVVM\u7684\u8d44\u6599\uff0c\u5728\u6b64\u5c31\u4e0d\u518d\u9610\u8ff0\u4ec0\u4e48\u662fMVVM\u4e86\uff0c\u4e0d\u6e05\u695a\u7684\u670b\u53cb\u53ef\u4ee5\u5148\u53bb\u4e86\u89e3\u4e00\u4e0b\u3002[todo-mvvm-live](https://github.com/googlesamples/android-architecture/tree/todo-mvvm-live)\n### 1.1\u3001\u542f\u7528databinding\n\u5728\u4e3b\u5de5\u7a0bapp\u7684build.gradle\u7684android {}\u4e2d\u52a0\u5165\uff1a\n```gradle\ndataBinding {\n    enabled true\n}\n```\n### 1.2\u3001\u4f9d\u8d56Library\n\u4ece\u8fdc\u7a0b\u4f9d\u8d56\uff1a\n\n\u5728\u6839\u76ee\u5f55\u7684build.gradle\u4e2d\u52a0\u5165\n```gradle\nallprojects {\n    repositories {\n\t\t...\n        google()\n        jcenter()\n        maven { url 'https://jitpack.io' }\n    }\n}\n```\n\u5728\u4e3b\u9879\u76eeapp\u7684build.gradle\u4e2d\u4f9d\u8d56\n```gradle\ndependencies {\n    ...\n    implementation 'com.github.goldze:MVVMHabit:4.0.0'\n}\n```\n\u6216\n\n\u4e0b\u8f7d\u4f8b\u5b50\u7a0b\u5e8f\uff0c\u5728\u4e3b\u9879\u76eeapp\u7684build.gradle\u4e2d\u4f9d\u8d56\u4f8b\u5b50\u7a0b\u5e8f\u4e2d\u7684**mvvmhabit**\uff1a\n```gradle\ndependencies {\t\n    ...\n    implementation project(':mvvmhabit')\n}\n```\n\n### 1.3\u3001\u914d\u7f6econfig.gradle\n\u5982\u679c\u4e0d\u662f\u8fdc\u7a0b\u4f9d\u8d56\uff0c\u800c\u662f\u4e0b\u8f7d\u7684\u4f8b\u5b50\u7a0b\u5e8f\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u5c06\u4f8b\u5b50\u7a0b\u5e8f\u4e2d\u7684config.gradle\u653e\u5165\u4f60\u7684\u4e3b\u9879\u76ee\u6839\u76ee\u5f55\u4e2d\uff0c\u7136\u540e\u5728\u6839\u76ee\u5f55build.gradle\u7684\u7b2c\u4e00\u884c\u52a0\u5165\uff1a\n\n```gradle\napply from: \"config.gradle\"\n```\n\n**\u6ce8\u610f\uff1a** config.gradle\u4e2d\u7684 \n\nandroid = [] \u662f\u4f60\u7684\u5f00\u53d1\u76f8\u5173\u7248\u672c\u914d\u7f6e\uff0c\u53ef\u81ea\u884c\u4fee\u6539\n\nsupport = [] \u662f\u4f60\u7684support\u76f8\u5173\u914d\u7f6e\uff0c\u53ef\u81ea\u884c\u4fee\u6539\n\ndependencies = [] \u662f\u4f9d\u8d56\u7b2c\u4e09\u65b9\u5e93\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u52a0\u65b0\u5e93\uff0c\u4f46\u4e0d\u8981\u53bb\u4fee\u6539\u539f\u6709\u7b2c\u4e09\u65b9\u5e93\u7684\u7248\u672c\u53f7\uff0c\u4e0d\u7136\u53ef\u80fd\u4f1a\u7f16\u8bd1\u4e0d\u8fc7\n### 1.4\u3001\u914d\u7f6eAndroidManifest\n\u6dfb\u52a0\u6743\u9650\uff1a\n```xml\n<uses-permission android:name=\"android.permission.INTERNET\" />\n<uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\n<uses-permission android:name=\"android.permission.READ_PHONE_STATE\" />\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n```\n\u914d\u7f6eApplication\uff1a\n\n\u7ee7\u627f**mvvmhabit**\u4e2d\u7684BaseApplication\uff0c\u6216\u8005\u8c03\u7528\n\n```java\nBaseApplication.setApplication(this);\n```\n\u6765\u521d\u59cb\u5316\u4f60\u7684Application\n\n\u53ef\u4ee5\u5728\u4f60\u7684\u81ea\u5df1AppApplication\u4e2d\u914d\u7f6e\n\n```java\n//\u662f\u5426\u5f00\u542f\u65e5\u5fd7\u6253\u5370\nKLog.init(true);\n//\u914d\u7f6e\u5168\u5c40\u5f02\u5e38\u5d29\u6e83\u64cd\u4f5c\nCaocConfig.Builder.create()\n    .backgroundMode(CaocConfig.BACKGROUND_MODE_SILENT) //\u80cc\u666f\u6a21\u5f0f,\u5f00\u542f\u6c89\u6d78\u5f0f\n    .enabled(true) //\u662f\u5426\u542f\u52a8\u5168\u5c40\u5f02\u5e38\u6355\u83b7\n    .showErrorDetails(true) //\u662f\u5426\u663e\u793a\u9519\u8bef\u8be6\u7ec6\u4fe1\u606f\n    .showRestartButton(true) //\u662f\u5426\u663e\u793a\u91cd\u542f\u6309\u94ae\n    .trackActivities(true) //\u662f\u5426\u8ddf\u8e2aActivity\n    .minTimeBetweenCrashesMs(2000) //\u5d29\u6e83\u7684\u95f4\u9694\u65f6\u95f4(\u6beb\u79d2)\n    .errorDrawable(R.mipmap.ic_launcher) //\u9519\u8bef\u56fe\u6807\n    .restartActivity(LoginActivity.class) //\u91cd\u65b0\u542f\u52a8\u540e\u7684activity\n    //.errorActivity(YourCustomErrorActivity.class) //\u5d29\u6e83\u540e\u7684\u9519\u8befactivity\n    //.eventListener(new YourCustomEventListener()) //\u5d29\u6e83\u540e\u7684\u9519\u8bef\u76d1\u542c\n    .apply();\n```\n\n## 2\u3001\u5feb\u901f\u4e0a\u624b\n\n### 2.1\u3001\u7b2c\u4e00\u4e2aActivity\n> \u4ee5\u5927\u5bb6\u90fd\u719f\u6089\u7684\u767b\u5f55\u64cd\u4f5c\u4e3a\u4f8b\uff1a\u4e09\u4e2a\u6587\u4ef6**LoginActivty.java**\u3001**LoginViewModel.java**\u3001**activity_login.xml**\n\n##### 2.1.1\u3001\u5173\u8054ViewModel\n\u5728activity_login.xml\u4e2d\u5173\u8054LoginViewModel\u3002\n```xml\n<layout>\n    <data>\n        <variable\n            type=\"com.goldze.mvvmhabit.ui.login.LoginViewModel\"\n            name=\"viewModel\"\n        />\n    </data>\n    .....\n\n</layout>\n```\n\n> variable - type\uff1a\u7c7b\u7684\u5168\u8def\u5f84 <br>variable - name\uff1a\u53d8\u91cf\u540d\n\n##### 2.1.2\u3001\u7ee7\u627fBaseActivity\n\nLoginActivity\u7ee7\u627fBaseActivity\n```java\n\npublic class LoginActivity extends BaseActivity<ActivityLoginBinding, LoginViewModel> {\n    //ActivityLoginBinding\u7c7b\u662fdatabinding\u6846\u67b6\u81ea\u5b9a\u751f\u6210\u7684,\u5bf9activity_login.xml\n    @Override\n    public int initContentView(Bundle savedInstanceState) {\n        return R.layout.activity_login;\n    }\n\n    @Override\n    public int initVariableId() {\n        return BR.viewModel;\n    }\n\n    @Override\n    public LoginViewModel initViewModel() {\n        //View\u6301\u6709ViewModel\u7684\u5f15\u7528\uff0c\u5982\u679c\u6ca1\u6709\u7279\u6b8a\u4e1a\u52a1\u5904\u7406\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u4e0d\u91cd\u5199\n        return ViewModelProviders.of(this).get(LoginViewModel.class);\n    }\n}\n```\n> \u4fdd\u5b58activity_login.xml\u540edatabinding\u4f1a\u751f\u6210\u4e00\u4e2aActivityLoginBinding\u7c7b\u3002\uff08\u5982\u679c\u6ca1\u6709\u751f\u6210\uff0c\u8bd5\u7740\u70b9\u51fbBuild->Clean Project\uff09\n\nBaseActivity\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u6709\u4e24\u4e2a\u6cdb\u578b\u53c2\u6570\uff0c\u4e00\u4e2a\u662fViewDataBinding\uff0c\u53e6\u4e00\u4e2a\u662fBaseViewModel\uff0c\u4e0a\u9762\u7684ActivityLoginBinding\u5219\u662f\u7ee7\u627f\u7684ViewDataBinding\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u6cdb\u578b\u7ea6\u675f\uff0cLoginViewModel\u7ee7\u627fBaseViewModel\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u6cdb\u578b\u7ea6\u675f\u3002\n\n\u91cd\u5199BaseActivity\u7684\u4e8c\u4e2a\u62bd\u8c61\u65b9\u6cd5\n\ninitContentView() \u8fd4\u56de\u754c\u9762layout\u7684id<br>\ninitVariableId() \u8fd4\u56de\u53d8\u91cf\u7684id\uff0c\u5bf9\u5e94activity_login\u4e2dname=\"viewModel\"\uff0c\u5c31\u50cf\u4e00\u4e2a\u63a7\u4ef6\u7684id\uff0c\u53ef\u4ee5\u4f7f\u7528R.id.xxx\uff0c\u8fd9\u91cc\u7684BR\u8ddfR\u6587\u4ef6\u4e00\u6837\uff0c\u7531\u7cfb\u7edf\u751f\u6210\uff0c\u4f7f\u7528BR.xxx\u627e\u5230\u8fd9\u4e2aViewModel\u7684id\u3002<br>\n\n\u9009\u62e9\u6027\u91cd\u5199initViewModel()\u65b9\u6cd5\uff0c\u8fd4\u56deViewModel\u5bf9\u8c61\n```java\n@Override\npublic LoginViewModel initViewModel() {\n    //View\u6301\u6709ViewModel\u7684\u5f15\u7528\uff0c\u5982\u679c\u6ca1\u6709\u7279\u6b8a\u4e1a\u52a1\u5904\u7406\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u4e0d\u91cd\u5199\n    return ViewModelProviders.of(this).get(LoginViewModel.class);\n}\n```\n\n**\u6ce8\u610f\uff1a** \u4e0d\u91cd\u5199initViewModel()\uff0c\u9ed8\u8ba4\u4f1a\u521b\u5efaLoginActivity\u4e2d\u7b2c\u4e8c\u4e2a\u6cdb\u578b\u7ea6\u675f\u7684LoginViewModel\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u7b2c\u4e8c\u4e2a\u6cdb\u578b\uff0c\u5219\u4f1a\u521b\u5efaBaseViewModel\n\n##### 2.1.3\u3001\u7ee7\u627fBaseViewModel\n\nLoginViewModel\u7ee7\u627fBaseViewModel\n```java\npublic class LoginViewModel extends BaseViewModel {\n    public LoginViewModel(@NonNull Application application) {\n        super(application);\n    }\n    ....\n}\n```\nBaseViewModel\u4e0eBaseActivity\u901a\u8fc7LiveData\u6765\u5904\u7406\u5e38\u7528UI\u903b\u8f91\uff0c\u5373\u53ef\u5728ViewModel\u4e2d\u4f7f\u7528\u7236\u7c7b\u7684showDialog()\u3001startActivity()\u7b49\u65b9\u6cd5\u3002\u5728\u8fd9\u4e2aLoginViewModel\u4e2d\u5c31\u53ef\u4ee5\u5c3d\u60c5\u7684\u5199\u4f60\u7684\u903b\u8f91\u4e86\uff01\n> BaseFragment\u7684\u4f7f\u7528\u548cBaseActivity\u4e00\u6837\uff0c\u8be6\u60c5\u53c2\u8003Demo\u3002\n\n### 2.2\u3001\u6570\u636e\u7ed1\u5b9a\n> \u62e5\u6709databinding\u6846\u67b6\u81ea\u5e26\u7684\u53cc\u5411\u7ed1\u5b9a\uff0c\u4e5f\u6709\u6269\u5c55\n##### 2.2.1\u3001\u4f20\u7edf\u7ed1\u5b9a\n\u7ed1\u5b9a\u7528\u6237\u540d\uff1a\n\n\u5728LoginViewModel\u4e2d\u5b9a\u4e49\n```java\n//\u7528\u6237\u540d\u7684\u7ed1\u5b9a\npublic ObservableField<String> userName = new ObservableField<>(\"\");\n```\n\u5728\u7528\u6237\u540dEditText\u6807\u7b7e\u4e2d\u7ed1\u5b9a\n```xml\nandroid:text=\"@={viewModel.userName}\"\n```\n\u8fd9\u6837\u4e00\u6765\uff0c\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u4e86\u4ec0\u4e48\uff0cuserName.get()\u7684\u5185\u5bb9\u5c31\u662f\u4ec0\u4e48\uff0cuserName.set(\"\")\u8bbe\u7f6e\u4ec0\u4e48\uff0c\u8f93\u5165\u6846\u4e2d\u5c31\u663e\u793a\u4ec0\u4e48\u3002\n**\u6ce8\u610f\uff1a** @\u7b26\u53f7\u540e\u9762\u9700\u8981\u52a0=\u53f7\u624d\u80fd\u8fbe\u5230\u53cc\u5411\u7ed1\u5b9a\u6548\u679c\uff1buserName\u9700\u8981\u662fpublic\u7684\uff0c\u4e0d\u7136viewModel\u65e0\u6cd5\u627e\u5230\u5b83\u3002\n\n\u70b9\u51fb\u4e8b\u4ef6\u7ed1\u5b9a\uff1a\n\n\u5728LoginViewModel\u4e2d\u5b9a\u4e49\n```java\n//\u767b\u5f55\u6309\u94ae\u7684\u70b9\u51fb\u4e8b\u4ef6\npublic View.OnClickListener loginOnClick = new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n            \n    }\n};\n```\n\u5728\u767b\u5f55\u6309\u94ae\u6807\u7b7e\u4e2d\u7ed1\u5b9a\n```xml\nandroid:onClick=\"@{viewModel.loginOnClick}\"\n```\n\u8fd9\u6837\u4e00\u6765\uff0c\u7528\u6237\u7684\u70b9\u51fb\u4e8b\u4ef6\u76f4\u63a5\u88ab\u56de\u8c03\u5230ViewModel\u5c42\u4e86\uff0c\u66f4\u597d\u7684\u7ef4\u62a4\u4e86\u4e1a\u52a1\u903b\u8f91\n\n\u8fd9\u5c31\u662f\u5f3a\u5927\u7684databinding\u6846\u67b6\u53cc\u5411\u7ed1\u5b9a\u7684\u7279\u6027\uff0c\u4e0d\u7528\u518d\u7ed9\u63a7\u4ef6\u5b9a\u4e49id\uff0csetText()\uff0csetOnClickListener()\u3002\n\n**\u4f46\u662f\uff0c\u5149\u6709\u8fd9\u4e9b\uff0c\u5b8c\u5168\u6ee1\u8db3\u4e0d\u4e86\u6211\u4eec\u590d\u6742\u4e1a\u52a1\u7684\u9700\u6c42\u554a\uff01MVVMHabit\u95ea\u4eae\u767b\u573a\uff1a\u5b83\u6709\u4e00\u5957\u81ea\u5b9a\u4e49\u7684\u7ed1\u5b9a\u89c4\u5219\uff0c\u53ef\u4ee5\u6ee1\u8db3\u5927\u90e8\u5206\u7684\u573a\u666f\u9700\u6c42\uff0c\u8bf7\u7ee7\u7eed\u5f80\u4e0b\u770b\u3002**\n\n##### 2.2.2\u3001\u81ea\u5b9a\u4e49\u7ed1\u5b9a\n\u8fd8\u62ff\u70b9\u51fb\u4e8b\u4ef6\u8bf4\u5427\uff0c\u4e0d\u7528\u4f20\u7edf\u7684\u7ed1\u5b9a\u65b9\u5f0f\uff0c\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u70b9\u51fb\u4e8b\u4ef6\u7ed1\u5b9a\u3002\n\n\u5728LoginViewModel\u4e2d\u5b9a\u4e49\n```java\n//\u767b\u5f55\u6309\u94ae\u7684\u70b9\u51fb\u4e8b\u4ef6\npublic BindingCommand loginOnClickCommand = new BindingCommand(new BindingAction() {\n    @Override\n    public void call() {\n            \n    }\n});\n```\n\u5728activity_login\u4e2d\u5b9a\u4e49\u547d\u540d\u7a7a\u95f4\n```xml\nxmlns:binding=\"http://schemas.android.com/apk/res-auto\"\n```\n\u5728\u767b\u5f55\u6309\u94ae\u6807\u7b7e\u4e2d\u7ed1\u5b9a\n```xml\nbinding:onClickCommand=\"@{viewModel.loginOnClickCommand}\"\n```\n\u8fd9\u548c\u539f\u672c\u4f20\u7edf\u7684\u7ed1\u5b9a\u4e0d\u662f\u4e00\u6837\u5417\uff1f\u4e0d\uff0c\u8fd9\u5176\u5b9e\u662f\u6709\u5dee\u522b\u7684\u3002\u4f7f\u7528\u8fd9\u79cd\u5f62\u5f0f\u7684\u7ed1\u5b9a\uff0c\u5728\u539f\u672c\u4e8b\u4ef6\u7ed1\u5b9a\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u5e26\u6709\u9632\u91cd\u590d\u70b9\u51fb\u7684\u529f\u80fd\uff0c1\u79d2\u5185\u591a\u6b21\u70b9\u51fb\u4e5f\u53ea\u4f1a\u6267\u884c\u4e00\u6b21\u64cd\u4f5c\u3002\u5982\u679c\u4e0d\u9700\u8981\u9632\u91cd\u590d\u70b9\u51fb\uff0c\u53ef\u4ee5\u52a0\u5165\u8fd9\u6761\u5c5e\u6027\n```xml\nbinding:isThrottleFirst=\"@{Boolean.TRUE}\"\n```\n\u90a3\u8fd9\u529f\u80fd\u662f\u5728\u54ea\u91cc\u505a\u7684\u5462\uff1f\u7b54\u6848\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u3002\n```java\n//\u9632\u91cd\u590d\u70b9\u51fb\u95f4\u9694(\u79d2)\npublic static final int CLICK_INTERVAL = 1;\n\n/**\n* requireAll \u662f\u610f\u601d\u662f\u662f\u5426\u9700\u8981\u7ed1\u5b9a\u5168\u90e8\u53c2\u6570, false\u4e3a\u5426\n* View\u7684onClick\u4e8b\u4ef6\u7ed1\u5b9a\n* onClickCommand \u7ed1\u5b9a\u7684\u547d\u4ee4,\n* isThrottleFirst \u662f\u5426\u5f00\u542f\u9632\u6b62\u8fc7\u5feb\u70b9\u51fb\n*/\n@BindingAdapter(value = {\"onClickCommand\", \"isThrottleFirst\"}, requireAll = false)\npublic static void onClickCommand(View view, final BindingCommand clickCommand, final boolean isThrottleFirst) {\n    if (isThrottleFirst) {\n        RxView.clicks(view)\n        .subscribe(new Consumer<Object>() {\n            @Override\n            public void accept(Object object) throws Exception {\n                if (clickCommand != null) {\n                    clickCommand.execute();\n                }\n            }\n        });\n    } else {\n        RxView.clicks(view)\n        .throttleFirst(CLICK_INTERVAL, TimeUnit.SECONDS)//1\u79d2\u949f\u5185\u53ea\u5141\u8bb8\u70b9\u51fb1\u6b21\n        .subscribe(new Consumer<Object>() {\n            @Override\n            public void accept(Object object) throws Exception {\n                if (clickCommand != null) {\n                    clickCommand.execute();\n                }\n            }\n        });\n    }\n}\n```\nonClickCommand\u65b9\u6cd5\u662f\u81ea\u5b9a\u4e49\u7684\uff0c\u4f7f\u7528@BindingAdapter\u6ce8\u89e3\u6765\u6807\u660e\u8fd9\u662f\u4e00\u4e2a\u7ed1\u5b9a\u65b9\u6cd5\u3002\u5728\u65b9\u6cd5\u4e2d\u4f7f\u7528\u4e86RxView\u6765\u589e\u5f3aview\u7684clicks\u4e8b\u4ef6\uff0c.throttleFirst()\u9650\u5236\u8ba2\u9605\u8005\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u5185\u91cd\u590d\u6267\u884c\uff0c\u6700\u540e\u901a\u8fc7BindingCommand\u5c06\u4e8b\u4ef6\u56de\u8c03\u51fa\u53bb\uff0c\u5c31\u597d\u6bd4\u6709\u4e00\u79cd\u62e6\u622a\u5668\uff0c\u5728\u70b9\u51fb\u65f6\u5148\u505a\u4e00\u4e0b\u5224\u65ad\uff0c\u7136\u540e\u518d\u628a\u4e8b\u4ef6\u6cbf\u7740\u4ed6\u539f\u6709\u7684\u65b9\u5411\u4f20\u9012\u3002\n\n\u662f\u4e0d\u662f\u89c9\u5f97\u6709\u70b9\u610f\u601d\uff0c\u597d\u620f\u8fd8\u5728\u540e\u5934\u5462\uff01\n##### 2.2.3\u3001\u81ea\u5b9a\u4e49ImageView\u56fe\u7247\u52a0\u8f7d\n\u7ed1\u5b9a\u56fe\u7247\u8def\u5f84\uff1a\n\n\u5728ViewModel\u4e2d\u5b9a\u4e49\n```java\npublic String imgUrl = \"http://img0.imgtn.bdimg.com/it/u=2183314203,562241301&fm=26&gp=0.jpg\";\n```\n\u5728ImageView\u6807\u7b7e\u4e2d\n```xml\nbinding:url=\"@{viewModel.imgUrl}\"\n```\nurl\u662f\u56fe\u7247\u8def\u5f84\uff0c\u8fd9\u6837\u7ed1\u5b9a\u540e\uff0c\u8fd9\u4e2aImageView\u5c31\u4f1a\u53bb\u663e\u793a\u8fd9\u5f20\u56fe\u7247\uff0c\u4e0d\u9650\u7f51\u7edc\u56fe\u7247\u8fd8\u662f\u672c\u5730\u56fe\u7247\u3002\n\n\u5982\u679c\u9700\u8981\u7ed9\u4e00\u4e2a\u9ed8\u8ba4\u52a0\u8f7d\u4e2d\u7684\u56fe\u7247\uff0c\u53ef\u4ee5\u52a0\u8fd9\u4e00\u53e5\n```xml\nbinding:placeholderRes=\"@{R.mipmap.ic_launcher_round}\"\n```\n> R\u6587\u4ef6\u9700\u8981\u5728data\u6807\u7b7e\u4e2d\u5bfc\u5165\u4f7f\u7528\uff0c\u5982\uff1a`<import type=\"com.goldze.mvvmhabit.R\" />`\n\nBindingAdapter\u4e2d\u7684\u5b9e\u73b0\n```java\n@BindingAdapter(value = {\"url\", \"placeholderRes\"}, requireAll = false)\npublic static void setImageUri(ImageView imageView, String url, int placeholderRes) {\n    if (!TextUtils.isEmpty(url)) {\n        //\u4f7f\u7528Glide\u6846\u67b6\u52a0\u8f7d\u56fe\u7247\n        Glide.with(imageView.getContext())\n            .load(url)\n            .placeholder(placeholderRes)\n            .into(imageView);\n    }\n}\n```\n\u5f88\u7b80\u5355\u5c31\u81ea\u5b9a\u4e49\u4e86\u4e00\u4e2aImageView\u56fe\u7247\u52a0\u8f7d\u7684\u7ed1\u5b9a\uff0c\u5b66\u4f1a\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u81ea\u5b9a\u4e49\u6269\u5c55\u3002\n> \u5982\u679c\u4f60\u5bf9\u8fd9\u4e9b\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u4e0b\u8f7d\u6e90\u7801\uff0c\u5728binding\u5305\u4e2d\u53ef\u4ee5\u770b\u5230\u5404\u7c7b\u63a7\u4ef6\u7684\u7ed1\u5b9a\u5b9e\u73b0\u65b9\u5f0f\n\n##### 2.2.4\u3001RecyclerView\u7ed1\u5b9a\n> RecyclerView\u4e5f\u662f\u5f88\u5e38\u7528\u7684\u4e00\u79cd\u63a7\u4ef6\uff0c\u4f20\u7edf\u7684\u65b9\u5f0f\u9700\u8981\u9488\u5bf9\u5404\u79cd\u4e1a\u52a1\u8981\u5199\u5404\u79cdAdapter\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86mvvmhabit\uff0c\u5219\u53ef\u5927\u5927\u7b80\u5316\u8fd9\u79cd\u5de5\u4f5c\u91cf\uff0c\u4ece\u6b64\u544a\u522bsetAdapter()\u3002\n\n\u5728ViewModel\u4e2d\u5b9a\u4e49\uff1a\n```java\n//\u7ed9RecyclerView\u6dfb\u52a0items\npublic final ObservableList<NetWorkItemViewModel> observableList = new ObservableArrayList<>();\n//\u7ed9RecyclerView\u6dfb\u52a0ItemBinding\npublic final ItemBinding<NetWorkItemViewModel> itemBinding = ItemBinding.of(BR.viewModel, R.layout.item_network);\n```\nObservableList<>\u548cItemBinding<>\u7684\u6cdb\u578b\u662fItem\u5e03\u5c40\u6240\u5bf9\u5e94\u7684ItemViewModel\n\n\u5728xml\u4e2d\u7ed1\u5b9a\n```xml\n<android.support.v7.widget.RecyclerView\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    binding:itemBinding=\"@{viewModel.itemBinding}\"\n    binding:items=\"@{viewModel.observableList}\"\n    binding:layoutManager=\"@{LayoutManagers.linear()}\"\n    binding:lineManager=\"@{LineManagers.horizontal()}\" />\n```\nlayoutManager\u63a7\u5236\u662f\u7ebf\u6027(\u5305\u542b\u6c34\u5e73\u548c\u5782\u76f4)\u6392\u5217\u8fd8\u662f\u7f51\u683c\u6392\u5217\uff0clineManager\u662f\u8bbe\u7f6e\u5206\u5272\u7ebf\n\n\u7f51\u683c\u5e03\u5c40\u7684\u5199\u6cd5\uff1a`binding:layoutManager=\"@{LayoutManagers.grid(3)}`</br>\n\u6c34\u5e73\u5e03\u5c40\u7684\u5199\u6cd5\uff1a`binding:layoutManager=\"@{LayoutManagers.linear(LinearLayoutManager.HORIZONTAL,Boolean.FALSE)}\"`</br>\n\n\u4f7f\u7528\u5230\u76f8\u5173\u7c7b\uff0c\u5219\u9700\u8981\u5bfc\u5165\u8be5\u7c7b\u624d\u80fd\u4f7f\u7528\uff0c\u548c\u5bfc\u5165Java\u7c7b\u76f8\u4f3c\n\n> `<import type=\"me.tatarka.bindingcollectionadapter2.LayoutManagers\" />`</br>\n> `<import type=\"me.goldze.mvvmhabit.binding.viewadapter.recyclerview.LineManagers\" />`</br>\n> `<import type=\"android.support.v7.widget.LinearLayoutManager\" />`\n\n\n\u8fd9\u6837\u7ed1\u5b9a\u540e\uff0c\u5728ViewModel\u4e2d\u8c03\u7528ObservableList\u7684add()\u65b9\u6cd5\uff0c\u6dfb\u52a0\u4e00\u4e2aItemViewModel\uff0c\u754c\u9762\u4e0a\u5c31\u4f1a\u5b9e\u65f6\u7ed8\u5236\u51fa\u4e00\u4e2aItem\u3002\u5728Item\u5bf9\u5e94\u7684ViewModel\u4e2d\uff0c\u540c\u6837\u53ef\u4ee5\u4ee5\u7ed1\u5b9a\u7684\u5f62\u5f0f\u5b8c\u6210\u903b\u8f91\n> \u53ef\u4ee5\u5728\u8bf7\u6c42\u5230\u6570\u636e\u540e\uff0c\u5faa\u73af\u6dfb\u52a0`observableList.add(new NetWorkItemViewModel(NetWorkViewModel.this, entity));`\u8be6\u7ec6\u53ef\u4ee5\u53c2\u8003\u4f8b\u5b50\u7a0b\u5e8f\u4e2dNetWorkViewModel\u7c7b\u3002\n\n**\u6ce8\u610f\uff1a** \u5728\u4ee5\u524d\u7684\u7248\u672c\u4e2d\uff0cItemViewModel\u662f\u7ee7\u627fBaseViewModel\uff0c\u4f20\u5165Context\uff0c\u65b0\u7248\u672c3.x\u4e2d\u53ef\u7ee7\u627fItemViewModel\uff0c\u4f20\u5165\u5f53\u524d\u9875\u9762\u7684ViewModel\n\n\u66f4\u591aRecyclerView\u3001ListView\u3001ViewPager\u7b49\u7ed1\u5b9a\u65b9\u5f0f\uff0c\u8bf7\u53c2\u8003 [https://github.com/evant/binding-collection-adapter](https://github.com/evant/binding-collection-adapter)\n\n### 2.3\u3001\u7f51\u7edc\u8bf7\u6c42\n> \u7f51\u7edc\u8bf7\u6c42\u4e00\u76f4\u90fd\u662f\u4e00\u4e2a\u9879\u76ee\u7684\u6838\u5fc3\uff0c\u73b0\u5728\u7684\u9879\u76ee\u57fa\u672c\u90fd\u79bb\u4e0d\u5f00\u7f51\u7edc\uff0c\u4e00\u4e2a\u597d\u7528\u7f51\u7edc\u8bf7\u6c42\u6846\u67b6\u53ef\u4ee5\u8ba9\u5f00\u53d1\u4e8b\u534a\u529f\u500d\u3002\n#### 2.3.1\u3001Retrofit+Okhttp+RxJava\n> \u73b0\u4eca\uff0c\u8fd9\u4e09\u4e2a\u7ec4\u5408\u57fa\u672c\u662f\u7f51\u7edc\u8bf7\u6c42\u7684\u6807\u914d\uff0c\u5982\u679c\u4f60\u5bf9\u8fd9\u4e09\u4e2a\u6846\u67b6\u4e0d\u4e86\u89e3\uff0c\u5efa\u8bae\u5148\u53bb\u67e5\u9605\u76f8\u5173\u8d44\u6599\u3002\n\nsquare\u51fa\u54c1\u7684\u6846\u67b6\uff0c\u7528\u8d77\u6765\u786e\u5b9e\u975e\u5e38\u65b9\u4fbf\u3002**MVVMHabit**\u4e2d\u5f15\u5165\u4e86\n```gradle\napi \"com.squareup.okhttp3:okhttp:3.10.0\"\napi \"com.squareup.retrofit2:retrofit:2.4.0\"\napi \"com.squareup.retrofit2:converter-gson:2.4.0\"\napi \"com.squareup.retrofit2:adapter-rxjava2:2.4.0\"\n```\n\u6784\u5efaRetrofit\u65f6\u52a0\u5165\n```java\nRetrofit retrofit = new Retrofit.Builder()\n    .addConverterFactory(GsonConverterFactory.create())\n    .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n    .build();\n```\n\u6216\u8005\u76f4\u63a5\u4f7f\u7528\u4f8b\u5b50\u7a0b\u5e8f\u4e2d\u5c01\u88c5\u597d\u7684RetrofitClient\n#### 2.3.2\u3001\u7f51\u7edc\u62e6\u622a\u5668\n**LoggingInterceptor\uff1a** \u5168\u5c40\u62e6\u622a\u8bf7\u6c42\u4fe1\u606f\uff0c\u683c\u5f0f\u5316\u6253\u5370Request\u3001Response\uff0c\u53ef\u4ee5\u6e05\u6670\u7684\u770b\u5230\u4e0e\u540e\u53f0\u63a5\u53e3\u5bf9\u63a5\u7684\u6570\u636e\uff0c\n```java\nLoggingInterceptor mLoggingInterceptor = new LoggingInterceptor\n    .Builder()//\u6784\u5efa\u8005\u6a21\u5f0f\n    .loggable(true) //\u662f\u5426\u5f00\u542f\u65e5\u5fd7\u6253\u5370\n    .setLevel(Level.BODY) //\u6253\u5370\u7684\u7b49\u7ea7\n    .log(Platform.INFO) // \u6253\u5370\u7c7b\u578b\n    .request(\"Request\") // request\u7684Tag\n    .response(\"Response\")// Response\u7684Tag\n    .addHeader(\"version\", BuildConfig.VERSION_NAME)//\u6253\u5370\u7248\u672c\n    .build()\n```\n\u6784\u5efaokhttp\u65f6\u52a0\u5165\n```java\nOkHttpClient okHttpClient = new OkHttpClient.Builder()\n    .addInterceptor(mLoggingInterceptor)\n    .build();\n```\n**CacheInterceptor\uff1a** \u7f13\u5b58\u62e6\u622a\u5668\uff0c\u5f53\u6ca1\u6709\u7f51\u7edc\u8fde\u63a5\u7684\u65f6\u5019\u81ea\u52a8\u8bfb\u53d6\u7f13\u5b58\u4e2d\u7684\u6570\u636e\uff0c\u7f13\u5b58\u5b58\u653e\u65f6\u95f4\u9ed8\u8ba4\u4e3a3\u5929\u3002</br>\n\u521b\u5efa\u7f13\u5b58\u5bf9\u8c61\n```java\n//\u7f13\u5b58\u65f6\u95f4\nint CACHE_TIMEOUT = 10 * 1024 * 1024\n//\u7f13\u5b58\u5b58\u653e\u7684\u6587\u4ef6\nFile httpCacheDirectory = new File(mContext.getCacheDir(), \"goldze_cache\");\n//\u7f13\u5b58\u5bf9\u8c61\nCache cache = new Cache(httpCacheDirectory, CACHE_TIMEOUT);\n```\n\u6784\u5efaokhttp\u65f6\u52a0\u5165\n```java\nOkHttpClient okHttpClient = new OkHttpClient.Builder()\n    .cache(cache)\n    .addInterceptor(new CacheInterceptor(mContext))\n    .build();\n```\n#### 2.3.3\u3001Cookie\u7ba1\u7406\n**MVVMHabit**\u63d0\u4f9b\u4e24\u79cdCookieStore\uff1a**PersistentCookieStore** (SharedPreferences\u7ba1\u7406)\u548c**MemoryCookieStore** (\u5185\u5b58\u7ba1\u7406)\uff0c\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u4e1a\u52a1\u9700\u6c42\uff0c\u5728\u6784\u5efaokhttp\u65f6\u52a0\u5165\u76f8\u5e94\u7684cookieJar\n```java\nOkHttpClient okHttpClient = new OkHttpClient.Builder()\n    .cookieJar(new CookieJarImpl(new PersistentCookieStore(mContext)))\n    .build();\n```\n\u6216\u8005\n```java\nOkHttpClient okHttpClient = new OkHttpClient.Builder()\n    .cookieJar(new CookieJarImpl(new MemoryCookieStore()))\n    .build();\n```\n#### 2.3.4\u3001\u7ed1\u5b9a\u751f\u547d\u5468\u671f\n\u8bf7\u6c42\u5728ViewModel\u5c42\u3002\u9ed8\u8ba4\u5728BaseActivity\u4e2d\u6ce8\u5165\u4e86LifecycleProvider\u5bf9\u8c61\u5230ViewModel\uff0c\u7528\u4e8e\u7ed1\u5b9a\u8bf7\u6c42\u7684\u751f\u547d\u5468\u671f\uff0cView\u4e0e\u8bf7\u6c42\u5171\u5b58\u4ea1\u3002\n```java\nRetrofitClient.getInstance().create(DemoApiService.class)\n    .demoGet()\n    .compose(RxUtils.bindToLifecycle(getLifecycleProvider())) // \u8bf7\u6c42\u4e0eView\u5468\u671f\u540c\u6b65\n    .compose(RxUtils.schedulersTransformer())  // \u7ebf\u7a0b\u8c03\u5ea6\n    .compose(RxUtils.exceptionTransformer())   // \u7f51\u7edc\u9519\u8bef\u7684\u5f02\u5e38\u8f6c\u6362\n    .subscribe(new Consumer<BaseResponse<DemoEntity>>() {\n        @Override\n        public void accept(BaseResponse<DemoEntity> response) throws Exception {\n                       \n        }\n    }, new Consumer<ResponseThrowable>() {\n        @Override\n        public void accept(ResponseThrowable throwable) throws Exception {\n                        \n        }\n    });\n\n```\n\u5728\u8bf7\u6c42\u65f6\u5173\u952e\u9700\u8981\u52a0\u5165\u7ec4\u5408\u64cd\u4f5c\u7b26`.compose(RxUtils.bindToLifecycle(getLifecycleProvider()))`<br>\n**\u6ce8\u610f\uff1a** \u7531\u4e8eBaseActivity/BaseFragment\u90fd\u5b9e\u73b0\u4e86LifecycleProvider\u63a5\u53e3\uff0c\u5e76\u4e14\u9ed8\u8ba4\u6ce8\u5165\u5230ViewModel\u4e2d\uff0c\u6240\u4ee5\u5728\u8c03\u7528\u8bf7\u6c42\u65b9\u6cd5\u65f6\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528getLifecycleProvider()\u62ff\u5230\u751f\u547d\u5468\u671f\u63a5\u53e3\u3002\u5982\u679c\u4f60\u6ca1\u6709\u4f7f\u7528 **mvvmabit** \u91cc\u9762\u7684BaseActivity\u6216BaseFragment\uff0c\u4f7f\u7528\u81ea\u5df1\u5b9a\u4e49\u7684Base\uff0c\u90a3\u4e48\u9700\u8981\u8ba9\u4f60\u81ea\u5df1\u7684Activity\u7ee7\u627fRxAppCompatActivity\u3001Fragment\u7ee7\u627fRxFragment\u624d\u80fd\u7528`RxUtils.bindToLifecycle(lifecycle)`\u65b9\u6cd5\u3002\n#### 2.3.5\u3001\u7f51\u7edc\u5f02\u5e38\u5904\u7406\n\u7f51\u7edc\u5f02\u5e38\u5728\u7f51\u7edc\u8bf7\u6c42\u4e2d\u975e\u5e38\u5e38\u89c1\uff0c\u6bd4\u5982\u8bf7\u6c42\u8d85\u65f6\u3001\u89e3\u6790\u9519\u8bef\u3001\u8d44\u6e90\u4e0d\u5b58\u5728\u3001\u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef\u7b49\uff0c\u5728\u5ba2\u6237\u7aef\u5219\u9700\u8981\u505a\u76f8\u5e94\u7684\u5904\u7406(\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u628a\u4e00\u90e8\u5206\u5f02\u5e38\u7529\u9505\u7ed9\u7f51\u7edc\uff0c\u6bd4\u5982\u5f53\u51fa\u73b0code 500\u65f6\uff0c\u63d0\u793a\uff1a\u8bf7\u6c42\u8d85\u65f6\uff0c\u8bf7\u68c0\u67e5\u7f51\u7edc\u8fde\u63a5\uff0c\u6b64\u65f6\u5077\u5077\u5c06\u5f02\u5e38\u4fe1\u606f\u53d1\u9001\u81f3\u540e\u53f0(\u624b\u52a8\u6ed1\u7a3d))\u3002<br>\n\n\u5728\u4f7f\u7528Retrofit\u8bf7\u6c42\u65f6\uff0c\u52a0\u5165\u7ec4\u5408\u64cd\u4f5c\u7b26`.compose(RxUtils.exceptionTransformer())`\uff0c\u5f53\u53d1\u751f\u7f51\u7edc\u5f02\u5e38\u65f6\uff0c\u56de\u8c03onError(ResponseThrowable)\u65b9\u6cd5\uff0c\u53ef\u4ee5\u62ff\u5230\u5f02\u5e38\u7684code\u548cmessage\uff0c\u505a\u76f8\u5e94\u5904\u7406\u3002<br>\n\n> mvvmhabit\u4e2d\u81ea\u5b9a\u4e49\u4e86\u4e00\u4e2a[ExceptionHandle](./mvvmhabit/src/main/java/me/goldze/mvvmhabit/http/ExceptionHandle.java)\uff0c\u5df2\u4e3a\u4f60\u5b8c\u6210\u4e86\u5927\u90e8\u5206\u7f51\u7edc\u5f02\u5e38\u7684\u5224\u65ad\uff0c\u4e5f\u53ef\u81ea\u884c\u6839\u636e\u9879\u76ee\u7684\u5177\u4f53\u9700\u6c42\u8c03\u6574\u903b\u8f91\u3002<br>\n\n**\u6ce8\u610f\uff1a** \u8fd9\u91cc\u7684\u7f51\u7edc\u5f02\u5e38code\uff0c\u5e76\u975e\u662f\u4e0e\u670d\u52a1\u7aef\u534f\u8bae\u7ea6\u5b9a\u7684code\u3002\u7f51\u7edc\u5f02\u5e38\u53ef\u4ee5\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u534f\u8bae\u5f02\u5e38\uff0c\u5373\u51fa\u73b0code = 404\u3001500\u7b49\uff0c\u5c5e\u4e8eHttpException\uff0c\u53e6\u4e00\u90e8\u5206\u4e3a\u8bf7\u6c42\u5f02\u5e38\uff0c\u5373\u51fa\u73b0\uff1a\u8fde\u63a5\u8d85\u65f6\u3001\u89e3\u6790\u9519\u8bef\u3001\u8bc1\u4e66\u9a8c\u8bc1\u5931\u7b49\u3002\u800c\u4e0e\u670d\u52a1\u7aef\u7ea6\u5b9a\u7684code\u89c4\u5219\uff0c\u5b83\u4e0d\u5c5e\u4e8e\u7f51\u7edc\u5f02\u5e38\uff0c\u5b83\u662f\u5c5e\u4e8e\u4e00\u79cd\u4e1a\u52a1\u5f02\u5e38\u3002\u5728\u8bf7\u6c42\u4e2d\u53ef\u4ee5\u4f7f\u7528RxJava\u7684filter(\u8fc7\u6ee4\u5668)\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49BaseSubscriber\u7edf\u4e00\u5904\u7406\u7f51\u7edc\u8bf7\u6c42\u7684\u4e1a\u52a1\u903b\u8f91\u5f02\u5e38\u3002\u7531\u4e8e\u6bcf\u4e2a\u516c\u53f8\u7684\u4e1a\u52a1\u534f\u8bae\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u5177\u4f53\u9700\u8981\u4f60\u81ea\u5df1\u6765\u5904\u7406\u8be5\u7c7b\u5f02\u5e38\u3002\n## 3\u3001\u8f85\u52a9\u529f\u80fd\n> \u4e00\u4e2a\u5b8c\u6574\u7684\u5feb\u901f\u5f00\u53d1\u6846\u67b6\uff0c\u5f53\u7136\u4e5f\u5c11\u4e0d\u4e86\u5e38\u7528\u7684\u8f85\u52a9\u7c7b\u3002\u4e0b\u9762\u6765\u4ecb\u7ecd\u4e00\u4e0b**MVVMabit**\u4e2d\u6709\u54ea\u4e9b\u8f85\u52a9\u529f\u80fd\u3002\n### 3.1\u3001\u4e8b\u4ef6\u603b\u7ebf\n> \u4e8b\u4ef6\u603b\u7ebf\u5b58\u5728\u7684\u4f18\u70b9\u60f3\u5fc5\u5927\u5bb6\u90fd\u5f88\u6e05\u695a\u4e86\uff0candroid\u81ea\u5e26\u7684\u5e7f\u64ad\u673a\u5236\u5bf9\u4e8e\u7ec4\u4ef6\u95f4\u7684\u901a\u4fe1\u800c\u8a00\uff0c\u4f7f\u7528\u975e\u5e38\u7e41\u7410\uff0c\u901a\u4fe1\u7ec4\u4ef6\u5f7c\u6b64\u4e4b\u95f4\u7684\u8ba2\u9605\u548c\u53d1\u5e03\u7684\u8026\u5408\u4e5f\u6bd4\u8f83\u4e25\u91cd\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u4e8b\u4ef6\u7684\u5b9a\u4e49\uff0c\u5e7f\u64ad\u673a\u5236\u5c40\u9650\u4e8e\u5e8f\u5217\u5316\u7684\u7c7b\uff08\u901a\u8fc7Intent\u4f20\u9012\uff09\uff0c\u4e0d\u591f\u7075\u6d3b\u3002\n#### 3.3.1\u3001RxBus\nRxBus\u5e76\u4e0d\u662f\u4e00\u4e2a\u5e93\uff0c\u800c\u662f\u4e00\u79cd\u6a21\u5f0f\u3002\u76f8\u4fe1\u5927\u591a\u6570\u5f00\u53d1\u8005\u90fd\u4f7f\u7528\u8fc7EventBus\uff0c\u5bf9RxBus\u4e5f\u662f\u5f88\u719f\u6089\u3002\u7531\u4e8e**MVVMabit**\u4e2d\u5df2\u7ecf\u52a0\u5165RxJava\uff0c\u6240\u4ee5\u91c7\u7528\u4e86RxBus\u4ee3\u66ffEventBus\u4f5c\u4e3a\u4e8b\u4ef6\u603b\u7ebf\u901a\u4fe1\uff0c\u4ee5\u51cf\u5c11\u5e93\u7684\u4f9d\u8d56\u3002\n\n\u4f7f\u7528\u65b9\u6cd5\uff1a\n\n\u5728ViewModel\u4e2d\u91cd\u5199registerRxBus()\u65b9\u6cd5\u6765\u6ce8\u518cRxBus\uff0c\u91cd\u5199removeRxBus()\u65b9\u6cd5\u6765\u79fb\u9664RxBus\n```java\n//\u8ba2\u9605\u8005\nprivate Disposable mSubscription;\n//\u6ce8\u518cRxBus\n@Override\npublic void registerRxBus() {\n    super.registerRxBus();\n    mSubscription = RxBus.getDefault().toObservable(String.class)\n        .subscribe(new Consumer<String>() {\n            @Override\n            public void accept(String s) throws Exception {\n\n            }\n        });\n    //\u5c06\u8ba2\u9605\u8005\u52a0\u5165\u7ba1\u7406\u7ad9\n    RxSubscriptions.add(mSubscription);\n}\n\n//\u79fb\u9664RxBus\n@Override\npublic void removeRxBus() {\n    super.removeRxBus();\n    //\u5c06\u8ba2\u9605\u8005\u4ece\u7ba1\u7406\u7ad9\u4e2d\u79fb\u9664\n    RxSubscriptions.remove(mSubscription);\n}\n```\n\u5728\u9700\u8981\u6267\u884c\u56de\u8c03\u7684\u5730\u65b9\u53d1\u9001\n```java\nRxBus.getDefault().post(object);\n```\n#### 3.3.2\u3001Messenger\nMessenger\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u5168\u5c40\u7684\u6d88\u606f\u901a\u4fe1\u5de5\u5177\uff0c\u5728\u6211\u4eec\u7684\u590d\u6742\u4e1a\u52a1\u4e2d\uff0c\u96be\u514d\u4f1a\u51fa\u73b0\u4e00\u4e9b\u4ea4\u53c9\u7684\u4e1a\u52a1\uff0c\u6bd4\u5982ViewModel\u4e0eViewModel\u4e4b\u95f4\u9700\u8981\u6709\u6570\u636e\u4ea4\u6362\uff0c\u8fd9\u65f6\u5019\u53ef\u4ee5\u8f7b\u677e\u5730\u4f7f\u7528Messenger\u53d1\u9001\u4e00\u4e2a\u5b9e\u4f53\u6216\u4e00\u4e2a\u7a7a\u6d88\u606f\uff0c\u5c06\u4e8b\u4ef6\u4ece\u4e00\u4e2aViewModel\u56de\u8c03\u5230\u53e6\u4e00\u4e2aViewModel\u4e2d\u3002\n\n\u4f7f\u7528\u65b9\u6cd5\uff1a\n\n\u5b9a\u4e49\u4e00\u4e2a\u9759\u6001String\u7c7b\u578b\u7684\u5b57\u7b26\u4e32token\n```java\npublic static final String TOKEN_LOGINVIEWMODEL_REFRESH = \"token_loginviewmodel_refresh\";\n```\n\u5728ViewModel\u4e2d\u6ce8\u518c\u6d88\u606f\u76d1\u542c\n```java\n//\u6ce8\u518c\u4e00\u4e2a\u7a7a\u6d88\u606f\u76d1\u542c \n//\u53c2\u65701\uff1a\u63a5\u53d7\u4eba\uff08\u4e0a\u4e0b\u6587\uff09\n//\u53c2\u65702\uff1a\u5b9a\u4e49\u7684token\n//\u53c2\u65703\uff1a\u6267\u884c\u7684\u56de\u8c03\u76d1\u542c\nMessenger.getDefault().register(this, LoginViewModel.TOKEN_LOGINVIEWMODEL_REFRESH, new BindingAction() {\n    @Override\n    public void call() {\n\t\n    }\n});\n\n//\u6ce8\u518c\u4e00\u4e2a\u5e26\u6570\u636e\u56de\u8c03\u7684\u6d88\u606f\u76d1\u542c \n//\u53c2\u65701\uff1a\u63a5\u53d7\u4eba\uff08\u4e0a\u4e0b\u6587\uff09\n//\u53c2\u65702\uff1a\u5b9a\u4e49\u7684token\n//\u53c2\u65703\uff1a\u5b9e\u4f53\u7684\u6cdb\u578b\u7ea6\u675f\n//\u53c2\u65704\uff1a\u6267\u884c\u7684\u56de\u8c03\u76d1\u542c\nMessenger.getDefault().register(this, LoginViewModel.TOKEN_LOGINVIEWMODEL_REFRESH, String.class, new BindingConsumer<String>() {\n    @Override\n    public void call(String s) {\n         \n    }\n});\n```\n\u5728\u9700\u8981\u56de\u8c03\u7684\u5730\u65b9\u4f7f\u7528token\u53d1\u9001\u6d88\u606f\n```java\n//\u53d1\u9001\u4e00\u4e2a\u7a7a\u6d88\u606f\n//\u53c2\u65701\uff1a\u5b9a\u4e49\u7684token\nMessenger.getDefault().sendNoMsg(LoginViewModel.TOKEN_LOGINVIEWMODEL_REFRESH);\n\n//\u53d1\u9001\u4e00\u4e2a\u5e26\u6570\u636e\u56de\u8c03\u6d88\u606f\n//\u53c2\u65701\uff1a\u56de\u8c03\u7684\u5b9e\u4f53\n//\u53c2\u65702\uff1a\u5b9a\u4e49\u7684token\nMessenger.getDefault().send(\"refresh\",LoginViewModel.TOKEN_LOGINVIEWMODEL_REFRESH);\n```\n> token\u6700\u597d\u4e0d\u8981\u91cd\u540d\uff0c\u4e0d\u7136\u53ef\u80fd\u5c31\u4f1a\u51fa\u73b0\u903b\u8f91\u4e0a\u7684bug\uff0c\u4e3a\u4e86\u66f4\u597d\u7684\u7ef4\u62a4\u548c\u6e05\u6670\u903b\u8f91\uff0c\u5efa\u8bae\u4ee5`aa_bb_cc`\u7684\u683c\u5f0f\u6765\u5b9a\u4e49token\u3002aa\uff1aTOKEN\uff0cbb\uff1aViewModel\u7684\u7c7b\u540d\uff0ccc\uff1a\u52a8\u4f5c\u540d\uff08\u529f\u80fd\u540d\uff09\u3002\n\n> \u4e3a\u4e86\u907f\u514d\u5927\u91cf\u4f7f\u7528Messenger\uff0c\u5efa\u8bae\u53ea\u5728ViewModel\u4e0eViewModel\u4e4b\u95f4\u4f7f\u7528\uff0cView\u4e0eViewModel\u4e4b\u95f4\u91c7\u7528ObservableField\u53bb\u76d1\u542cUI\u4e0a\u7684\u903b\u8f91\uff0c\u53ef\u5728\u7ee7\u627f\u4e86Base\u7684Activity\u6216Fragment\u4e2d\u91cd\u5199initViewObservable()\u65b9\u6cd5\u6765\u521d\u59cb\u5316UI\u7684\u76d1\u542c\n\n\n\u6ce8\u518c\u4e86\u76d1\u542c\uff0c\u5f53\u7136\u4e5f\u8981\u89e3\u9664\u5b83\u3002\u5728BaseActivity\u3001BaseFragment\u7684onDestroy()\u65b9\u6cd5\u91cc\u5df2\u7ecf\u8c03\u7528`Messenger.getDefault().unregister(viewModel);`\u89e3\u9664\u6ce8\u518c\uff0c\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3\u5fd8\u8bb0\u89e3\u9664\u5bfc\u81f4\u7684\u903b\u8f91\u9519\u8bef\u548c\u5185\u5b58\u6cc4\u6f0f\u3002\n### 3.2\u3001\u6587\u4ef6\u4e0b\u8f7d\n\u6587\u4ef6\u4e0b\u8f7d\u51e0\u4e4e\u662f\u6bcf\u4e2aapp\u5fc5\u5907\u7684\u529f\u80fd\uff0c\u56fe\u6587\u7684\u4e0b\u8f7d\uff0c\u8f6f\u4ef6\u7684\u5347\u7ea7\u7b49\u90fd\u8981\u7528\u5230\uff0cmvvmhabit\u4f7f\u7528Retrofit+Okhttp+RxJava+RxBus\u5b9e\u73b0\u4e00\u884c\u4ee3\u7801\u76d1\u542c\u5e26\u8fdb\u5ea6\u7684\u6587\u4ef6\u4e0b\u8f7d\u3002\n\n\u4e0b\u8f7d\u6587\u4ef6\n```java\nString loadUrl = \"\u4f60\u7684\u6587\u4ef6\u4e0b\u8f7d\u8def\u5f84\";\nString destFileDir = context.getCacheDir().getPath();  //\u6587\u4ef6\u5b58\u653e\u7684\u8def\u5f84\nString destFileName = System.currentTimeMillis() + \".apk\";//\u6587\u4ef6\u5b58\u653e\u7684\u540d\u79f0\nDownLoadManager.getInstance().load(loadUrl, new ProgressCallBack<ResponseBody>(destFileDir, destFileName) {\n    @Override\n    public void onStart() {\n        //RxJava\u7684onStart()\n    }\n\n    @Override\n    public void onCompleted() {\n        //RxJava\u7684onCompleted()\n    }\n\n    @Override\n    public void onSuccess(ResponseBody responseBody) {\n        //\u4e0b\u8f7d\u6210\u529f\u7684\u56de\u8c03\n    }\n\n    @Override\n    public void progress(final long progress, final long total) {\n        //\u4e0b\u8f7d\u4e2d\u7684\u56de\u8c03 progress\uff1a\u5f53\u524d\u8fdb\u5ea6 \uff0ctotal\uff1a\u6587\u4ef6\u603b\u5927\u5c0f\n    }\n\n    @Override\n    public void onError(Throwable e) {\n        //\u4e0b\u8f7d\u9519\u8bef\u56de\u8c03\n    }\n});\n```\n> \u5728ProgressResponseBody\u4e2d\u4f7f\u7528\u4e86RxBus\uff0c\u53d1\u9001\u4e0b\u8f7d\u8fdb\u5ea6\u4fe1\u606f\u5230ProgressCallBack\u4e2d\uff0c\u7ee7\u627fProgressCallBack\u5c31\u53ef\u4ee5\u76d1\u542c\u5230\u4e0b\u8f7d\u72b6\u6001\u3002\u56de\u8c03\u65b9\u6cd5\u5168\u90e8\u6267\u884c\u5728\u4e3b\u7ebf\u7a0b\uff0c\u65b9\u4fbfUI\u7684\u66f4\u65b0\uff0c\u8be6\u60c5\u8bf7\u53c2\u8003\u4f8b\u5b50\u7a0b\u5e8f\u3002\n### 3.3\u3001ContainerActivity\n\u4e00\u4e2a\u76db\u88c5Fragment\u7684\u4e00\u4e2a\u5bb9\u5668(\u4ee3\u7406)Activity\uff0c\u666e\u901a\u754c\u9762\u53ea\u9700\u8981\u7f16\u5199Fragment\uff0c\u4f7f\u7528\u6b64Activity\u76db\u88c5\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u6bcf\u4e2a\u754c\u9762\u90fd\u5728AndroidManifest\u4e2d\u6ce8\u518c\u4e00\u904d\n\n\u4f7f\u7528\u65b9\u6cd5\uff1a\n\n\u5728ViewModel\u4e2d\u8c03\u7528BaseViewModel\u7684\u65b9\u6cd5\u5f00\u4e00\u4e2aFragment\n```java\nstartContainerActivity(\u4f60\u7684Fragment\u7c7b\u540d.class.getCanonicalName())\n```\n\u5728ViewModel\u4e2d\u8c03\u7528BaseViewModel\u7684\u65b9\u6cd5\uff0c\u643a\u5e26\u4e00\u4e2a\u5e8f\u5217\u5316\u5b9e\u4f53\u6253\u5f00\u4e00\u4e2aFragment\n```java\nBundle mBundle = new Bundle();\nmBundle.putParcelable(\"entity\", entity);\nstartContainerActivity(\u4f60\u7684Fragment\u7c7b\u540d.class.getCanonicalName(), mBundle);\n```\n\u5728\u4f60\u7684Fragment\u4e2d\u53d6\u51fa\u5b9e\u4f53\n```java\nBundle mBundle = getArguments();\nif (mBundle != null) {\n    entity = mBundle.getParcelable(\"entity\");\n}\n```\n### 3.4\u30016.0\u6743\u9650\u7533\u8bf7\n> \u5bf9RxPermissions\u5df2\u7ecf\u719f\u6089\u7684\u670b\u53cb\u53ef\u4ee5\u8df3\u8fc7\u3002\n\n\u4f7f\u7528\u65b9\u6cd5\uff1a\n\n\u4f8b\u5982\u8bf7\u6c42\u76f8\u673a\u6743\u9650\uff0c\u5728ViewModel\u4e2d\u8c03\u7528\n```java\n//\u8bf7\u6c42\u6253\u5f00\u76f8\u673a\u6743\u9650\nRxPermissions rxPermissions = new RxPermissions((Activity) context);\nrxPermissions.request(Manifest.permission.CAMERA)\n    .subscribe(new Consumer<Boolean>() {\n        @Override\n        public void accept(Boolean aBoolean) throws Exception {\n            if (aBoolean) {\n                ToastUtils.showShort(\"\u6743\u9650\u5df2\u7ecf\u6253\u5f00\uff0c\u76f4\u63a5\u8df3\u5165\u76f8\u673a\");\n            } else {\n                ToastUtils.showShort(\"\u6743\u9650\u88ab\u62d2\u7edd\");\n            }\n        }\n    });\n```\n\u66f4\u591a\u6743\u9650\u7533\u8bf7\u65b9\u5f0f\u8bf7\u53c2\u8003[RxPermissions\u539f\u9879\u76ee\u5730\u5740](https://github.com/tbruyelle/RxPermissions)\n### 3.5\u3001\u56fe\u7247\u538b\u7f29\n> \u4e3a\u4e86\u8282\u7ea6\u7528\u6237\u6d41\u91cf\u548c\u52a0\u5feb\u56fe\u7247\u4e0a\u4f20\u7684\u901f\u5ea6\uff0c\u67d0\u4e9b\u573a\u666f\u5c06\u56fe\u7247\u5728\u672c\u5730\u538b\u7f29\u540e\u518d\u4f20\u7ed9\u540e\u53f0\uff0c\u6240\u4ee5\u7279\u6b64\u63d0\u4f9b\u4e00\u4e2a\u56fe\u7247\u538b\u7f29\u7684\u8f85\u52a9\u529f\u80fd\u3002\n\n\u4f7f\u7528\u65b9\u6cd5\uff1a\n\nRxJava\u7684\u65b9\u5f0f\u538b\u7f29\u5355\u5f20\u56fe\u7247\uff0c\u5f97\u5230\u4e00\u4e2a\u538b\u7f29\u540e\u7684\u56fe\u7247\u6587\u4ef6\u5bf9\u8c61\n```java\nString filePath = \"mnt/sdcard/1.png\";\nImageUtils.compressWithRx(filePath, new Consumer<File>() {\n    @Override\n    public void accept(File file) throws Exception {\n        //\u5c06\u6587\u4ef6\u653e\u5165RequestBody\n        ...\n    }\n});\n```\nRxJava\u7684\u65b9\u5f0f\u538b\u7f29\u591a\u5f20\u56fe\u7247\uff0c\u6309\u96c6\u5408\u987a\u5e8f\u6bcf\u538b\u7f29\u6210\u529f\u4e00\u5f20\uff0c\u90fd\u5c06\u5728onNext\u65b9\u6cd5\u4e2d\u5f97\u5230\u4e00\u4e2a\u538b\u7f29\u540e\u7684\u56fe\u7247\u6587\u4ef6\u5bf9\u8c61\n```java\nList<String> filePaths = new ArrayList<>();\nfilePaths.add(\"mnt/sdcard/1.png\");\nfilePaths.add(\"mnt/sdcard/2.png\");\nImageUtils.compressWithRx(filePaths, new Subscriber() {\n    @Override\n    public void onCompleted() {\n\t\n    }\n\t\n    @Override\n    public void onError(Throwable e) {\n\t\n    }\n\t\n    @Override\n    public void onNext(File file) {\n\n    }\n});\n```\n### 3.6\u3001\u5176\u4ed6\u8f85\u52a9\u7c7b\n**ToastUtils\uff1a** \u5410\u53f8\u5de5\u5177\u7c7b\n\n**MaterialDialogUtils\uff1a** Material\u98ce\u683c\u5bf9\u8bdd\u6846\u5de5\u5177\u7c7b\n\n**SPUtils\uff1a** SharedPreferences\u5de5\u5177\u7c7b\n\n**SDCardUtils\uff1a** SD\u5361\u76f8\u5173\u5de5\u5177\u7c7b\n\n**ConvertUtils\uff1a** \u8f6c\u6362\u76f8\u5173\u5de5\u5177\u7c7b\n\n**StringUtils\uff1a** \u5b57\u7b26\u4e32\u76f8\u5173\u5de5\u5177\u7c7b\n\n**RegexUtils\uff1a** \u6b63\u5219\u76f8\u5173\u5de5\u5177\u7c7b\n\n**KLog\uff1a** \u65e5\u5fd7\u6253\u5370\uff0c\u542bjson\u683c\u5f0f\u6253\u5370\n\n## 4\u3001\u9644\u52a0\n\n### 4.1\u3001\u7f16\u8bd1\u9519\u8bef\u89e3\u51b3\u65b9\u6cd5\n> \u4f7f\u7528databinding\u5176\u5b9e\u6709\u4e2a\u7f3a\u70b9\uff0c\u5c31\u662f\u4f1a\u9047\u5230\u4e00\u4e9b\u7f16\u8bd1\u9519\u8bef\uff0c\u800cAS\u4e0d\u80fd\u5f88\u597d\u7684\u5b9a\u4f4d\u5230\u9519\u8bef\u7684\u4f4d\u7f6e\uff0c\u8fd9\u5bf9\u4e8e\u521a\u5f00\u59cb\u4f7f\u7528databinding\u7684\u5f00\u53d1\u8005\u6765\u8bf4\u662f\u4e00\u4e2a\u6bd4\u8f83\u90c1\u95f7\u7684\u4e8b\u3002\u90a3\u4e48\u6211\u5728\u6b64\u628a\u6211\u81ea\u5df1\u5728\u5f00\u53d1\u4e2d\u9047\u5230\u7684\u5404\u79cd\u7f16\u8bd1\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u5206\u4eab\u7ed9\u5927\u5bb6\uff0c\u5e0c\u671b\u8fd9\u5bf9\u4f60\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\n\n##### 4.1.1\u3001\u7ed1\u5b9a\u9519\u8bef\n\u7ed1\u5b9a\u9519\u8bef\u662f\u4e00\u4e2a\u5f88\u5e38\u89c1\u7684\u9519\u8bef\uff0c\u57fa\u672c\u90fd\u4f1a\u72af\u3002\u6bd4\u5982TextView\u7684 `android:text=\"\"` \uff0c\u672c\u6765\u8981\u7ed1\u5b9a\u7684\u662f\u4e00\u4e2aString\u7c7b\u578b\uff0c\u7ed3\u679c\u4f60\u4e0d\u5c0f\u5fc3\uff0c\u53ef\u80fd\u7ed1\u4e86\u4e00\u4e2aBoolean\u4e0a\u53bb\uff0c\u6216\u8005\u53d8\u91cf\u540d\u5199\u9519\u4e86\uff0c\u8fd9\u65f6\u5019\u7f16\u8f91\u5668\u4e0d\u4f1a\u62a5\u7ea2\u9519\uff0c\u800c\u662f\u5728\u70b9\u7f16\u8bd1\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u5728AS\u7684Messages\u4e2d\u4f1a\u51fa\u73b0\u9519\u8bef\u63d0\u793a\uff0c\u5982\u4e0b\u56fe\uff1a\n\n<img src=\"./img/error1.png\" width=\"640\" hegiht=\"640\" align=center />\n\n\u89e3\u51b3\u65b9\u6cd5\uff1a\u628a\u9519\u8bef\u63d0\u793a\u62c9\u5230\u6700\u4e0b\u9762 (\u4e0a\u9762\u7684\u63d0\u793a\u627e\u4e0d\u5230BR\u7c7b\u8fd9\u4e2a\u4e0d\u8981\u7ba1\u5b83)\uff0c\u770b\u6700\u540e\u4e00\u4e2a\u9519\u8bef \uff0c\u8fd9\u91cc\u4f1a\u63d0\u793a\u662f\u54ea\u4e2axml\u51fa\u4e86\u9519\uff0c\u5e76\u4e14\u4f1a\u5b9a\u4f4d\u5230\u884c\u6570\uff0c\u6309\u7167\u63d0\u793a\u627e\u5230\u5bf9\u5e94\u4f4d\u7f6e\uff0c\u5373\u53ef\u89e3\u51b3\u8be5\u7f16\u8bd1\u9519\u8bef\u7684\u95ee\u9898\u3002\n\n**\u6ce8\u610f\uff1a** \u884c\u6570\u8981+1\uff0c\u610f\u601d\u662f\u4e0a\u9762\u62a5\u51fa\u7b2c33\u884c\u9519\u8bef\uff0c\u5b9e\u9645\u662f\u7b2c34\u884c\u9519\u8bef\uff0cAS\u5b9a\u4f4d\u7684\u4e0d\u51c6\u786e (\u8fd9\u53ef\u80fd\u662f\u5b83\u7684\u4e00\u4e2abug)\n\n##### 4.1.2\u3001xml\u5bfc\u5305\u9519\u8bef\n\u5728xml\u4e2d\u9700\u8981\u5bfc\u5165ViewModel\u6216\u8005\u4e00\u4e9b\u4e1a\u52a1\u76f8\u5173\u7684\u7c7b\uff0c\u5047\u5982\u5728xml\u4e2d\u5bfc\u9519\u4e86\u7c7b\uff0c\u90a3\u4e00\u884c\u5219\u4f1a\u62a5\u7ea2\uff0c\u4f46\u662fres/layout\u5374\u6ca1\u6709\u9519\u8bef\u63d0\u793a\uff0c\u6709\u4e00\u79cd\u573a\u666f\uff0c\u975e\u5e38\u7279\u6b8a\uff0c\u4e0d\u5bb9\u6613\u627e\u51fa\u9519\u8bef\u4f4d\u7f6e\u3002\u5c31\u662f\u4f60\u5199\u4e86\u4e00\u4e2axml\uff0c\u5bfc\u5165\u4e86\u4e00\u4e2a\u7c7b\uff0c\u6bd4\u5982XXXUtils\uff0c\u540e\u6765\u56e0\u4e3a\u4e1a\u52a1\u9700\u6c42\uff0c\u628a\u90a3\u4e2aXXXUtils\u5220\u4e86\uff0c\u8fd9\u65f6\u5019res/layout\u4e0b\u4e0d\u4f1a\u51fa\u73b0\u4efb\u4f55\u9519\u8bef\uff0c\u800c\u4f60\u5728\u7f16\u8bd1\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u51fa\u73b0\u9519\u8bef\u65e5\u5fd7\u3002\u82e6\u903c\u7684\u662f\uff0c\u4e0d\u4f1a\u50cf\u4e0a\u9762\u90a3\u6837\u63d0\u793a\u54ea\u4e00\u4e2axml\u6587\u4ef6\uff0c\u54ea\u4e00\u884c\u51fa\u9519\u4e86\uff0c\u6700\u540e\u4e00\u4e2a\u9519\u8bef\u53ea\u662f\u4e00\u5927\u7247\u7684\u62a5\u9519\u62a5\u544a\u3002\u5982\u4e0b\u56fe\uff1a\n\n<img src=\"./img/error2.png\" width=\"640\" hegiht=\"640\" align=center />\n\n\u89e3\u51b3\u65b9\u6cd5\uff1a\u540c\u6837\u627e\u5230\u6700\u540e\u4e00\u4e2a\u9519\u8bef\u63d0\u793a\uff0c\u627e\u5230Cannot resolve type for **xxx**\u8fd9\u4e00\u53e5 (xxx\u662f\u7c7b\u540d)\uff0c\u7136\u540e\u4f7f\u7528\u5168\u5c40\u641c\u7d22 (Ctrl+H) \uff0c\u641c\u7d22\u54ea\u4e2axml\u5f15\u7528\u4e86\u8fd9\u4e2a\u7c7b\uff0c\u8ddf\u8e2a\u70b9\u51fb\u8fdb\u53bb\uff0c\u5728xml\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u7ea2\u9519\uff0c\u770b\u5230\u9519\u8bef\u4f60\u5c31\u4f1a\u660e\u767d\u4e86\uff0c\u8fd9\u6837\u5c31\u53ef\u89e3\u51b3\u8be5\u7f16\u8bd1\u9519\u8bef\u7684\u95ee\u9898\u3002\n\n##### 4.1.3\u3001build\u9519\u8bef\n\u6784\u5efa\u591amodule\u5de5\u7a0b\u65f6\uff0c\u5982\u51fa\u73b0\u30104.1.1\u3001\u7ed1\u5b9a\u9519\u8bef\u3011\uff0c\u4e14\u4f60\u80fd\u786e\u5b9a\u8fd9\u4e2a\u7ed1\u5b9a\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u7ecf\u8fc7\u4fee\u6539\u540e\u51fa\u73b0\u4e0b\u56fe\u9519\u8bef\uff1a\n\n<img src=\"./img/error3.png\" width=\"640\" hegiht=\"640\" align=center />\n\n\u89e3\u51b3\u65b9\u6cd5\uff1a\n\u8fd9\u79cd\u662fdatabinding\u6bd4\u8f83\u5927\u7684\u5751\uff0c\u6e05\u7406\u3001\u91cd\u6784\u548c\u5220build\u90fd\u4e0d\u8d77\u4f5c\u7528\uff0c\u7f51\u4e0a\u5f88\u96be\u627e\u5230\u65b9\u6cd5\u3002\u7ecf\u8fc7\u8bd5\u9a8c\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\u624b\u52a8\u521b\u5efa\u5f02\u5e38\u4e2d\u63d0\u5230\u7684\u6587\u4ef6\u5939\uff0c\u6216\u8005\u62f7\u8d1d\u4e0a\u4e00\u4e2a\u6ca1\u6709\u62a5\u9519\u7684\u7248\u672c\u4e2d\u5bf9\u5e94\u7684\u6587\u4ef6\u5939\uff0c\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u5f02\u5e38\n\n##### 4.1.4\u3001\u81ea\u52a8\u751f\u6210\u7c7b\u9519\u8bef\n\u6709\u65f6\u5019\u5728\u5199\u5b8cxml\u65f6\uff0cdatabinding\u6ca1\u6709\u81ea\u52a8\u751f\u6210\u5bf9\u5e94\u7684Binding\u7c7b\u53ca\u5c5e\u6027\u3002\u6bd4\u5982\u65b0\u5efa\u4e86\u4e00\u4e2aactivity_login.xml\uff0c\u6309\u7167databinding\u7684\u5199\u6cd5\u52a0\u5165```<layout> <variable>```\u540e\uff0c\u7406\u8bba\u4e0a\u4f1a\u81ea\u52a8\u5bf9\u5e94\u751f\u6210ActivityLoginBinding.java\u7c7b\u548cvariable\u7684\u5c5e\u6027\uff0c\u53ef\u80fd\u662fas\u5bf9databding\u7684\u652f\u6301\u8fd8\u4e0d\u591f\u5427\uff0c\u6709\u65f6\u5019\u504f\u504f\u5c31\u4e0d\u751f\u6210\uff0c\u5bfc\u81f4BR.xxx\u62a5\u7ea2\u7b49\u4e00\u4e9b\u83ab\u540d\u7684\u9519\u8bef\u3002\n\n\u89e3\u51b3\u65b9\u6cd5\uff1a\u5176\u5b9e\u786e\u4fdd\u81ea\u5df1\u7684\u5199\u6cd5\u6ca1\u6709\u95ee\u9898\uff0c\u662f\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\u7684\uff0c\u62a5\u7ea2\u4e0d\u4e00\u5b9a\u662f\u4f60\u5199\u7684\u6709\u95ee\u9898\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u7f16\u8bd1\u5668\u62bd\u98ce\u4e86\u3002\u6216\u8005\u4f7f\u7528\u4e0b\u9762\u7684\u529e\u6cd5</br>\n\u7b2c\u4e00\u62db\uff1aBuild->Clean Project\uff1b</br>\u7b2c\u4e8c\u62db\uff1aBuild->Rebuild Project\uff1b</br>\u7b2c\u4e09\u62db\uff1a\u91cd\u542f\u5927\u6cd5\u3002\n\n##### 4.1.5\u3001gradle\u9519\u8bef\n\u5982\u679c\u9047\u5230\u4ee5\u4e0b\u7f16\u8bd1\u95ee\u9898\uff1a\n\n\u9519\u8bef: \u65e0\u6cd5\u5c06\u7c7b BindingRecyclerViewAdapters\u4e2d\u7684\u65b9\u6cd5 setAdapter\u5e94\u7528\u5230\u7ed9\u5b9a\u7c7b\u578b;\n\u9700\u8981: RecyclerView,ItemBinding,List,BindingRecyclerViewAdapter,ItemIds<? super T>,ViewHolderFactory\n\u627e\u5230: RecyclerView,ItemBinding,ObservableList,BindingRecyclerViewAdapter<CAP#1>,ItemIds,ViewHolderFactory\n\u539f\u56e0: \u63a8\u65ad\u7c7b\u578b\u4e0d\u7b26\u5408\u7b49\u5f0f\u7ea6\u675f\u6761\u4ef6\n\u63a8\u65ad: CAP#1\n\u7b49\u5f0f\u7ea6\u675f\u6761\u4ef6: CAP#1,NetWorkItemViewModel\n\u5176\u4e2d, T\u662f\u7c7b\u578b\u53d8\u91cf:\nT\u6269\u5c55\u5df2\u5728\u65b9\u6cd5 setAdapter(RecyclerView,ItemBinding,List,BindingRecyclerViewAdapter,ItemIds<? super T>,ViewHolderFactory)\u4e2d\u58f0\u660e\u7684Object\n\u5176\u4e2d, CAP#1\u662f\u65b0\u7c7b\u578b\u53d8\u91cf:\nCAP#1\u4ece?\u7684\u6355\u83b7\u6269\u5c55Object\n\n\u4e00\u822c\u662f\u7531\u4e8egradle plugin\u7248\u672c3.5.1\u9020\u6210\u7684\uff0c\u8bf7\u6362\u6210gradle plugin 3.5.0\u4ee5\u4e0b\u7248\u672c\n\n## \u6df7\u6dc6\n\u4f8b\u5b50\u7a0b\u5e8f\u4e2d\u7ed9\u51fa\u4e86\u6700\u65b0\u7684\u3010MVVMHabit\u6df7\u6dc6\u89c4\u5219\u3011\uff0c\u5305\u542bMVVMHabit\u4e2d\u4f9d\u8d56\u7684\u6240\u6709\u7b2c\u4e09\u65b9library\uff0c\u53ef\u4ee5\u5c06\u89c4\u5219\u76f4\u63a5\u62f7\u8d1d\u5230\u81ea\u5df1app\u7684\u6df7\u6dc6\u89c4\u5219\u4e2d\u3002\u5728\u6b64\u57fa\u7840\u4e0a\u4f60\u53ea\u9700\u8981\u5173\u6ce8\u81ea\u5df1\u4e1a\u52a1\u4ee3\u7801\u4ee5\u53ca\u81ea\u5df1\u5f15\u5165\u7b2c\u4e09\u65b9\u7684\u6df7\u6dc6\uff0c\u3010MVVMHabit\u6df7\u6dc6\u89c4\u5219\u3011\u8bf7\u53c2\u8003app\u76ee\u5f55\u4e0b\u7684[proguard-rules.pro](./app/proguard-rules.pro)\u6587\u4ef6\u3002\n\n## \u7ec4\u4ef6\u5316\n\u8fdb\u9636Android\u7ec4\u4ef6\u5316\u65b9\u6848\uff0c\u8bf7\u79fb\u6b65\uff1a[MVVMHabitComponent](https://github.com/goldze/MVVMHabitComponent)\n\n## About\n**goldze\uff1a** \u672c\u4eba\u559c\u6b22\u5c1d\u8bd5\u65b0\u7684\u6280\u672f\uff0c\u4ee5\u540e\u53d1\u73b0\u6709\u597d\u7528\u7684\u4e1c\u897f\uff0c\u6211\u5c06\u4f1a\u5728\u4f01\u4e1a\u9879\u76ee\u4e2d\u5b9e\u6218\uff0c\u6ca1\u6709\u95ee\u9898\u4e86\u5c31\u4f1a\u628a\u5b83\u5f15\u5165\u5230**MVVMHabit**\u4e2d\uff0c\u4e00\u76f4\u7ef4\u62a4\u7740\u8fd9\u5957\u6846\u67b6\uff0c\u8c22\u8c22\u5404\u4f4d\u670b\u53cb\u7684\u652f\u6301\u3002\u5982\u679c\u89c9\u5f97\u8fd9\u5957\u6846\u67b6\u4e0d\u9519\u7684\u8bdd\uff0c\u9ebb\u70e6\u70b9\u4e2a **star**\uff0c\u4f60\u7684\u652f\u6301\u5219\u662f\u6211\u524d\u8fdb\u7684\u52a8\u529b\uff01\n\n**QQ\u7fa4**\uff1a84692105\n\n## Thank\n\u611f\u8c22[\u3010zhangxiaoxiao\u3011](https://github.com/zhanghacker)\u5c0f\u4f19\u4f34\u957f\u671f\u63d0\u4f9b\u7684\u6280\u672f\u652f\u6301\u4e0e\u5e2e\u52a9\uff0c\u4e3a\u9879\u76ee\u5f00\u6e90\u505a\u51fa\u4e86\u5f88\u591a\u7684\u8d21\u732e\u3002\n\n## License\n\n    Copyright 2017 goldze(\u66fe\u5baa\u6cfd)\n \n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n \n        http://www.apache.org/licenses/LICENSE-2.0\n \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n",
        "releases": [
            {
                "name": "\u8fc1\u79fbAndroidX",
                "date": "2021-07-16T07:11:54Z"
            },
            {
                "name": "\u5168\u9762\u5347\u7ea7AAC",
                "date": "2018-10-08T05:45:55Z"
            },
            {
                "name": "MVVMHabit",
                "date": "2017-09-29T08:24:08Z"
            }
        ]
    }
}