{
    "https://api.github.com/repos/aws/aws-cli": {
        "forks": 4184,
        "watchers": 15722,
        "stars": 15722,
        "languages": {
            "Python": 4271755,
            "Shell": 1808,
            "Batchfile": 1432
        },
        "commits": [
            "2025-01-21T19:11:10Z",
            "2025-01-21T19:11:10Z",
            "2025-01-21T19:09:36Z",
            "2025-01-17T20:56:38Z",
            "2025-01-17T19:10:56Z",
            "2025-01-17T19:10:56Z",
            "2025-01-17T19:09:30Z",
            "2025-01-17T19:05:41Z",
            "2025-01-17T16:58:16Z",
            "2025-01-16T20:51:44Z",
            "2025-01-16T19:14:27Z",
            "2025-01-16T19:14:27Z",
            "2025-01-16T19:12:57Z",
            "2025-01-15T20:00:32Z",
            "2025-01-15T20:00:32Z",
            "2025-01-15T20:00:04Z",
            "2025-01-15T19:59:24Z",
            "2025-01-15T19:59:20Z",
            "2025-01-14T19:04:49Z",
            "2025-01-14T19:04:49Z",
            "2025-01-14T19:03:26Z",
            "2025-01-14T14:10:27Z",
            "2025-01-13T22:08:06Z",
            "2025-01-13T19:04:20Z",
            "2025-01-13T19:04:20Z",
            "2025-01-13T19:03:10Z",
            "2025-01-10T19:05:49Z",
            "2025-01-10T19:05:49Z",
            "2025-01-10T19:04:24Z",
            "2025-01-10T18:42:25Z"
        ],
        "creation_date": "2012-11-20T16:07:36Z",
        "contributors": 30,
        "topics": [
            "aws",
            "aws-cli",
            "cloud",
            "cloud-management"
        ],
        "subscribers": 571,
        "readme": "aws-cli\n=======\n\n.. image:: https://github.com/aws/aws-cli/actions/workflows/run-tests.yml/badge.svg\n   :target: https://github.com/aws/aws-cli/actions/workflows/run-tests.yml\n   :alt: Build Status\n\nThis package provides a unified command line interface to Amazon Web\nServices.\n\nJump to:\n\n-  `Getting Started <#getting-started>`__\n-  `Getting Help <#getting-help>`__\n-  `More Resources <#more-resources>`__\n\nGetting Started\n---------------\n\nThis README is for the AWS CLI version 1. If you are looking for\ninformation about the AWS CLI version 2, please visit the `v2\nbranch <https://github.com/aws/aws-cli/tree/v2>`__.\n\nRequirements\n~~~~~~~~~~~~\n\nThe aws-cli package works on Python versions:\n\n-  3.8.x and greater\n-  3.9.x and greater\n-  3.10.x and greater\n-  3.11.x and greater\n-  3.12.x and greater\n\nNotices\n~~~~~~~\n\nOn 2022-05-30, support for Python 3.6 was ended. This follows the\nPython Software Foundation `end of support <https://www.python.org/dev/peps/pep-0494/#lifespan>`__\nfor the runtime which occurred on 2021-12-23.\n\nOn 2023-12-13, support for Python 3.7 was ended. This follows the\nPython Software Foundation `end of support <https://www.python.org/dev/peps/pep-0537/#lifespan>`__\nfor the runtime which occurred on 2023-06-27.\nFor more information, see this `blog post <https://aws.amazon.com/blogs/developer/python-support-policy-updates-for-aws-sdks-and-tools/>`__.\n\n*Attention!*\n\n*We recommend that all customers regularly monitor the* `Amazon Web\nServices Security Bulletins\nwebsite <https://aws.amazon.com/security/security-bulletins>`__ *for\nany important security bulletins related to aws-cli.*\n\nMaintenance and Support for CLI Major Versions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe AWS CLI version 1 was made generally available on 09/02/2013 and is currently in the full support phase of the availability life cycle.\n\nFor information about maintenance and support for SDK major versions and their underlying dependencies, see the `Maintenance Policy <https://docs.aws.amazon.com/credref/latest/refdocs/maint-policy.html>`__ section in the *AWS SDKs and Tools Shared Configuration and Credentials Reference Guide*.\n\nInstallation\n~~~~~~~~~~~~\n\nInstallation of the AWS CLI and its dependencies use a range of packaging\nfeatures provided by ``pip`` and ``setuptools``. To ensure smooth installation,\nit's recommended to use:\n\n- ``pip``: 9.0.2 or greater\n- ``setuptools``: 36.2.0 or greater\n\nThe safest way to install the AWS CLI is to use\n`pip <https://pip.pypa.io/en/stable/>`__ in a ``virtualenv``:\n\n::\n\n   $ python -m pip install awscli\n\nor, if you are not installing in a ``virtualenv``, to install globally:\n\n::\n\n   $ sudo python -m pip install awscli\n\nor for your user:\n\n::\n\n   $ python -m pip install --user awscli\n\nIf you have the aws-cli package installed and want to upgrade to the\nlatest version, you can run:\n\n::\n\n   $ python -m pip install --upgrade awscli\n\nThis will install the aws-cli package as well as all dependencies.\n\n.. note::\n   On macOS, if you see an error regarding the version of ``six`` that\n   came with ``distutils`` in El Capitan, use the ``--ignore-installed``\n   option:\n\n::\n\n   $ sudo python -m pip install awscli --ignore-installed six\n\nOn Linux and Mac OS, the AWS CLI can be installed using a `bundled\ninstaller <https://docs.aws.amazon.com/cli/latest/userguide/install-linux.html#install-linux-bundled>`__.\nThe AWS CLI can also be installed on Windows via an `MSI\nInstaller <https://docs.aws.amazon.com/cli/latest/userguide/install-windows.html#msi-on-windows>`__.\n\nIf you want to run the ``develop`` branch of the AWS CLI, see the\n`Development Version <CONTRIBUTING.md#cli-development-version>`__ section of\nthe contributing guide.\n\nSee the\n`installation <https://docs.aws.amazon.com/cli/latest/userguide/install-cliv1.html>`__\nsection of the AWS CLI User Guide for more information.\n\nConfiguration\n~~~~~~~~~~~~~\n\nBefore using the AWS CLI, you need to configure your AWS credentials.\nYou can do this in several ways:\n\n-  Configuration command\n-  Environment variables\n-  Shared credentials file\n-  Config file\n-  IAM Role\n\nThe quickest way to get started is to run the ``aws configure`` command:\n\n::\n\n   $ aws configure\n   AWS Access Key ID: MYACCESSKEY\n   AWS Secret Access Key: MYSECRETKEY\n   Default region name [us-west-2]: us-west-2\n   Default output format [None]: json\n\nTo use environment variables, do the following:\n\n::\n\n   $ export AWS_ACCESS_KEY_ID=<access_key>\n   $ export AWS_SECRET_ACCESS_KEY=<secret_key>\n\nTo use the shared credentials file, create an INI formatted file like\nthis:\n\n::\n\n   [default]\n   aws_access_key_id=MYACCESSKEY\n   aws_secret_access_key=MYSECRETKEY\n\n   [testing]\n   aws_access_key_id=MYACCESSKEY\n   aws_secret_access_key=MYSECRETKEY\n\nand place it in ``~/.aws/credentials`` (or in\n``%UserProfile%\\.aws/credentials`` on Windows). If you wish to place the\nshared credentials file in a different location than the one specified\nabove, you need to tell aws-cli where to find it. Do this by setting the\nappropriate environment variable:\n\n::\n\n   $ export AWS_SHARED_CREDENTIALS_FILE=/path/to/shared_credentials_file\n\nTo use a config file, create an INI formatted file like this:\n\n::\n\n   [default]\n   aws_access_key_id=<default access key>\n   aws_secret_access_key=<default secret key>\n   # Optional, to define default region for this profile.\n   region=us-west-1\n\n   [profile testing]\n   aws_access_key_id=<testing access key>\n   aws_secret_access_key=<testing secret key>\n   region=us-west-2\n\nand place it in ``~/.aws/config`` (or in ``%UserProfile%\\.aws\\config``\non Windows). If you wish to place the config file in a different\nlocation than the one specified above, you need to tell the AWS CLI\nwhere to find it. Do this by setting the appropriate environment\nvariable:\n\n::\n\n   $ export AWS_CONFIG_FILE=/path/to/config_file\n\nAs you can see, you can have multiple ``profiles`` defined in both the\nshared credentials file and the configuration file. You can then specify\nwhich profile to use by using the ``--profile`` option. If no profile is\nspecified the ``default`` profile is used.\n\nIn the config file, except for the default profile, you **must** prefix\neach config section of a profile group with ``profile``. For example, if\nyou have a profile named \"testing\" the section header would be\n``[profile testing]``.\n\nThe final option for credentials is highly recommended if you are using\nthe AWS CLI on an EC2 instance. `IAM\nRoles <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html>`__\nare a great way to have credentials installed automatically on your\ninstance. If you are using IAM Roles, the AWS CLI will find and use them\nautomatically.\n\nIn addition to credentials, a number of other variables can be\nconfigured either with environment variables, configuration file\nentries, or both. See the `AWS Tools and SDKs Shared Configuration and\nCredentials Reference\nGuide <https://docs.aws.amazon.com/credref/latest/refdocs/overview.html>`__\nfor more information.\n\nFor more information about configuration options, please refer to the\n`AWS CLI Configuration Variables\ntopic <http://docs.aws.amazon.com/cli/latest/topic/config-vars.html#cli-aws-help-config-vars>`__.\nYou can access this topic from the AWS CLI as well by running\n``aws help config-vars``.\n\nBasic Commands\n~~~~~~~~~~~~~~\n\nAn AWS CLI command has the following structure:\n\n::\n\n   $ aws <command> <subcommand> [options and parameters]\n\nFor example, to list S3 buckets, the command would be:\n\n::\n\n   $ aws s3 ls\n\nTo view help documentation, use one of the following:\n\n::\n\n   $ aws help\n   $ aws <command> help\n   $ aws <command> <subcommand> help\n\nTo get the version of the AWS CLI:\n\n::\n\n   $ aws --version\n\nTo turn on debugging output:\n\n::\n\n   $ aws --debug <command> <subcommand>\n\nYou can read more information on the `Using the AWS\nCLI <https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-using.html>`__\nchapter of the AWS CLI User Guide.\n\nCommand Completion\n~~~~~~~~~~~~~~~~~~\n\nThe aws-cli package includes a command completion feature for Unix-like\nsystems. This feature is not automatically installed so you need to\nconfigure it manually. To learn more, read the `AWS CLI Command\ncompletion\ntopic <https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-completion.html>`__.\n\nGetting Help\n------------\n\nThe best way to interact with our team is through GitHub. You can `open\nan issue <https://github.com/aws/aws-cli/issues/new/choose>`__ and\nchoose from one of our templates for guidance, bug reports, or feature\nrequests.\n\nYou may find help from the community on `Stack\nOverflow <https://stackoverflow.com/>`__ with the tag\n`aws-cli <https://stackoverflow.com/questions/tagged/aws-cli>`__ or on\nthe `AWS Discussion Forum for\nCLI <https://forums.aws.amazon.com/forum.jspa?forumID=150>`__. If you\nhave a support plan with `AWS Support\n<https://aws.amazon.com/premiumsupport>`__, you can also create\na new support case.\n\nPlease check for open similar\n`issues <https://github.com/aws/aws-cli/issues/>`__ before opening\nanother one.\n\nThe AWS CLI implements AWS service APIs. For general issues regarding\nthe services or their limitations, you may find the `Amazon Web Services\nDiscussion Forums <https://forums.aws.amazon.com/>`__ helpful.\n\nMore Resources\n--------------\n\n-  `Changelog <https://github.com/aws/aws-cli/blob/develop/CHANGELOG.rst>`__\n-  `AWS CLI\n   Documentation <https://docs.aws.amazon.com/cli/index.html>`__\n-  `AWS CLI User\n   Guide <https://docs.aws.amazon.com/cli/latest/userguide/>`__\n-  `AWS CLI Command\n   Reference <https://docs.aws.amazon.com/cli/latest/reference/>`__\n-  `Amazon Web Services Discussion\n   Forums <https://forums.aws.amazon.com/>`__\n-  `AWS Support <https://console.aws.amazon.com/support/home#/>`__\n\n.. |Build Status| image:: https://travis-ci.org/aws/aws-cli.svg?branch=develop\n   :target: https://travis-ci.org/aws/aws-cli\n.. |Gitter| image:: https://badges.gitter.im/aws/aws-cli.svg\n   :target: https://gitter.im/aws/aws-cli\n",
        "releases": [
            {
                "name": "AWS CLI 2.0.0dev preview release",
                "date": "2018-11-26T06:25:44Z"
            }
        ]
    }
}