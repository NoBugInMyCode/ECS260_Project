{
    "https://api.github.com/repos/cerebroapp/cerebro": {
        "forks": 455,
        "watchers": 8392,
        "stars": 8392,
        "languages": {
            "JavaScript": 104600,
            "CSS": 12833,
            "TypeScript": 7429,
            "HTML": 1544,
            "NSIS": 460,
            "Shell": 88
        },
        "commits": [
            "2025-01-20T12:36:59Z",
            "2023-12-06T01:11:13Z",
            "2023-11-22T22:29:39Z",
            "2023-03-07T01:08:39Z",
            "2023-03-07T00:47:30Z",
            "2023-03-07T00:40:31Z",
            "2023-03-07T00:39:57Z",
            "2023-03-06T00:34:36Z",
            "2023-03-06T00:21:14Z",
            "2023-03-05T22:47:44Z",
            "2023-03-05T00:58:42Z",
            "2023-03-05T00:56:51Z",
            "2023-03-05T00:56:24Z",
            "2023-03-05T00:31:06Z",
            "2023-02-20T19:20:50Z",
            "2023-02-20T17:46:26Z",
            "2023-02-13T01:42:45Z",
            "2023-02-13T01:38:01Z",
            "2023-02-13T01:36:34Z",
            "2023-02-13T01:35:08Z",
            "2023-02-13T01:30:41Z",
            "2023-02-13T01:28:48Z",
            "2023-02-13T01:27:35Z",
            "2023-02-09T01:25:30Z",
            "2023-02-09T00:34:01Z",
            "2022-12-30T01:29:46Z",
            "2022-12-28T00:33:54Z",
            "2022-12-13T22:02:43Z",
            "2022-12-13T22:02:28Z",
            "2022-12-13T22:02:14Z"
        ],
        "creation_date": "2016-07-03T14:42:01Z",
        "contributors": 30,
        "topics": [
            "cerebro",
            "electron",
            "launcher",
            "search"
        ],
        "subscribers": 137,
        "readme": "# Cerebro\n\n> Cerebro is an open-source launcher to improve your productivity and efficiency\n\n<img src=\"./build/icons/128x128.png\" align=\"right\"/>\n\n## Usage\n\nYou can download the latest version on the [releases](https://github.com/cerebroapp/cerebro/releases) page.\n\n- If there isn't an installer for your OS, check [build instructions](#build-executable-from-source).\n- If you are a linux user see [how to install the executable](#install-executable-on-linux)\n\nAfter the installation, use the default shortcut, `ctrl+space`, to show the app window. You can customize this shortcut by clicking on the icon in the menu bar, and then selecting \"Preferences...\".\n\n![Cerebro](https://cloud.githubusercontent.com/assets/594298/20180624/858a483a-a75b-11e6-94a1-ef1edc4d95c3.gif)\n\n### Plugins\n\n### Core plugins\n\n- Search the web with your favourite search engine\n- Search & launch application, i.e. `spotify`\n- Navigate the file system with file previews (i.e. `~/Dropbox/passport.pdf`)\n- Calculator\n- Smart converter. `15$`, `150 \u0440\u0443\u0431\u043b\u0435\u0439 \u0432 \u0435\u0432\u0440\u043e`, `100 eur in gbp`;\n\n### Install plugins\n\nYou can manage and install more plugins by typing `plugins <plugin-name>` in the Cerebro search bar.\n\nDiscover plugins and more at [Cerebro's Awesome List](https://github.com/lubien/awesome-cerebro).\n\n> If you're interested in creating your own plugin, check the [plugins documentation](https://github.com/cerebroapp/create-cerebro-plugin).\n\n## Shortcuts\n\nCerebro provides several shortcuts to improve your productivity:\n\n- `ctrl+c`: copy the result from a plugin to the clipboard, if the plugin does not provida a result, the term you introduced will be copied\n- `ctrl+1...9`: select directly a result from the list\n- `ctrl+[hjkl]`: navigate through the results using vim-like keys (Also `ctrl+o` to select the result)\n\n### Change Theme\n\nUse the shortcut `ctrl+space` to open the app window, and type `Cerebro Settings`. There you will be able to change the Theme.\n\n> Currently Light and Dark Themes are supported out of the box\n\n![change-cerebro-theme](https://user-images.githubusercontent.com/24854406/56137765-5880ca00-5fb7-11e9-86d0-e740de1127c2.gif)\n\n### Config file path\n\nYou can find the config file in the following path depending on your OS:\n\n*Windows*: `%APPDATA%/Cerebro/config.json`\n\n*Linux*: `$XDG_CONFIG_HOME/Cerebro/config.json`  or `~/.config/Cerebro/config.json`\n\n*macOS*: `~/Library/Application Support/Cerebro/config.json`\n\n> \u26a0\ufe0f A bad configuration file can break Cerebro. If you're not sure what you're doing, don't edit the config file directly.\n\n## Build executable from source\n\nIf you'd like to install a version of Cerebro, but the executable hasn't been released, you can follow these instructions to build it from source:\n\n1. Clone the repository\n2. Install dependencies with [yarn](https://yarnpkg.com/getting-started/install):\n\n   ```bash\n   yarn --force\n   ```\n\n3. Build the package:\n\n   ```bash\n    yarn package\n   ```\n\n> Note: in CI we use `yarn build` as there is an action to package and publish the executables\n\n## Install executable on Linux\n\nIf you're a linux user, you might need to grant execution permissions to the executable. To do so, open the terminal and run the following command:\n\n```bash\nsudo chmod +x <path to the executable>\n```\n\nThen, you can install the executable by running the following command:\n\n- If you're using the AppImage executable:\n\n  ```bash\n  ./<path to the executable>\n  ```\n\n- If you're using the deb executable:\n\n  ```bash\n  dpkg -i <path to the executable>\n  ```\n\n> On some computers you might need run these commands with elevated privileges (sudo). `sudo ./<path to the executable>` or `sudo dpkg -i <path to the executable>`\n\n## Contributing\n\n\nCerebroApp is an open source project and we welcome contributions from the community.\nIn this document you will find information about how Cerebro works and how to contribute to the project.\n\n> \u26a0\ufe0f NOTE: This document is for Cerebro developers. If you are looking for how to develop a plugin please check [plugin developers documentation](https://github.com/cerebroapp/create-cerebro-plugin).\n\n### General architecture\n\nCerebro is based on [Electron](https://electronjs.org/) and [React](https://reactjs.org/).\n\nA basic Electron app is composed of a *main process* and a *renderer process*. The main process is responsible for the app lifecycle, the renderer process is responsible for the UI.\n\nIn our case we use:\n\n- [`app/main.development.js`](/app/main.development.js) as the main process\n- [`app/main/main.js`](/app/main/main.js) as the main renderer process\n- [`app/background/background.js`](/app/background/background.js) as a secondary renderer process\n\nAll this files are bundled and transpiled with [Webpack](https://webpack.js.org/) and [Babel](https://babeljs.io/).\n\nThe build process is managed by [electron-builder](https://www.electron.build/).\n\n### Two renderer processes\n\nThis two-renderer process architecture is used to keep the main renderer process (Cerebro) responsive and to avoid blocking the UI when executing long tasks.\n\nWhen we need to execute a long task we send a message to the background process, which executes the task asynchronously and sends a message back to the main renderer when the task is completed.\n\nThis is the way we implement the plugins system. Their initializeAsync method is executed in the background process.\n\n### Prerequisites\n\n- [Node.js](https://nodejs.org/en/) (>= 16)\n- [yarn](https://classic.yarnpkg.com/en/)\n\n### Install Cerebro\n\nFirst, clone the repo via git:\n\n```bash\ngit clone https://github.com/cerebroapp/cerebro.git cerebro\n```\n\nOpen the project\n\n```bash\ncd cerebro\n```\n\nAnd then install dependencies:\n\n```bash\nyarn\n```\n\n### Run in development mode\n\n```bash\nyarn run dev\n```\n\n> Note: requires a node version >=16.x\n\n### Resolve common issues\n\n1. `AssertionError: Current node version is not supported for development` on npm postinstall.\nAfter `yarn` postinstall script checks node version. If you see this error you have to check node and npm version in `package.json` `devEngines` section and install proper ones.\n\n2. `Uncaught Error: Module version mismatch. Exepcted 50, got ...`\nThis error means that node modules with native extensions build with wrong node version (your local node version != node version, included to electron). To fix this issue run `yarn --force`\n\n### Conventional Commit Format\n\nThe project is using conventional commit specification to keep track of changes. This helps us with the realeases and enforces a consistent style.\nYou can commit as usually following this style or use the following commands that will help you to commit with the right style:\n\n- `yarn cz`\n- `yarn commit`\n\n### Publish a release\n\nCerebroApp is using GH actions to build the app and publish it to a release. To publish a new release follow the steps below:\n\n1. Update the version on both `package.json` and `app/package.json` files.\n2. Create a release with from GH and publish it. \ud83d\udea7 The release **tag** MUST contain the `v` prefix (\u274c `0.1.2` \u2192 \u2705`v0.1.2`).\n3. Complete the name with a name and a description of the release.\n4. The GH action is triggered and the release is updated when executables are built.\n## License\n\nMIT \u00a9 [Cerebro App](https://github.com/cerebroapp/cerebro/blob/master/LICENSE)\n",
        "releases": [
            {
                "name": "v0.11.0",
                "date": "2023-02-09T01:27:03Z"
            },
            {
                "name": "v0.10.0",
                "date": "2022-11-28T18:55:51Z"
            },
            {
                "name": "v0.9.0",
                "date": "2022-11-09T20:56:15Z"
            },
            {
                "name": "v0.8.0",
                "date": "2022-09-20T22:48:31Z"
            },
            {
                "name": "v0.7.1",
                "date": "2022-09-11T14:24:32Z"
            },
            {
                "name": "v0.7.0",
                "date": "2022-09-09T11:22:53Z"
            },
            {
                "name": "v0.6.0",
                "date": "2022-07-21T01:09:58Z"
            },
            {
                "name": "v0.5.0",
                "date": "2022-02-17T04:40:49Z"
            },
            {
                "name": "v0.4.0",
                "date": "2021-04-20T02:27:18Z"
            },
            {
                "name": "0.3.2",
                "date": "2017-12-05T08:27:11Z"
            },
            {
                "name": "0.3.1",
                "date": "2017-09-03T12:00:56Z"
            },
            {
                "name": "0.3.0",
                "date": "2017-06-12T08:06:21Z"
            },
            {
                "name": "0.3.0-alpha.2",
                "date": "2017-06-08T21:32:23Z"
            },
            {
                "name": "0.3.0-alpha",
                "date": "2017-06-07T20:07:57Z"
            },
            {
                "name": "0.2.8",
                "date": "2017-04-09T14:37:09Z"
            },
            {
                "name": "0.2.7",
                "date": "2017-03-04T11:11:19Z"
            },
            {
                "name": "0.2.6",
                "date": "2017-02-12T20:02:32Z"
            },
            {
                "name": "0.2.5",
                "date": "2017-02-06T12:25:35Z"
            },
            {
                "name": "0.2.4",
                "date": "2017-02-06T10:34:03Z"
            },
            {
                "name": "0.2.3",
                "date": "2017-01-24T22:16:07Z"
            },
            {
                "name": "0.2.2",
                "date": "2017-01-24T21:57:35Z"
            },
            {
                "name": "0.2.1",
                "date": "2017-01-17T01:32:33Z"
            },
            {
                "name": "0.2.0",
                "date": "2016-12-21T12:17:50Z"
            },
            {
                "name": "0.1.0",
                "date": "2016-12-11T13:23:27Z"
            },
            {
                "name": "0.0.3",
                "date": "2016-11-19T20:50:54Z"
            },
            {
                "name": "0.0.2",
                "date": "2016-11-17T21:59:32Z"
            },
            {
                "name": "0.0.1",
                "date": "2016-11-10T14:57:41Z"
            }
        ]
    }
}