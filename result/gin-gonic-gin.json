{
    "https://api.github.com/repos/gin-gonic/gin": {
        "forks": 8081,
        "watchers": 79959,
        "stars": 79959,
        "languages": {
            "Go": 571537,
            "Makefile": 2874
        },
        "commits": [
            "2024-12-30T03:40:37Z",
            "2024-12-30T03:39:24Z",
            "2024-12-28T09:18:03Z",
            "2024-11-15T15:54:06Z",
            "2024-11-15T15:52:16Z",
            "2024-11-15T15:51:12Z",
            "2024-11-15T15:49:08Z",
            "2024-10-29T15:24:53Z",
            "2024-10-26T00:28:59Z",
            "2024-10-26T00:26:25Z",
            "2024-10-25T01:33:31Z",
            "2024-10-25T01:16:40Z",
            "2024-10-25T01:08:11Z",
            "2024-10-25T01:07:03Z",
            "2024-09-21T15:24:18Z",
            "2024-09-15T00:58:59Z",
            "2024-09-15T00:54:23Z",
            "2024-09-06T05:21:19Z",
            "2024-08-24T06:16:30Z",
            "2024-07-14T12:34:34Z",
            "2024-07-14T12:33:08Z",
            "2024-06-22T14:19:04Z",
            "2024-06-15T16:28:08Z",
            "2024-06-06T09:10:03Z",
            "2024-06-01T05:44:57Z",
            "2024-05-24T06:55:25Z",
            "2024-05-23T02:16:11Z",
            "2024-05-19T02:48:07Z",
            "2024-05-14T02:25:54Z",
            "2024-05-13T06:55:41Z"
        ],
        "creation_date": "2014-06-16T23:57:25Z",
        "contributors": 30,
        "topics": [
            "framework",
            "gin",
            "go",
            "middleware",
            "performance",
            "router",
            "server"
        ],
        "subscribers": 1367,
        "readme": "# Gin Web Framework\n\n<img align=\"right\" width=\"159px\" src=\"https://raw.githubusercontent.com/gin-gonic/logo/master/color.png\">\n\n[![Build Status](https://github.com/gin-gonic/gin/workflows/Run%20Tests/badge.svg?branch=master)](https://github.com/gin-gonic/gin/actions?query=branch%3Amaster)\n[![codecov](https://codecov.io/gh/gin-gonic/gin/branch/master/graph/badge.svg)](https://codecov.io/gh/gin-gonic/gin)\n[![Go Report Card](https://goreportcard.com/badge/github.com/gin-gonic/gin)](https://goreportcard.com/report/github.com/gin-gonic/gin)\n[![Go Reference](https://pkg.go.dev/badge/github.com/gin-gonic/gin?status.svg)](https://pkg.go.dev/github.com/gin-gonic/gin?tab=doc)\n[![Sourcegraph](https://sourcegraph.com/github.com/gin-gonic/gin/-/badge.svg)](https://sourcegraph.com/github.com/gin-gonic/gin?badge)\n[![Open Source Helpers](https://www.codetriage.com/gin-gonic/gin/badges/users.svg)](https://www.codetriage.com/gin-gonic/gin)\n[![Release](https://img.shields.io/github/release/gin-gonic/gin.svg?style=flat-square)](https://github.com/gin-gonic/gin/releases)\n[![TODOs](https://badgen.net/https/api.tickgit.com/badgen/github.com/gin-gonic/gin)](https://www.tickgit.com/browse?repo=github.com/gin-gonic/gin)\n\nGin is a web framework written in [Go](https://go.dev/). It features a martini-like API with performance that is up to 40 times faster thanks to [httprouter](https://github.com/julienschmidt/httprouter).\nIf you need performance and good productivity, you will love Gin.\n\n**Gin's key features are:**\n\n- Zero allocation router\n- Speed\n- Middleware support\n- Crash-free\n- JSON validation\n- Route grouping\n- Error management\n- Built-in rendering\n- Extensible\n\n## Getting started\n\n### Prerequisites\n\nGin requires [Go](https://go.dev/) version [1.22](https://go.dev/doc/devel/release#go1.22.0) or above.\n\n### Getting Gin\n\nWith [Go's module support](https://go.dev/wiki/Modules#how-to-use-modules), `go [build|run|test]` automatically fetches the necessary dependencies when you add the import in your code:\n\n```sh\nimport \"github.com/gin-gonic/gin\"\n```\n\nAlternatively, use `go get`:\n\n```sh\ngo get -u github.com/gin-gonic/gin\n```\n\n### Running Gin\n\nA basic example:\n\n```go\npackage main\n\nimport (\n  \"net/http\"\n\n  \"github.com/gin-gonic/gin\"\n)\n\nfunc main() {\n  r := gin.Default()\n  r.GET(\"/ping\", func(c *gin.Context) {\n    c.JSON(http.StatusOK, gin.H{\n      \"message\": \"pong\",\n    })\n  })\n  r.Run() // listen and serve on 0.0.0.0:8080 (for windows \"localhost:8080\")\n}\n```\n\nTo run the code, use the `go run` command, like:\n\n```sh\n$ go run example.go\n```\n\nThen visit [`0.0.0.0:8080/ping`](http://0.0.0.0:8080/ping) in your browser to see the response!\n\n### See more examples\n\n#### Quick Start\n\nLearn and practice with the [Gin Quick Start](docs/doc.md), which includes API examples and builds tag.\n\n#### Examples\n\nA number of ready-to-run examples demonstrating various use cases of Gin are available in the [Gin examples](https://github.com/gin-gonic/examples) repository.\n\n## Documentation\n\nSee the [API documentation on go.dev](https://pkg.go.dev/github.com/gin-gonic/gin).\n\nThe documentation is also available on [gin-gonic.com](https://gin-gonic.com) in several languages:\n\n- [English](https://gin-gonic.com/docs/)\n- [\u7b80\u4f53\u4e2d\u6587](https://gin-gonic.com/zh-cn/docs/)\n- [\u7e41\u9ad4\u4e2d\u6587](https://gin-gonic.com/zh-tw/docs/)\n- [\u65e5\u672c\u8a9e](https://gin-gonic.com/ja/docs/)\n- [Espa\u00f1ol](https://gin-gonic.com/es/docs/)\n- [\ud55c\uad6d\uc5b4](https://gin-gonic.com/ko-kr/docs/)\n- [Turkish](https://gin-gonic.com/tr/docs/)\n- [Persian](https://gin-gonic.com/fa/docs/)\n- [Portugu\u00eas](https://gin-gonic.com/pt/docs/)\n\n### Articles\n\n- [Tutorial: Developing a RESTful API with Go and Gin](https://go.dev/doc/tutorial/web-service-gin)\n\n## Benchmarks\n\nGin uses a custom version of [HttpRouter](https://github.com/julienschmidt/httprouter), [see all benchmarks](/BENCHMARKS.md).\n\n| Benchmark name                 |       (1) |             (2) |          (3) |             (4) |\n| ------------------------------ | --------: | --------------: | -----------: | --------------: |\n| BenchmarkGin_GithubAll         | **43550** | **27364 ns/op** |   **0 B/op** | **0 allocs/op** |\n| BenchmarkAce_GithubAll         |     40543 |     29670 ns/op |       0 B/op |     0 allocs/op |\n| BenchmarkAero_GithubAll        |     57632 |     20648 ns/op |       0 B/op |     0 allocs/op |\n| BenchmarkBear_GithubAll        |      9234 |    216179 ns/op |   86448 B/op |   943 allocs/op |\n| BenchmarkBeego_GithubAll       |      7407 |    243496 ns/op |   71456 B/op |   609 allocs/op |\n| BenchmarkBone_GithubAll        |       420 |   2922835 ns/op |  720160 B/op |  8620 allocs/op |\n| BenchmarkChi_GithubAll         |      7620 |    238331 ns/op |   87696 B/op |   609 allocs/op |\n| BenchmarkDenco_GithubAll       |     18355 |     64494 ns/op |   20224 B/op |   167 allocs/op |\n| BenchmarkEcho_GithubAll        |     31251 |     38479 ns/op |       0 B/op |     0 allocs/op |\n| BenchmarkGocraftWeb_GithubAll  |      4117 |    300062 ns/op |  131656 B/op |  1686 allocs/op |\n| BenchmarkGoji_GithubAll        |      3274 |    416158 ns/op |   56112 B/op |   334 allocs/op |\n| BenchmarkGojiv2_GithubAll      |      1402 |    870518 ns/op |  352720 B/op |  4321 allocs/op |\n| BenchmarkGoJsonRest_GithubAll  |      2976 |    401507 ns/op |  134371 B/op |  2737 allocs/op |\n| BenchmarkGoRestful_GithubAll   |       410 |   2913158 ns/op |  910144 B/op |  2938 allocs/op |\n| BenchmarkGorillaMux_GithubAll  |       346 |   3384987 ns/op |  251650 B/op |  1994 allocs/op |\n| BenchmarkGowwwRouter_GithubAll |     10000 |    143025 ns/op |   72144 B/op |   501 allocs/op |\n| BenchmarkHttpRouter_GithubAll  |     55938 |     21360 ns/op |       0 B/op |     0 allocs/op |\n| BenchmarkHttpTreeMux_GithubAll |     10000 |    153944 ns/op |   65856 B/op |   671 allocs/op |\n| BenchmarkKocha_GithubAll       |     10000 |    106315 ns/op |   23304 B/op |   843 allocs/op |\n| BenchmarkLARS_GithubAll        |     47779 |     25084 ns/op |       0 B/op |     0 allocs/op |\n| BenchmarkMacaron_GithubAll     |      3266 |    371907 ns/op |  149409 B/op |  1624 allocs/op |\n| BenchmarkMartini_GithubAll     |       331 |   3444706 ns/op |  226551 B/op |  2325 allocs/op |\n| BenchmarkPat_GithubAll         |       273 |   4381818 ns/op | 1483152 B/op | 26963 allocs/op |\n| BenchmarkPossum_GithubAll      |     10000 |    164367 ns/op |   84448 B/op |   609 allocs/op |\n| BenchmarkR2router_GithubAll    |     10000 |    160220 ns/op |   77328 B/op |   979 allocs/op |\n| BenchmarkRivet_GithubAll       |     14625 |     82453 ns/op |   16272 B/op |   167 allocs/op |\n| BenchmarkTango_GithubAll       |      6255 |    279611 ns/op |   63826 B/op |  1618 allocs/op |\n| BenchmarkTigerTonic_GithubAll  |      2008 |    687874 ns/op |  193856 B/op |  4474 allocs/op |\n| BenchmarkTraffic_GithubAll     |       355 |   3478508 ns/op |  820744 B/op | 14114 allocs/op |\n| BenchmarkVulcan_GithubAll      |      6885 |    193333 ns/op |   19894 B/op |   609 allocs/op |\n\n- (1): Total Repetitions achieved in constant time, higher means more confident result\n- (2): Single Repetition Duration (ns/op), lower is better\n- (3): Heap Memory (B/op), lower is better\n- (4): Average Allocations per Repetition (allocs/op), lower is better\n\n## Middleware\n\nYou can find many useful Gin middlewares at [gin-contrib](https://github.com/gin-contrib).\n\n## Uses\n\nHere are some awesome projects that are using the [Gin](https://github.com/gin-gonic/gin) web framework.\n\n- [gorush](https://github.com/appleboy/gorush): A push notification server.\n- [fnproject](https://github.com/fnproject/fn): A container native, cloud agnostic serverless platform.\n- [photoprism](https://github.com/photoprism/photoprism): Personal photo management powered by Google TensorFlow.\n- [lura](https://github.com/luraproject/lura): Ultra performant API Gateway with middleware.\n- [picfit](https://github.com/thoas/picfit): An image resizing server.\n- [dkron](https://github.com/distribworks/dkron): Distributed, fault tolerant job scheduling system.\n\n## Contributing\n\nGin is the work of hundreds of contributors. We appreciate your help!\n\nPlease see [CONTRIBUTING.md](CONTRIBUTING.md) for details on submitting patches and the contribution workflow.\n",
        "releases": [
            {
                "name": "v1.10.0",
                "date": "2024-05-07T03:48:51Z"
            },
            {
                "name": "v1.9.1",
                "date": "2023-06-01T02:33:10Z"
            },
            {
                "name": "v1.9.0",
                "date": "2023-02-21T09:22:43Z"
            },
            {
                "name": "v1.8.2",
                "date": "2022-12-22T13:42:12Z"
            },
            {
                "name": "v1.8.1",
                "date": "2022-06-06T16:03:45Z"
            },
            {
                "name": "v1.8.0",
                "date": "2022-05-30T07:17:13Z"
            },
            {
                "name": "Release v1.7.7",
                "date": "2021-11-24T13:57:57Z"
            },
            {
                "name": "Release v1.7.6",
                "date": "2021-11-23T05:28:00Z"
            },
            {
                "name": "bump new release to fix checksum mismatch",
                "date": "2021-08-15T08:10:09Z"
            },
            {
                "name": "",
                "date": "2021-08-03T02:41:22Z"
            },
            {
                "name": "release v1.7.2",
                "date": "2021-05-21T23:42:50Z"
            },
            {
                "name": "",
                "date": "2021-04-08T23:39:35Z"
            },
            {
                "name": "Release v1.7.0",
                "date": "2021-04-08T07:50:23Z"
            },
            {
                "name": "Improve performance",
                "date": "2020-05-03T14:14:52Z"
            },
            {
                "name": "release v1.6.2",
                "date": "2020-03-27T03:07:08Z"
            },
            {
                "name": "release v1.6.1",
                "date": "2020-03-23T14:07:23Z"
            },
            {
                "name": "release v1.6.0",
                "date": "2020-03-22T03:20:43Z"
            },
            {
                "name": "",
                "date": "2019-11-28T04:36:12Z"
            },
            {
                "name": "",
                "date": "2019-05-08T00:59:03Z"
            },
            {
                "name": "v1.3.0",
                "date": "2018-08-14T08:59:07Z"
            },
            {
                "name": "v1.2",
                "date": "2017-07-02T09:30:55Z"
            },
            {
                "name": "Release v1.1.4",
                "date": "2016-12-05T01:25:53Z"
            },
            {
                "name": "Release v1.1.3",
                "date": "2016-12-04T00:39:59Z"
            },
            {
                "name": "v1.1",
                "date": "2016-12-03T09:13:04Z"
            },
            {
                "name": "v1.0-rc.2",
                "date": "2016-10-12T12:23:16Z"
            },
            {
                "name": "",
                "date": "2015-05-22T15:03:16Z"
            }
        ]
    }
}