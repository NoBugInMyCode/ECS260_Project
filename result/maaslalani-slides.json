{
    "https://api.github.com/repos/maaslalani/slides": {
        "forks": 283,
        "watchers": 10304,
        "stars": 10304,
        "languages": {
            "Go": 48373,
            "Makefile": 98
        },
        "commits": [
            "2024-06-19T10:30:10Z",
            "2024-06-04T14:04:10Z",
            "2024-05-27T19:16:33Z",
            "2024-05-27T19:15:58Z",
            "2024-05-11T21:02:55Z",
            "2024-04-04T09:31:49Z",
            "2024-03-06T14:18:28Z",
            "2024-03-04T16:24:48Z",
            "2024-03-04T16:24:41Z",
            "2024-03-04T16:24:32Z",
            "2024-02-27T14:08:27Z",
            "2023-12-20T22:50:00Z",
            "2023-12-20T22:49:52Z",
            "2023-12-13T14:24:45Z",
            "2023-12-11T22:34:44Z",
            "2023-12-11T22:34:06Z",
            "2023-10-30T02:51:57Z",
            "2023-10-30T02:42:14Z",
            "2023-10-09T18:50:41Z",
            "2023-10-05T04:19:47Z",
            "2023-10-05T04:19:33Z",
            "2023-07-12T17:04:18Z",
            "2023-07-12T16:45:42Z",
            "2023-06-30T00:29:31Z",
            "2023-06-19T19:44:48Z",
            "2023-06-19T19:44:22Z",
            "2023-06-19T19:42:54Z",
            "2023-05-22T02:21:48Z",
            "2023-05-22T02:21:33Z",
            "2023-05-16T14:47:06Z"
        ],
        "creation_date": "2021-05-05T23:13:42Z",
        "contributors": 30,
        "topics": [
            "markdown",
            "presentation",
            "slides",
            "terminal"
        ],
        "subscribers": 66,
        "readme": "# Slides\n\nSlides in your terminal.\n\n<p align=\"center\">\n  <img src=\"./assets/slides-1.gif?raw=true\" alt=\"Slides Presentation\" />\n</p>\n\n### Installation\n[![Homebrew](https://img.shields.io/badge/dynamic/json.svg?url=https://formulae.brew.sh/api/formula/slides.json&query=$.versions.stable&label=homebrew)](https://formulae.brew.sh/formula/slides)\n[![Snapcraft](https://snapcraft.io/slides/badge.svg)](https://snapcraft.io/slides)\n[![AUR](https://img.shields.io/aur/version/slides?label=AUR)](https://aur.archlinux.org/packages/slides)\n\n<details markdown=\"block\">\n<summary>Instructions</summary>\n\n#### MacOS\n```\nbrew install slides\n```\n#### Arch\n```\nyay -S slides\n```\n#### Nixpkgs (unstable)\n```\nnix-env -iA nixpkgs.slides\n```\n#### Any Linux Distro running `snapd`\n```\nsudo snap install slides\n```\n#### Go\n```\ngo install github.com/maaslalani/slides@latest\n```\nFrom source:\n```\ngit clone https://github.com/maaslalani/slides.git\ncd slides\ngo install\n```\n\nYou can also download a binary from the [releases](https://github.com/maaslalani/slides/releases) page.\n\n</details>\n\n\n### Usage\nCreate a simple markdown file that contains your slides:\n\n````markdown\n# Welcome to Slides\nA terminal based presentation tool\n\n---\n\n## Everything is markdown\nIn fact, this entire presentation is a markdown file.\n\n---\n\n## Everything happens in your terminal\nCreate slides and present them without ever leaving your terminal.\n\n---\n\n## Code execution\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n  fmt.Println(\"Execute code directly inside the slides\")\n}\n```\n\nYou can execute code inside your slides by pressing `<C-e>`,\nthe output of your command will be displayed at the end of the current slide.\n\n---\n\n## Pre-process slides\n\nYou can add a code block with three tildes (`~`) and write a command to run *before* displaying\nthe slides, the text inside the code block will be passed as `stdin` to the command\nand the code block will be replaced with the `stdout` of the command.\n\n```\n~~~graph-easy --as=boxart\n[ A ] - to -> [ B ]\n~~~\n```\n\nThe above will be pre-processed to look like:\n\n\u250c\u2500\u2500\u2500\u2510  to   \u250c\u2500\u2500\u2500\u2510\n\u2502 A \u2502 \u2500\u2500\u2500\u2500> \u2502 B \u2502\n\u2514\u2500\u2500\u2500\u2518       \u2514\u2500\u2500\u2500\u2518\n\nFor security reasons, you must pass a file that has execution permissions\nfor the slides to be pre-processed. You can use `chmod` to add these permissions.\n\n```bash\nchmod +x file.md\n```\n\n````\n\nCheckout the [example slides](https://github.com/maaslalani/slides/tree/main/examples).\n\nThen, to present, run:\n```\nslides presentation.md\n```\n\nIf given a file name, `slides` will automatically look for changes in the file and update the presentation live.\n\n`slides` also accepts input through `stdin`:\n```\ncurl http://example.com/slides.md | slides\n```\n\nGo to the first slide with the following key sequence:\n* <kbd>g</kbd> <kbd>g</kbd>\n\nGo to the next slide with any of the following key sequences:\n* <kbd>space</kbd>\n* <kbd>right</kbd>\n* <kbd>down</kbd>\n* <kbd>enter</kbd>\n* <kbd>n</kbd>\n* <kbd>j</kbd>\n* <kbd>l</kbd>\n* <kbd>Page Down</kbd>\n* number + any of the above (go forward n slides)\n\nGo to the previous slide with any of the following key sequences:\n* <kbd>left</kbd>\n* <kbd>up</kbd>\n* <kbd>p</kbd>\n* <kbd>h</kbd>\n* <kbd>k</kbd>\n* <kbd>N</kbd>\n* <kbd>Page Up</kbd>\n* number + any of the above (go back n slides)\n\nGo to a specific slide with the following key sequence:\n\n* number + <kbd>G</kbd>\n\nGo to the last slide with the following key:\n\n* <kbd>G</kbd>\n\n### Search\n\nTo quickly jump to the right slide, you can use the search function.\n\nPress <kbd>/</kbd>, enter your search term and press <kbd>Enter</kbd>  \n(*The search term is interpreted as a regular expression. The `/i` flag causes case-insensitivity.*).\n\nPress <kbd>ctrl+n</kbd> after a search to go to the next search result.\n\n### Code Execution\n\nIf slides finds a code block on the current slides it can execute the code block and display the result as virtual text\non the screen.\n\nPress <kbd>ctrl+e</kbd> on a slide with a code block to execute it and display the result.\n\n### Pre-processing\n\nYou can add a code block with three tildes (`~`) and write a command to run\n*before* displaying the slides, the text inside the code block will be passed\nas `stdin` to the command and the code block will be replaced with the `stdout`\nof the command. Wrap the pre-processed block in three backticks to keep\nproper formatting and new lines.\n\n````\n```\n~~~graph-easy --as=boxart\n[ A ] - to -> [ B ]\n~~~\n```\n````\n\nThe above will be pre-processed to look like:\n\n```\n\u250c\u2500\u2500\u2500\u2510  to   \u250c\u2500\u2500\u2500\u2510\n\u2502 A \u2502 \u2500\u2500\u2500\u2500> \u2502 B \u2502\n\u2514\u2500\u2500\u2500\u2518       \u2514\u2500\u2500\u2500\u2518\n```\n\nFor security reasons, you must pass a file that has execution permissions\nfor the slides to be pre-processed. You can use `chmod` to add these permissions.\n\n```bash\nchmod +x file.md\n```\n\n### Configuration\n\n`slides` allows you to customize your presentation's look and feel with metadata at the top of your `slides.md`.\n\n> This section is entirely optional, `slides` will use sensible defaults if this section or any field in the section is omitted.\n\n```yaml\n---\ntheme: ./path/to/theme.json\nauthor: Gopher\ndate: MMMM dd, YYYY\npaging: Slide %d / %d\n---\n```\n\n* `theme`: Path to `json` file containing a [glamour\n  theme](https://github.com/charmbracelet/glamour/tree/master/styles), can also\n  be a link to a remote `json` file which slides will fetch before presenting.\n* `author`: A `string` to display on the bottom-left corner of the presentation\n  view. Defaults to the OS current user's full name. Can be empty to hide the author.\n* `date`: A `string` that is used to format today's date in the `YYYY-MM-DD` format. If the date is not a valid\n  format, the string will be displayed. Defaults to `YYYY-MM-DD`.\n* `paging`: A `string` that contains 0 or more `%d` directives. The first `%d`\n  will be replaced with the current slide number and the second `%d` will be\n  replaced with the total slides count. Defaults to `Slide %d / %d`.\n  You will need to surround the paging value with quotes if it starts with `%`.\n\n#### Date format\n\nGiven the date _January 02, 2006_:\n\n| Value  | Translates to |\n|--------|---------------|\n| `YYYY` | 2006          |\n| `YY`   | 06            |\n| `MMMM` | January       |\n| `MMM`  | Jan           |\n| `MM`   | 01            |\n| `mm`   | 1             |\n| `DD`   | 02            |\n| `dd`   | 2             |\n\n### SSH\n\nSlides is accessible over `ssh` if hosted on a machine through the `slides\nserve [file]` command.\n\nOn a machine, run:\n\n```\nslides serve [file]\n```\n\nThen, on another machine (or same machine), `ssh` into the port specified by\nthe `slides serve [file]` command:\n```\nssh 127.0.0.1 -p 53531\n```\n\nYou will be able to access the presentation hosted over SSH! You can use this\nto present with `slides` from a computer that doesn't have `slides` installed,\nbut does have `ssh`. Or, let your viewers have access to the slides on their\nown computer without needing to download `slides` and the presentation file.\n\n### Alternatives\n\n**Credits**: This project was heavily inspired by [`lookatme`](https://github.com/d0c-s4vage/lookatme).\n\n* [`lookatme`](https://github.com/d0c-s4vage/lookatme)\n* [`sli.dev`](https://sli.dev/)\n* [`sent`](https://tools.suckless.org/sent/)\n* [`presenterm`](https://github.com/mfontanini/presenterm)\n\n### Development\nSee the [development documentation](./docs/development)\n",
        "releases": [
            {
                "name": "v0.9.0",
                "date": "2022-09-13T14:32:18Z"
            },
            {
                "name": "v0.8.0",
                "date": "2022-04-07T19:22:39Z"
            },
            {
                "name": "v0.7.3",
                "date": "2022-02-15T18:09:26Z"
            },
            {
                "name": "v0.7.2",
                "date": "2021-11-01T18:32:55Z"
            },
            {
                "name": "v0.7.1",
                "date": "2021-11-01T15:45:26Z"
            },
            {
                "name": "v0.7.0",
                "date": "2021-10-29T18:50:44Z"
            },
            {
                "name": "v0.6.2",
                "date": "2021-10-23T02:02:07Z"
            },
            {
                "name": "v0.6.1",
                "date": "2021-10-22T01:04:00Z"
            },
            {
                "name": "v0.6.0",
                "date": "2021-10-22T00:43:31Z"
            },
            {
                "name": "v0.5.0",
                "date": "2021-08-25T20:08:08Z"
            },
            {
                "name": "v0.4.1",
                "date": "2021-07-05T17:07:43Z"
            },
            {
                "name": "v0.4.0",
                "date": "2021-06-28T01:05:17Z"
            },
            {
                "name": "v0.3.0",
                "date": "2021-06-21T20:56:24Z"
            },
            {
                "name": "v0.2.0",
                "date": "2021-06-13T15:29:21Z"
            },
            {
                "name": "v0.1.2",
                "date": "2021-06-09T14:15:47Z"
            },
            {
                "name": "v0.1.1",
                "date": "2021-06-07T23:44:58Z"
            },
            {
                "name": "v0.1.0",
                "date": "2021-06-06T14:40:48Z"
            }
        ]
    }
}