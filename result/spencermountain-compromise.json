{
    "https://api.github.com/repos/spencermountain/compromise": {
        "forks": 655,
        "watchers": 11570,
        "stars": 11570,
        "languages": {
            "JavaScript": 5948930,
            "TypeScript": 12145,
            "HTML": 3988
        },
        "commits": [
            "2025-01-16T23:10:50Z",
            "2025-01-16T23:06:02Z",
            "2025-01-15T21:53:12Z",
            "2025-01-15T21:52:26Z",
            "2025-01-15T21:43:48Z",
            "2025-01-15T21:42:31Z",
            "2025-01-15T21:32:02Z",
            "2025-01-15T19:27:48Z",
            "2025-01-15T19:11:03Z",
            "2025-01-15T18:47:47Z",
            "2024-12-01T16:54:38Z",
            "2024-12-01T16:47:12Z",
            "2024-11-27T13:51:48Z",
            "2024-11-22T20:08:40Z",
            "2024-11-22T19:36:37Z",
            "2024-10-16T18:51:16Z",
            "2024-10-10T12:32:11Z",
            "2024-10-10T12:27:51Z",
            "2024-10-10T12:27:26Z",
            "2024-10-06T15:31:56Z",
            "2024-10-06T15:28:06Z",
            "2024-10-06T15:18:31Z",
            "2024-10-06T15:13:28Z",
            "2024-10-06T14:51:44Z",
            "2024-10-06T14:41:41Z",
            "2024-10-06T14:30:46Z",
            "2024-10-06T14:24:44Z",
            "2024-10-06T14:08:21Z",
            "2024-10-02T17:54:57Z",
            "2024-10-02T17:52:34Z"
        ],
        "creation_date": "2011-07-05T09:04:38Z",
        "contributors": 30,
        "topics": [
            "named-entity-recognition",
            "nlp",
            "part-of-speech"
        ],
        "subscribers": 163,
        "readme": "<div align=\"center\">\n  <img height=\"15px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n  <div><b>compromise</b></div>\n  <img src=\"https://user-images.githubusercontent.com/399657/68222691-6597f180-ffb9-11e9-8a32-a7f38aa8bded.png\"/>\n  <div>modest natural language processing</div>\n  <div><code>npm install compromise</code></div>\n  <div align=\"center\">\n    <sub>\n      by\n      <a href=\"https://spencermounta.in/\">Spencer Kelly</a> and\n      <a href=\"https://github.com/spencermountain/compromise/graphs/contributors\">\n        many contributors\n      </a>\n    </sub>\n  </div>\n  <img height=\"22px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n</div>\n\n<div align=\"center\">\n  <div>\n    <a href=\"https://npmjs.org/package/compromise\">\n    <img src=\"https://img.shields.io/npm/v/compromise.svg?style=flat-square\" />\n  </a>\n  <a href=\"https://codecov.io/gh/spencermountain/compromise\">\n    <img src=\"https://codecov.io/gh/spencermountain/compromise/branch/master/graph/badge.svg\" />\n  </a>\n  <a href=\"https://bundlephobia.com/result?p=compromise\">\n    <img src=\"https://img.shields.io/bundlephobia/min/compromise\"/>\n    <!-- <img src=\"https://badge-size.herokuapp.com/spencermountain/compromise/master/builds/compromise.min.js\" /> -->\n  </a>\n  </div>\n  <div align=\"center\">\n    <sub>\n     <a href=\"https://github.com/nlp-compromise/fr-compromise\">french</a> \u2022 <a href=\"https://github.com/nlp-compromise/de-compromise\">german</a>  \u2022 <a href=\"https://github.com/nlp-compromise/it-compromise\">italian</a> \u2022 <a href=\"https://github.com/nlp-compromise/es-compromise\">spanish</a>\n    </sub>\n  </div>\n</div>\n\n<!-- spacer -->\n<img height=\"25px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n<div align=\"left\">\ndon't you find it strange,\n<br/>\n<ul>\n  <img height=\"2px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n  <sub>how easy <b>text</b> is to <b>make</b>,</sub>\n  <br/>\n  <img height=\"2px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n&nbsp;<i>\u21ac<sub>\u1510\u159c</sub><b>\u21ac</b></i> &nbsp; <sub></sub>\nand how hard it is to actually <b>parse</b> and <i>use</i>?\n\n</ul>\n</div>\n\n<!-- spacer -->\n<img height=\"45px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n<div align=\"left\">\n  <img height=\"10px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>compromise <i><a href=\"https://observablehq.com/@spencermountain/compromise-justification\">tries its best</a></i> to turn text into data.\n  <br/>\n  <img height=\"30px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>it makes limited and sensible decisions.\n  <br/>\n  <sub >\n   <img height=\"15px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/> it's not as smart as you'd think.\n  </sub>\n\n<img height=\"45px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n <!--\n  it is\n  <a href=\"https://docs.compromise.cool/compromise-filesize\">small,\n  <a href=\"https://docs.compromise.cool/compromise-performance\">quick</a>,\n  and often <i><a href=\"https://docs.compromise.cool/compromise-accuracy\">good-enough</a></i>.\n  <br/> -->\n</div>\n<img height=\"30px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n```js\nimport nlp from 'compromise'\n\nlet doc = nlp('she sells seashells by the seashore.')\ndoc.verbs().toPastTense()\ndoc.text()\n// 'she sold seashells by the seashore.'\n```\n\n<!-- spacer -->\n<img height=\"50px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n<div align=\"left\">\n<i>don't be fancy, at all:</i>\n</div>\n\n```js\nif (doc.has('simon says #Verb')) {\n  return true\n}\n```\n\n<!-- spacer -->\n<img height=\"30px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n<div align=\"center\">\n  <img height=\"50px\" src=\"https://user-images.githubusercontent.com/399657/68221814-05ed1680-ffb8-11e9-8b6b-c7528d163871.png\"/>\n</div>\n\n<div align=\"left\">\n<i>grab parts of the text:</i>\n</div>\n\n```js\nlet doc = nlp(entireNovel)\ndoc.match('the #Adjective of times').text()\n// \"the blurst of times?\"\n```\n\n<div align=\"right\">\n  <a href=\"https://docs.compromise.cool/compromise-match\">match docs</a>\n</div>\n<div align=\"center\">\n  <img height=\"50px\" src=\"https://user-images.githubusercontent.com/399657/68221837-0d142480-ffb8-11e9-9d30-90669f1b897c.png\"/>\n</div>\n<!-- spacer -->\n<img height=\"30px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n<i>and get data:</i>\n\n```js\nimport plg from 'compromise-speech'\nnlp.extend(plg)\n\nlet doc = nlp('Milwaukee has certainly had its share of visitors..')\ndoc.compute('syllables')\ndoc.places().json()\n/*\n[{\n  \"text\": \"Milwaukee\",\n  \"terms\": [{\n    \"normal\": \"milwaukee\",\n    \"syllables\": [\"mil\", \"wau\", \"kee\"]\n  }]\n}]\n*/\n```\n\n<div align=\"right\">\n  <a href=\"https://docs.compromise.cool/compromise-json\">json docs</a>\n</div>\n<div align=\"center\">\n  <img height=\"50px\" src=\"https://user-images.githubusercontent.com/399657/68221814-05ed1680-ffb8-11e9-8b6b-c7528d163871.png\"/>\n</div>\n\n<!-- spacer -->\n<img height=\"30px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\navoid the problems of brittle parsers:\n\n```js\nlet doc = nlp(\"we're not gonna take it..\")\n\ndoc.has('gonna') // true\ndoc.has('going to') // true (implicit)\n\n// transform\ndoc.contractions().expand()\ndoc.text()\n// 'we are not going to take it..'\n```\n\n<div align=\"right\">\n  <a href=\"https://docs.compromise.cool/compromise-contractions\">contraction docs</a>\n</div>\n<div align=\"center\">\n  <img height=\"50px\" src=\"https://user-images.githubusercontent.com/399657/68221814-05ed1680-ffb8-11e9-8b6b-c7528d163871.png\"/>\n</div>\n<!-- spacer -->\n<img height=\"30\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\nand whip stuff around like it's data:\n\n```js\nlet doc = nlp('ninety five thousand and fifty two')\ndoc.numbers().add(20)\ndoc.text()\n// 'ninety five thousand and seventy two'\n```\n\n<div align=\"right\">\n  <a href=\"https://docs.compromise.cool/compromise-values\">number docs</a>\n</div>\n\n<div align=\"center\">\n  <img height=\"50px\" src=\"https://user-images.githubusercontent.com/399657/68221837-0d142480-ffb8-11e9-9d30-90669f1b897c.png\"/>\n</div>\n<!-- spacer -->\n<img height=\"30\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n<sub>-because it actually is-</sub>\n\n```js\nlet doc = nlp('the purple dinosaur')\ndoc.nouns().toPlural()\ndoc.text()\n// 'the purple dinosaurs'\n```\n\n<div align=\"right\">\n  <a href=\"https://docs.compromise.cool/nouns\">noun docs</a>\n</div>\n<div align=\"center\">\n  <img height=\"50px\" src=\"https://user-images.githubusercontent.com/399657/68221731-e8b84800-ffb7-11e9-8453-6395e0e903fa.png\"/>\n</div>\n\n<!-- spacer -->\n<img height=\"50px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\nUse it on the client-side:\n\n```html\n<script src=\"https://unpkg.com/compromise\"></script>\n<script>\n  var doc = nlp('two bottles of beer')\n  doc.numbers().minus(1)\n  document.body.innerHTML = doc.text()\n  // 'one bottle of beer'\n</script>\n```\n\nor likewise:\n\n```typescript\nimport nlp from 'compromise'\n\nvar doc = nlp('London is calling')\ndoc.verbs().toNegative()\n// 'London is not calling'\n```\n\n<img height=\"75px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n<!--\n  bragging graphs\n -->\n<!-- spacer -->\n<img height=\"30\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\ncompromise is **~250kb** (minified):\n\n<div align=\"center\">\n  <!-- filesize -->\n  <a href=\"https://bundlephobia.com/result?p=compromise\">\n    <img width=\"600\" src=\"https://user-images.githubusercontent.com/399657/68234819-14dfc300-ffd0-11e9-8b30-cb8545707b29.png\"/>\n  </a>\n</div>\n\nit's pretty fast. It can run on keypress:\n\n<div align=\"center\">\n  <a href=\"https://observablehq.com/@spencermountain/compromise-performance\">\n    <img width=\"600\" src=\"https://user-images.githubusercontent.com/399657/159795115-ed62440a-be41-424c-baa4-8dd15c48377d.png\"/>\n  </a>\n</div>\n\nit works mainly by <a href=\"https://observablehq.com/@spencermountain/verbs\">conjugating all forms</a> of a basic word list.\n\nThe final lexicon is <a href=\"https://observablehq.com/@spencermountain/compromise-lexicon\">~14,000 words</a>:\n\n<div align=\"center\">\n  <img width=\"600\" src=\"https://user-images.githubusercontent.com/399657/68234805-0d201e80-ffd0-11e9-8dc6-f7a600352555.png\"/>\n</div>\n\nyou can read more about how it works, [here](https://observablehq.com/@spencermountain/compromise-internals). it's weird.\n\n<!-- spacer -->\n<img height=\"75px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n<!--\n  one/two/three parts\n -->\n<p align=\"left\">\n  <sub>okay -</sub>\n  <h1>\n    <code>compromise/one</code>\n  </h1>\n  <p align=\"center\">A <code>tokenizer</code> of words, sentences, and punctuation.</p>\n  <img height=\"15px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n<p>\n\n```js\nimport nlp from 'compromise/one'\n\nlet doc = nlp(\"Wayne's World, party time\")\nlet data = doc.json()\n/* [{\n  normal:\"wayne's world party time\",\n    terms:[{ text: \"Wayne's\", normal: \"wayne\" },\n      ...\n      ]\n  }]\n*/\n```\n\n<div align=\"right\">\n  <a href=\"https://docs.compromise.cool/compromise-tokenization\">tokenizer docs</a>\n</div>\n\n<b>compromise/one</b> splits your text up, wraps it in a handy API,\n\n<ul>\n  <sub>and does nothing else -</sub>\n</ul>\n\n<img height=\"25px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n<b>/one</b> is quick - most sentences take a 10th of a millisecond.\n\nIt can do <b>~1mb</b> of text a second - or 10 wikipedia pages.\n\n<i>Infinite jest</i> takes 3s.\n\n<div align=\"right\">\n  You can also parallelize, or stream text to it with <a href=\"https://github.com/spencermountain/compromise/tree/master/plugins/speed\">compromise-speed</a>.\n</div>\n\n<!-- spacer -->\n<img height=\"60px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n<!-- two -->\n<p align=\"center\">\n  <h1 align=\"left\">\n   <code>compromise/two</code>\n  </h1>\n  <p align=\"center\">A <code>part-of-speech</code> tagger, and grammar-interpreter.</p>\n  <img height=\"15px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n  <p>\n\n```js\nimport nlp from 'compromise/two'\n\nlet doc = nlp(\"Wayne's World, party time\")\nlet str = doc.match('#Possessive #Noun').text()\n// \"Wayne's World\"\n```\n\n<div align=\"right\">\n  <a href=\"https://docs.compromise.cool/compromise-tagger\">tagger docs</a>\n</div>\n\n<p>\n  <img height=\"25px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n</p>\n<b>compromise/two</b> automatically calculates the very basic grammar of each word.\n\n<sub>this is more useful than people sometimes realize.</sub>\n\nLight grammar helps you write cleaner templates, and get closer to the information.\n\n<!-- Part-of-speech tagging is profoundly-difficult task to get 100% on. It is also a profoundly easy task to get 85% on. -->\n\n<img height=\"50px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\ncompromise has <b>83 tags</b>, arranged in <a href=\"https://observablehq.com/@spencermountain/compromise-tags\">a handsome graph</a>.\n\n<b>#FirstName</b> \u2192 <b>#Person</b> \u2192 <b>#ProperNoun</b> \u2192 <b>#Noun</b>\n\nyou can see the grammar of each word by running `doc.debug()`\n\nyou can see the reasoning for each tag with `nlp.verbose('tagger')`.\n\nif you prefer <a href=\"https://www.ling.upenn.edu/courses/Fall_2003/ling001/penn_treebank_pos.html\"><i>Penn tags</i></a>, you can derive them with:\n\n```js\nlet doc = nlp('welcome thrillho')\ndoc.compute('penn')\ndoc.json()\n```\n\n<img height=\"60px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n<!-- three -->\n<p align=\"center\">\n  <h1 align=\"left\">\n   <code>compromise/three</code>\n  </h1>\n  <p align=\"center\"><code>Phrase</code> and sentence tooling.</p>\n  <img height=\"15px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n  <p>\n\n```js\nimport nlp from 'compromise/three'\n\nlet doc = nlp(\"Wayne's World, party time\")\nlet str = doc.people().normalize().text()\n// \"wayne\"\n```\n\n<div align=\"right\">\n  <a href=\"https://docs.compromise.cool/compromise-selections\">selection docs</a>\n</div>\n\n<b>compromise/three</b> is a set of tooling to <i>zoom into</i> and operate on parts of a text.\n\n`.numbers()` grabs all the numbers in a document, for example - and extends it with new methods, like `.subtract()`.\n\nWhen you have a phrase, or group of words, you can see additional metadata about it with `.json()`\n\n```js\nlet doc = nlp('four out of five dentists')\nconsole.log(doc.fractions().json())\n/*[{\n    text: 'four out of five',\n    terms: [ [Object], [Object], [Object], [Object] ],\n    fraction: { numerator: 4, denominator: 5, decimal: 0.8 }\n  }\n]*/\n```\n\n```js\nlet doc = nlp('$4.09CAD')\ndoc.money().json()\n/*[{\n    text: '$4.09CAD',\n    terms: [ [Object] ],\n    number: { prefix: '$', num: 4.09, suffix: 'cad'}\n  }\n]*/\n```\n\n<img height=\"80px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n## API\n\n### Compromise/one\n\n##### Output\n\n- **[.text()](https://observablehq.com/@spencermountain/compromise-text)** - return the document as text\n- **[.json()](https://observablehq.com/@spencermountain/compromise-json)** - return the document as data\n- **[.debug()](https://observablehq.com/@spencermountain/compromise-output)** - pretty-print the interpreted document\n- **[.out()](https://observablehq.com/@spencermountain/compromise-output)** - a named or custom output\n- **[.html({})](https://observablehq.com/@spencermountain/compromise-html)** - output custom html tags for matches\n- **[.wrap({})](https://observablehq.com/@spencermountain/compromise-output)** - produce custom output for document matches\n\n##### Utils\n\n- **[.found](https://observablehq.com/@spencermountain/compromise-utils)** _[getter]_ - is this document empty?\n- **[.docs](https://observablehq.com/@spencermountain/compromise-utils)** _[getter]_ get term objects as json\n- **[.length](https://observablehq.com/@spencermountain/compromise-utils)** _[getter]_ - count the # of characters in the document (string length)\n- **[.isView](https://observablehq.com/@spencermountain/compromise-utils)** _[getter]_ - identify a compromise object\n- **[.compute()](https://observablehq.com/@spencermountain/compromise-compute)** - run a named analysis on the document\n- **[.clone()](https://observablehq.com/@spencermountain/compromise-utils)** - deep-copy the document, so that no references remain\n- **[.termList()](https://observablehq.com/@spencermountain/compromise-accessors)** - return a flat list of all Term objects in match\n- **[.cache({})](https://observablehq.com/@spencermountain/compromise-cache)** - freeze the current state of the document, for speed-purposes\n- **[.uncache()](https://observablehq.com/@spencermountain/compromise-cache)** - un-freezes the current state of the document, so it may be transformed\n- **[.freeze({})](https://observablehq.com/@spencermountain/compromise-freeze)** - prevent any tags from being removed, in these terms\n- **[.unfreeze({})](https://observablehq.com/@spencermountain/compromise-freeze)** - allow tags to change again, as default\n\n##### Accessors\n\n- **[.all()](https://observablehq.com/@spencermountain/compromise-utils)** - return the whole original document ('zoom out')\n- **[.terms()](https://observablehq.com/@spencermountain/compromise-selections)** - split-up results by each individual term\n- **[.first(n)](https://observablehq.com/@spencermountain/compromise-accessors)** - use only the first result(s)\n- **[.last(n)](https://observablehq.com/@spencermountain/compromise-accessors)** - use only the last result(s)\n- **[.slice(n,n)](https://observablehq.com/@spencermountain/compromise-accessors)** - grab a subset of the results\n- **[.eq(n)](https://observablehq.com/@spencermountain/compromise-accessors)** - use only the nth result\n- **[.firstTerms()](https://observablehq.com/@spencermountain/compromise-accessors)** - get the first word in each match\n- **[.lastTerms()](https://observablehq.com/@spencermountain/compromise-accessors)** - get the end word in each match\n- **[.fullSentences()](https://observablehq.com/@spencermountain/compromise-accessors)** - get the whole sentence for each match\n- **[.groups()](https://observablehq.com/@spencermountain/compromise-accessors)** - grab any named capture-groups from a match\n- **[.wordCount()](https://observablehq.com/@spencermountain/compromise-utils)** - count the # of terms in the document\n- **[.confidence()](https://observablehq.com/@spencermountain/compromise-utils)** - an average score for pos tag interpretations\n\n##### Match\n\n_(match methods use the [match-syntax](https://docs.compromise.cool/compromise-match-syntax).)_\n\n- **[.match('')](https://observablehq.com/@spencermountain/compromise-match)** - return a new Doc, with this one as a parent\n- **[.not('')](https://observablehq.com/@spencermountain/compromise-match)** - return all results except for this\n- **[.matchOne('')](https://observablehq.com/@spencermountain/compromise-match)** - return only the first match\n- **[.if('')](https://observablehq.com/@spencermountain/compromise-match)** - return each current phrase, only if it contains this match ('only')\n- **[.ifNo('')](https://observablehq.com/@spencermountain/compromise-match)** - Filter-out any current phrases that have this match ('notIf')\n- **[.has('')](https://observablehq.com/@spencermountain/compromise-match)** - Return a boolean if this match exists\n- **[.before('')](https://observablehq.com/@spencermountain/compromise-match)** - return all terms before a match, in each phrase\n- **[.after('')](https://observablehq.com/@spencermountain/compromise-match)** - return all terms after a match, in each phrase\n- **[.union()](https://observablehq.com/@spencermountain/compromise-set)** - return combined matches without duplicates\n- **[.intersection()](https://observablehq.com/@spencermountain/compromise-set)** - return only duplicate matches\n- **[.complement()](https://observablehq.com/@spencermountain/compromise-set)** - get everything not in another match\n- **[.settle()](https://observablehq.com/@spencermountain/compromise-set)** - remove overlaps from matches\n- **[.growRight('')](https://observablehq.com/@spencermountain/compromise-match)** - add any matching terms immediately after each match\n- **[.growLeft('')](https://observablehq.com/@spencermountain/compromise-match)** - add any matching terms immediately before each match\n- **[.grow('')](https://observablehq.com/@spencermountain/compromise-match)** - add any matching terms before or after each match\n- **[.sweep(net)](https://observablehq.com/@spencermountain/compromise-sweep)** - apply a series of match objects to the document\n- **[.splitOn('')](https://observablehq.com/@spencermountain/compromise-split)** - return a Document with three parts for every match ('splitOn')\n- **[.splitBefore('')](https://observablehq.com/@spencermountain/compromise-split)** - partition a phrase before each matching segment\n- **[.splitAfter('')](https://observablehq.com/@spencermountain/compromise-split)** - partition a phrase after each matching segment\n- **[.join()](https://observablehq.com/@spencermountain/compromise-split)** - merge any neighbouring terms in each match\n- **[.joinIf(leftMatch, rightMatch)](https://observablehq.com/@spencermountain/compromise-split)** - merge any neighbouring terms under given conditions\n- **[.lookup([])](https://observablehq.com/@spencermountain/compromise-match)** - quick find for an array of string matches\n- **[.autoFill()](https://observablehq.com/@spencermountain/compromise-typeahead)** - create type-ahead assumptions on the document\n\n##### Tag\n\n- **[.tag('')](https://observablehq.com/@spencermountain/compromise-tagger)** - Give all terms the given tag\n- **[.tagSafe('')](https://observablehq.com/@spencermountain/compromise-tagger)** - Only apply tag to terms if it is consistent with current tags\n- **[.unTag('')](https://observablehq.com/@spencermountain/compromise-tagger)** - Remove this term from the given terms\n- **[.canBe('')](https://observablehq.com/@spencermountain/compromise-tagger)** - return only the terms that can be this tag\n\n##### Case\n\n- **[.toLowerCase()](https://observablehq.com/@spencermountain/compromise-case)** - turn every letter of every term to lower-cse\n- **[.toUpperCase()](https://observablehq.com/@spencermountain/compromise-case)** - turn every letter of every term to upper case\n- **[.toTitleCase()](https://observablehq.com/@spencermountain/compromise-case)** - upper-case the first letter of each term\n- **[.toCamelCase()](https://observablehq.com/@spencermountain/compromise-case)** - remove whitespace and title-case each term\n\n##### Whitespace\n\n- **[.pre('')](https://observablehq.com/@spencermountain/compromise-whitespace)** - add this punctuation or whitespace before each match\n- **[.post('')](https://observablehq.com/@spencermountain/compromise-whitespace)** - add this punctuation or whitespace after each match\n- **[.trim()](https://observablehq.com/@spencermountain/compromise-whitespace)** - remove start and end whitespace\n- **[.hyphenate()](https://observablehq.com/@spencermountain/compromise-whitespace)** - connect words with hyphen, and remove whitespace\n- **[.dehyphenate()](https://observablehq.com/@spencermountain/compromise-whitespace)** - remove hyphens between words, and set whitespace\n- **[.toQuotations()](https://observablehq.com/@spencermountain/compromise-whitespace)** - add quotation marks around these matches\n- **[.toParentheses()](https://observablehq.com/@spencermountain/compromise-whitespace)** - add brackets around these matches\n\n##### Loops\n\n- **[.map(fn)](https://observablehq.com/@spencermountain/compromise-loops)** - run each phrase through a function, and create a new document\n- **[.forEach(fn)](https://observablehq.com/@spencermountain/compromise-loops)** - run a function on each phrase, as an individual document\n- **[.filter(fn)](https://observablehq.com/@spencermountain/compromise-loops)** - return only the phrases that return true\n- **[.find(fn)](https://observablehq.com/@spencermountain/compromise-loops)** - return a document with only the first phrase that matches\n- **[.some(fn)](https://observablehq.com/@spencermountain/compromise-loops)** - return true or false if there is one matching phrase\n- **[.random(fn)](https://observablehq.com/@spencermountain/compromise-loops)** - sample a subset of the results\n\n##### Insert\n\n- **[.replace(match, replace)](https://observablehq.com/@spencermountain/compromise-insert)** - search and replace match with new content\n- **[.replaceWith(replace)](https://observablehq.com/@spencermountain/compromise-insert)** - substitute-in new text\n- **[.remove()](https://observablehq.com/@spencermountain/compromise-insert)** - fully remove these terms from the document\n- **[.insertBefore(str)](https://observablehq.com/@spencermountain/compromise-insert)** - add these new terms to the front of each match (prepend)\n- **[.insertAfter(str)](https://observablehq.com/@spencermountain/compromise-insert)** - add these new terms to the end of each match (append)\n- **[.concat()](https://observablehq.com/@spencermountain/compromise-insert)** - add these new things to the end\n- **[.swap(fromLemma, toLemma)](https://observablehq.com/@spencermountain/compromise-root)** - smart replace of root-words,using proper conjugation\n\n##### Transform\n\n- **[.sort('method')](https://observablehq.com/@spencermountain/compromise-sorting)** - re-arrange the order of the matches (in place)\n- **[.reverse()](https://observablehq.com/@spencermountain/compromise-sorting)** - reverse the order of the matches, but not the words\n- **[.normalize({})](https://observablehq.com/@spencermountain/compromise-normalization)** - clean-up the text in various ways\n- **[.unique()](https://observablehq.com/@spencermountain/compromise-sorting)** - remove any duplicate matches\n\n##### Lib\n\n_(these methods are on the main `nlp` object)_\n\n- **[nlp.tokenize(str)](https://observablehq.com/@spencermountain/compromise-tokenization)** - parse text without running POS-tagging\n- **[nlp.lazy(str, match)](https://observablehq.com/@spencermountain/compromise-performance)** - scan through a text with minimal analysis\n- **[nlp.plugin({})](https://observablehq.com/@spencermountain/compromise-constructor-methods)** - mix in a compromise-plugin\n- **[nlp.parseMatch(str)](https://observablehq.com/@spencermountain/compromise-constructor-methods)** - pre-parse any match statements into json\n- **[nlp.world()](https://observablehq.com/@spencermountain/compromise-constructor-methods)** - grab or change library internals\n- **[nlp.model()](https://observablehq.com/@spencermountain/compromise-constructor-methods)** - grab all current linguistic data\n- **[nlp.methods()](https://observablehq.com/@spencermountain/compromise-constructor-methods)** - grab or change internal methods\n- **[nlp.hooks()](https://observablehq.com/@spencermountain/compromise-constructor-methods)** - see which compute methods run automatically\n- **[nlp.verbose(mode)](https://observablehq.com/@spencermountain/compromise-constructor-methods)** - log our decision-making for debugging\n- **[nlp.version](https://observablehq.com/@spencermountain/compromise-constructor-methods)** - current semver version of the library\n\n- **[nlp.addWords(obj, isFrozen?)](https://observablehq.com/@spencermountain/compromise-plugin)** - add new words to the lexicon\n- **[nlp.addTags(obj)](https://observablehq.com/@spencermountain/compromise-plugin)** - add new tags to the tagSet\n- **[nlp.typeahead(arr)](https://observablehq.com/@spencermountain/compromise-typeahead)** - add words to the auto-fill dictionary\n- **[nlp.buildTrie(arr)](https://observablehq.com/@spencermountain/compromise-lookup)** - compile a list of words into a fast lookup form\n- **[nlp.buildNet(arr)](https://observablehq.com/@spencermountain/compromise-sweep)** - compile a list of matches into a fast match form\n\n<!-- spacer -->\n<img height=\"30px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n### compromise/two:\n\n##### Contractions\n\n- **[.contractions()](https://observablehq.com/@spencermountain/compromise-contractions)** - things like \"didn't\"\n- **[.contractions().expand()](https://observablehq.com/@spencermountain/compromise-contractions)** - things like \"didn't\"\n- **[.contract()](https://observablehq.com/@spencermountain/compromise-contractions)** - things like \"didn't\"\n\n<!-- spacer -->\n<img height=\"30px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n### compromise/three:\n\n##### Nouns\n\n- **[.nouns()](https://observablehq.com/@spencermountain/nouns)** - return any subsequent terms tagged as a Noun\n  - **[.nouns().json()](https://observablehq.com/@spencermountain/nouns)** - overloaded output with noun metadata\n  - **[.nouns().parse()](https://observablehq.com/@spencermountain/nouns)** - get tokenized noun-phrase\n  - **[.nouns().isPlural()](https://observablehq.com/@spencermountain/nouns)** - return only plural nouns\n  - **[.nouns().isSingular()](https://observablehq.com/@spencermountain/nouns)** - return only singular nouns\n  - **[.nouns().toPlural()](https://observablehq.com/@spencermountain/nouns)** - `'football captain' \u2192 'football captains'`\n  - **[.nouns().toSingular()](https://observablehq.com/@spencermountain/nouns)** - `'turnovers' \u2192 'turnover'`\n  - **[.nouns().adjectives()](https://observablehq.com/@spencermountain/nouns)** - get any adjectives describing this noun\n\n##### Verbs\n\n- **[.verbs()](https://observablehq.com/@spencermountain/verbs)** - return any subsequent terms tagged as a Verb\n  - **[.verbs().json()](https://observablehq.com/@spencermountain/verbs)** - overloaded output with verb metadata\n  - **[.verbs().parse()](https://observablehq.com/@spencermountain/verbs)** - get tokenized verb-phrase\n  - **[.verbs().subjects()](https://observablehq.com/@spencermountain/verbs)** - what is doing the verb action\n  - **[.verbs().adverbs()](https://observablehq.com/@spencermountain/verbs)** - return the adverbs describing this verb.\n  - **[.verbs().isSingular()](https://observablehq.com/@spencermountain/verbs)** - return singular verbs like 'spencer walks'\n  - **[.verbs().isPlural()](https://observablehq.com/@spencermountain/verbs)** - return plural verbs like 'we walk'\n  - **[.verbs().isImperative()](https://observablehq.com/@spencermountain/verbs)** - only instruction verbs like 'eat it!'\n  - **[.verbs().toPastTense()](https://observablehq.com/@spencermountain/verbs)** - `'will go' \u2192 'went'`\n  - **[.verbs().toPresentTense()](https://observablehq.com/@spencermountain/verbs)** - `'walked' \u2192 'walks'`\n  - **[.verbs().toFutureTense()](https://observablehq.com/@spencermountain/verbs)** - `'walked' \u2192 'will walk'`\n  - **[.verbs().toInfinitive()](https://observablehq.com/@spencermountain/verbs)** - `'walks' \u2192 'walk'`\n  - **[.verbs().toGerund()](https://observablehq.com/@spencermountain/verbs)** - `'walks' \u2192 'walking'`\n  - **[.verbs().toPastParticiple()](https://observablehq.com/@spencermountain/verbs)** - `'drive' \u2192 'had driven'`\n  - **[.verbs().conjugate()](https://observablehq.com/@spencermountain/verbs)** - return all conjugations of these verbs\n  - **[.verbs().isNegative()](https://observablehq.com/@spencermountain/verbs)** - return verbs with 'not', 'never' or 'no'\n  - **[.verbs().isPositive()](https://observablehq.com/@spencermountain/verbs)** - only verbs without 'not', 'never' or 'no'\n  - **[.verbs().toNegative()](https://observablehq.com/@spencermountain/verbs)** - `'went' \u2192 'did not go'`\n  - **[.verbs().toPositive()](https://observablehq.com/@spencermountain/verbs)** - `\"didn't study\" \u2192 'studied'`\n\n##### Numbers\n\n- **[.numbers()](https://observablehq.com/@spencermountain/compromise-values)** - grab all written and numeric values\n  - **[.numbers().parse()](https://observablehq.com/@spencermountain/compromise-values)** - get tokenized number phrase\n  - **[.numbers().get()](https://observablehq.com/@spencermountain/compromise-values)** - get a simple javascript number\n  - **[.numbers().json()](https://observablehq.com/@spencermountain/compromise-values)** - overloaded output with number metadata\n  - **[.numbers().toNumber()](https://observablehq.com/@spencermountain/compromise-values)** - convert 'five' to `5`\n  - **[.numbers().toLocaleString()](https://observablehq.com/@spencermountain/compromise-values)** - add commas, or nicer formatting for numbers\n  - **[.numbers().toText()](https://observablehq.com/@spencermountain/compromise-values)** - convert '5' to `five`\n  - **[.numbers().toOrdinal()](https://observablehq.com/@spencermountain/compromise-values)** - convert 'five' to `fifth` or `5th`\n  - **[.numbers().toCardinal()](https://observablehq.com/@spencermountain/compromise-values)** - convert 'fifth' to `five` or `5`\n  - **[.numbers().isOrdinal()](https://observablehq.com/@spencermountain/compromise-values)** - return only ordinal numbers\n  - **[.numbers().isCardinal()](https://observablehq.com/@spencermountain/compromise-values)** - return only cardinal numbers\n  - **[.numbers().isEqual(n)](https://observablehq.com/@spencermountain/compromise-values)** - return numbers with this value\n  - **[.numbers().greaterThan(min)](https://observablehq.com/@spencermountain/compromise-values)** - return numbers bigger than n\n  - **[.numbers().lessThan(max)](https://observablehq.com/@spencermountain/compromise-values)** - return numbers smaller than n\n  - **[.numbers().between(min, max)](https://observablehq.com/@spencermountain/compromise-values)** - return numbers between min and max\n  - **[.numbers().isUnit(unit)](https://observablehq.com/@spencermountain/compromise-values)** - return only numbers in the given unit, like 'km'\n  - **[.numbers().set(n)](https://observablehq.com/@spencermountain/compromise-values)** - set number to n\n  - **[.numbers().add(n)](https://observablehq.com/@spencermountain/compromise-values)** - increase number by n\n  - **[.numbers().subtract(n)](https://observablehq.com/@spencermountain/compromise-values)** - decrease number by n\n  - **[.numbers().increment()](https://observablehq.com/@spencermountain/compromise-values)** - increase number by 1\n  - **[.numbers().decrement()](https://observablehq.com/@spencermountain/compromise-values)** - decrease number by 1\n- **[.money()](https://observablehq.com/@spencermountain/compromise-values)** - things like `'$2.50'`\n  - **[.money().get()](https://observablehq.com/@spencermountain/compromise-values)** - retrieve the parsed amount(s) of money\n  - **[.money().json()](https://observablehq.com/@spencermountain/compromise-values)** - currency + number info\n  - **[.money().currency()](https://observablehq.com/@spencermountain/compromise-values)** - which currency the money is in\n- **[.fractions()](https://observablehq.com/@spencermountain/compromise-values)** - like '2/3rds' or 'one out of five'\n  - **[.fractions().parse()](https://observablehq.com/@spencermountain/compromise-values)** - get tokenized fraction\n  - **[.fractions().get()](https://observablehq.com/@spencermountain/compromise-values)** - simple numerator, denominator data\n  - **[.fractions().json()](https://observablehq.com/@spencermountain/compromise-values)** - json method overloaded with fractions data\n  - **[.fractions().toDecimal()](https://observablehq.com/@spencermountain/compromise-values)** - '2/3' -> '0.66'\n  - **[.fractions().normalize()](https://observablehq.com/@spencermountain/compromise-values)** - 'four out of 10' -> '4/10'\n  - **[.fractions().toText()](https://observablehq.com/@spencermountain/compromise-values)** - '4/10' -> 'four tenths'\n  - **[.fractions().toPercentage()](https://observablehq.com/@spencermountain/compromise-values)** - '4/10' -> '40%'\n- **[.percentages()](https://observablehq.com/@spencermountain/compromise-values)** - like '2.5%'\n  - **[.percentages().get()](https://observablehq.com/@spencermountain/compromise-values)** - return the percentage number / 100\n  - **[.percentages().json()](https://observablehq.com/@spencermountain/compromise-values)** - json overloaded with percentage information\n  - **[.percentages().toFraction()](https://observablehq.com/@spencermountain/compromise-values)** - '80%' -> '8/10'\n\n##### Sentences\n\n- **[.sentences()](https://observablehq.com/@spencermountain/compromise-sentences)** - return a sentence class with additional methods\n  - **[.sentences().json()](https://observablehq.com/@spencermountain/compromise-sentences)** - overloaded output with sentence metadata\n  <!-- - **[.sentences().subjects()](https://observablehq.com/@spencermountain/compromise-sentences)** - return the main noun of each sentence -->\n  - **[.sentences().toPastTense()](https://observablehq.com/@spencermountain/compromise-sentences)** - `he walks` -> `he walked`\n  - **[.sentences().toPresentTense()](https://observablehq.com/@spencermountain/compromise-sentences)** - `he walked` -> `he walks`\n  - **[.sentences().toFutureTense()](https://observablehq.com/@spencermountain/compromise-sentences)** -- `he walks` -> `he will walk`\n  - **[.sentences().toInfinitive()](https://observablehq.com/@spencermountain/compromise-sentences)** -- verb root-form `he walks` -> `he walk`\n  - **[.sentences().toNegative()](https://observablehq.com/@spencermountain/compromise-sentences)** - - `he walks` -> `he didn't walk`\n  - **[.sentences().isQuestion()](https://observablehq.com/@spencermountain/compromise-sentences)** - return questions with a `?`\n  - **[.sentences().isExclamation()](https://observablehq.com/@spencermountain/compromise-sentences)** - return sentences with a `!`\n  - **[.sentences().isStatement()](https://observablehq.com/@spencermountain/compromise-sentences)** - return sentences without `?` or `!`\n\n##### Adjectives\n\n- **[.adjectives()](https://observablehq.com/@spencermountain/compromise-selections)** - things like `'quick'`\n  - **[.adjectives().json()](https://observablehq.com/@spencermountain/compromise-selections)** - get adjective metadata\n  - **[.adjectives().conjugate()](https://observablehq.com/@spencermountain/compromise-selections)** - return all inflections of these adjectives\n  - **[.adjectives().adverbs()](https://observablehq.com/@spencermountain/compromise-selections)** - get adverbs describing this adjective\n  - **[.adjectives().toComparative()](https://observablehq.com/@spencermountain/compromise-selections)** - 'quick' -> 'quicker'\n  - **[.adjectives().toSuperlative()](https://observablehq.com/@spencermountain/compromise-selections)** - 'quick' -> 'quickest'\n  - **[.adjectives().toAdverb()](https://observablehq.com/@spencermountain/compromise-selections)** - 'quick' -> 'quickly'\n  - **[.adjectives().toNoun()](https://observablehq.com/@spencermountain/compromise-selections)** - 'quick' -> 'quickness'\n\n##### Misc selections\n\n- **[.clauses()](https://observablehq.com/@spencermountain/compromise-selections)** - split-up sentences into multi-term phrases\n- **[.chunks()](https://observablehq.com/@spencermountain/compromise-selections)** - split-up sentences noun-phrases and verb-phrases\n- **[.hyphenated()](https://observablehq.com/@spencermountain/compromise-selections)** - all terms connected with a hyphen or dash like `'wash-out'`\n- **[.phoneNumbers()](https://observablehq.com/@spencermountain/compromise-selections)** - things like `'(939) 555-0113'`\n- **[.hashTags()](https://observablehq.com/@spencermountain/compromise-selections)** - things like `'#nlp'`\n- **[.emails()](https://observablehq.com/@spencermountain/compromise-selections)** - things like `'hi@compromise.cool'`\n- **[.emoticons()](https://observablehq.com/@spencermountain/compromise-selections)** - things like `:)`\n- **[.emojis()](https://observablehq.com/@spencermountain/compromise-selections)** - things like `\ud83d\udc8b`\n- **[.atMentions()](https://observablehq.com/@spencermountain/compromise-selections)** - things like `'@nlp_compromise'`\n- **[.urls()](https://observablehq.com/@spencermountain/compromise-selections)** - things like `'compromise.cool'`\n- **[.pronouns()](https://observablehq.com/@spencermountain/compromise-selections)** - things like `'he'`\n- **[.conjunctions()](https://observablehq.com/@spencermountain/compromise-selections)** - things like `'but'`\n- **[.prepositions()](https://observablehq.com/@spencermountain/compromise-selections)** - things like `'of'`\n- **[.abbreviations()](https://observablehq.com/@spencermountain/compromise-selections)** - things like `'Mrs.'`\n- **[.people()](https://observablehq.com/@spencermountain/topics-named-entity-recognition)** - names like 'John F. Kennedy'\n  - **[.people().json()](https://observablehq.com/@spencermountain/topics-named-entity-recognition)** - get person-name metadata\n  - **[.people().parse()](https://observablehq.com/@spencermountain/topics-named-entity-recognition)** - get person-name interpretation\n- **[.places()](https://observablehq.com/@spencermountain/topics-named-entity-recognition)** - like 'Paris, France'\n- **[.organizations()](https://observablehq.com/@spencermountain/topics-named-entity-recognition)** - like 'Google, Inc'\n- **[.topics()](https://observablehq.com/@spencermountain/topics-named-entity-recognition)** - `people()` + `places()` + `organizations()`\n- **[.adverbs()](https://observablehq.com/@spencermountain/compromise-selections)** - things like `'quickly'`\n  - **[.adverbs().json()](https://observablehq.com/@spencermountain/compromise-selections)** - get adverb metadata\n- **[.acronyms()](https://observablehq.com/@spencermountain/compromise-selections)** - things like `'FBI'`\n  - **[.acronyms().strip()](https://observablehq.com/@spencermountain/compromise-selections)** - remove periods from acronyms\n  - **[.acronyms().addPeriods()](https://observablehq.com/@spencermountain/compromise-selections)** - add periods to acronyms\n- **[.parentheses()](https://observablehq.com/@spencermountain/compromise-selections)** - return anything inside (parentheses)\n  - **[.parentheses().strip()](https://observablehq.com/@spencermountain/compromise-selections)** - remove brackets\n- **[.possessives()](https://observablehq.com/@spencermountain/compromise-selections)** - things like `\"Spencer's\"`\n  - **[.possessives().strip()](https://observablehq.com/@spencermountain/compromise-selections)** - \"Spencer's\" -> \"Spencer\"\n- **[.quotations()](https://observablehq.com/@spencermountain/compromise-selections)** - return any terms inside paired quotation marks\n  - **[.quotations().strip()](https://observablehq.com/@spencermountain/compromise-selections)** - remove quotation marks\n- **[.slashes()](https://observablehq.com/@spencermountain/compromise-selections)** - return any terms grouped by slashes\n  - **[.slashes().split()](https://observablehq.com/@spencermountain/compromise-selections)** - turn 'love/hate' into 'love hate'\n\n<p>\n<img height=\"85px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n</p>\n\n<div align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/399657/68221814-05ed1680-ffb8-11e9-8b6b-c7528d163871.png\"/>\n</div>\n\n### .extend():\n\nThis library comes with a considerate, common-sense baseline for english grammar.\n\nYou're free to change, or lay-waste to any settings - which is the fun part actually.\n\nthe easiest part is just to suggest tags for any given words:\n\n```js\nlet myWords = {\n  kermit: 'FirstName',\n  fozzie: 'FirstName',\n}\nlet doc = nlp(muppetText, myWords)\n```\n\nor make heavier changes with a [compromise-plugin](https://observablehq.com/@spencermountain/compromise-plugins).\n\n```js\nimport nlp from 'compromise'\nnlp.extend({\n  // add new tags\n  tags: {\n    Character: {\n      isA: 'Person',\n      notA: 'Adjective',\n    },\n  },\n  // add or change words in the lexicon\n  words: {\n    kermit: 'Character',\n    gonzo: 'Character',\n  },\n  // change inflections\n  irregulars: {\n    get: {\n      pastTense: 'gotten',\n      gerund: 'gettin',\n    },\n  },\n  // add new methods to compromise\n  api: View => {\n    View.prototype.kermitVoice = function () {\n      this.sentences().prepend('well,')\n      this.match('i [(am|was)]').prepend('um,')\n      return this\n    }\n  },\n})\n```\n\n<div align=\"right\">\n  <a href=\"https://docs.compromise.cool/compromise-plugins\">.plugin() docs</a>\n</div>\n<div align=\"center\">\n  <img height=\"50px\" src=\"https://user-images.githubusercontent.com/399657/68221848-11404200-ffb8-11e9-90cd-3adee8d8564f.png\"/>\n</div>\n\n<!-- spacer -->\n<div >\n  <img height=\"50px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n</div>\n\n### Docs:\n\n##### gentle introduction:\n\n- **[#1) Input \u2192 output](https://docs.compromise.cool/tutorial-1)**\n- **[#2) Match & transform](https://docs.compromise.cool/compromise-tutorial-2)**\n- **[#3) Making a chat-bot](https://docs.compromise.cool/compromise-making-a-bot)**\n  <!-- * **[Tutorial #4]()**  -  Making a plugin -->\n\n<div >\n  <img height=\"25px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n</div>\n\n##### Documentation:\n\n| Concepts                                                                                    |                                               API                                               |                                                                                Plugins |\n| ------------------------------------------------------------------------------------------- | :---------------------------------------------------------------------------------------------: | -------------------------------------------------------------------------------------: |\n| [Accuracy](https://observablehq.com/@spencermountain/compromise-accuracy)                   |           [Accessors](https://observablehq.com/@spencermountain/compromise-accessors)           |          [Adjectives](https://observablehq.com/@spencermountain/compromise-adjectives) |\n| [Caching](https://observablehq.com/@spencermountain/compromise-cache)                       | [Constructor-methods](https://observablehq.com/@spencermountain/compromise-constructor-methods) |                    [Dates](https://observablehq.com/@spencermountain/compromise-dates) |\n| [Case](https://observablehq.com/@spencermountain/compromise-case)                           |        [Contractions](https://observablehq.com/@spencermountain/compromise-contractions)        |                  [Export](https://observablehq.com/@spencermountain/compromise-export) |\n| [Filesize](https://observablehq.com/@spencermountain/compromise-filesize)                   |              [Insert](https://observablehq.com/@spencermountain/compromise-insert)              |                      [Hash](https://observablehq.com/@spencermountain/compromise-hash) |\n| [Internals](https://observablehq.com/@spencermountain/compromise-internals)                 |                [Json](https://observablehq.com/@spencermountain/compromise-json)                |                      [Html](https://observablehq.com/@spencermountain/compromise-html) |\n| [Justification](https://observablehq.com/@spencermountain/compromise-justification)         |        [Character Offsets](https://observablehq.com/@spencermountain/compromise-offsets)        |              [Keypress](https://observablehq.com/@spencermountain/compromise-keypress) |\n| [Lexicon](https://observablehq.com/@spencermountain/compromise-lexicon)                     |               [Loops](https://observablehq.com/@spencermountain/compromise-loops)               |                   [Ngrams](https://observablehq.com/@spencermountain/compromise-ngram) |\n| [Match-syntax](https://observablehq.com/@spencermountain/compromise-match-syntax)           |               [Match](https://observablehq.com/@spencermountain/compromise-match)               |                 [Numbers](https://observablehq.com/@spencermountain/compromise-values) |\n| [Performance](https://observablehq.com/@spencermountain/compromise-performance)             |                    [Nouns](https://observablehq.com/@spencermountain/nouns)                     |          [Paragraphs](https://observablehq.com/@spencermountain/compromise-paragraphs) |\n| [Plugins](https://observablehq.com/@spencermountain/compromise-plugins)                     |              [Output](https://observablehq.com/@spencermountain/compromise-output)              |                      [Scan](https://observablehq.com/@spencermountain/compromise-scan) |\n| [Projects](https://observablehq.com/@spencermountain/compromise-projects)                   |          [Selections](https://observablehq.com/@spencermountain/compromise-selections)          |            [Sentences](https://observablehq.com/@spencermountain/compromise-sentences) |\n| [Tagger](https://observablehq.com/@spencermountain/compromise-tagger)                       |             [Sorting](https://observablehq.com/@spencermountain/compromise-sorting)             |            [Syllables](https://observablehq.com/@spencermountain/compromise-syllables) |\n| [Tags](https://observablehq.com/@spencermountain/compromise-tags)                           |               [Split](https://observablehq.com/@spencermountain/compromise-split)               |            [Pronounce](https://observablehq.com/@spencermountain/compromise-pronounce) |\n| [Tokenization](https://observablehq.com/@spencermountain/compromise-tokenization)           |                [Text](https://observablehq.com/@spencermountain/compromise-text)                |                  [Strict](https://observablehq.com/@spencermountain/compromise-strict) |\n| [Named-Entities](https://observablehq.com/@spencermountain/topics-named-entity-recognition) |               [Utils](https://observablehq.com/@spencermountain/compromise-utils)               |            [Penn-tags](https://observablehq.com/@spencermountain/compromise-penn-tags) |\n| [Whitespace](https://observablehq.com/@spencermountain/compromise-whitespace)               |                    [Verbs](https://observablehq.com/@spencermountain/verbs)                     | [Typeahead](https://observablehq.com/@spencermountain/compromise/compromise-typeahead) |\n| [World data](https://observablehq.com/@spencermountain/compromise-world)                    |       [Normalization](https://observablehq.com/@spencermountain/compromise-normalization)       |                    [Sweep](https://observablehq.com/@spencermountain/compromise-sweep) |\n| [Fuzzy-matching](https://observablehq.com/@spencermountain/compromise-fuzzy-matching)       |          [Typescript](https://observablehq.com/@spencermountain/compromise-typescript)          |              [Mutation](https://observablehq.com/@spencermountain/compromise-mutation) |\n| [Root-forms](https://observablehq.com/@spencermountain/compromise-root)                     |\n\n<div >\n  <img height=\"25px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n</div>\n\n##### Talks:\n\n- **[Language as an Interface](https://www.youtube.com/watch?v=WuPVS2tCg8s)** - by Spencer Kelly\n- **[Coding Chat Bots](https://www.youtube.com/watch?v=c_hmwFwvO0U)** - by KahWee Teng\n- **[On Typing and data](https://vimeo.com/496095722)** - by Spencer Kelly\n\n##### Articles:\n\n- **[Geocoding Social Conversations with NLP and JavaScript](http://compromise.cool)** - by Microsoft\n- **[Microservice Recipe](https://eventn.com/recipes/text-parsing-with-nlp-compromise)** - by Eventn\n- **[Adventure Game Sentence Parsing with Compromise](https://killalldefects.com/2020/02/20/adventure-game-sentence-parsing-with-compromise/)**\n- **[Building Text-Based Games](https://killalldefects.com/2019/09/24/building-text-based-games-with-compromise-nlp/)** - by Matt Eland\n- **[Fun with javascript in BigQuery](https://medium.com/@hoffa/new-in-bigquery-persistent-udfs-c9ea4100fd83#6e09)** - by Felipe Hoffa\n- **[Natural Language Processing... in the Browser?](https://dev.to/charlesdlandau/natural-language-processing-in-the-browser-52hj)** - by Charles Landau\n\n##### Some fun Applications:\n\n- **[Automated Bechdel Test](https://github.com/guardian/bechdel-test)** - by The Guardian\n- **[Story generation framework](https://perchance.org/welcome)** - by Jose Phrocca\n- **[Tumbler blog of lists](https://leanstooneside.tumblr.com/)** - horse-ebooks-like lists - by Michael Paulukonis\n- **[Video Editing from Transcription](https://newtheory.io/)** - by New Theory\n- **[Browser extension Fact-checking](https://github.com/AlexanderKidd/FactoidL)** - by Alexander Kidd\n- **[Siri shortcut](https://routinehub.co/shortcut/3260)** - by Michael Byrns\n- **[Amazon skill](https://github.com/tajddin/voiceplay)** - by Tajddin Maghni\n- **[Tasking Slack-bot](https://github.com/kevinsuh/toki)** - by Kevin Suh\n  [[see more]](https://observablehq.com/@spencermountain/compromise-projects)\n\n##### Comparisons\n\n- [Compromise and Spacy](https://observablehq.com/@spencermountain/compromise-and-spacy)\n- [Compromise and NLTK](https://observablehq.com/@spencermountain/compromise-and-nltk)\n\n<!-- spacer -->\n<div align=\"center\">\n  <img height=\"25px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n  <hr/>\n</div>\n<div align=\"center\">\n  <img height=\"50px\" src=\"https://user-images.githubusercontent.com/399657/68221632-b9094000-ffb7-11e9-99e0-b48edd6cdf8a.png\"/>\n</div>\n\n<!-- <div align=\"center\">\n  <img height=\"50px\" src=\"https://user-images.githubusercontent.com/399657/68221824-09809d80-ffb8-11e9-9ef0-6ed3574b0ce8.png\"/>\n</div> -->\n\n### Plugins:\n\nThese are some helpful extensions:\n\n##### Dates\n\n`npm install compromise-dates`\n\n- **[.dates()](https://observablehq.com/@spencermountain/compromise-dates)** - find dates like `June 8th` or `03/03/18`\n  - **[.dates().get()](https://observablehq.com/@spencermountain/compromise-dates)** - simple start/end json result\n  - **[.dates().json()](https://observablehq.com/@spencermountain/compromise-dates)** - overloaded output with date metadata\n  - **[.dates().format('')](https://observablehq.com/@spencermountain/compromise-dates)** - convert the dates to specific formats\n  - **[.dates().toShortForm()](https://observablehq.com/@spencermountain/compromise-dates)** - convert 'Wednesday' to 'Wed', etc\n  - **[.dates().toLongForm()](https://observablehq.com/@spencermountain/compromise-dates)** - convert 'Feb' to 'February', etc\n- **[.durations()](https://observablehq.com/@spencermountain/compromise-dates)** - `2 weeks` or `5mins`\n  - **[.durations().get()](https://observablehq.com/@spencermountain/compromise-dates)** - return simple json for duration\n  - **[.durations().json()](https://observablehq.com/@spencermountain/compromise-dates)** - overloaded output with duration metadata\n- **[.times()](https://observablehq.com/@spencermountain/compromise-dates)** - `4:30pm` or `half past five`\n  - **[.times().get()](https://observablehq.com/@spencermountain/compromise-dates)** - return simple json for times\n  - **[.times().json()](https://observablehq.com/@spencermountain/compromise-dates)** - overloaded output with time metadata\n\n##### Stats\n\n`npm install compromise-stats`\n\n- **[.tfidf({})](https://observablehq.com/@spencermountain/compromise-tfidf)** - rank words by frequency and uniqueness\n\n- **[.ngrams({})](https://observablehq.com/@spencermountain/compromise-ngram)** - list all repeating sub-phrases, by word-count\n- **[.unigrams()](https://observablehq.com/@spencermountain/compromise-ngram)** - n-grams with one word\n- **[.bigrams()](https://observablehq.com/@spencermountain/compromise-ngram)** - n-grams with two words\n- **[.trigrams()](https://observablehq.com/@spencermountain/compromise-ngram)** - n-grams with three words\n- **[.startgrams()](https://observablehq.com/@spencermountain/compromise-ngram)** - n-grams including the first term of a phrase\n- **[.endgrams()](https://observablehq.com/@spencermountain/compromise-ngram)** - n-grams including the last term of a phrase\n- **[.edgegrams()](https://observablehq.com/@spencermountain/compromise-ngram)** - n-grams including the first or last term of a phrase\n\n##### Speech\n\n`npm install compromise-syllables`\n\n- **[.syllables()](https://observablehq.com/@spencermountain/compromise-syllables)** - split each term by its typical pronunciation\n- **[.soundsLike()](https://observablehq.com/@spencermountain/compromise-soundsLike)** - produce a estimated pronunciation\n\n##### Wikipedia\n\n`npm install compromise-wikipedia`\n\n- **[.wikipedia()](https://observablehq.com/@spencermountain/compromise-wikipedia)** - compressed article reconciliation\n\n<!-- spacer -->\n<div >\n  <img height=\"25px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n  <hr/>\n</div>\n\n### Typescript\n\nwe're committed to typescript/deno support, both in main and in the official-plugins:\n\n```ts\nimport nlp from 'compromise'\nimport stats from 'compromise-stats'\n\nconst nlpEx = nlp.extend(stats)\n\nnlpEx('This is type safe!').ngrams({ min: 1 })\n```\n\n<div align=\"right\">\n  <a href=\"https://docs.compromise.cool/compromise-typescript\">typescript docs</a>\n</div>\n\n<div >\n  <img height=\"50px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n</div>\n\n#### Limitations:\n\n- **slash-support:**\n  We currently split slashes up as different words, like we do for hyphens. so things like this don't work:\n  <code>nlp('the koala eats/shoots/leaves').has('koala leaves') //false</code>\n\n- **inter-sentence match:**\n  By default, sentences are the top-level abstraction.\n  Inter-sentence, or multi-sentence matches aren't supported without <a href=\"https://github.com/spencermountain/compromise/tree/master/plugins/paragraphs\">a plugin</a>:\n  <code>nlp(\"that's it. Back to Winnipeg!\").has('it back')//false</code>\n\n- **nested match syntax:**\n  the <s>danger</s> beauty of regex is that you can recurse indefinitely.\n  Our match syntax is much weaker. Things like this are not <i>(yet)</i> possible:\n  <code>doc.match('(modern (major|minor))? general')</code>\n  complex matches must be achieved with successive **.match()** statements.\n\n- **dependency parsing:**\n  Proper sentence transformation requires understanding the [syntax tree](https://en.wikipedia.org/wiki/Parse_tree) of a sentence, which we don't currently do.\n  We should! Help wanted with this.\n\n##### FAQ\n\n<ul align=\"left\">\n  <p>\n    <details>\n      <summary>\u2602\ufe0f Isn't javascript too...</summary>\n      <p></p>\n      <ul>\n        yeah it is!\n        <br/>\n        it wasn't built to compete with NLTK, and may not fit every project.\n        <br/>\n        string processing is synchronous too, and parallelizing node processes is weird.\n        <br/>\n        See <a href=\"https://observablehq.com/@spencermountain/compromise-performance\">here</a> for information about speed & performance, and\n        <a href=\"https://observablehq.com/@spencermountain/compromise-justification\">here</a> for project motivations\n      </ul>\n      <p></p>\n    </details>\n  </p>\n  <p>\n    <details>\n      <summary>\ud83d\udc83 Can it run on my arduino-watch?</summary>\n      <p></p>\n      <ul>\n        Only if it's water-proof!\n        <br/>\n        Read <a href=\"https://observablehq.com/@spencermountain/compromise-quickstart\">quick start</a> for running compromise in workers, mobile apps, and all sorts of funny environments.\n      </ul>\n      <p></p>\n    </details>\n  </p>\n  <p>\n    <details>\n      <summary>\ud83c\udf0e Compromise in other Languages?</summary>\n      <p></p>\n      <ul>\n        we've got work-in-progress forks for <a href=\"https://github.com/nlp-compromise/de-compromise\">German</a>, <a href=\"https://github.com/nlp-compromise/fr-compromise\">French</a>, <a href=\"https://github.com/nlp-compromise/es-compromise\">Spanish</a>, and <a href=\"https://github.com/nlp-compromise/it-compromise\">Italian</a> in the same philosophy.\n        <br/>\n        and need some help.\n      </ul>\n      <p></p>\n    </details>\n  </p>\n  <p>\n    <details>\n      <summary>\u2728 Partial builds?</summary>\n      <p></p>\n      <ul>\n        we do offer a <a href=\"https://observablehq.com/@spencermountain/compromise-filesize\">tokenize-only</a> build, which has the POS-tagger pulled-out.\n        <br/>\n        but otherwise, compromise isn't easily tree-shaken.\n        <br/>\n        the tagging methods are competitive, and greedy, so it's not recommended to pull things out.\n        <br/>\n        Note that without a full POS-tagging, the contraction-parser won't work perfectly. (<i>(spencer's cool)</i> vs. <i>(spencer's house)</i>)\n        <br/>\n        It's recommended to run the library fully.\n      </ul>\n      <p></p>\n    </details>\n  </p>\n</ul>\n\n<div align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/399657/68221731-e8b84800-ffb7-11e9-8453-6395e0e903fa.png\"/>\n</div>\n\n#### See Also:\n\n- &nbsp; **[en-pos](https://github.com/finnlp/en-pos)** - very clever javascript pos-tagger _by [Alex Corvi](https://github.com/alexcorvi)_\n- &nbsp; **[naturalNode](https://github.com/NaturalNode/natural)** - fancier statistical nlp in javascript\n- &nbsp; **[winkJS](https://winkjs.org/)** - POS-tagger, tokenizer, machine-learning in javascript\n- &nbsp; **[dariusk/pos-js ](https://github.com/dariusk/pos-js)** - fastTag fork in javascript\n- &nbsp; **[compendium-js](https://github.com/Ulflander/compendium-js)** - POS and sentiment analysis in javascript\n- &nbsp; **[nodeBox linguistics](https://www.nodebox.net/code/index.php/Linguistics)** - conjugation, inflection in javascript\n- &nbsp; **[reText](https://github.com/wooorm/retext)** - very impressive [text utilities](https://github.com/wooorm/retext/blob/master/doc/plugins.md) in javascript\n- &nbsp; **[superScript](https://github.com/superscriptjs/superscript)** - conversation engine in js\n- &nbsp; **[jsPos](https://code.google.com/archive/p/jspos/)** - javascript build of the time-tested Brill-tagger\n\n- &nbsp; **[spaCy](https://spacy.io/)** - speedy, multilingual tagger in C/python\n- &nbsp; **[Prose](https://github.com/jdkato/prose/)** - quick tagger in Go by Joseph Kato\n- &nbsp; **[TextBlob](https://github.com/sloria/TextBlob)** - python tagger\n\n<img height=\"25px\" src=\"https://user-images.githubusercontent.com/399657/68221862-17ceb980-ffb8-11e9-87d4-7b30b6488f16.png\"/>\n\n<b>MIT</b>\n",
        "releases": [
            {
                "name": "14.14.4",
                "date": "2025-01-16T23:11:19Z"
            },
            {
                "name": "14.14.3",
                "date": "2024-12-01T16:55:11Z"
            },
            {
                "name": "14.14.2",
                "date": "2024-10-10T12:32:30Z"
            },
            {
                "name": "14.14.1",
                "date": "2024-10-06T15:32:21Z"
            },
            {
                "name": "14.14.0",
                "date": "2024-07-31T18:23:43Z"
            },
            {
                "name": "14.13.0",
                "date": "2024-04-01T17:14:37Z"
            },
            {
                "name": "14.12.0",
                "date": "2024-02-16T23:24:08Z"
            },
            {
                "name": "14.11.2",
                "date": "2024-01-23T22:29:20Z"
            },
            {
                "name": "14.11.1",
                "date": "2024-01-16T21:48:11Z"
            },
            {
                "name": "14.11.0",
                "date": "2023-12-21T17:18:37Z"
            },
            {
                "name": "14.10.1",
                "date": "2023-11-16T21:54:09Z"
            },
            {
                "name": "14.10.0",
                "date": "2023-08-10T18:55:15Z"
            },
            {
                "name": "14.9.0",
                "date": "2023-05-07T17:13:30Z"
            },
            {
                "name": "14.8.2",
                "date": "2023-02-04T19:46:52Z"
            },
            {
                "name": "14.8.1",
                "date": "2022-12-13T21:37:25Z"
            },
            {
                "name": "14.8.0",
                "date": "2022-11-25T18:51:47Z"
            },
            {
                "name": "14.7.1",
                "date": "2022-11-11T22:48:51Z"
            },
            {
                "name": "14.7.0",
                "date": "2022-11-04T18:36:59Z"
            },
            {
                "name": "14.6.0",
                "date": "2022-10-21T17:06:11Z"
            },
            {
                "name": "14.5.2",
                "date": "2022-10-16T14:29:40Z"
            },
            {
                "name": "14.5.1",
                "date": "2022-10-12T19:06:33Z"
            },
            {
                "name": "14.5.0",
                "date": "2022-08-26T19:44:21Z"
            },
            {
                "name": "14.4.5",
                "date": "2022-08-10T18:47:30Z"
            },
            {
                "name": "14.4.4",
                "date": "2022-08-03T16:46:48Z"
            },
            {
                "name": "14.4.3",
                "date": "2022-08-02T18:54:08Z"
            },
            {
                "name": "14.4.2",
                "date": "2022-07-29T17:28:24Z"
            },
            {
                "name": "14.4.1",
                "date": "2022-07-27T18:27:38Z"
            },
            {
                "name": "14.4.0",
                "date": "2022-07-02T15:00:38Z"
            },
            {
                "name": "14.3.1",
                "date": "2022-06-15T20:04:12Z"
            },
            {
                "name": "14.3.0",
                "date": "2022-06-08T20:16:59Z"
            },
            {
                "name": "14.2.1",
                "date": "2022-06-03T20:01:09Z"
            },
            {
                "name": "14.2.0",
                "date": "2022-06-01T19:04:54Z"
            },
            {
                "name": "14.1.2",
                "date": "2022-04-27T20:56:05Z"
            },
            {
                "name": "14.1.1",
                "date": "2022-04-15T22:46:26Z"
            },
            {
                "name": "14.1.0",
                "date": "2022-04-12T21:29:30Z"
            },
            {
                "name": "14.0.0",
                "date": "2022-03-22T22:07:27Z"
            },
            {
                "name": "13.11.4",
                "date": "2021-09-20T13:52:20Z"
            },
            {
                "name": "13.11.3",
                "date": "2021-06-21T20:48:10Z"
            },
            {
                "name": "13.11.2",
                "date": "2021-05-05T19:07:19Z"
            },
            {
                "name": "13.11.1 ",
                "date": "2021-04-18T18:42:57Z"
            },
            {
                "name": "13.11.0",
                "date": "2021-04-15T19:07:12Z"
            },
            {
                "name": "13.10.6",
                "date": "2021-04-06T00:01:09Z"
            },
            {
                "name": "13.10.5",
                "date": "2021-03-29T20:59:12Z"
            },
            {
                "name": "13.10.4",
                "date": "2021-03-19T19:21:23Z"
            },
            {
                "name": "13.10.3",
                "date": "2021-03-18T16:35:29Z"
            },
            {
                "name": "13.10.2",
                "date": "2021-03-12T22:07:39Z"
            },
            {
                "name": "13.10.1",
                "date": "2021-03-04T16:02:54Z"
            },
            {
                "name": "13.10.0",
                "date": "2021-02-22T22:39:08Z"
            },
            {
                "name": "13.9.3",
                "date": "2021-02-18T18:02:22Z"
            },
            {
                "name": "13.9.2",
                "date": "2021-02-07T18:12:31Z"
            },
            {
                "name": "13.9.1",
                "date": "2021-02-04T18:40:58Z"
            },
            {
                "name": "13.9.0",
                "date": "2021-02-04T02:28:01Z"
            },
            {
                "name": "13.8.0",
                "date": "2020-12-18T19:12:52Z"
            },
            {
                "name": "13.7.0",
                "date": "2020-10-29T20:44:17Z"
            },
            {
                "name": "13.6.0",
                "date": "2020-10-16T13:17:42Z"
            },
            {
                "name": "13.5.0",
                "date": "2020-09-10T20:09:13Z"
            },
            {
                "name": "13.4.0",
                "date": "2020-09-10T15:59:26Z"
            },
            {
                "name": "13.3.2",
                "date": "2020-08-07T15:59:20Z"
            },
            {
                "name": "13.3.1",
                "date": "2020-06-11T23:51:32Z"
            },
            {
                "name": "13.3.0",
                "date": "2020-06-10T19:01:54Z"
            },
            {
                "name": "13.2.0",
                "date": "2020-04-25T17:00:28Z"
            },
            {
                "name": "13.1.1",
                "date": "2020-02-29T18:04:59Z"
            },
            {
                "name": "13.0.0",
                "date": "2020-02-01T20:28:00Z"
            },
            {
                "name": "12.3.0",
                "date": "2020-01-10T20:03:02Z"
            },
            {
                "name": "12.0.0",
                "date": "2019-11-28T16:05:25Z"
            },
            {
                "name": "v10",
                "date": "2017-04-21T15:13:24Z"
            },
            {
                "name": "v9.1.0",
                "date": "2017-04-04T21:56:28Z"
            },
            {
                "name": "v9.0.0",
                "date": "2017-04-02T22:16:33Z"
            },
            {
                "name": "first v7 release",
                "date": "2017-02-23T15:34:45Z"
            },
            {
                "name": "",
                "date": "2015-05-29T00:56:12Z"
            },
            {
                "name": "",
                "date": "2015-05-19T01:48:55Z"
            },
            {
                "name": "",
                "date": "2015-05-10T22:25:03Z"
            },
            {
                "name": "",
                "date": "2015-05-03T02:12:12Z"
            },
            {
                "name": "",
                "date": "2015-05-01T04:27:57Z"
            },
            {
                "name": "first bower release",
                "date": "2015-02-22T14:48:45Z"
            }
        ]
    }
}