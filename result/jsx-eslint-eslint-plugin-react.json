{
    "https://api.github.com/repos/jsx-eslint/eslint-plugin-react": {
        "forks": 2765,
        "watchers": 9058,
        "stars": 9058,
        "languages": {
            "JavaScript": 2862500
        },
        "commits": [
            "2025-01-12T21:25:31Z",
            "2025-01-12T21:23:16Z",
            "2025-01-10T18:24:56Z",
            "2024-12-10T02:21:00Z",
            "2024-12-24T05:49:15Z",
            "2024-12-23T21:11:42Z",
            "2024-12-23T22:04:14Z",
            "2024-12-23T21:59:32Z",
            "2024-12-23T21:10:46Z",
            "2024-12-22T22:35:56Z",
            "2024-12-03T04:17:55Z",
            "2024-09-19T16:31:41Z",
            "2024-12-09T21:04:38Z",
            "2024-10-16T09:13:12Z",
            "2024-12-09T19:02:32Z",
            "2024-11-29T18:27:16Z",
            "2024-11-29T18:26:54Z",
            "2024-11-29T18:24:59Z",
            "2024-11-27T08:03:23Z",
            "2024-10-12T00:05:34Z",
            "2024-11-04T15:20:27Z",
            "2024-10-23T05:39:30Z",
            "2024-10-23T05:36:39Z",
            "2024-10-22T23:49:58Z",
            "2024-10-22T19:51:22Z",
            "2024-10-22T19:50:14Z",
            "2024-10-22T19:49:51Z",
            "2024-10-16T21:55:56Z",
            "2024-10-02T09:08:33Z",
            "2024-09-29T14:32:57Z"
        ],
        "creation_date": "2014-12-15T23:44:14Z",
        "contributors": 30,
        "topics": [
            "development",
            "ecmascript",
            "eslint",
            "javascript",
            "lint",
            "react"
        ],
        "subscribers": 81,
        "readme": "# `eslint-plugin-react` <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n===================\n\n[![github actions][actions-image]][actions-url]\n[![Maintenance Status][status-image]][status-url]\n[![NPM version][npm-image]][npm-url]\n[![Tidelift][tidelift-image]][tidelift-url]\n\nReact specific linting rules for `eslint`\n\n## Installation\n\n```sh\nnpm install eslint eslint-plugin-react --save-dev\n```\n\nIt is also possible to install ESLint globally rather than locally (using `npm install -g eslint`). However, this is not recommended, and any plugins or shareable configs that you use must be installed locally in either case.\n\n## Configuration (legacy: `.eslintrc*`) <a id=\"configuration\"></a>\n\nUse [our preset](#recommended) to get reasonable defaults:\n\n```json\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:react/recommended\"\n  ]\n```\n\nIf you are using the [new JSX transform from React 17](https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html#removing-unused-react-imports), extend [`react/jsx-runtime`](https://github.com/jsx-eslint/eslint-plugin-react/blob/c8917b0885094b5e4cc2a6f613f7fb6f16fe932e/index.js#L163-L176) in your eslint config (add `\"plugin:react/jsx-runtime\"` to `\"extends\"`) to disable the relevant rules.\n\nYou should also specify settings that will be shared across all the plugin rules. ([More about eslint shared settings](https://eslint.org/docs/latest/use/configure/configuration-files#configuring-shared-settings))\n\n```json5\n{\n  \"settings\": {\n    \"react\": {\n      \"createClass\": \"createReactClass\", // Regex for Component Factory to use,\n                                         // default to \"createReactClass\"\n      \"pragma\": \"React\",  // Pragma to use, default to \"React\"\n      \"fragment\": \"Fragment\",  // Fragment to use (may be a property of <pragma>), default to \"Fragment\"\n      \"version\": \"detect\", // React version. \"detect\" automatically picks the version you have installed.\n                           // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.\n                           // Defaults to the \"defaultVersion\" setting and warns if missing, and to \"detect\" in the future\n      \"defaultVersion\": \"\", // Default React version to use when the version you have installed cannot be detected.\n                            // If not provided, defaults to the latest React version.\n      \"flowVersion\": \"0.53\" // Flow version\n    },\n    \"propWrapperFunctions\": [\n        // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.\n        \"forbidExtraProps\",\n        {\"property\": \"freeze\", \"object\": \"Object\"},\n        {\"property\": \"myFavoriteWrapper\"},\n        // for rules that check exact prop wrappers\n        {\"property\": \"forbidExtraProps\", \"exact\": true}\n    ],\n    \"componentWrapperFunctions\": [\n        // The name of any function used to wrap components, e.g. Mobx `observer` function. If this isn't set, components wrapped by these functions will be skipped.\n        \"observer\", // `property`\n        {\"property\": \"styled\"}, // `object` is optional\n        {\"property\": \"observer\", \"object\": \"Mobx\"},\n        {\"property\": \"observer\", \"object\": \"<pragma>\"} // sets `object` to whatever value `settings.react.pragma` is set to\n    ],\n    \"formComponents\": [\n      // Components used as alternatives to <form> for forms, eg. <Form endpoint={ url } />\n      \"CustomForm\",\n      {\"name\": \"SimpleForm\", \"formAttribute\": \"endpoint\"},\n      {\"name\": \"Form\", \"formAttribute\": [\"registerEndpoint\", \"loginEndpoint\"]}, // allows specifying multiple properties if necessary\n    ],\n    \"linkComponents\": [\n      // Components used as alternatives to <a> for linking, eg. <Link to={ url } />\n      \"Hyperlink\",\n      {\"name\": \"MyLink\", \"linkAttribute\": \"to\"},\n      {\"name\": \"Link\", \"linkAttribute\": [\"to\", \"href\"]}, // allows specifying multiple properties if necessary\n    ]\n  }\n}\n```\n\nIf you do not use a preset you will need to specify individual rules and add extra configuration.\n\nAdd \"react\" to the plugins section.\n\n```json\n{\n  \"plugins\": [\n    \"react\"\n  ]\n}\n```\n\nEnable JSX support.\n\nWith `eslint` 2+\n\n```json\n{\n  \"parserOptions\": {\n    \"ecmaFeatures\": {\n      \"jsx\": true\n    }\n  }\n}\n```\n\nEnable the rules that you would like to use.\n\n```json\n  \"rules\": {\n    \"react/jsx-uses-react\": \"error\",\n    \"react/jsx-uses-vars\": \"error\",\n  }\n```\n\n### Shareable configs\n\n#### Recommended\n\nThis plugin exports a `recommended` configuration that enforces React good practices.\n\nTo enable this configuration use the `extends` property in your `.eslintrc` config file:\n\n```json\n{\n  \"extends\": [\"eslint:recommended\", \"plugin:react/recommended\"]\n}\n```\n\nSee [`eslint` documentation](https://eslint.org/docs/user-guide/configuring/configuration-files#extending-configuration-files) for more information about extending configuration files.\n\n#### All\n\nThis plugin also exports an `all` configuration that includes every available rule.\nThis pairs well with the `eslint:all` rule.\n\n```json\n{\n  \"plugins\": [\n    \"react\"\n  ],\n  \"extends\": [\"eslint:all\", \"plugin:react/all\"]\n}\n```\n\n**Note**: These configurations will import `eslint-plugin-react` and enable JSX in [parser options](https://eslint.org/docs/user-guide/configuring/language-options#specifying-parser-options).\n\n## Configuration (new: `eslint.config.js`)\n\nFrom [`v8.21.0`](https://github.com/eslint/eslint/releases/tag/v8.21.0), eslint announced a new config system.\nIn the new system, `.eslintrc*` is no longer used. `eslint.config.js` would be the default config file name.\nIn eslint `v8`, the legacy system (`.eslintrc*`) would still be supported, while in eslint `v9`, only the new system would be supported.\n\nAnd from [`v8.23.0`](https://github.com/eslint/eslint/releases/tag/v8.23.0), eslint CLI starts to look up `eslint.config.js`.\n**So, if your eslint is `>=8.23.0`, you're 100% ready to use the new config system.**\n\nYou might want to check out the official blog posts,\n\n- <https://eslint.org/blog/2022/08/new-config-system-part-1/>\n- <https://eslint.org/blog/2022/08/new-config-system-part-2/>\n- <https://eslint.org/blog/2022/08/new-config-system-part-3/>\n\nand the [official docs](https://eslint.org/docs/latest/user-guide/configuring/configuration-files-new).\n\n### Plugin\n\nThe default export of `eslint-plugin-react` is a plugin object.\n\n```js\nconst react = require('eslint-plugin-react');\nconst globals = require('globals');\n\nmodule.exports = [\n  \u2026\n  {\n    files: ['**/*.{js,jsx,mjs,cjs,ts,tsx}'],\n    plugins: {\n      react,\n    },\n    languageOptions: {\n      parserOptions: {\n        ecmaFeatures: {\n          jsx: true,\n        },\n      },\n      globals: {\n        ...globals.browser,\n      },\n    },\n    rules: {\n      // ... any rules you want\n      'react/jsx-uses-react': 'error',\n      'react/jsx-uses-vars': 'error',\n     },\n    // ... others are omitted for brevity\n  },\n  \u2026\n];\n```\n\n### Configuring shared settings\n\nRefer to the [official docs](https://eslint.org/docs/latest/user-guide/configuring/configuration-files-new#configuring-shared-settings).\n\nThe schema of the `settings.react` object would be identical to that of what's already described above in the legacy config section.\n\n<!-- markdownlint-disable-next-line no-duplicate-heading -->\n### Flat Configs\n\nThis plugin exports 3 flat configs:\n\n- `flat.all`\n- `flat.recommended`\n- `flat['jsx-runtime']`\n\nThe flat configs are available via the root plugin import. They will configure the plugin under the `react/` namespace and enable JSX in [`languageOptions.parserOptions`](https://eslint.org/docs/latest/use/configure/language-options#specifying-parser-options).\n\n```js\nconst reactPlugin = require('eslint-plugin-react');\n\nmodule.exports = [\n  \u2026\n  reactPlugin.configs.flat.recommended, // This is not a plugin object, but a shareable config object\n  reactPlugin.configs.flat['jsx-runtime'], // Add this if you are using React 17+\n  \u2026\n];\n```\n\nYou can of course add/override some properties.\n\n**Note**: Our shareable configs does not preconfigure `files` or [`languageOptions.globals`](https://eslint.org/docs/latest/user-guide/configuring/configuration-files-new#configuration-objects).\nFor most of the cases, you probably want to configure some properties by yourself.\n\n```js\nconst reactPlugin = require('eslint-plugin-react');\nconst globals = require('globals');\n\nmodule.exports = [\n  \u2026\n  {\n    files: ['**/*.{js,mjs,cjs,jsx,mjsx,ts,tsx,mtsx}'],\n    ...reactPlugin.configs.flat.recommended,\n    languageOptions: {\n      ...reactPlugin.configs.flat.recommended.languageOptions,\n      globals: {\n        ...globals.serviceworker,\n        ...globals.browser,\n      },\n    },\n  },\n  \u2026\n];\n```\n\nThe above example is same as the example below, as the new config system is based on chaining.\n\n```js\nconst reactPlugin = require('eslint-plugin-react');\nconst globals = require('globals');\n\nmodule.exports = [\n  \u2026\n  {\n    files: ['**/*.{js,mjs,cjs,jsx,mjsx,ts,tsx,mtsx}'],\n    ...reactPlugin.configs.flat.recommended,\n  },\n  {\n    files: ['**/*.{js,mjs,cjs,jsx,mjsx,ts,tsx,mtsx}'],\n    languageOptions: {\n      globals: {\n        ...globals.serviceworker,\n        ...globals.browser,\n      },\n    },\n  },\n  \u2026\n];\n```\n\n## List of supported rules\n\n<!-- begin auto-generated rules list -->\n\n\ud83d\udcbc [Configurations](https://github.com/jsx-eslint/eslint-plugin-react/#shareable-configs) enabled in.\\\n\ud83d\udeab [Configurations](https://github.com/jsx-eslint/eslint-plugin-react/#shareable-configs) disabled in.\\\n\ud83c\udfc3 Set in the `jsx-runtime` [configuration](https://github.com/jsx-eslint/eslint-plugin-react/#shareable-configs).\\\n\u2611\ufe0f Set in the `recommended` [configuration](https://github.com/jsx-eslint/eslint-plugin-react/#shareable-configs).\\\n\ud83d\udd27 Automatically fixable by the [`--fix` CLI option](https://eslint.org/docs/user-guide/command-line-interface#--fix).\\\n\ud83d\udca1 Manually fixable by [editor suggestions](https://eslint.org/docs/latest/use/core-concepts#rule-suggestions).\\\n\u274c Deprecated.\n\n| Name\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0                                                        | Description                                                                                                                                  | \ud83d\udcbc | \ud83d\udeab | \ud83d\udd27 | \ud83d\udca1 | \u274c  |\n| :------------------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------- | :- | :- | :- | :- | :- |\n| [boolean-prop-naming](docs/rules/boolean-prop-naming.md)                                     | Enforces consistent naming for boolean props                                                                                                 |    |    |    |    |    |\n| [button-has-type](docs/rules/button-has-type.md)                                             | Disallow usage of `button` elements without an explicit `type` attribute                                                                     |    |    |    |    |    |\n| [checked-requires-onchange-or-readonly](docs/rules/checked-requires-onchange-or-readonly.md) | Enforce using `onChange` or `readonly` attribute when `checked` is used                                                                      |    |    |    |    |    |\n| [default-props-match-prop-types](docs/rules/default-props-match-prop-types.md)               | Enforce all defaultProps have a corresponding non-required PropType                                                                          |    |    |    |    |    |\n| [destructuring-assignment](docs/rules/destructuring-assignment.md)                           | Enforce consistent usage of destructuring assignment of props, state, and context                                                            |    |    | \ud83d\udd27 |    |    |\n| [display-name](docs/rules/display-name.md)                                                   | Disallow missing displayName in a React component definition                                                                                 | \u2611\ufe0f |    |    |    |    |\n| [forbid-component-props](docs/rules/forbid-component-props.md)                               | Disallow certain props on components                                                                                                         |    |    |    |    |    |\n| [forbid-dom-props](docs/rules/forbid-dom-props.md)                                           | Disallow certain props on DOM Nodes                                                                                                          |    |    |    |    |    |\n| [forbid-elements](docs/rules/forbid-elements.md)                                             | Disallow certain elements                                                                                                                    |    |    |    |    |    |\n| [forbid-foreign-prop-types](docs/rules/forbid-foreign-prop-types.md)                         | Disallow using another component's propTypes                                                                                                 |    |    |    |    |    |\n| [forbid-prop-types](docs/rules/forbid-prop-types.md)                                         | Disallow certain propTypes                                                                                                                   |    |    |    |    |    |\n| [forward-ref-uses-ref](docs/rules/forward-ref-uses-ref.md)                                   | Require all forwardRef components include a ref parameter                                                                                    |    |    |    | \ud83d\udca1 |    |\n| [function-component-definition](docs/rules/function-component-definition.md)                 | Enforce a specific function type for function components                                                                                     |    |    | \ud83d\udd27 |    |    |\n| [hook-use-state](docs/rules/hook-use-state.md)                                               | Ensure destructuring and symmetric naming of useState hook value and setter variables                                                        |    |    |    | \ud83d\udca1 |    |\n| [iframe-missing-sandbox](docs/rules/iframe-missing-sandbox.md)                               | Enforce sandbox attribute on iframe elements                                                                                                 |    |    |    |    |    |\n| [jsx-boolean-value](docs/rules/jsx-boolean-value.md)                                         | Enforce boolean attributes notation in JSX                                                                                                   |    |    | \ud83d\udd27 |    |    |\n| [jsx-child-element-spacing](docs/rules/jsx-child-element-spacing.md)                         | Enforce or disallow spaces inside of curly braces in JSX attributes and expressions                                                          |    |    |    |    |    |\n| [jsx-closing-bracket-location](docs/rules/jsx-closing-bracket-location.md)                   | Enforce closing bracket location in JSX                                                                                                      |    |    | \ud83d\udd27 |    |    |\n| [jsx-closing-tag-location](docs/rules/jsx-closing-tag-location.md)                           | Enforce closing tag location for multiline JSX                                                                                               |    |    | \ud83d\udd27 |    |    |\n| [jsx-curly-brace-presence](docs/rules/jsx-curly-brace-presence.md)                           | Disallow unnecessary JSX expressions when literals alone are sufficient or enforce JSX expressions on literals in JSX children or attributes |    |    | \ud83d\udd27 |    |    |\n| [jsx-curly-newline](docs/rules/jsx-curly-newline.md)                                         | Enforce consistent linebreaks in curly braces in JSX attributes and expressions                                                              |    |    | \ud83d\udd27 |    |    |\n| [jsx-curly-spacing](docs/rules/jsx-curly-spacing.md)                                         | Enforce or disallow spaces inside of curly braces in JSX attributes and expressions                                                          |    |    | \ud83d\udd27 |    |    |\n| [jsx-equals-spacing](docs/rules/jsx-equals-spacing.md)                                       | Enforce or disallow spaces around equal signs in JSX attributes                                                                              |    |    | \ud83d\udd27 |    |    |\n| [jsx-filename-extension](docs/rules/jsx-filename-extension.md)                               | Disallow file extensions that may contain JSX                                                                                                |    |    |    |    |    |\n| [jsx-first-prop-new-line](docs/rules/jsx-first-prop-new-line.md)                             | Enforce proper position of the first property in JSX                                                                                         |    |    | \ud83d\udd27 |    |    |\n| [jsx-fragments](docs/rules/jsx-fragments.md)                                                 | Enforce shorthand or standard form for React fragments                                                                                       |    |    | \ud83d\udd27 |    |    |\n| [jsx-handler-names](docs/rules/jsx-handler-names.md)                                         | Enforce event handler naming conventions in JSX                                                                                              |    |    |    |    |    |\n| [jsx-indent](docs/rules/jsx-indent.md)                                                       | Enforce JSX indentation                                                                                                                      |    |    | \ud83d\udd27 |    |    |\n| [jsx-indent-props](docs/rules/jsx-indent-props.md)                                           | Enforce props indentation in JSX                                                                                                             |    |    | \ud83d\udd27 |    |    |\n| [jsx-key](docs/rules/jsx-key.md)                                                             | Disallow missing `key` props in iterators/collection literals                                                                                | \u2611\ufe0f |    |    |    |    |\n| [jsx-max-depth](docs/rules/jsx-max-depth.md)                                                 | Enforce JSX maximum depth                                                                                                                    |    |    |    |    |    |\n| [jsx-max-props-per-line](docs/rules/jsx-max-props-per-line.md)                               | Enforce maximum of props on a single line in JSX                                                                                             |    |    | \ud83d\udd27 |    |    |\n| [jsx-newline](docs/rules/jsx-newline.md)                                                     | Require or prevent a new line after jsx elements and expressions.                                                                            |    |    | \ud83d\udd27 |    |    |\n| [jsx-no-bind](docs/rules/jsx-no-bind.md)                                                     | Disallow `.bind()` or arrow functions in JSX props                                                                                           |    |    |    |    |    |\n| [jsx-no-comment-textnodes](docs/rules/jsx-no-comment-textnodes.md)                           | Disallow comments from being inserted as text nodes                                                                                          | \u2611\ufe0f |    |    |    |    |\n| [jsx-no-constructed-context-values](docs/rules/jsx-no-constructed-context-values.md)         | Disallows JSX context provider values from taking values that will cause needless rerenders                                                  |    |    |    |    |    |\n| [jsx-no-duplicate-props](docs/rules/jsx-no-duplicate-props.md)                               | Disallow duplicate properties in JSX                                                                                                         | \u2611\ufe0f |    |    |    |    |\n| [jsx-no-leaked-render](docs/rules/jsx-no-leaked-render.md)                                   | Disallow problematic leaked values from being rendered                                                                                       |    |    | \ud83d\udd27 |    |    |\n| [jsx-no-literals](docs/rules/jsx-no-literals.md)                                             | Disallow usage of string literals in JSX                                                                                                     |    |    |    |    |    |\n| [jsx-no-script-url](docs/rules/jsx-no-script-url.md)                                         | Disallow usage of `javascript:` URLs                                                                                                         |    |    |    |    |    |\n| [jsx-no-target-blank](docs/rules/jsx-no-target-blank.md)                                     | Disallow `target=\"_blank\"` attribute without `rel=\"noreferrer\"`                                                                              | \u2611\ufe0f |    | \ud83d\udd27 |    |    |\n| [jsx-no-undef](docs/rules/jsx-no-undef.md)                                                   | Disallow undeclared variables in JSX                                                                                                         | \u2611\ufe0f |    |    |    |    |\n| [jsx-no-useless-fragment](docs/rules/jsx-no-useless-fragment.md)                             | Disallow unnecessary fragments                                                                                                               |    |    | \ud83d\udd27 |    |    |\n| [jsx-one-expression-per-line](docs/rules/jsx-one-expression-per-line.md)                     | Require one JSX element per line                                                                                                             |    |    | \ud83d\udd27 |    |    |\n| [jsx-pascal-case](docs/rules/jsx-pascal-case.md)                                             | Enforce PascalCase for user-defined JSX components                                                                                           |    |    |    |    |    |\n| [jsx-props-no-multi-spaces](docs/rules/jsx-props-no-multi-spaces.md)                         | Disallow multiple spaces between inline JSX props                                                                                            |    |    | \ud83d\udd27 |    |    |\n| [jsx-props-no-spread-multi](docs/rules/jsx-props-no-spread-multi.md)                         | Disallow JSX prop spreading the same identifier multiple times                                                                               |    |    |    |    |    |\n| [jsx-props-no-spreading](docs/rules/jsx-props-no-spreading.md)                               | Disallow JSX prop spreading                                                                                                                  |    |    |    |    |    |\n| [jsx-sort-default-props](docs/rules/jsx-sort-default-props.md)                               | Enforce defaultProps declarations alphabetical sorting                                                                                       |    |    |    |    | \u274c  |\n| [jsx-sort-props](docs/rules/jsx-sort-props.md)                                               | Enforce props alphabetical sorting                                                                                                           |    |    | \ud83d\udd27 |    |    |\n| [jsx-space-before-closing](docs/rules/jsx-space-before-closing.md)                           | Enforce spacing before closing bracket in JSX                                                                                                |    |    | \ud83d\udd27 |    | \u274c  |\n| [jsx-tag-spacing](docs/rules/jsx-tag-spacing.md)                                             | Enforce whitespace in and around the JSX opening and closing brackets                                                                        |    |    | \ud83d\udd27 |    |    |\n| [jsx-uses-react](docs/rules/jsx-uses-react.md)                                               | Disallow React to be incorrectly marked as unused                                                                                            | \u2611\ufe0f | \ud83c\udfc3 |    |    |    |\n| [jsx-uses-vars](docs/rules/jsx-uses-vars.md)                                                 | Disallow variables used in JSX to be incorrectly marked as unused                                                                            | \u2611\ufe0f |    |    |    |    |\n| [jsx-wrap-multilines](docs/rules/jsx-wrap-multilines.md)                                     | Disallow missing parentheses around multiline JSX                                                                                            |    |    | \ud83d\udd27 |    |    |\n| [no-access-state-in-setstate](docs/rules/no-access-state-in-setstate.md)                     | Disallow when this.state is accessed within setState                                                                                         |    |    |    |    |    |\n| [no-adjacent-inline-elements](docs/rules/no-adjacent-inline-elements.md)                     | Disallow adjacent inline elements not separated by whitespace.                                                                               |    |    |    |    |    |\n| [no-array-index-key](docs/rules/no-array-index-key.md)                                       | Disallow usage of Array index in keys                                                                                                        |    |    |    |    |    |\n| [no-arrow-function-lifecycle](docs/rules/no-arrow-function-lifecycle.md)                     | Lifecycle methods should be methods on the prototype, not class fields                                                                       |    |    | \ud83d\udd27 |    |    |\n| [no-children-prop](docs/rules/no-children-prop.md)                                           | Disallow passing of children as props                                                                                                        | \u2611\ufe0f |    |    |    |    |\n| [no-danger](docs/rules/no-danger.md)                                                         | Disallow usage of dangerous JSX properties                                                                                                   |    |    |    |    |    |\n| [no-danger-with-children](docs/rules/no-danger-with-children.md)                             | Disallow when a DOM element is using both children and dangerouslySetInnerHTML                                                               | \u2611\ufe0f |    |    |    |    |\n| [no-deprecated](docs/rules/no-deprecated.md)                                                 | Disallow usage of deprecated methods                                                                                                         | \u2611\ufe0f |    |    |    |    |\n| [no-did-mount-set-state](docs/rules/no-did-mount-set-state.md)                               | Disallow usage of setState in componentDidMount                                                                                              |    |    |    |    |    |\n| [no-did-update-set-state](docs/rules/no-did-update-set-state.md)                             | Disallow usage of setState in componentDidUpdate                                                                                             |    |    |    |    |    |\n| [no-direct-mutation-state](docs/rules/no-direct-mutation-state.md)                           | Disallow direct mutation of this.state                                                                                                       | \u2611\ufe0f |    |    |    |    |\n| [no-find-dom-node](docs/rules/no-find-dom-node.md)                                           | Disallow usage of findDOMNode                                                                                                                | \u2611\ufe0f |    |    |    |    |\n| [no-invalid-html-attribute](docs/rules/no-invalid-html-attribute.md)                         | Disallow usage of invalid attributes                                                                                                         |    |    |    | \ud83d\udca1 |    |\n| [no-is-mounted](docs/rules/no-is-mounted.md)                                                 | Disallow usage of isMounted                                                                                                                  | \u2611\ufe0f |    |    |    |    |\n| [no-multi-comp](docs/rules/no-multi-comp.md)                                                 | Disallow multiple component definition per file                                                                                              |    |    |    |    |    |\n| [no-namespace](docs/rules/no-namespace.md)                                                   | Enforce that namespaces are not used in React elements                                                                                       |    |    |    |    |    |\n| [no-object-type-as-default-prop](docs/rules/no-object-type-as-default-prop.md)               | Disallow usage of referential-type variables as default param in functional component                                                        |    |    |    |    |    |\n| [no-redundant-should-component-update](docs/rules/no-redundant-should-component-update.md)   | Disallow usage of shouldComponentUpdate when extending React.PureComponent                                                                   |    |    |    |    |    |\n| [no-render-return-value](docs/rules/no-render-return-value.md)                               | Disallow usage of the return value of ReactDOM.render                                                                                        | \u2611\ufe0f |    |    |    |    |\n| [no-set-state](docs/rules/no-set-state.md)                                                   | Disallow usage of setState                                                                                                                   |    |    |    |    |    |\n| [no-string-refs](docs/rules/no-string-refs.md)                                               | Disallow using string references                                                                                                             | \u2611\ufe0f |    |    |    |    |\n| [no-this-in-sfc](docs/rules/no-this-in-sfc.md)                                               | Disallow `this` from being used in stateless functional components                                                                           |    |    |    |    |    |\n| [no-typos](docs/rules/no-typos.md)                                                           | Disallow common typos                                                                                                                        |    |    |    |    |    |\n| [no-unescaped-entities](docs/rules/no-unescaped-entities.md)                                 | Disallow unescaped HTML entities from appearing in markup                                                                                    | \u2611\ufe0f |    |    | \ud83d\udca1 |    |\n| [no-unknown-property](docs/rules/no-unknown-property.md)                                     | Disallow usage of unknown DOM property                                                                                                       | \u2611\ufe0f |    | \ud83d\udd27 |    |    |\n| [no-unsafe](docs/rules/no-unsafe.md)                                                         | Disallow usage of unsafe lifecycle methods                                                                                                   |    | \u2611\ufe0f |    |    |    |\n| [no-unstable-nested-components](docs/rules/no-unstable-nested-components.md)                 | Disallow creating unstable components inside components                                                                                      |    |    |    |    |    |\n| [no-unused-class-component-methods](docs/rules/no-unused-class-component-methods.md)         | Disallow declaring unused methods of component class                                                                                         |    |    |    |    |    |\n| [no-unused-prop-types](docs/rules/no-unused-prop-types.md)                                   | Disallow definitions of unused propTypes                                                                                                     |    |    |    |    |    |\n| [no-unused-state](docs/rules/no-unused-state.md)                                             | Disallow definitions of unused state                                                                                                         |    |    |    |    |    |\n| [no-will-update-set-state](docs/rules/no-will-update-set-state.md)                           | Disallow usage of setState in componentWillUpdate                                                                                            |    |    |    |    |    |\n| [prefer-es6-class](docs/rules/prefer-es6-class.md)                                           | Enforce ES5 or ES6 class for React Components                                                                                                |    |    |    |    |    |\n| [prefer-exact-props](docs/rules/prefer-exact-props.md)                                       | Prefer exact proptype definitions                                                                                                            |    |    |    |    |    |\n| [prefer-read-only-props](docs/rules/prefer-read-only-props.md)                               | Enforce that props are read-only                                                                                                             |    |    | \ud83d\udd27 |    |    |\n| [prefer-stateless-function](docs/rules/prefer-stateless-function.md)                         | Enforce stateless components to be written as a pure function                                                                                |    |    |    |    |    |\n| [prop-types](docs/rules/prop-types.md)                                                       | Disallow missing props validation in a React component definition                                                                            | \u2611\ufe0f |    |    |    |    |\n| [react-in-jsx-scope](docs/rules/react-in-jsx-scope.md)                                       | Disallow missing React when using JSX                                                                                                        | \u2611\ufe0f | \ud83c\udfc3 |    |    |    |\n| [require-default-props](docs/rules/require-default-props.md)                                 | Enforce a defaultProps definition for every prop that is not a required prop                                                                 |    |    |    |    |    |\n| [require-optimization](docs/rules/require-optimization.md)                                   | Enforce React components to have a shouldComponentUpdate method                                                                              |    |    |    |    |    |\n| [require-render-return](docs/rules/require-render-return.md)                                 | Enforce ES5 or ES6 class for returning value in render function                                                                              | \u2611\ufe0f |    |    |    |    |\n| [self-closing-comp](docs/rules/self-closing-comp.md)                                         | Disallow extra closing tags for components without children                                                                                  |    |    | \ud83d\udd27 |    |    |\n| [sort-comp](docs/rules/sort-comp.md)                                                         | Enforce component methods order                                                                                                              |    |    |    |    |    |\n| [sort-default-props](docs/rules/sort-default-props.md)                                       | Enforce defaultProps declarations alphabetical sorting                                                                                       |    |    |    |    |    |\n| [sort-prop-types](docs/rules/sort-prop-types.md)                                             | Enforce propTypes declarations alphabetical sorting                                                                                          |    |    | \ud83d\udd27 |    |    |\n| [state-in-constructor](docs/rules/state-in-constructor.md)                                   | Enforce class component state initialization style                                                                                           |    |    |    |    |    |\n| [static-property-placement](docs/rules/static-property-placement.md)                         | Enforces where React component static properties should be positioned.                                                                       |    |    |    |    |    |\n| [style-prop-object](docs/rules/style-prop-object.md)                                         | Enforce style prop value is an object                                                                                                        |    |    |    |    |    |\n| [void-dom-elements-no-children](docs/rules/void-dom-elements-no-children.md)                 | Disallow void DOM elements (e.g. `<img />`, `<br />`) from receiving children                                                                |    |    |    |    |    |\n\n<!-- end auto-generated rules list -->\n\n## Other useful plugins\n\n- Rules of Hooks: [eslint-plugin-react-hooks](https://github.com/facebook/react/tree/master/packages/eslint-plugin-react-hooks)\n- JSX accessibility: [eslint-plugin-jsx-a11y](https://github.com/jsx-eslint/eslint-plugin-jsx-a11y)\n- React Native: [eslint-plugin-react-native](https://github.com/Intellicode/eslint-plugin-react-native)\n\n## License\n\n`eslint-plugin-react` is licensed under the [MIT License](https://opensource.org/licenses/mit-license.php).\n\n[npm-url]: https://npmjs.org/package/eslint-plugin-react\n[npm-image]: https://img.shields.io/npm/v/eslint-plugin-react.svg\n\n[status-url]: https://github.com/jsx-eslint/eslint-plugin-react/pulse\n[status-image]: https://img.shields.io/github/last-commit/jsx-eslint/eslint-plugin-react.svg\n\n[tidelift-url]: https://tidelift.com/subscription/pkg/npm-eslint-plugin-react?utm_source=npm-eslint-plugin-react&utm_medium=referral&utm_campaign=readme\n[tidelift-image]: https://tidelift.com/badges/package/npm/eslint-plugin-react?style=flat\n\n[package-url]: https://npmjs.org/package/eslint-plugin-react\n[npm-version-svg]: https://versionbadg.es/jsx-eslint/eslint-plugin-react.svg\n\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/jsx-eslint/eslint-plugin-react\n[actions-url]: https://github.com/jsx-eslint/eslint-plugin-react/actions\n",
        "releases": [
            {
                "name": "v7.37.4",
                "date": "2025-01-12T21:44:46Z"
            },
            {
                "name": "v7.37.3",
                "date": "2024-12-23T22:11:55Z"
            },
            {
                "name": "v7.37.2",
                "date": "2024-10-22T20:19:21Z"
            },
            {
                "name": "v7.37.1",
                "date": "2024-10-01T10:09:22Z"
            },
            {
                "name": "v7.37.0",
                "date": "2024-09-27T01:25:15Z"
            },
            {
                "name": "v7.36.1",
                "date": "2024-09-12T17:42:07Z"
            },
            {
                "name": "v7.36.0",
                "date": "2024-09-12T07:12:30Z"
            },
            {
                "name": "v7.35.2",
                "date": "2024-09-03T17:26:16Z"
            },
            {
                "name": "v7.35.1",
                "date": "2024-09-02T22:52:12Z"
            },
            {
                "name": "v7.35.0",
                "date": "2024-07-20T04:54:37Z"
            },
            {
                "name": "v7.34.4",
                "date": "2024-07-13T17:17:24Z"
            },
            {
                "name": "v7.34.3",
                "date": "2024-06-18T19:49:04Z"
            },
            {
                "name": "v7.34.2",
                "date": "2024-05-28T05:40:40Z"
            },
            {
                "name": "v7.34.1",
                "date": "2024-03-15T20:21:26Z"
            },
            {
                "name": "v7.34.0",
                "date": "2024-03-04T06:12:32Z"
            },
            {
                "name": "v7.33.2",
                "date": "2023-08-16T03:50:00Z"
            },
            {
                "name": "v7.33.1",
                "date": "2023-07-29T21:42:09Z"
            },
            {
                "name": "v7.33.0",
                "date": "2023-07-19T22:17:38Z"
            },
            {
                "name": "v7.32.2",
                "date": "2023-01-29T06:21:45Z"
            },
            {
                "name": "v7.32.1",
                "date": "2023-01-16T20:28:32Z"
            },
            {
                "name": "v7.32.0",
                "date": "2023-01-11T06:04:03Z"
            },
            {
                "name": "v7.31.11",
                "date": "2022-11-17T22:34:38Z"
            },
            {
                "name": "v7.31.10",
                "date": "2022-10-10T23:38:46Z"
            },
            {
                "name": "v7.31.9",
                "date": "2022-10-09T20:09:15Z"
            },
            {
                "name": "v7.31.8",
                "date": "2022-09-09T05:44:43Z"
            },
            {
                "name": "v7.31.7",
                "date": "2022-09-05T20:49:59Z"
            },
            {
                "name": "v7.31.6",
                "date": "2022-09-04T19:01:09Z"
            },
            {
                "name": "v7.31.5",
                "date": "2022-09-04T05:41:47Z"
            },
            {
                "name": "v7.31.4",
                "date": "2022-09-03T07:17:05Z"
            },
            {
                "name": "v7.31.3",
                "date": "2022-09-03T06:06:35Z"
            },
            {
                "name": "v7.31.2",
                "date": "2022-09-02T20:37:34Z"
            },
            {
                "name": "v7.31.1",
                "date": "2022-08-26T19:41:19Z"
            },
            {
                "name": "v7.31.0",
                "date": "2022-08-24T22:30:25Z"
            },
            {
                "name": "v7.30.1",
                "date": "2022-06-23T21:22:17Z"
            },
            {
                "name": "v7.30.0",
                "date": "2022-05-18T22:35:13Z"
            },
            {
                "name": "v7.29.4",
                "date": "2022-03-13T23:33:30Z"
            },
            {
                "name": "v7.29.3",
                "date": "2022-03-03T23:06:31Z"
            },
            {
                "name": "v7.29.2",
                "date": "2022-02-26T07:36:37Z"
            },
            {
                "name": "v7.29.1",
                "date": "2022-02-25T19:02:20Z"
            },
            {
                "name": "v7.29.0",
                "date": "2022-02-25T18:07:11Z"
            },
            {
                "name": "v7.28.0",
                "date": "2022-01-05T06:33:40Z"
            },
            {
                "name": "v7.27.1",
                "date": "2022-01-05T06:33:28Z"
            },
            {
                "name": "v7.27.0",
                "date": "2022-01-05T06:33:15Z"
            },
            {
                "name": "v7.26.1",
                "date": "2021-10-25T03:48:18Z"
            },
            {
                "name": "v7.26.0",
                "date": "2021-09-28T19:39:14Z"
            },
            {
                "name": "v7.25.3",
                "date": "2021-09-28T19:37:59Z"
            },
            {
                "name": "v7.25.2",
                "date": "2021-09-28T19:37:47Z"
            },
            {
                "name": "v7.25.1",
                "date": "2021-08-31T02:25:43Z"
            },
            {
                "name": "v7.25.0",
                "date": "2021-08-31T02:25:29Z"
            },
            {
                "name": "v7.24.0",
                "date": "2021-08-31T02:25:17Z"
            },
            {
                "name": "v7.23.2",
                "date": "2021-04-20T01:00:31Z"
            },
            {
                "name": "v7.23.1",
                "date": "2021-04-20T01:00:19Z"
            },
            {
                "name": "v7.23.0",
                "date": "2021-04-20T01:00:11Z"
            },
            {
                "name": "v7.22.0",
                "date": "2021-04-20T00:59:59Z"
            },
            {
                "name": "v7.21.5",
                "date": "2020-10-20T19:26:44Z"
            },
            {
                "name": "v7.21.4",
                "date": "2020-10-19T23:39:16Z"
            },
            {
                "name": "v7.20.0",
                "date": "2020-05-13T03:15:45Z"
            },
            {
                "name": "v7.17.0",
                "date": "2019-11-29T07:21:25Z"
            },
            {
                "name": "v7.16.0",
                "date": "2019-11-29T06:44:11Z"
            },
            {
                "name": "v7.15.1",
                "date": "2019-11-29T06:43:29Z"
            },
            {
                "name": "v7.15.0",
                "date": "2019-11-29T06:42:59Z"
            },
            {
                "name": "",
                "date": "2019-07-22T22:31:24Z"
            },
            {
                "name": "",
                "date": "2019-06-24T20:39:52Z"
            },
            {
                "name": "",
                "date": "2019-06-24T11:18:16Z"
            },
            {
                "name": "",
                "date": "2019-06-23T21:47:32Z"
            },
            {
                "name": "",
                "date": "2019-06-23T19:35:42Z"
            },
            {
                "name": "v7.12.4",
                "date": "2019-01-17T07:22:06Z"
            },
            {
                "name": "v7.12.3",
                "date": "2019-01-04T22:57:59Z"
            },
            {
                "name": "v7.12.2",
                "date": "2019-01-02T23:55:21Z"
            },
            {
                "name": "v7.12.1",
                "date": "2019-01-01T22:27:19Z"
            },
            {
                "name": "v7.12.0",
                "date": "2018-12-28T06:54:53Z"
            },
            {
                "name": "v7.11.1",
                "date": "2018-12-28T01:47:28Z"
            },
            {
                "name": "v7.11.0",
                "date": "2018-08-13T20:33:38Z"
            },
            {
                "name": "v7.10.0",
                "date": "2018-06-25T20:38:38Z"
            },
            {
                "name": "v7.9.1",
                "date": "2018-06-04T04:41:31Z"
            },
            {
                "name": "",
                "date": "2018-06-03T21:25:49Z"
            },
            {
                "name": "",
                "date": "2018-05-13T13:49:14Z"
            },
            {
                "name": "",
                "date": "2018-05-11T23:53:29Z"
            },
            {
                "name": "",
                "date": "2018-05-11T20:54:02Z"
            },
            {
                "name": "",
                "date": "2018-05-10T09:41:41Z"
            },
            {
                "name": "v7.7.0",
                "date": "2018-02-20T08:03:27Z"
            },
            {
                "name": "v7.6.1",
                "date": "2018-01-29T07:22:56Z"
            },
            {
                "name": "",
                "date": "2018-01-25T22:49:25Z"
            },
            {
                "name": "",
                "date": "2017-11-19T16:45:58Z"
            },
            {
                "name": "",
                "date": "2017-11-18T17:27:41Z"
            },
            {
                "name": "",
                "date": "2017-09-24T18:16:40Z"
            },
            {
                "name": "",
                "date": "2017-09-12T19:22:25Z"
            },
            {
                "name": "",
                "date": "2017-09-05T21:54:20Z"
            },
            {
                "name": "",
                "date": "2017-08-21T19:41:18Z"
            },
            {
                "name": "",
                "date": "2017-08-14T11:48:17Z"
            },
            {
                "name": "",
                "date": "2017-08-09T21:51:16Z"
            },
            {
                "name": "",
                "date": "2017-06-13T19:27:38Z"
            },
            {
                "name": "",
                "date": "2017-05-13T18:34:59Z"
            },
            {
                "name": "",
                "date": "2017-05-06T00:10:26Z"
            },
            {
                "name": "",
                "date": "2017-05-01T19:59:25Z"
            },
            {
                "name": "",
                "date": "2017-04-23T15:01:31Z"
            },
            {
                "name": "",
                "date": "2017-03-20T22:04:45Z"
            },
            {
                "name": "",
                "date": "2017-03-19T22:12:23Z"
            },
            {
                "name": "",
                "date": "2017-03-19T17:18:44Z"
            },
            {
                "name": "",
                "date": "2017-02-15T23:55:26Z"
            },
            {
                "name": "",
                "date": "2017-01-08T19:51:22Z"
            },
            {
                "name": "",
                "date": "2016-12-04T23:47:51Z"
            },
            {
                "name": "",
                "date": "2016-11-15T00:10:55Z"
            },
            {
                "name": "",
                "date": "2016-11-14T17:27:43Z"
            },
            {
                "name": "",
                "date": "2016-11-06T16:00:13Z"
            },
            {
                "name": "",
                "date": "2016-11-01T21:41:39Z"
            },
            {
                "name": "",
                "date": "2016-10-10T21:24:53Z"
            },
            {
                "name": "",
                "date": "2016-10-09T15:57:56Z"
            },
            {
                "name": "",
                "date": "2016-09-19T23:38:55Z"
            },
            {
                "name": "",
                "date": "2016-09-14T22:12:56Z"
            },
            {
                "name": "",
                "date": "2016-09-12T23:18:13Z"
            },
            {
                "name": "",
                "date": "2016-08-28T11:52:43Z"
            },
            {
                "name": "",
                "date": "2016-08-17T21:47:22Z"
            },
            {
                "name": "",
                "date": "2016-08-15T22:08:40Z"
            },
            {
                "name": "",
                "date": "2016-08-14T13:31:43Z"
            },
            {
                "name": "",
                "date": "2016-08-01T19:45:33Z"
            },
            {
                "name": "",
                "date": "2016-07-31T20:44:43Z"
            },
            {
                "name": "",
                "date": "2016-07-29T19:25:45Z"
            },
            {
                "name": "",
                "date": "2016-07-23T22:22:58Z"
            },
            {
                "name": "",
                "date": "2016-07-08T13:08:08Z"
            },
            {
                "name": "",
                "date": "2016-06-17T20:13:40Z"
            },
            {
                "name": "",
                "date": "2016-06-16T23:49:10Z"
            },
            {
                "name": "",
                "date": "2016-06-16T22:39:05Z"
            },
            {
                "name": "",
                "date": "2016-05-09T23:08:37Z"
            },
            {
                "name": "",
                "date": "2016-05-09T22:19:50Z"
            },
            {
                "name": "",
                "date": "2016-04-18T08:43:42Z"
            },
            {
                "name": "",
                "date": "2016-04-17T19:14:02Z"
            },
            {
                "name": "",
                "date": "2016-04-06T23:18:49Z"
            },
            {
                "name": "",
                "date": "2016-03-15T21:42:01Z"
            },
            {
                "name": "",
                "date": "2016-03-14T20:19:26Z"
            },
            {
                "name": "",
                "date": "2016-03-08T22:07:53Z"
            },
            {
                "name": "",
                "date": "2016-03-05T21:29:43Z"
            },
            {
                "name": "",
                "date": "2016-02-23T22:20:38Z"
            },
            {
                "name": "",
                "date": "2016-02-19T18:59:24Z"
            },
            {
                "name": "",
                "date": "2016-02-15T21:04:51Z"
            },
            {
                "name": "",
                "date": "2016-02-14T18:27:44Z"
            },
            {
                "name": "",
                "date": "2016-01-24T21:51:53Z"
            },
            {
                "name": "",
                "date": "2016-01-24T15:17:24Z"
            },
            {
                "name": "",
                "date": "2016-01-11T23:11:35Z"
            },
            {
                "name": "",
                "date": "2016-01-04T23:48:27Z"
            },
            {
                "name": "",
                "date": "2015-12-26T00:40:00Z"
            },
            {
                "name": "",
                "date": "2015-12-24T08:10:07Z"
            },
            {
                "name": "",
                "date": "2015-12-20T17:58:42Z"
            },
            {
                "name": "",
                "date": "2015-12-05T20:44:28Z"
            },
            {
                "name": "",
                "date": "2015-11-30T23:17:01Z"
            },
            {
                "name": "",
                "date": "2015-11-29T18:59:27Z"
            },
            {
                "name": "",
                "date": "2015-11-29T17:39:46Z"
            },
            {
                "name": "",
                "date": "2015-11-20T23:21:54Z"
            },
            {
                "name": "",
                "date": "2015-11-16T23:48:29Z"
            },
            {
                "name": "",
                "date": "2015-11-07T17:20:15Z"
            },
            {
                "name": "",
                "date": "2015-11-05T02:07:51Z"
            },
            {
                "name": "",
                "date": "2015-11-04T23:22:54Z"
            },
            {
                "name": "",
                "date": "2015-10-19T23:12:05Z"
            },
            {
                "name": "",
                "date": "2015-10-18T21:51:30Z"
            },
            {
                "name": "",
                "date": "2015-10-18T20:18:32Z"
            },
            {
                "name": "",
                "date": "2015-10-18T17:41:17Z"
            },
            {
                "name": "",
                "date": "2015-09-30T22:38:05Z"
            },
            {
                "name": "",
                "date": "2015-09-28T20:38:29Z"
            },
            {
                "name": "",
                "date": "2015-09-18T19:28:49Z"
            },
            {
                "name": "",
                "date": "2015-09-16T22:50:08Z"
            },
            {
                "name": "",
                "date": "2015-09-16T16:43:29Z"
            },
            {
                "name": "",
                "date": "2015-09-09T22:42:20Z"
            },
            {
                "name": "",
                "date": "2015-08-31T23:26:21Z"
            },
            {
                "name": "",
                "date": "2015-08-26T15:31:22Z"
            },
            {
                "name": "",
                "date": "2015-08-16T14:15:59Z"
            },
            {
                "name": "",
                "date": "2015-08-11T10:02:27Z"
            },
            {
                "name": "",
                "date": "2015-08-07T23:34:43Z"
            },
            {
                "name": "",
                "date": "2015-08-04T00:36:31Z"
            },
            {
                "name": "",
                "date": "2015-08-03T18:38:40Z"
            },
            {
                "name": "",
                "date": "2015-07-21T00:27:26Z"
            },
            {
                "name": "",
                "date": "2015-07-15T23:01:35Z"
            },
            {
                "name": "",
                "date": "2015-07-10T23:21:52Z"
            },
            {
                "name": "",
                "date": "2015-07-01T23:04:25Z"
            },
            {
                "name": "",
                "date": "2015-06-29T23:55:51Z"
            },
            {
                "name": "",
                "date": "2015-06-28T20:15:28Z"
            },
            {
                "name": "",
                "date": "2015-06-28T18:30:50Z"
            },
            {
                "name": "",
                "date": "2015-06-28T17:32:04Z"
            },
            {
                "name": "",
                "date": "2015-06-28T17:31:24Z"
            },
            {
                "name": "",
                "date": "2015-06-28T17:31:08Z"
            },
            {
                "name": "",
                "date": "2015-06-03T23:16:59Z"
            },
            {
                "name": "",
                "date": "2015-06-03T23:16:21Z"
            },
            {
                "name": "",
                "date": "2015-05-14T18:37:49Z"
            },
            {
                "name": "",
                "date": "2015-04-21T22:40:42Z"
            },
            {
                "name": "",
                "date": "2015-04-16T23:41:23Z"
            },
            {
                "name": "",
                "date": "2015-04-06T21:25:07Z"
            },
            {
                "name": "",
                "date": "2015-03-30T23:50:30Z"
            },
            {
                "name": "",
                "date": "2015-03-29T23:20:26Z"
            },
            {
                "name": "",
                "date": "2015-03-29T23:19:45Z"
            },
            {
                "name": "",
                "date": "2015-03-29T23:16:16Z"
            },
            {
                "name": "",
                "date": "2015-03-22T22:21:16Z"
            },
            {
                "name": "",
                "date": "2015-03-14T22:38:13Z"
            },
            {
                "name": "",
                "date": "2015-03-03T22:28:34Z"
            },
            {
                "name": "",
                "date": "2015-03-03T22:28:08Z"
            },
            {
                "name": "",
                "date": "2015-02-24T00:24:28Z"
            },
            {
                "name": "",
                "date": "2015-02-08T23:13:31Z"
            },
            {
                "name": "",
                "date": "2015-01-29T22:35:59Z"
            },
            {
                "name": "",
                "date": "2015-01-29T22:36:29Z"
            },
            {
                "name": "",
                "date": "2015-01-29T22:37:11Z"
            },
            {
                "name": "",
                "date": "2015-01-29T22:36:46Z"
            }
        ]
    }
}