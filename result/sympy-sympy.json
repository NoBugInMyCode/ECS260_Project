{
    "https://api.github.com/repos/sympy/sympy": {
        "forks": 4541,
        "watchers": 13227,
        "stars": 13227,
        "languages": {
            "Python": 25806262,
            "XSLT": 366181,
            "ANTLR": 10016,
            "Perl": 7590,
            "Shell": 946,
            "Scheme": 125
        },
        "commits": [
            "2025-01-20T20:00:50Z",
            "2025-01-20T16:53:05Z",
            "2025-01-16T22:45:21Z",
            "2025-01-16T21:03:09Z",
            "2025-01-16T18:04:32Z",
            "2025-01-16T16:47:45Z",
            "2025-01-16T12:56:34Z",
            "2025-01-16T15:44:48Z",
            "2025-01-16T12:56:34Z",
            "2025-01-10T04:45:48Z",
            "2025-01-09T20:33:17Z",
            "2025-01-09T14:25:19Z",
            "2025-01-09T13:16:03Z",
            "2025-01-09T08:35:18Z",
            "2025-01-08T23:21:00Z",
            "2025-01-07T18:01:41Z",
            "2025-01-07T14:02:15Z",
            "2025-01-07T13:02:13Z",
            "2025-01-05T12:31:27Z",
            "2025-01-05T12:25:44Z",
            "2025-01-05T05:00:09Z",
            "2025-01-05T01:32:40Z",
            "2025-01-05T00:58:00Z",
            "2025-01-05T00:25:41Z",
            "2025-01-04T16:33:51Z",
            "2025-01-04T12:53:20Z",
            "2025-01-03T23:55:03Z",
            "2025-01-03T23:47:52Z",
            "2025-01-03T23:27:33Z",
            "2025-01-03T18:19:21Z"
        ],
        "creation_date": "2010-04-30T20:37:14Z",
        "contributors": 30,
        "topics": [
            "computer-algebra",
            "hacktoberfest",
            "math",
            "python",
            "science"
        ],
        "subscribers": 293,
        "readme": "# SymPy\n\n[![pypi version](https://img.shields.io/pypi/v/sympy.svg)](https://pypi.python.org/pypi/sympy)\n[![Join the chat at https://gitter.im/sympy/sympy](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/sympy/sympy?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Zenodo Badge](https://zenodo.org/badge/18918/sympy/sympy.svg)](https://zenodo.org/badge/latestdoi/18918/sympy/sympy)\n[![Downloads](https://pepy.tech/badge/sympy/month)](https://pepy.tech/project/sympy)\n[![GitHub Issues](https://img.shields.io/badge/issue_tracking-github-blue.svg)](https://github.com/sympy/sympy/issues)\n[![Git Tutorial](https://img.shields.io/badge/PR-Welcome-%23FF8300.svg?)](https://git-scm.com/book/en/v2/GitHub-Contributing-to-a-Project)\n[![Powered by NumFocus](https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A)](https://numfocus.org)\n[![Commits since last release](https://img.shields.io/github/commits-since/sympy/sympy/latest.svg?longCache=true&style=flat-square&logo=git&logoColor=fff)](https://github.com/sympy/sympy/releases)\n\n[![SymPy Banner](https://github.com/sympy/sympy/raw/master/banner.svg)](https://sympy.org/)\n\n\nSee the [AUTHORS](AUTHORS) file for the list of authors.\n\nAnd many more people helped on the SymPy mailing list, reported bugs,\nhelped organize SymPy's participation in the Google Summer of Code, the\nGoogle Highly Open Participation Contest, Google Code-In, wrote and\nblogged about SymPy...\n\nLicense: New BSD License (see the [LICENSE](LICENSE) file for details) covers all\nfiles in the sympy repository unless stated otherwise.\n\nOur mailing list is at\n<https://groups.google.com/forum/?fromgroups#!forum/sympy>.\n\nWe have a community chat at [Gitter](https://gitter.im/sympy/sympy). Feel\nfree to ask us anything there. We have a very welcoming and helpful\ncommunity.\n\n## Download\n\nThe recommended installation method is through Anaconda,\n<https://www.anaconda.com/products/distribution>\n\nYou can also get the latest version of SymPy from\n<https://pypi.python.org/pypi/sympy/>\n\nTo get the git version do\n\n    $ git clone https://github.com/sympy/sympy.git\n\nFor other options (tarballs, debs, etc.), see\n<https://docs.sympy.org/dev/install.html>.\n\n## Documentation and Usage\n\nFor in-depth instructions on installation and building the\ndocumentation, see the [SymPy Documentation Style Guide](https://docs.sympy.org/dev/documentation-style-guide.html).\n\nEverything is at:\n\n<https://docs.sympy.org/>\n\nYou can generate everything at the above site in your local copy of\nSymPy by:\n\n    $ cd doc\n    $ make html\n\nThen the docs will be in <span class=\"title-ref\">\\_build/html</span>. If\nyou don't want to read that, here is a short usage:\n\nFrom this directory, start Python and:\n\n``` python\n>>> from sympy import Symbol, cos\n>>> x = Symbol('x')\n>>> e = 1/cos(x)\n>>> print(e.series(x, 0, 10))\n1 + x**2/2 + 5*x**4/24 + 61*x**6/720 + 277*x**8/8064 + O(x**10)\n```\n\nSymPy also comes with a console that is a simple wrapper around the\nclassic python console (or IPython when available) that loads the SymPy\nnamespace and executes some common commands for you.\n\nTo start it, issue:\n\n    $ bin/isympy\n\nfrom this directory, if SymPy is not installed or simply:\n\n    $ isympy\n\nif SymPy is installed.\n\n## Installation\n\nTo install SymPy using PyPI, run the following command:\n\n    $ pip install sympy\n\nTo install SymPy using Anaconda, run the following command:\n\n    $ conda install -c anaconda sympy\n\nTo install SymPy from GitHub source, first clone SymPy using `git`:\n\n    $ git clone https://github.com/sympy/sympy.git\n\nThen, in the `sympy` repository that you cloned, simply run:\n\n    $ pip install .\n\nSee <https://docs.sympy.org/dev/install.html> for more information.\n\n## Contributing\n\nWe welcome contributions from anyone, even if you are new to open\nsource. Please read our [Introduction to Contributing](https://docs.sympy.org/dev/contributing/introduction-to-contributing.html)\npage and the [SymPy Documentation Style Guide](https://docs.sympy.org/dev/documentation-style-guide.html). If you\nare new and looking for some way to contribute, a good place to start is\nto look at the issues tagged [Easy to Fix](https://github.com/sympy/sympy/issues?q=is%3Aopen+is%3Aissue+label%3A%22Easy+to+Fix%22).\n\nPlease note that all participants in this project are expected to follow\nour Code of Conduct. By participating in this project you agree to abide\nby its terms. See [CODE\\_OF\\_CONDUCT.md](CODE_OF_CONDUCT.md).\n\n## Tests\n\nTo execute all tests, run:\n\n    $./setup.py test\n\nin the current directory.\n\nFor the more fine-grained running of tests or doctests, use `bin/test`\nor respectively `bin/doctest`. The master branch is automatically tested\nby GitHub Actions.\n\nTo test pull requests, use\n[sympy-bot](https://github.com/sympy/sympy-bot).\n\n## Regenerate Experimental <span class=\"title-ref\">LaTeX</span> Parser/Lexer\n\nThe parser and lexer were generated with the [ANTLR4](http://antlr4.org)\ntoolchain in `sympy/parsing/latex/_antlr` and checked into the repo.\nPresently, most users should not need to regenerate these files, but\nif you plan to work on this feature, you will need the `antlr4`\ncommand-line tool (and you must ensure that it is in your `PATH`).\nOne way to get it is:\n\n    $ conda install -c conda-forge antlr=4.11.1\n\nAlternatively, follow the instructions on the ANTLR website and download\nthe `antlr-4.11.1-complete.jar`. Then export the `CLASSPATH` as instructed\nand instead of creating `antlr4` as an alias, make it an executable file\nwith the following contents:\n``` bash\n#!/bin/bash\njava -jar /usr/local/lib/antlr-4.11.1-complete.jar \"$@\"\n```\n\nAfter making changes to `sympy/parsing/latex/LaTeX.g4`, run:\n\n    $ ./setup.py antlr\n\n## Clean\n\nTo clean everything (thus getting the same tree as in the repository):\n\n    $ git clean -Xdf\n\nwhich will clear everything ignored by `.gitignore`, and:\n\n    $ git clean -df\n\nto clear all untracked files. You can revert the most recent changes in\ngit with:\n\n    $ git reset --hard\n\nWARNING: The above commands will all clear changes you may have made,\nand you will lose them forever. Be sure to check things with `git\nstatus`, `git diff`, `git clean -Xn`, and `git clean -n` before doing any\nof those.\n\n## Bugs\n\nOur issue tracker is at <https://github.com/sympy/sympy/issues>. Please\nreport any bugs that you find. Or, even better, fork the repository on\nGitHub and create a pull request. We welcome all changes, big or small,\nand we will help you make the pull request if you are new to git (just\nask on our mailing list or Gitter Channel). If you further have any queries, you can find answers\non Stack Overflow using the [sympy](https://stackoverflow.com/questions/tagged/sympy) tag.\n\n## Brief History\n\nSymPy was started by Ond\u0159ej \u010cert\u00edk in 2005, he wrote some code during\nthe summer, then he wrote some more code during summer 2006. In February\n2007, Fabian Pedregosa joined the project and helped fix many things,\ncontributed documentation, and made it alive again. 5 students (Mateusz\nPaprocki, Brian Jorgensen, Jason Gedge, Robert Schwarz, and Chris Wu)\nimproved SymPy incredibly during summer 2007 as part of the Google\nSummer of Code. Pearu Peterson joined the development during the summer\n2007 and he has made SymPy much more competitive by rewriting the core\nfrom scratch, which has made it from 10x to 100x faster. Jurjen N.E. Bos\nhas contributed pretty-printing and other patches. Fredrik Johansson has\nwritten mpmath and contributed a lot of patches.\n\nSymPy has participated in every Google Summer of Code since 2007. You\ncan see <https://github.com/sympy/sympy/wiki#google-summer-of-code> for\nfull details. Each year has improved SymPy by bounds. Most of SymPy's\ndevelopment has come from Google Summer of Code students.\n\nIn 2011, Ond\u0159ej \u010cert\u00edk stepped down as lead developer, with Aaron\nMeurer, who also started as a Google Summer of Code student, taking his\nplace. Ond\u0159ej \u010cert\u00edk is still active in the community but is too busy\nwith work and family to play a lead development role.\n\nSince then, a lot more people have joined the development and some\npeople have also left. You can see the full list in doc/src/aboutus.rst,\nor online at:\n\n<https://docs.sympy.org/dev/aboutus.html#sympy-development-team>\n\nThe git history goes back to 2007 when development moved from svn to hg.\nTo see the history before that point, look at\n<https://github.com/sympy/sympy-old>.\n\nYou can use git to see the biggest developers. The command:\n\n    $ git shortlog -ns\n\nwill show each developer, sorted by commits to the project. The command:\n\n    $ git shortlog -ns --since=\"1 year\"\n\nwill show the top developers from the last year.\n\n## Citation\n\nTo cite SymPy in publications use\n\n> Meurer A, Smith CP, Paprocki M, \u010cert\u00edk O, Kirpichev SB, Rocklin M,\n> Kumar A, Ivanov S, Moore JK, Singh S, Rathnayake T, Vig S, Granger BE,\n> Muller RP, Bonazzi F, Gupta H, Vats S, Johansson F, Pedregosa F, Curry\n> MJ, Terrel AR, Rou\u010dka \u0160, Saboo A, Fernando I, Kulal S, Cimrman R,\n> Scopatz A. (2017) SymPy: symbolic computing in Python. *PeerJ Computer\n> Science* 3:e103 <https://doi.org/10.7717/peerj-cs.103>\n\nA BibTeX entry for LaTeX users is\n\n``` bibtex\n@article{10.7717/peerj-cs.103,\n title = {SymPy: symbolic computing in Python},\n author = {Meurer, Aaron and Smith, Christopher P. and Paprocki, Mateusz and \\v{C}ert\\'{i}k, Ond\\v{r}ej and Kirpichev, Sergey B. and Rocklin, Matthew and Kumar, Amit and Ivanov, Sergiu and Moore, Jason K. and Singh, Sartaj and Rathnayake, Thilina and Vig, Sean and Granger, Brian E. and Muller, Richard P. and Bonazzi, Francesco and Gupta, Harsh and Vats, Shivam and Johansson, Fredrik and Pedregosa, Fabian and Curry, Matthew J. and Terrel, Andy R. and Rou\\v{c}ka, \\v{S}t\\v{e}p\\'{a}n and Saboo, Ashutosh and Fernando, Isuru and Kulal, Sumith and Cimrman, Robert and Scopatz, Anthony},\n year = 2017,\n month = Jan,\n keywords = {Python, Computer algebra system, Symbolics},\n abstract = {\n            SymPy is an open-source computer algebra system written in pure Python. It is built with a focus on extensibility and ease of use, through both interactive and programmatic applications. These characteristics have led SymPy to become a popular symbolic library for the scientific Python ecosystem. This paper presents the architecture of SymPy, a description of its features, and a discussion of select submodules. The supplementary material provides additional examples and further outlines details of the architecture and features of SymPy.\n         },\n volume = 3,\n pages = {e103},\n journal = {PeerJ Computer Science},\n issn = {2376-5992},\n url = {https://doi.org/10.7717/peerj-cs.103},\n doi = {10.7717/peerj-cs.103}\n}\n```\n\nSymPy is BSD licensed, so you are free to use it whatever you like, be\nit academic, commercial, creating forks or derivatives, as long as you\ncopy the BSD statement if you redistribute it (see the LICENSE file for\ndetails). That said, although not required by the SymPy license, if it\nis convenient for you, please cite SymPy when using it in your work and\nalso consider contributing all your changes back, so that we can\nincorporate it and all of us will benefit in the end.\n",
        "releases": [
            {
                "name": "SymPy 1.13.3",
                "date": "2024-09-18T21:54:45Z"
            },
            {
                "name": "SymPy 1.13.2",
                "date": "2024-08-11T16:59:00Z"
            },
            {
                "name": "SymPy 1.13.1",
                "date": "2024-07-19T09:27:14Z"
            },
            {
                "name": "SymPy 1.13.0",
                "date": "2024-07-08T19:16:44Z"
            },
            {
                "name": "SymPy 1.13.0rc4",
                "date": "2024-07-02T14:24:13Z"
            },
            {
                "name": "SymPy 1.13.0rc3",
                "date": "2024-06-26T16:26:32Z"
            },
            {
                "name": "SymPy 1.13.0rc2",
                "date": "2024-06-16T22:53:46Z"
            },
            {
                "name": "SymPy 1.13.0rc1",
                "date": "2024-06-06T14:39:27Z"
            },
            {
                "name": "SymPy 1.12.1",
                "date": "2024-05-29T17:56:24Z"
            },
            {
                "name": "SymPy 1.12.1rc1",
                "date": "2024-03-31T22:49:13Z"
            },
            {
                "name": "SymPy 1.12",
                "date": "2023-05-10T18:09:23Z"
            },
            {
                "name": "SymPy 1.12rc1",
                "date": "2023-03-13T22:45:51Z"
            },
            {
                "name": "SymPy 1.11.1",
                "date": "2022-08-30T17:24:48Z"
            },
            {
                "name": "SymPy 1.11",
                "date": "2022-08-23T23:36:12Z"
            },
            {
                "name": "SymPy 1.11rc1",
                "date": "2022-08-09T22:24:53Z"
            },
            {
                "name": "SymPy 1.10.1",
                "date": "2022-03-20T11:58:15Z"
            },
            {
                "name": "SymPy 1.10",
                "date": "2022-03-06T17:35:21Z"
            },
            {
                "name": "SymPy 1.10rc3",
                "date": "2022-02-26T16:12:47Z"
            },
            {
                "name": "SymPy 1.10rc2",
                "date": "2022-02-21T14:27:38Z"
            },
            {
                "name": "SymPy 1.10rc1",
                "date": "2022-02-18T19:43:51Z"
            },
            {
                "name": "SymPy 1.9",
                "date": "2021-10-08T23:27:06Z"
            },
            {
                "name": "SymPy 1.9rc1",
                "date": "2021-09-20T21:47:01Z"
            },
            {
                "name": "SymPy 1.8",
                "date": "2021-04-09T22:38:24Z"
            },
            {
                "name": "SymPy 1.7.1",
                "date": "2020-12-12T23:04:42Z"
            },
            {
                "name": "SymPy 1.7",
                "date": "2020-11-29T14:03:54Z"
            },
            {
                "name": "SymPy 1.7rc1",
                "date": "2020-11-23T23:53:26Z"
            },
            {
                "name": "SymPy 1.6.2",
                "date": "2020-08-09T21:14:20Z"
            },
            {
                "name": "SymPy 1.6.1",
                "date": "2020-07-02T18:20:54Z"
            },
            {
                "name": "SymPy 1.6",
                "date": "2020-05-24T11:08:46Z"
            },
            {
                "name": "SymPy 1.6rc1",
                "date": "2020-10-22T21:26:36Z"
            },
            {
                "name": "SymPy 1.5",
                "date": "2019-12-13T22:05:06Z"
            },
            {
                "name": "SymPy 1.4",
                "date": "2019-04-10T04:16:28Z"
            },
            {
                "name": "SymPy 1.4rc2",
                "date": "2019-04-04T22:42:07Z"
            },
            {
                "name": "SymPy 1.4rc1",
                "date": "2019-04-02T03:39:06Z"
            },
            {
                "name": "SymPy 1.3",
                "date": "2018-09-14T22:20:37Z"
            },
            {
                "name": "SymPy 1.3rc1",
                "date": "2018-09-08T02:42:55Z"
            },
            {
                "name": "SymPy 1.2",
                "date": "2018-07-09T18:26:14Z"
            },
            {
                "name": "SymPy 1.2rc1",
                "date": "2018-07-03T00:41:25Z"
            },
            {
                "name": "SymPy 1.1.1",
                "date": "2017-07-27T01:52:53Z"
            },
            {
                "name": "SymPy 1.1.1rc1",
                "date": "2017-07-22T20:42:50Z"
            },
            {
                "name": "SymPy 1.1",
                "date": "2017-07-06T19:34:14Z"
            },
            {
                "name": "SymPy 1.1rc1",
                "date": "2017-07-02T22:24:18Z"
            },
            {
                "name": "SymPy 1.0",
                "date": "2016-03-09T19:40:48Z"
            },
            {
                "name": "SymPy 1.0.rc1",
                "date": "2016-02-26T18:04:40Z"
            },
            {
                "name": "SymPy 0.7.6.1",
                "date": "2015-09-03T22:11:56Z"
            },
            {
                "name": "SymPy 0.7.6",
                "date": "2014-11-20T21:05:07Z"
            },
            {
                "name": "SymPy 0.7.6.rc2",
                "date": "2014-11-13T22:44:40Z"
            },
            {
                "name": "SymPy 0.7.6.rc1",
                "date": "2014-11-06T22:19:20Z"
            },
            {
                "name": "SymPy 0.7.5",
                "date": "2014-02-22T19:24:56Z"
            },
            {
                "name": "SymPy 0.7.5.rc1",
                "date": "2014-02-17T15:19:29Z"
            },
            {
                "name": "SymPy 0.7.4.1",
                "date": "2013-12-15T17:32:29Z"
            },
            {
                "name": "SymPy 0.7.4",
                "date": "2013-12-09T01:02:33Z"
            },
            {
                "name": "SymPy 0.7.4.rc1",
                "date": "2013-12-02T06:31:52Z"
            },
            {
                "name": "SymPy 0.7.3",
                "date": "2013-07-14T19:18:37Z"
            },
            {
                "name": "SymPy 0.7.3.rc1",
                "date": "2013-07-07T02:36:50Z"
            }
        ]
    }
}