{
    "https://api.github.com/repos/amueller/word_cloud": {
        "forks": 2323,
        "watchers": 10258,
        "stars": 10258,
        "languages": {
            "Python": 80966,
            "Cython": 1196
        },
        "commits": [
            "2024-11-10T14:19:33Z",
            "2024-11-09T21:10:02Z",
            "2024-09-15T17:01:45Z",
            "2024-09-15T15:43:25Z",
            "2023-12-09T05:39:53Z",
            "2023-12-09T05:23:29Z",
            "2023-12-09T05:01:08Z",
            "2023-12-09T04:35:27Z",
            "2023-12-09T04:30:56Z",
            "2023-12-07T03:09:29Z",
            "2023-12-07T01:18:06Z",
            "2023-12-05T14:31:50Z",
            "2023-12-05T13:54:27Z",
            "2023-12-05T03:02:37Z",
            "2023-12-05T02:30:50Z",
            "2023-12-05T02:28:27Z",
            "2023-10-04T01:39:27Z",
            "2023-05-18T17:21:01Z",
            "2023-05-08T16:59:48Z",
            "2023-05-05T22:43:27Z",
            "2023-04-27T19:22:37Z",
            "2023-04-27T18:51:17Z",
            "2023-04-27T18:46:09Z",
            "2023-04-27T18:41:44Z",
            "2023-01-04T06:19:56Z",
            "2022-12-21T18:53:20Z",
            "2022-11-10T01:25:25Z",
            "2022-10-18T19:17:14Z",
            "2022-06-27T19:03:14Z",
            "2022-06-23T22:33:45Z"
        ],
        "creation_date": "2012-11-04T22:57:59Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 219,
        "readme": "[![licence](http://img.shields.io/badge/licence-MIT-blue.svg?style=flat)](https://github.com/amueller/word_cloud/blob/master/LICENSE)\n[![DOI](https://zenodo.org/badge/21369/amueller/word_cloud.svg)](https://zenodo.org/badge/latestdoi/21369/amueller/word_cloud)\n\n\nword_cloud\n==========\n\nA little word cloud generator in Python. Read more about it on the [blog\npost][blog-post] or the [website][website].\n\nThe code is tested against Python 3.7, 3.8, 3.9, 3.10, 3.11, 3.12, 3.13.\n\n## Installation\n\nIf you are using pip:\n\n    pip install wordcloud\n\nIf you are using conda, you can install from the `conda-forge` channel:\n\n    conda install -c conda-forge wordcloud\n\n\n#### Installation notes\n\nwordcloud depends on `numpy`, `pillow`, and `matplotlib`.\n\nIf there are no wheels available for your version of python, installing the\npackage requires having a C compiler set up. Before installing a compiler, report\nan issue describing the version of python and operating system being used.\n\n\n## Examples\n\nCheck out [examples/simple.py][simple] for a short intro. A sample output is:\n\n![Constitution](examples/constitution.png)\n\nOr run [examples/masked.py][masked] to see more options. A sample output is:\n\n![Alice in Wonderland](examples/alice.png)\n\nGetting fancy with some colors:\n![Parrot with rainbow colors](examples/parrot_new.png)\n\nGenerating wordclouds for Arabic:\n\n![Arabic wordlcloud](examples/arabic_example.png)\n\n\n## Command-line usage\n\nThe `wordcloud_cli` tool can be used to generate word clouds directly from the command-line:\n\n\t$ wordcloud_cli --text mytext.txt --imagefile wordcloud.png\n\nIf you're dealing with PDF files, then `pdftotext`, included by default with many Linux distribution, comes in handy:\n\n\t$ pdftotext mydocument.pdf - | wordcloud_cli --imagefile wordcloud.png\n\nIn the previous example, the `-` argument orders `pdftotext` to write the resulting text to stdout, which is then piped to the stdin of `wordcloud_cli.py`.\n\nUse `wordcloud_cli --help` so see all available options.\n\n[blog-post]: http://peekaboo-vision.blogspot.de/2012/11/a-wordcloud-in-python.html\n[website]: http://amueller.github.io/word_cloud/\n[simple]: examples/simple.py\n[masked]: examples/masked.py\n[reddit-cloud]: https://github.com/amueller/reddit-cloud\n[wc2]: http://www.reddit.com/user/WordCloudBot2\n[wc2top]: http://www.reddit.com/user/WordCloudBot2/?sort=top\n[chat-stats]: https://github.com/popcorncolonel/Chat_stats\n[twitter-word-cloud-bot]: https://github.com/defacto133/twitter-wordcloud-bot\n[twitter-wordnuvola]: https://twitter.com/wordnuvola\n[imgur-wordnuvola]: http://defacto133.imgur.com/all/\n[intprob]: http://peekaboo-vision.blogspot.de/2012/11/a-wordcloud-in-python.html#bc_0_28B\n\n\n## Licensing\nThe wordcloud library is MIT licenced, but contains DroidSansMono.ttf, a true type font by Google, that is apache licensed.\nThe font is by no means integral, and any other font can be used by setting the ``font_path`` variable when creating a ``WordCloud`` object.\n",
        "releases": [
            {
                "name": "1.9.4",
                "date": "2024-11-10T14:21:42Z"
            },
            {
                "name": "1.9.3",
                "date": "2023-12-09T13:50:41Z"
            },
            {
                "name": "1.9.1.1",
                "date": "2023-05-05T22:40:27Z"
            },
            {
                "name": "WordCloud 1.5.0",
                "date": "2018-07-26T17:23:44Z"
            },
            {
                "name": "1.2.1",
                "date": "2016-04-17T18:50:32Z"
            }
        ]
    }
}