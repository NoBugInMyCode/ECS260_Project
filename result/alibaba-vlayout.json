{
    "https://api.github.com/repos/alibaba/vlayout": {
        "forks": 1789,
        "watchers": 10789,
        "stars": 10789,
        "languages": {
            "Java": 669506
        },
        "commits": [
            "2021-07-14T04:40:34Z",
            "2021-07-14T04:40:03Z",
            "2020-05-13T14:28:42Z",
            "2020-02-21T04:43:07Z",
            "2020-01-09T08:21:46Z",
            "2019-12-16T08:29:23Z",
            "2019-10-15T06:29:52Z",
            "2019-09-26T07:49:27Z",
            "2019-09-26T06:43:19Z",
            "2019-09-24T09:41:25Z",
            "2019-07-24T07:17:19Z",
            "2019-07-22T03:39:54Z",
            "2019-07-17T11:17:32Z",
            "2019-07-16T09:21:23Z",
            "2019-07-15T03:56:50Z",
            "2019-05-22T03:38:42Z",
            "2019-04-22T11:18:23Z",
            "2019-03-12T11:25:25Z",
            "2019-03-12T11:23:02Z",
            "2019-03-05T07:20:06Z",
            "2019-02-25T10:30:08Z",
            "2019-01-25T02:58:32Z",
            "2019-01-23T04:11:55Z",
            "2018-09-12T06:25:33Z",
            "2018-07-31T07:21:26Z",
            "2018-07-30T07:14:13Z",
            "2018-07-26T08:25:36Z",
            "2018-07-26T08:24:45Z",
            "2018-06-21T02:14:58Z",
            "2018-06-21T02:05:33Z"
        ],
        "creation_date": "2017-02-27T08:11:47Z",
        "contributors": 15,
        "topics": [
            "android",
            "layout",
            "layout-manager",
            "layoutmanager",
            "recyclerview-multi-type",
            "tangram"
        ],
        "subscribers": 335,
        "readme": "# Attention. This project is not maintained any more !!!\n\n# vlayout\n\n[\u4e2d\u6587\u6587\u6863](README-ch.md)\n\n## Projects of Tangram\n\n### Android\n\n+ [Tangram-Android](https://github.com/alibaba/Tangram-Android)\n+ [Virtualview-Android](https://github.com/alibaba/Virtualview-Android)\n+ [vlayout](https://github.com/alibaba/vlayout)\n+ [UltraViewPager](https://github.com/alibaba/UltraViewPager)\n\n### iOS\n\n+ [Tangram-iOS](https://github.com/alibaba/Tangram-iOS)\n+ [Virtualview-iOS](https://github.com/alibaba/VirtualView-iOS)\n+ [LazyScrollView](https://github.com/alibaba/lazyscrollview)\n\nProject `vlayout` is a powerful LayoutManager extension for RecyclerView, it provides a group of layouts for RecyclerView. Make it able to handle a complicate situation when grid, list and other layouts in the same recyclerview.\n\n## Design\n\nBy providing a custom LayoutManager to RecyclerView, VirtualLayout is able to layout child views with different style at single view elegantly. The custom LayoutManager manages a serial of layoutHelpers where each one implements the specific layout logic for a certain position range items. By the way, implementing your custom layoutHelper and provding it to the framework is also supported.\n\n## Main Feature\n* Provide default common layout implementation, decouple the View and Layout. Default layout implementations are:\n\t* LinearLayoutHelper: provide linear layout as LinearLayoutManager.\n\t* GridLayoutHelper: provide grid layout as GridLayoutManager, but with more feature.\n\t* FixLayoutHelper: fix the view at certain position of screen, the view does not scroll with whole page.\n\t* ScrollFixLayoutHelper: fix the view at certain position of screen, but the view does not show until it scrolls to it position.\n\t* FloatLayoutHelper: float the view on top of page, user can drag and drop it.\n\t* ColumnLayoutHelper: perform like GridLayoutHelper but layouts all child views in one line.\n\t* SingleLayoutHelper: contain only one child view.\n\t* OnePlusNLayoutHelper: a custom layout with one child view layouted at left and the others at right, you may not need this.\n\t* StickyLayoutHelper: scroll the view when its position is inside the screen, but fix the view at start or end when its position is outside the screen.\n\t* StaggeredGridLayoutHelper: provide waterfall like layout as StaggeredGridLayoutManager.\n* LayoutHelpers provided by default can be generally divided into two categories. One is non-fix LayoutHelper such as LinearLayoutHelper, GridLayoutHelper, etc which means the children of these LayoutHelper will be layouted in the flow of parent container and will be scrolled with the container scrolling. While the other is fix LayoutHelper which means the child of these is always fix in parent container.\n\n\n## Usage\n\n### Import Library\n\nPlease find the latest version in [release notes](https://github.com/alibaba/vlayout/releases). The newest version has been upload to jcenter and MavenCentral, make sure you have added at least one of these repositories. As follow:\n\nFor gradle:\n``` gradle\ncompile ('com.alibaba.android:vlayout:1.2.8@aar') {\n\ttransitive = true\n}\n```\n\nOr in maven:  \npom.xml\n``` xml\n<dependency>\n  <groupId>com.alibaba.android</groupId>\n  <artifactId>vlayout</artifactId>\n  <version>1.2.8</version>\n  <type>aar</type>\n</dependency>\n```\n\n### Initialize LayoutManager\n``` java\nfinal RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recycler_view);\nfinal VirtualLayoutManager layoutManager = new VirtualLayoutManager(this);\n\nrecyclerView.setLayoutManager(layoutManager);\n```\n\n### Initialize recycled pool's size\nProvide a reasonable recycled pool's size to your recyclerView, since the default value may not meet your situation and cause re-create views when scrolling.\n\n``` java\nRecyclerView.RecycledViewPool viewPool = new RecyclerView.RecycledViewPool();\nrecyclerView.setRecycledViewPool(viewPool);\nviewPool.setMaxRecycledViews(0, 10);\n```\n\n**Attention: the demo code above only modify the recycle pool size of item with type = 0, it you has more than one type in your adapter, you should update recycle pool size for each type.**\n\n### Set Adapters\n\n* You can use `DelegateAdapter` for as a root adapter to make combination of your own adapters. Just make it extend ```DelegateAdapter.Adapter``` and overrides ```onCreateLayoutHelper``` method.\n\n``` java\nDelegateAdapter delegateAdapter = new DelegateAdapter(layoutManager, hasConsistItemType);\nrecycler.setAdapter(delegateAdapter);\n\n// Then you can set sub- adapters\n\ndelegateAdapter.setAdapters(adapters);\n\n// or\nCustomAdapter adapter = new CustomAdapter(data, new GridLayoutHelper());\ndelegateAdapter.addAdapter(adapter);\n\n// call notify change when data changes\nadapter.notifyDataSetChanged();\n\n```\n\n**Attention: When `hasConsistItemType = true`, items with same type value in different sub-adapters share the same type, their view would be reused during scroll. When `hasConsistItemType = false`, items with same type value in different sub-adapters do not share the same type internally.**\n\n* The other way to set adapter is extending ```VirtualLayoutAdapter``` and implementing it to make deep combination to your business code.\n\n``` java\npublic class MyAdapter extends VirtualLayoutAdapter {\n   ......\n}\n\nMyAdapter myAdapter = new MyAdapter(layoutManager);\n\n//create layoutHelper list\nList<LayoutHelper> helpers = new LinkedList<>();\nGridLayoutHelper gridLayoutHelper = new GridLayoutHelper(4);\ngridLayoutHelper.setItemCount(25);\nhelpers.add(gridLayoutHelper);\n\nGridLayoutHelper gridLayoutHelper2 = new GridLayoutHelper(2);\ngridLayoutHelper2.setItemCount(25);\nhelpers.add(gridLayoutHelper2);\n\n//set layoutHelper list to adapter\nmyAdapter.setLayoutHelpers(helpers);\n\n//set adapter to recyclerView\nrecycler.setAdapter(myAdapter);\n\n```\n\nIn this way, one thing you should note is that you should call ```setLayoutHelpers``` when the data of Adapter changes.\n\n### Config proguard\n\nAdd following configs in your proguard file if your app is released with proguard.\n\n```\n-keepattributes InnerClasses\n-keep class com.alibaba.android.vlayout.ExposeLinearLayoutManagerEx { *; }\n-keep class android.support.v7.widget.RecyclerView$LayoutParams { *; }\n-keep class android.support.v7.widget.RecyclerView$ViewHolder { *; }\n-keep class android.support.v7.widget.ChildHelper { *; }\n-keep class android.support.v7.widget.ChildHelper$Bucket { *; }\n-keep class android.support.v7.widget.RecyclerView$LayoutManager { *; }\n```\n\n# Demo\n\n![](http://img3.tbcdn.cn/L1/461/1/1b9bfb42009047f75cee08ae741505de2c74ac0a)\n\n[Demo Project](https://github.com/alibaba/vlayout/tree/master/examples)\n\n# FAQ\n\nRead FAQ(In Chinese language only now) before submitting issue: [FAQ](docs/VLayoutFAQ.md)\u3002\n\n# Layout Attributes\n\nEach layoutHelper has a few attributes to control its layout style. See [this](docs/ATTRIBUTES.md) to read more.\n\n# Contributing\n\nBefore you open an issue or create a pull request, please read [Contributing Guide](CONTRIBUTING.md) first.\n\n# LICENSE\n\nVlayout is available under the MIT license.\n",
        "releases": [
            {
                "name": "vlayout 1.2.36",
                "date": "2019-12-16T08:30:31Z"
            },
            {
                "name": "vlayout 1.2.31",
                "date": "2019-09-26T06:52:14Z"
            },
            {
                "name": "vlayout 1.2.26",
                "date": "2019-07-16T09:22:54Z"
            },
            {
                "name": "vlayout 1.2.22",
                "date": "2019-03-12T11:29:14Z"
            },
            {
                "name": "vlayout 1.2.21",
                "date": "2019-03-05T07:26:42Z"
            },
            {
                "name": "vlayout 1.2.20",
                "date": "2019-02-25T10:56:49Z"
            },
            {
                "name": "vlayout 1.2.19",
                "date": "2019-01-25T03:09:00Z"
            },
            {
                "name": "vlayout 1.2.18",
                "date": "2018-09-12T07:11:07Z"
            },
            {
                "name": "vlayout 1.2.17",
                "date": "2018-07-31T07:51:05Z"
            },
            {
                "name": "vlayout 1.2.16",
                "date": "2018-06-21T02:28:49Z"
            },
            {
                "name": "vlayout 1.2.15",
                "date": "2018-05-22T08:42:35Z"
            },
            {
                "name": "vlayout 1.2.14",
                "date": "2018-05-17T10:57:15Z"
            },
            {
                "name": "vlayout 1.2.13",
                "date": "2018-04-04T03:13:16Z"
            },
            {
                "name": "vlayout 1.2.12",
                "date": "2018-03-12T06:19:12Z"
            },
            {
                "name": "vlayout 1.2.11",
                "date": "2018-02-28T03:21:14Z"
            },
            {
                "name": "vlayout 1.2.10",
                "date": "2018-01-30T04:03:27Z"
            },
            {
                "name": "vlayout 1.2.9",
                "date": "2018-01-17T06:27:17Z"
            },
            {
                "name": "vlayout 1.2.8",
                "date": "2018-01-10T03:36:14Z"
            },
            {
                "name": "vlayout 1.2.7",
                "date": "2018-01-07T11:34:53Z"
            },
            {
                "name": "vlayout 1.2.6",
                "date": "2017-12-03T09:15:59Z"
            },
            {
                "name": "vlayout 1.2.5",
                "date": "2017-12-03T08:59:12Z"
            },
            {
                "name": "vlayout 1.2.2",
                "date": "2017-09-19T07:06:46Z"
            },
            {
                "name": "vlayout 1.2.1",
                "date": "2017-09-12T13:49:26Z"
            },
            {
                "name": "vlayout 1.2.0",
                "date": "2017-08-31T02:09:59Z"
            },
            {
                "name": "vlayout 1.1.0",
                "date": "2017-08-19T05:47:38Z"
            },
            {
                "name": "vlayout 1.0.10",
                "date": "2017-08-12T10:29:46Z"
            },
            {
                "name": "vlayout 1.0.9",
                "date": "2017-07-02T11:08:47Z"
            },
            {
                "name": "vlayout 1.0.8",
                "date": "2017-07-01T06:37:20Z"
            },
            {
                "name": "vlayout 1.0.7",
                "date": "2017-05-30T09:13:32Z"
            },
            {
                "name": "vlayout 1.0.6",
                "date": "2017-05-14T07:01:09Z"
            },
            {
                "name": "vlayout 1.0.5",
                "date": "2017-05-06T03:27:51Z"
            },
            {
                "name": "vlayout 1.0.4",
                "date": "2017-04-08T14:07:51Z"
            },
            {
                "name": "vlayout 1.0.3",
                "date": "2017-03-24T12:01:13Z"
            },
            {
                "name": "vlayout 1.0.2",
                "date": "2017-03-11T11:31:20Z"
            }
        ]
    }
}