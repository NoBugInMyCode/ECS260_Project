{
    "https://api.github.com/repos/Tencent/omi": {
        "forks": 1251,
        "watchers": 13106,
        "stars": 13106,
        "languages": {
            "TypeScript": 2443240,
            "CSS": 307492,
            "JavaScript": 107279,
            "HTML": 16160,
            "Vue": 1420,
            "SCSS": 65
        },
        "commits": [
            "2025-01-13T06:15:39Z",
            "2025-01-13T06:13:29Z",
            "2025-01-13T03:56:09Z",
            "2024-12-31T12:22:29Z",
            "2024-12-31T12:20:01Z",
            "2024-12-31T12:13:40Z",
            "2024-12-31T11:53:51Z",
            "2024-12-31T11:44:49Z",
            "2024-12-29T08:02:43Z",
            "2024-11-23T04:48:02Z",
            "2024-11-23T04:46:11Z",
            "2024-11-22T09:30:29Z",
            "2024-11-22T03:03:08Z",
            "2024-11-22T02:48:04Z",
            "2024-11-20T23:10:50Z",
            "2024-11-20T13:56:58Z",
            "2024-11-20T13:51:17Z",
            "2024-11-16T06:02:54Z",
            "2024-11-16T05:57:32Z",
            "2024-11-16T02:30:05Z",
            "2024-11-16T02:00:33Z",
            "2024-11-15T05:43:44Z",
            "2024-09-25T12:56:54Z",
            "2024-09-25T12:55:55Z",
            "2024-09-25T12:41:18Z",
            "2024-09-23T09:40:56Z",
            "2024-09-23T09:39:03Z",
            "2024-09-23T09:31:16Z",
            "2024-09-19T12:57:28Z",
            "2024-09-19T12:53:00Z"
        ],
        "creation_date": "2015-05-31T14:24:58Z",
        "contributors": 16,
        "topics": [
            "admin",
            "components",
            "css",
            "custom-elements",
            "dashboard",
            "html",
            "javascript",
            "jsx",
            "omi",
            "reactive-signal",
            "shadow-dom",
            "signal",
            "tailwind",
            "tailwindcss",
            "tsx",
            "typescript",
            "web",
            "web-components",
            "webcomponents"
        ],
        "subscribers": 344,
        "readme": "English | [\u7b80\u4f53\u4e2d\u6587](./README.CN.md) \n\n<p align=\"center\"><img src=\"https://omijs.github.io/home/assets/logo.svg\" alt=\"omi\" width=\"100\"/></p>\n<h2 align=\"center\">Omi - Web Components Framework</h2>\n\n- \ud83d\udcf6 **Signal**-driven reactive programming by [reactive-signal](https://github.com/Tencent/omi/tree/master/packages/reactive-signal)\n- \ud83e\uddf1 [TDesign Web Components](https://github.com/TDesignOteam/tdesign-web-components) \n- \ud83d\udc97 [100+ OMI Templates](https://omi.cdn-go.cn/templates/latest/) & [OMI Templates Source Code](https://github.com/Tencent/omi/tree/master/packages/omi-templates)\n- \ud83d\udc32 [OMI Form](https://omi.cdn-go.cn/form/latest/docs/) & [OMI Form Playground](https://omi.cdn-go.cn/form/latest/play/) & [Lucide Omi Icons](https://github.com/omijs/lucide-omi)\n- \u26a1 **Tiny** size, **Fast** performance\n- \ud83c\udf10 Everything you need: **Web Components**, **JSX**, Function Components, Router, Suspense, Directive, Tailwindcss...\n- \ud83d\udc92 Harness **Constructable Stylesheets** to easily manage and share styles\n\n```tsx\nimport { render, signal, tag, Component, h } from 'omi'\n\nconst count = signal(0)\n\nfunction add() {\n  count.value++\n}\n\nfunction sub() {\n  count.value--\n}\n\n@tag('counter-demo')\nexport class CounterDemo extends Component {\n  static css = 'span { color: red; }'\n\n  render() {\n    return (\n      <>\n        <button onClick={sub}>-</button>\n        <span>{count.value}</span>\n        <button onClick={add}>+</button>\n      </>\n    )\n  }\n}\n```\n\nUse this component:\n\n```tsx\nimport { h } from 'omi'\nimport './counter-demo'\n\nrender(<counter-demo />, document.body)\n\n// or \nimport { CounterDemo, Other } from './counter-demo'\n// Prevent tree Shaking when importing other things\nrender(<CounterDemo />, document.body)\n\n// or\ndocument.body.appendChild(document.createElement('counter-demo'))\n```\n\n## Install \n\n```bash\nnpm i omi\n```\n\nTo quickly create an Omi + Vite + TS/JS project:\n\n```bash\n$ npx omi-cli init my-app    # or create js project by: npx omi-cli init-js my-app\n$ cd my-app           \n$ npm start           # develop\n$ npm run build       # release\n```\n\nTo quickly create an Omi + **Router** + **Signal** + **Suspense** + **Tailwindcss** + Vite + TS project:\n\n```bash\n$ npx omi-cli init-spa my-app  \n$ cd my-app           \n$ npm start           # develop\n$ npm run build       # release\n```\n\n### Packages\n\n- Core packages\n  - [`omi`](https://github.com/Tencent/omi/tree/master/packages/omi) - Implementation of omi framework.\n  - [`omi-form`](https://github.com/Tencent/omi/tree/master/packages/omi-form) - Powerful, simple and cross frameworks form solution.\n  - [`lucide-omi`](https://github.com/omijs/lucide-omi) - Lucide icon collection for omi.\n  - [`omiu`](https://github.com/Tencent/omi/tree/master/packages/omiu) - Hope to create the best web components. For example, the powerful [vchart](https://visactor.io/vchart) and [vtable](https://visactor.io/vtable)\n  - [`omi-router`](https://github.com/Tencent/omi/tree/master/packages/omi-router) - Create SPA of omi framework.\n  - [`omi-cli`](https://github.com/omijs/cli) - To quickly create an Omi + Vite + TS/JS project.\n- Starter kits (not published to npm)\n  - [`omi-elements`](https://github.com/Tencent/omi/tree/master/packages/omi-elements) - Tailwind Element Omi UI KIT.\n  - [`omi-starter-spa`](https://github.com/Tencent/omi/tree/master/packages/omi-starter-spa) - A starter repo for building single page app using Omi + OmiRouter + Tailwindcss + TypeScript + Vite + Prettier.\n  - [`omi-starter-ts`](https://github.com/Tencent/omi/tree/master/packages/omi-starter-ts) - A starter repo for building web app or reusable components using Omi in TypeScript base on Vite.\n  - [`omi-starter-tailwind`](https://github.com/Tencent/omi/tree/master/packages/omi-starter-tailwind) - A starter repo for building web app or reusable components using Omi + Tailwindcss + TypeScript + Vite.\n  - [`omi-starter-js`](https://github.com/Tencent/omi/tree/master/packages/omi-starter-js) - A starter repo for building web app or reusable components using Omi in JavaScript base on Vite.\n  - [`omi-vue`](https://github.com/Tencent/omi/tree/master/packages/omi-vue) - Vue SFC + Vite + OMI + OMI-WeUI.\n- Components\n  - [`omi-weui`](https://github.com/Tencent/omi/tree/master/packages/omi-weui) - WeUI Components of omi.\n  - [`omi-auto-animate`](https://github.com/Tencent/omi/tree/master/packages/omi-auto-animate) - Omi version of @formkit/auto-animate.\n  - [`omi-suspense`](https://github.com/Tencent/omi/tree/master/packages/omi-suspense) - Handling asynchronous dependencies.\n- Directives  \n  - [`omi-transition`](https://github.com/Tencent/omi/tree/master/packages/omi-transition) - Applying animations when an component is entering and leaving the DOM.\n  - [`omi-ripple`](https://github.com/Tencent/omi/tree/master/packages/omi-ripple) - A lightweight component for adding ripple effects to user interface elements.\n- Examples (not published to npm)\n  - [`snake-game-2tier`](https://github.com/Tencent/omi/tree/master/packages/snake-game-2tier) - SNake Game with `Signal` class\n  - [`snake-game-3tier`](https://github.com/Tencent/omi/tree/master/packages/snake-game-3tier) - SNake Game with reactivity functions\n  - [`omi-tutorial`](https://github.com/omijs/tutorial) - Source code of omi tutorial.\n\n\n**If you want to help the project grow, start by simply sharing it with your peers!**\n\n- [Share via Dev.to](<https://dev.to/new?prefill=---%0Atitle%3A%20Omi%20-%20Web%20Components%20Framework%0A---- %20Home%3A%20%5Bomijs.org%5D(http%3A%2F%2Fomijs.org%2F)%20Github%3A%5Bhttps%3A%2F%2Fgithub.com%2FTencent%2Fomi%5D(https%3A%2F%2Fgithub.com%2FTencent%2Fomi)%0A-%20%F0%9F%93%B6%20**Signal**-driven%20reactive%20programming%0A-%20%F0%9F%8E%89%20%5BTailwind%20Element%20Omi%20UI%20KIT%5D(https%3A%2F%2Fomi.cdn-go.cn%2Felements%2Flatest%2F)%0A-%20%E2%9A%A1%20**Tiny**%20size%2C%20**Fast**%20performance%0A-%20%F0%9F%8C%90%20Everything%20you%20need%3A%20**Web%20Components**%2C%20**JSX**%2C%20Router%2C%20Suspense%2C%20Directive%2C%20Tailwindcss...%0A-%20%F0%9F%92%AF%20Both%20**object**%20oriented%20programming(OOP)%20and%20**data**%20oriented%20programming(DOP)%20are%20supported%0A-%20%F0%9F%92%92%20Harness%20**Constructable%20Stylesheets**%20to%20easily%20manage%20and%20share%20styles>)\n- [Share via Twitter](https://twitter.com/intent/tweet?text=Web%20Components%20Framework%20%F0%9F%8E%89http%3A%2F%2Fomijs.org%2F%0A%0A%20Everything%20you%20need%3A%20Web%20Components%2C%20JSX%2C%20Router%2C%20Suspense%2C%20Directive%2C%20Tailwindcss...%20%0A%0A%20Tailwind%20Element%20Omi%20UI%20KIT%3E%20%F0%9F%92%AFhttps%3A%2F%2Fomi.cdn-go.cn%2Felements%2Flatest%2F)\n- [Share via Facebook](https://www.facebook.com/sharer/sharer.php?u=http%3A//omijs.org)\n- [Share via LinkedIn](http://www.linkedin.com/shareArticle?url=http%3A%2F%2Fomijs.org%2F)\n- [Share via Pinterest](https://www.pinterest.com/pin/create/button?url=http://omijs.org/&media=https://repository-images.githubusercontent.com/36606437/66abfcfb-096b-4c9d-a290-77165213e605&description=Omi-Web%20Componnets%20Framework)\n- [Share via Reddit](https://reddit.com/submit?url=http://omijs.org/&title=web%20components%20framework)\n- [Share via StumbleUpon](https://www.stumbleupon.com/submit?url=http://omijs.org/&title=web%20components%20framework)\n- [Share via Vkontakte](https://vk.com/share.php?url=http://omijs.org/)\n- [Share via Weibo](https://service.weibo.com/share/share.php?url=https://omijs.org/&title=web%20components%20framework)\n- [Share via Hackernews](https://news.ycombinator.com/submitlink?u=http://omijs.org/&t=web%20components%20framework)\n\nThank you!\n\n\n## Usage\n\n### TodoApp with reactivity functions\n\n> Data oriented programming \n\nIn data-oriented programming, the focus is on the data itself and the operations on the data, rather than the objects or data structures that hold the data. This programming paradigm emphasizes the change and flow of data, and how to respond to these changes. The TodoApp with reactivity functions is a good example of this, using the concepts of reactive programming, where the UI automatically updates to reflect changes in the data (i.e., the to-do list).\n\n\n```tsx\nimport { render, signal, computed, tag, Component, h } from 'omi'\n\nconst todos = signal([\n  { text: 'Learn OMI', completed: true },\n  { text: 'Learn Web Components', completed: false },\n  { text: 'Learn JSX', completed: false },\n  { text: 'Learn Signal', completed: false }\n])\n\nconst completedCount = computed(() => {\n  return todos.value.filter(todo => todo.completed).length\n})\n\nconst newItem = signal('')\n\nfunction addTodo() {\n  // api a\n  todos.value.push({ text: newItem.value, completed: false })\n  todos.update() // Trigger UI auto update\n  \n  // api b, same as api a\n  // todos.value = [...todos.value, { text: newItem.value, completed: false }]\n\n  newItem.value = '' // Changing the value type can automatically update the UI\n}\n\nfunction removeTodo(index: number) {\n  todos.value.splice(index, 1)\n  todos.update() // Trigger UI auto update\n}\n\n@tag('todo-list')\nclass TodoList extends Component {\n  onInput = (event: Event) => {\n    const target = event.target as HTMLInputElement\n    newItem.value = target.value\n  }\n\n  render() {\n    return (\n      <>\n        <input type=\"text\" value={newItem.value} onInput={this.onInput} />\n        <button onClick={addTodo}>Add</button>\n        <ul>\n          {todos.value.map((todo, index) => {\n            return (\n              <li>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    onInput={() => {\n                      todo.completed = !todo.completed\n                      todos.update() // Trigger UI auto update\n                    }}\n                  />\n                  {todo.completed ? <s>{todo.text}</s> : todo.text}\n                </label>\n                {' '}\n                <button onClick={() => removeTodo(index)}>\u274c</button>\n              </li>\n            )\n          })}\n        </ul>\n        <p>Completed count: {completedCount.value}</p>\n      </>\n    )\n  }\n}\n\nrender(<todo-list />, document.body)\n```\n\n## Auto Import h\n\nvite.config.js:\n\n```tsx\nimport { defineConfig } from 'vite'\n\nexport default defineConfig({\n  esbuild: {\n    jsxInject: \"import { h } from 'omi'\",\n    jsxFactory: \"h\",\n    jsxFragment: \"h.f\"\n  }\n})\n```\n\nYou can inject code during construction, so you don't have to manually export `h`.\n\n<!-- ## With Twind\n\n```tsx\nimport { Component, define, h } from 'omi'\n\nimport install from '@twind/with-web-components'\nimport { defineConfig } from '@twind/core'\nimport presetAutoprefix from '@twind/preset-autoprefix'\nimport presetTailwind from '@twind/preset-tailwind'\nconst withTwind = install(defineConfig({\n  presets: [presetAutoprefix(), presetTailwind()],\n}))\n\ndefine('my-app', class extends withTwind(Component) {\n  render() {\n    return <h1 class=\"text-3xl font-bold underline\">Hello world!</h1>\n  }\n})\n``` -->\n\n## Define Cross Framework Component\n\nThe case of using Omi component in Vue is as follows:\n\n![](./assets/omi-vue.gif)\n\nmy-counter.tsx:\n\n```tsx\nimport { tag, Component, h, bind } from 'omi'\n\n@tag('my-counter')\nclass MyCounter extends Component {\n  static props = {\n    count: {\n      type: Number,\n      default: 0,\n      changed(newValue, oldValue) {\n        this.state.count = newValue\n        this.update()\n      }\n    }\n  }\n\n  state = {\n    count: null\n  }\n\n  install() {\n    this.state.count = this.props.count\n  }\n\n  @bind\n  sub() {\n    this.state.count--\n    this.update()\n    this.fire('change', this.state.count)\n  }\n\n  @bind\n  add() {\n    this.state.count++\n    this.update()\n    this.fire('change', this.state.count)\n  }\n\n  render() {\n    return (\n      <>\n        <button onClick={this.sub}>-</button>\n        <span>{this.state.count}</span>\n        <button onClick={this.add}>+</button>\n      </>\n    )\n  }\n}\n```\n\n### Using in Vue3\n\n```vue\n<script setup>\nimport { ref } from 'vue'\n// import omi component\nimport './my-counter'\n\ndefineProps({\n  msg: String,\n})\n\nconst count = ref(0)\n\nconst change = (e) => {\n  count.value = e.detail\n}\n\n</script>\n\n<template>\n  <h1>{{ msg }}</h1>\n\n  <my-counter @change=\"change\" :count=\"count\" />\n  <p>\n    \u3010Omi\u3011 \n  </p>\n\n  <div class=\"card\">\n    <button type=\"button\" @click=\"count++\">count is {{ count }}</button>\n    <p>\n     \u3010Vue\u3011 \n    </p>\n  </div>\n\n</template>\n```\n\nIf you `fire` the `count-change` in an Omi component:\n\n```ts\nthis.fire('count-change', this.state.count)\n```\n\nTo use the component and listen for events in Vue:\n\n```html\n<my-counter @count-change=\"change\" :count=\"count\" />\n```\n\n### Using in React\n\n```tsx\nimport { useState, useRef, useEffect } from 'react'\nimport useEventListener from '@use-it/event-listener'\nimport './my-counter'\n\nfunction App() {\n  const [count, setCount] = useState(100)\n  const myCounterRef = useRef(null)\n\n  useEffect(() => {\n    const counter = myCounterRef.current\n    if (counter) {\n      const handleChange = (evt) => {\n        setCount(evt.detail)\n      }\n      counter.addEventListener('change', handleChange)\n      return () => {\n        counter.removeEventListener('change', handleChange)\n      }\n    }\n  }, [])\n\n  return (\n    <>\n      <h1>Omi + React</h1>\n      <my-counter count={count} ref={myCounterRef}></my-counter>\n      <div className=\"card\">\n        <button onClick={() => setCount((count) => count + 1)}>\n          count is {count}\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default App\n```\n\n## Contributors\n\n<a href=\"https://github.com/Tencent/omi/graphs/contributors\">\n  <img src=\"./assets/contributors.png\" />\n</a>\n\n## License\n\nMIT \u00a9 Tencent\n\n\n  <!-- - [`tdesign-omi`](https://github.com/omijs/tdesign) - `[in progress...]`Cross framework components based on tdesign. [Preview](https://omijs.github.io/tdesign/) -->",
        "releases": [
            {
                "name": "",
                "date": "2024-09-08T07:15:04Z"
            },
            {
                "name": "",
                "date": "2024-09-03T01:50:40Z"
            },
            {
                "name": "",
                "date": "2024-02-29T00:53:47Z"
            },
            {
                "name": "Using v1.0.2 of reactive-signal",
                "date": "2024-01-20T01:53:11Z"
            },
            {
                "name": "",
                "date": "2024-01-12T12:16:49Z"
            },
            {
                "name": "Function component is supported! \ud83c\udf89",
                "date": "2024-01-12T03:41:05Z"
            },
            {
                "name": "More concise static props definitions for cross framework use\ud83c\udf89",
                "date": "2024-01-11T02:32:30Z"
            },
            {
                "name": "Using constructor as tag name",
                "date": "2024-01-02T12:38:06Z"
            },
            {
                "name": "",
                "date": "2023-12-20T08:38:56Z"
            },
            {
                "name": "Lazy definition",
                "date": "2023-12-03T10:09:02Z"
            },
            {
                "name": "",
                "date": "2023-11-30T03:52:41Z"
            },
            {
                "name": "",
                "date": "2023-11-10T00:55:30Z"
            },
            {
                "name": "",
                "date": "2023-11-07T08:26:30Z"
            },
            {
                "name": "",
                "date": "2023-11-02T12:41:15Z"
            },
            {
                "name": "Support for injecting lifecycle into props\ud83c\udf89",
                "date": "2023-11-02T10:02:33Z"
            },
            {
                "name": "Directive \ud83c\udf89",
                "date": "2023-11-02T02:54:58Z"
            },
            {
                "name": "Preventing tree shaking",
                "date": "2023-10-28T00:49:19Z"
            },
            {
                "name": "",
                "date": "2023-10-25T11:33:37Z"
            },
            {
                "name": "",
                "date": "2023-10-24T22:52:06Z"
            },
            {
                "name": "",
                "date": "2023-10-23T07:54:49Z"
            },
            {
                "name": "",
                "date": "2023-10-21T15:09:41Z"
            },
            {
                "name": "",
                "date": "2023-10-19T09:00:40Z"
            },
            {
                "name": "CSS Prop Supported \ud83c\udf89 !",
                "date": "2023-10-19T04:38:36Z"
            },
            {
                "name": "OMI 7.1.2 \ud83c\udf89",
                "date": "2023-10-18T01:40:35Z"
            },
            {
                "name": "OMI 7.1 \ud83c\udf89",
                "date": "2023-10-16T01:06:44Z"
            },
            {
                "name": "",
                "date": "2023-10-12T01:26:03Z"
            },
            {
                "name": "",
                "date": "2023-10-11T05:20:17Z"
            },
            {
                "name": "",
                "date": "2023-10-10T22:06:31Z"
            },
            {
                "name": "",
                "date": "2023-10-10T14:01:18Z"
            },
            {
                "name": "",
                "date": "2023-10-10T12:49:30Z"
            },
            {
                "name": "Fix the issue of some built-in dom events not being able to bind",
                "date": "2023-09-09T23:52:19Z"
            },
            {
                "name": "Fix foreignObject rendering errors",
                "date": "2023-09-03T01:30:08Z"
            },
            {
                "name": " The update method no longer accepts ignoreAttrs ",
                "date": "2023-08-21T15:19:31Z"
            },
            {
                "name": "Auto ignoreAttrs when using h function",
                "date": "2023-08-21T13:11:11Z"
            },
            {
                "name": "Multiple types of propTypes",
                "date": "2023-08-19T10:41:43Z"
            },
            {
                "name": "Not handling non-standard JSON string prop",
                "date": "2023-05-18T00:52:20Z"
            },
            {
                "name": "Revert function vnode feature of omi",
                "date": "2022-09-27T02:20:12Z"
            },
            {
                "name": "",
                "date": "2022-09-14T09:13:39Z"
            },
            {
                "name": "Make tag extensible",
                "date": "2022-09-03T01:51:13Z"
            },
            {
                "name": "VNode of function type is already supported",
                "date": "2022-09-01T09:30:17Z"
            },
            {
                "name": "OmiProps<P> to OmiProps<P> | P",
                "date": "2022-07-29T10:19:11Z"
            },
            {
                "name": "Fix the error when CSS attribute is updated from null or empty",
                "date": "2022-07-28T04:54:55Z"
            },
            {
                "name": "unsafeHTML supported",
                "date": "2022-07-16T13:36:28Z"
            },
            {
                "name": "Fix Omi.version",
                "date": "2022-07-11T15:09:20Z"
            },
            {
                "name": "Lock version of construct-style-sheets-polyfill",
                "date": "2022-07-10T14:01:10Z"
            },
            {
                "name": "Cache css style sheet",
                "date": "2021-08-13T03:21:28Z"
            },
            {
                "name": "Fix type declaration",
                "date": "2021-08-05T13:22:04Z"
            },
            {
                "name": "Support provide / inject",
                "date": "2021-08-05T01:55:21Z"
            },
            {
                "name": " Add missing function type declaration",
                "date": "2021-08-03T15:04:32Z"
            },
            {
                "name": "Remove Dead Code",
                "date": "2021-08-03T01:27:53Z"
            },
            {
                "name": "Support ignore attrs by props",
                "date": "2021-08-01T04:30:47Z"
            },
            {
                "name": "Fix function declaration in omi.d.ts",
                "date": "2021-07-28T03:58:44Z"
            },
            {
                "name": "Fix vdom diff error in h.f",
                "date": "2021-07-27T06:21:49Z"
            },
            {
                "name": "Fix type declaration of rpx method",
                "date": "2021-07-11T07:44:36Z"
            },
            {
                "name": "Fix transition error in safari, don't handle styles when using h.f",
                "date": "2021-07-10T12:50:23Z"
            },
            {
                "name": "Private event ",
                "date": "2021-07-04T16:15:49Z"
            },
            {
                "name": "Check if the element has been defined",
                "date": "2021-07-02T15:42:58Z"
            },
            {
                "name": "Fix props missing when using jsx props and lazy load the element",
                "date": "2021-06-29T08:48:43Z"
            },
            {
                "name": "Support Injection ignoreAttrs through render function",
                "date": "2021-06-27T02:08:31Z"
            },
            {
                "name": "Using construct-style-sheets-polyfill",
                "date": "2021-06-23T08:00:55Z"
            },
            {
                "name": "Support CSSStyleSheet injection",
                "date": "2021-06-23T03:25:20Z"
            },
            {
                "name": "Using adoptedStyleSheets to static css",
                "date": "2021-06-23T03:15:05Z"
            },
            {
                "name": "Remove dead code",
                "date": "2020-05-18T14:02:29Z"
            },
            {
                "name": "Update omi.d.ts",
                "date": "2020-05-05T13:45:43Z"
            },
            {
                "name": "Fix light dom diff error when component exec update method",
                "date": "2020-05-02T05:17:41Z"
            },
            {
                "name": "Fix prevProps losing",
                "date": "2020-05-02T02:03:52Z"
            },
            {
                "name": "Light DOM Supported in Functional Style Define",
                "date": "2020-04-30T22:41:56Z"
            },
            {
                "name": "Light DOM Supported",
                "date": "2020-04-30T04:56:53Z"
            },
            {
                "name": "Support options.ignoreAttrs",
                "date": "2020-04-25T09:44:00Z"
            },
            {
                "name": "forceUpdate and UpdateProps",
                "date": "2020-04-18T03:06:39Z"
            },
            {
                "name": "Fix inner fragment tag render error",
                "date": "2020-04-12T14:53:57Z"
            },
            {
                "name": "Fix render null error when first time rendering",
                "date": "2020-03-31T03:36:05Z"
            },
            {
                "name": "Support use prop and useSelf prop",
                "date": "2019-12-20T09:01:35Z"
            },
            {
                "name": "Compute and Computed",
                "date": "2019-10-29T05:58:47Z"
            },
            {
                "name": "v6.15.8",
                "date": "2019-10-28T06:39:57Z"
            },
            {
                "name": "v6.15.7",
                "date": "2019-10-28T03:33:02Z"
            },
            {
                "name": "v6.15.6",
                "date": "2019-10-16T08:00:11Z"
            },
            {
                "name": "v6.15.5",
                "date": "2019-10-15T11:29:53Z"
            },
            {
                "name": "v6.15.4",
                "date": "2019-10-15T08:52:40Z"
            },
            {
                "name": "v6.15.1",
                "date": "2019-10-08T02:39:25Z"
            },
            {
                "name": "v6.15.0",
                "date": "2019-10-07T06:56:16Z"
            },
            {
                "name": "v6.14.2",
                "date": "2019-09-30T03:56:07Z"
            },
            {
                "name": "v6.14.0",
                "date": "2019-09-25T03:30:00Z"
            },
            {
                "name": "v6.12.0",
                "date": "2019-09-22T11:18:30Z"
            },
            {
                "name": "v6.11.3",
                "date": "2019-09-20T03:56:58Z"
            },
            {
                "name": "v6.11.2",
                "date": "2019-09-04T00:53:19Z"
            },
            {
                "name": "v6.11.0",
                "date": "2019-08-29T23:08:46Z"
            },
            {
                "name": "v6.10.2",
                "date": "2019-08-29T07:35:45Z"
            },
            {
                "name": "v6.10.1",
                "date": "2019-08-29T03:13:26Z"
            },
            {
                "name": "v6.10.0",
                "date": "2019-08-29T02:11:23Z"
            },
            {
                "name": "v6.9.2",
                "date": "2019-08-27T02:10:38Z"
            },
            {
                "name": "v6.9.1",
                "date": "2019-08-25T11:50:45Z"
            },
            {
                "name": "v6.9.0",
                "date": "2019-08-03T14:36:22Z"
            },
            {
                "name": "v6.8.2",
                "date": "2019-07-31T04:14:04Z"
            },
            {
                "name": "v6.8.1",
                "date": "2019-07-30T04:34:22Z"
            },
            {
                "name": "v6.8.0",
                "date": "2019-07-28T02:10:56Z"
            },
            {
                "name": "v6.7.1",
                "date": "2019-07-27T08:05:13Z"
            },
            {
                "name": "v6.7.0",
                "date": "2019-07-25T03:00:08Z"
            },
            {
                "name": "v6.6.9",
                "date": "2019-07-15T11:09:59Z"
            },
            {
                "name": "v6.6.8",
                "date": "2019-07-02T03:54:56Z"
            },
            {
                "name": "v6.6.7",
                "date": "2019-06-27T01:33:02Z"
            },
            {
                "name": "v6.6.6",
                "date": "2019-06-26T13:50:22Z"
            },
            {
                "name": "v6.6.4",
                "date": "2019-06-15T02:51:05Z"
            },
            {
                "name": "v6.6.3",
                "date": "2019-06-14T08:21:05Z"
            },
            {
                "name": "v6.6.2",
                "date": "2019-06-08T03:31:57Z"
            },
            {
                "name": "v6.6.0",
                "date": "2019-06-07T14:44:29Z"
            },
            {
                "name": "v6.5.0",
                "date": "2019-06-07T10:30:38Z"
            },
            {
                "name": "Solve the problem of multiple executions of connectedCallback method",
                "date": "2019-06-03T08:44:17Z"
            },
            {
                "name": "You can set boolean prop to false from markup by 0 or false string",
                "date": "2019-06-03T03:19:22Z"
            },
            {
                "name": "Fix checkbox don't update",
                "date": "2019-06-02T01:15:34Z"
            },
            {
                "name": "Update omi.d.ts",
                "date": "2019-06-02T06:14:35Z"
            },
            {
                "name": "Fix Array Rendering",
                "date": "2019-06-01T08:32:48Z"
            },
            {
                "name": "Fix invalid JSON attr",
                "date": "2019-05-29T02:11:59Z"
            },
            {
                "name": "",
                "date": "2019-05-19T12:05:24Z"
            },
            {
                "name": "support htm and initUse",
                "date": "2019-04-21T04:31:51Z"
            },
            {
                "name": "Fix same reference bug of empty vnode children",
                "date": "2019-03-20T09:53:41Z"
            },
            {
                "name": "Omi Store System!",
                "date": "2019-03-14T10:00:03Z"
            },
            {
                "name": "support static css",
                "date": "2019-03-05T02:04:49Z"
            },
            {
                "name": "",
                "date": "2019-01-14T09:58:51Z"
            },
            {
                "name": "",
                "date": "2018-12-29T01:23:10Z"
            },
            {
                "name": "Add omi to root",
                "date": "2018-12-28T05:42:42Z"
            },
            {
                "name": "",
                "date": "2018-12-26T22:58:12Z"
            },
            {
                "name": "",
                "date": "2018-12-21T08:24:16Z"
            },
            {
                "name": "",
                "date": "2018-12-19T09:27:39Z"
            },
            {
                "name": "",
                "date": "2018-12-14T08:07:49Z"
            },
            {
                "name": "",
                "date": "2018-12-14T07:01:21Z"
            },
            {
                "name": "",
                "date": "2018-12-07T01:13:21Z"
            },
            {
                "name": "",
                "date": "2018-12-06T14:06:05Z"
            },
            {
                "name": "",
                "date": "2018-12-05T08:55:37Z"
            },
            {
                "name": "",
                "date": "2018-12-05T01:16:23Z"
            },
            {
                "name": "",
                "date": "2018-12-05T01:03:48Z"
            },
            {
                "name": "",
                "date": "2018-12-03T01:00:02Z"
            },
            {
                "name": "",
                "date": "2018-11-29T03:54:59Z"
            },
            {
                "name": "",
                "date": "2018-11-27T12:06:52Z"
            },
            {
                "name": "",
                "date": "2018-11-27T01:27:00Z"
            },
            {
                "name": "",
                "date": "2018-11-26T03:33:00Z"
            },
            {
                "name": "",
                "date": "2018-11-26T02:34:37Z"
            },
            {
                "name": "",
                "date": "2018-11-25T14:08:40Z"
            },
            {
                "name": "",
                "date": "2018-11-24T01:53:39Z"
            },
            {
                "name": "",
                "date": "2018-11-20T10:57:15Z"
            },
            {
                "name": "",
                "date": "2018-11-18T02:41:22Z"
            },
            {
                "name": "",
                "date": "2018-11-17T01:00:07Z"
            },
            {
                "name": "",
                "date": "2018-11-16T15:30:52Z"
            },
            {
                "name": "",
                "date": "2018-11-16T09:59:27Z"
            },
            {
                "name": "",
                "date": "2018-11-16T01:52:52Z"
            },
            {
                "name": "",
                "date": "2018-11-13T08:37:58Z"
            },
            {
                "name": "",
                "date": "2018-11-13T04:11:08Z"
            },
            {
                "name": "",
                "date": "2018-11-13T00:53:34Z"
            },
            {
                "name": "Enhanced CSS, rpx unit support base on 750 screen width",
                "date": "2018-11-11T12:09:53Z"
            },
            {
                "name": "",
                "date": "2018-11-11T05:52:45Z"
            },
            {
                "name": "",
                "date": "2018-11-08T05:36:41Z"
            },
            {
                "name": "",
                "date": "2018-11-08T00:41:09Z"
            },
            {
                "name": "",
                "date": "2018-11-07T14:13:44Z"
            },
            {
                "name": "",
                "date": "2018-11-07T00:13:48Z"
            },
            {
                "name": "noSlot support and fix render array",
                "date": "2018-11-06T02:10:29Z"
            },
            {
                "name": "defaultProps and Component support",
                "date": "2018-11-05T01:44:12Z"
            },
            {
                "name": "Supports useCss in pure function element",
                "date": "2018-11-03T13:18:50Z"
            },
            {
                "name": "Add props and data args in pure element.",
                "date": "2018-11-02T23:19:13Z"
            },
            {
                "name": "Simple checking for updating of observe element",
                "date": "2018-11-01T10:08:28Z"
            },
            {
                "name": "useData support",
                "date": "2018-10-31T11:45:25Z"
            },
            {
                "name": "react hooks like support",
                "date": "2018-10-31T09:17:31Z"
            },
            {
                "name": "Observe elements are defined in a cleaner way",
                "date": "2018-10-29T23:06:43Z"
            },
            {
                "name": "",
                "date": "2018-10-28T14:08:07Z"
            },
            {
                "name": "",
                "date": "2018-10-28T00:30:22Z"
            },
            {
                "name": "",
                "date": "2018-10-26T08:29:05Z"
            }
        ]
    }
}