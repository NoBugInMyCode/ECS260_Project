{
    "https://api.github.com/repos/ziglang/zig": {
        "forks": 2645,
        "watchers": 36715,
        "stars": 36715,
        "languages": {
            "Zig": 46442269,
            "C": 768396,
            "C++": 382037,
            "Python": 74448,
            "CMake": 52825,
            "JavaScript": 42778,
            "Shell": 17475,
            "HTML": 15585,
            "PowerShell": 11514,
            "Objective-C": 913,
            "Assembly": 434
        },
        "commits": [
            "2025-01-22T02:29:21Z",
            "2025-01-21T08:44:06Z",
            "2025-01-21T23:37:28Z",
            "2025-01-21T19:48:19Z",
            "2025-01-21T19:27:05Z",
            "2025-01-21T19:21:36Z",
            "2025-01-21T18:05:14Z",
            "2025-01-21T02:18:56Z",
            "2025-01-19T23:01:55Z",
            "2025-01-21T01:47:29Z",
            "2025-01-21T05:41:30Z",
            "2024-09-18T08:41:46Z",
            "2025-01-21T05:16:19Z",
            "2025-01-21T05:10:05Z",
            "2025-01-21T05:08:44Z",
            "2025-01-18T19:21:12Z",
            "2025-01-21T04:06:25Z",
            "2025-01-21T01:16:36Z",
            "2025-01-19T03:32:07Z",
            "2025-01-19T03:16:47Z",
            "2025-01-19T02:39:40Z",
            "2025-01-19T01:24:21Z",
            "2025-01-19T01:02:39Z",
            "2025-01-21T04:16:47Z",
            "2025-01-21T03:02:38Z",
            "2025-01-19T23:19:59Z",
            "2025-01-21T02:40:04Z",
            "2025-01-20T13:34:47Z",
            "2025-01-17T06:39:37Z",
            "2025-01-17T06:22:13Z"
        ],
        "creation_date": "2015-08-06T00:51:28Z",
        "contributors": 30,
        "topics": [
            "compiler",
            "language",
            "zig"
        ],
        "subscribers": 378,
        "readme": "![ZIG](https://ziglang.org/img/zig-logo-dynamic.svg)\n\nA general-purpose programming language and toolchain for maintaining\n**robust**, **optimal**, and **reusable** software.\n\nhttps://ziglang.org/\n\n## Documentation\n\nIf you are looking at this README file in a source tree, please refer to the\n**Release Notes**, **Language Reference**, or **Standard Library\nDocumentation** corresponding to the version of Zig that you are using by\nfollowing the appropriate link on the\n[download page](https://ziglang.org/download).\n\nOtherwise, you're looking at a release of Zig, so you can find the language\nreference at `doc/langref.html`, and the standard library documentation by\nrunning `zig std`, which will open a browser tab.\n\n## Installation\n\n * [download a pre-built binary](https://ziglang.org/download/)\n * [install from a package manager](https://github.com/ziglang/zig/wiki/Install-Zig-from-a-Package-Manager)\n * [bootstrap zig for any target](https://github.com/ziglang/zig-bootstrap)\n\nA Zig installation is composed of two things:\n\n1. The Zig executable\n2. The lib/ directory\n\nAt runtime, the executable searches up the file system for the lib/ directory,\nrelative to itself:\n\n* lib/\n* lib/zig/\n* ../lib/\n* ../lib/zig/\n* (and so on)\n\nIn other words, you can **unpack a release of Zig anywhere**, and then begin\nusing it immediately. There is no need to install it globally, although this\nmechanism supports that use case too (i.e. `/usr/bin/zig` and `/usr/lib/zig/`).\n\n## Building from Source\n\nEnsure you have the required dependencies:\n\n * CMake >= 3.15\n * System C/C++ Toolchain\n * LLVM, Clang, LLD development libraries == 19.x\n\nThen it is the standard CMake build process:\n\n```\nmkdir build\ncd build\ncmake ..\nmake install\n```\n\nFor more options, tips, and troubleshooting, please see the\n[Building Zig From Source](https://github.com/ziglang/zig/wiki/Building-Zig-From-Source)\npage on the wiki.\n\n## Building from Source without LLVM\n\nIn this case, the only system dependency is a C compiler.\n\n```\ncc -o bootstrap bootstrap.c\n./bootstrap\n```\n\nThis produces a `zig2` executable in the current working directory. This is a\n\"stage2\" build of the compiler,\n[without LLVM extensions](https://github.com/ziglang/zig/issues/16270), and is\ntherefore lacking these features:\n- Release mode optimizations\n- [aarch64 machine code backend](https://github.com/ziglang/zig/issues/21172)\n- [@cImport](https://github.com/ziglang/zig/issues/20630)\n- [zig translate-c](https://github.com/ziglang/zig/issues/20875)\n- [Ability to compile assembly files](https://github.com/ziglang/zig/issues/21169)\n- [Some ELF linking features](https://github.com/ziglang/zig/issues/17749)\n- [Most COFF/PE linking features](https://github.com/ziglang/zig/issues/17751)\n- [Some WebAssembly linking features](https://github.com/ziglang/zig/issues/17750)\n- [Ability to create import libs from def files](https://github.com/ziglang/zig/issues/17807)\n- [Ability to create static archives from object files](https://github.com/ziglang/zig/issues/9828)\n- Ability to compile C, C++, Objective-C, and Objective-C++ files\n\nHowever, a compiler built this way does provide a C backend, which may be\nuseful for creating system packages of Zig projects using the system C\ntoolchain. **In this case, LLVM is not needed!**\n\nFurthermore, a compiler built this way provides an LLVM backend that produces\nbitcode files, which may be compiled into object files via a system Clang\npackage. This can be used to produce system packages of Zig applications\nwithout the Zig package dependency on LLVM.\n\n## Contributing\n\n[Donate monthly](https://ziglang.org/zsf/).\n\nZig is Free and Open Source Software. We welcome bug reports and patches from\neveryone. However, keep in mind that Zig governance is BDFN (Benevolent\nDictator For Now) which means that Andrew Kelley has final say on the design\nand implementation of everything.\n\nOne of the best ways you can contribute to Zig is to start using it for an\nopen-source personal project.\n\nThis leads to discovering bugs and helps flesh out use cases, which lead to\nfurther design iterations of Zig. Importantly, each issue found this way comes\nwith real world motivations, making it straightforward to explain the reasoning\nbehind proposals and feature requests.\n\nYou will be taken much more seriously on the issue tracker if you have a\npersonal project that uses Zig.\n\nThe issue label\n[Contributor Friendly](https://github.com/ziglang/zig/issues?q=is%3Aissue+is%3Aopen+label%3A%22contributor+friendly%22)\nexists to help you find issues that are **limited in scope and/or knowledge of\nZig internals.**\n\nPlease note that issues labeled\n[Proposal](https://github.com/ziglang/zig/issues?q=is%3Aissue+is%3Aopen+label%3Aproposal)\nbut do not also have the\n[Accepted](https://github.com/ziglang/zig/issues?q=is%3Aissue+is%3Aopen+label%3Aaccepted)\nlabel are still under consideration, and efforts to implement such a proposal\nhave a high risk of being wasted. If you are interested in a proposal which is\nstill under consideration, please express your interest in the issue tracker,\nproviding extra insights and considerations that others have not yet expressed.\nThe most highly regarded argument in such a discussion is a real world use case.\n\nFor more tips, please see the\n[Contributing](https://github.com/ziglang/zig/wiki/Contributing) page on the\nwiki.\n\n## Community\n\nThe Zig community is decentralized. Anyone is free to start and maintain their\nown space for Zig users to gather. There is no concept of \"official\" or\n\"unofficial\". Each gathering place has its own moderators and rules. Users are\nencouraged to be aware of the social structures of the spaces they inhabit, and\nwork purposefully to facilitate spaces that align with their values.\n\nPlease see the [Community](https://github.com/ziglang/zig/wiki/Community) wiki\npage for a public listing of social spaces.\n",
        "releases": [
            {
                "name": "0.13.0",
                "date": "2024-06-07T06:02:54Z"
            },
            {
                "name": "0.12.1",
                "date": "2024-06-08T05:32:45Z"
            },
            {
                "name": "0.12.0",
                "date": "2024-04-20T20:16:13Z"
            },
            {
                "name": "0.11.0",
                "date": "2023-08-04T05:29:57Z"
            },
            {
                "name": "0.10.1",
                "date": "2023-01-19T04:25:19Z"
            },
            {
                "name": "0.10.0",
                "date": "2022-10-31T21:17:10Z"
            },
            {
                "name": "0.9.1",
                "date": "2022-02-15T03:12:09Z"
            },
            {
                "name": "0.9.0",
                "date": "2021-12-21T00:35:40Z"
            },
            {
                "name": "0.8.1",
                "date": "2021-09-19T00:00:12Z"
            },
            {
                "name": "0.8.0",
                "date": "2021-09-18T23:59:33Z"
            },
            {
                "name": "0.7.1",
                "date": "2020-12-13T22:22:32Z"
            },
            {
                "name": "0.7.0",
                "date": "2020-11-09T19:51:46Z"
            },
            {
                "name": "0.6.0",
                "date": "2020-04-13T20:56:39Z"
            },
            {
                "name": "0.5.0",
                "date": "2019-10-01T00:23:35Z"
            },
            {
                "name": "0.4.0",
                "date": "2019-04-09T21:22:21Z"
            },
            {
                "name": "0.3.0",
                "date": "2018-09-28T13:53:35Z"
            },
            {
                "name": "0.2.0",
                "date": "2018-03-15T14:37:14Z"
            },
            {
                "name": "",
                "date": "2017-11-01T14:36:19Z"
            }
        ]
    }
}