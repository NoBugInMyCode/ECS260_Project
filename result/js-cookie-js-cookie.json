{
    "https://api.github.com/repos/js-cookie/js-cookie": {
        "forks": 2081,
        "watchers": 22128,
        "stars": 22128,
        "languages": {
            "JavaScript": 56367,
            "HTML": 2753,
            "Dockerfile": 123
        },
        "commits": [
            "2025-01-13T21:33:15Z",
            "2025-01-06T21:29:56Z",
            "2024-07-09T04:37:09Z",
            "2024-07-08T21:17:48Z",
            "2024-05-02T21:57:48Z",
            "2024-04-09T12:10:53Z",
            "2024-04-09T12:07:04Z",
            "2024-04-09T12:06:07Z",
            "2024-03-09T08:43:40Z",
            "2024-03-09T08:41:00Z",
            "2024-03-09T08:36:40Z",
            "2023-12-07T21:29:53Z",
            "2024-03-09T08:16:03Z",
            "2024-03-09T08:15:12Z",
            "2024-03-09T08:07:42Z",
            "2024-01-08T15:29:06Z",
            "2024-03-06T21:53:29Z",
            "2024-02-12T21:11:52Z",
            "2023-12-25T09:00:40Z",
            "2023-11-13T21:58:53Z",
            "2023-10-23T21:22:10Z",
            "2023-10-20T09:46:35Z",
            "2023-10-16T21:24:09Z",
            "2023-10-18T05:18:11Z",
            "2023-09-18T21:20:03Z",
            "2023-09-04T21:07:31Z",
            "2023-08-09T07:25:03Z",
            "2023-08-07T21:24:22Z",
            "2023-07-19T21:54:01Z",
            "2023-07-08T07:00:30Z"
        ],
        "creation_date": "2015-03-19T15:57:47Z",
        "contributors": 30,
        "topics": [
            "cookie",
            "javascript"
        ],
        "subscribers": 341,
        "readme": "<p align=\"center\">\n  <img src=\"https://cloud.githubusercontent.com/assets/835857/14581711/ba623018-0436-11e6-8fce-d2ccd4d379c9.gif\">\n</p>\n\n# JavaScript Cookie [![CI](https://github.com/js-cookie/js-cookie/actions/workflows/ci.yml/badge.svg)](https://github.com/js-cookie/js-cookie/actions/workflows/ci.yml) [![Code Climate](https://codeclimate.com/github/js-cookie/js-cookie.svg)](https://codeclimate.com/github/js-cookie/js-cookie) [![npm](https://img.shields.io/github/package-json/v/js-cookie/js-cookie)](https://www.npmjs.com/package/js-cookie) [![size](https://img.shields.io/bundlephobia/minzip/js-cookie/3)](https://www.npmjs.com/package/js-cookie) [![jsDelivr Hits](https://data.jsdelivr.com/v1/package/npm/js-cookie/badge?style=rounded)](https://www.jsdelivr.com/package/npm/js-cookie)\n\nA simple, lightweight JavaScript API for handling cookies\n\n- Extensive browser support\n- Accepts [any](#encoding) character\n- [Heavily](test) tested\n- No dependency\n- Supports ES modules\n- Supports AMD/CommonJS\n- [RFC 6265](https://tools.ietf.org/html/rfc6265) compliant\n- Useful [Wiki](https://github.com/js-cookie/js-cookie/wiki)\n- Enable [custom encoding/decoding](#converters)\n- **< 800 bytes** gzipped!\n\n**\ud83d\udc49\ud83d\udc49 If you're viewing this at https://github.com/js-cookie/js-cookie, you're reading the documentation for the main branch.\n[View documentation for the latest release.](https://github.com/js-cookie/js-cookie/tree/latest#readme) \ud83d\udc48\ud83d\udc48**\n\n## Installation\n\n### NPM\n\nJavaScript Cookie supports [npm](https://www.npmjs.com/package/js-cookie) under the name `js-cookie`.\n\n```bash\nnpm i js-cookie\n```\n\nThe npm package has a `module` field pointing to an ES module variant of the library, mainly to provide support for ES module aware bundlers, whereas its `browser` field points to an UMD module for full backward compatibility.\n\n_Not all browsers support ES modules natively yet_. For this reason the npm package/release provides both the ES and UMD module variant and you may want to include the ES module along with the UMD fallback to account for this:\n\n### CDN\n\nAlternatively, include js-cookie via [jsDelivr CDN](https://www.jsdelivr.com/package/npm/js-cookie).\n\n## Basic Usage\n\nImport the library:\n\n```javascript\nimport Cookies from 'js-cookie'\n// or\nconst Cookies = require('js-cookie')\n```\n\nCreate a cookie, valid across the entire site:\n\n```javascript\nCookies.set('name', 'value')\n```\n\nCreate a cookie that expires 7 days from now, valid across the entire site:\n\n```javascript\nCookies.set('name', 'value', { expires: 7 })\n```\n\nCreate an expiring cookie, valid to the path of the current page:\n\n```javascript\nCookies.set('name', 'value', { expires: 7, path: '' })\n```\n\nRead cookie:\n\n```javascript\nCookies.get('name') // => 'value'\nCookies.get('nothing') // => undefined\n```\n\nRead all visible cookies:\n\n```javascript\nCookies.get() // => { name: 'value' }\n```\n\n_Note: It is not possible to read a particular cookie by passing one of the cookie attributes (which may or may not\nhave been used when writing the cookie in question):_\n\n```javascript\nCookies.get('foo', { domain: 'sub.example.com' }) // `domain` won't have any effect...!\n```\n\nThe cookie with the name `foo` will only be available on `.get()` if it's visible from where the\ncode is called; the domain and/or path attribute will not have an effect when reading.\n\nDelete cookie:\n\n```javascript\nCookies.remove('name')\n```\n\nDelete a cookie valid to the path of the current page:\n\n```javascript\nCookies.set('name', 'value', { path: '' })\nCookies.remove('name') // fail!\nCookies.remove('name', { path: '' }) // removed!\n```\n\n_IMPORTANT! When deleting a cookie and you're not relying on the [default attributes](#cookie-attributes), you must pass the exact same `path`, `domain`, `secure` and `sameSite` attributes that were used to set the cookie:_\n\n```javascript\nCookies.remove('name', { path: '', domain: '.yourdomain.com', secure: true })\n```\n\n_Note: Removing a nonexistent cookie neither raises any exception nor returns any value._\n\n## Namespace conflicts\n\nIf there is any danger of a conflict with the namespace `Cookies`, the `noConflict` method will allow you to define a new namespace and preserve the original one. This is especially useful when running the script on third party sites e.g. as part of a widget or SDK.\n\n```javascript\n// Assign the js-cookie api to a different variable and restore the original \"window.Cookies\"\nvar Cookies2 = Cookies.noConflict()\nCookies2.set('name', 'value')\n```\n\n_Note: The `.noConflict` method is not necessary when using AMD or CommonJS, thus it is not exposed in those environments._\n\n## Encoding\n\nThis project is [RFC 6265](http://tools.ietf.org/html/rfc6265#section-4.1.1) compliant. All special characters that are not allowed in the cookie-name or cookie-value are encoded with each one's UTF-8 Hex equivalent using [percent-encoding](http://en.wikipedia.org/wiki/Percent-encoding).\nThe only character in cookie-name or cookie-value that is allowed and still encoded is the percent `%` character, it is escaped in order to interpret percent input as literal.\nPlease note that the default encoding/decoding strategy is meant to be interoperable [only between cookies that are read/written by js-cookie](https://github.com/js-cookie/js-cookie/pull/200#discussion_r63270778). To override the default encoding/decoding strategy you need to use a [converter](#converters).\n\n_Note: According to [RFC 6265](https://tools.ietf.org/html/rfc6265#section-6.1), your cookies may get deleted if they are too big or there are too many cookies in the same domain, [more details here](https://github.com/js-cookie/js-cookie/wiki/Frequently-Asked-Questions#why-are-my-cookies-being-deleted)._\n\n## Cookie Attributes\n\nCookie attribute defaults can be set globally by creating an instance of the api via `withAttributes()`, or individually for each call to `Cookies.set(...)` by passing a plain object as the last argument. Per-call attributes override the default attributes.\n\n### expires\n\nDefine when the cookie will be removed. Value must be a [`Number`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number) which will be interpreted as days from time of creation or a [`Date`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date) instance. If omitted, the cookie becomes a session cookie.\n\nTo create a cookie that expires in less than a day, you can check the [FAQ on the Wiki](https://github.com/js-cookie/js-cookie/wiki/Frequently-Asked-Questions#expire-cookies-in-less-than-a-day).\n\n**Default:** Cookie is removed when the user closes the browser.\n\n**Examples:**\n\n```javascript\nCookies.set('name', 'value', { expires: 365 })\nCookies.get('name') // => 'value'\nCookies.remove('name')\n```\n\n### path\n\nA [`String`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) indicating the path where the cookie is visible.\n\n**Default:** `/`\n\n**Examples:**\n\n```javascript\nCookies.set('name', 'value', { path: '' })\nCookies.get('name') // => 'value'\nCookies.remove('name', { path: '' })\n```\n\n**Note regarding Internet Explorer:**\n\n> Due to an obscure bug in the underlying WinINET InternetGetCookie implementation, IE\u2019s document.cookie will not return a cookie if it was set with a path attribute containing a filename.\n\n(From [Internet Explorer Cookie Internals (FAQ)](http://blogs.msdn.com/b/ieinternals/archive/2009/08/20/wininet-ie-cookie-internals-faq.aspx))\n\nThis means one cannot set a path using `window.location.pathname` in case such pathname contains a filename like so: `/check.html` (or at least, such cookie cannot be read correctly).\n\nIn fact, you should never allow untrusted input to set the cookie attributes or you might be exposed to a [XSS attack](https://github.com/js-cookie/js-cookie/issues/396).\n\n### domain\n\nA [`String`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) indicating a valid domain where the cookie should be visible. The cookie will also be visible to all subdomains.\n\n**Default:** Cookie is visible only to the domain or subdomain of the page where the cookie was created, except for Internet Explorer (see below).\n\n**Examples:**\n\nAssuming a cookie that is being created on `site.com`:\n\n```javascript\nCookies.set('name', 'value', { domain: 'subdomain.site.com' })\nCookies.get('name') // => undefined (need to read at 'subdomain.site.com')\n```\n\n**Note regarding Internet Explorer default behavior:**\n\n> Q3: If I don\u2019t specify a DOMAIN attribute (for) a cookie, IE sends it to all nested subdomains anyway?\n> A: Yes, a cookie set on example.com will be sent to sub2.sub1.example.com.\n> Internet Explorer differs from other browsers in this regard.\n\n(From [Internet Explorer Cookie Internals (FAQ)](http://blogs.msdn.com/b/ieinternals/archive/2009/08/20/wininet-ie-cookie-internals-faq.aspx))\n\nThis means that if you omit the `domain` attribute, it will be visible for a subdomain in IE.\n\n### secure\n\nEither `true` or `false`, indicating if the cookie transmission requires a secure protocol (https).\n\n**Default:** No secure protocol requirement.\n\n**Examples:**\n\n```javascript\nCookies.set('name', 'value', { secure: true })\nCookies.get('name') // => 'value'\nCookies.remove('name')\n```\n\n### sameSite\n\nA [`String`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String), allowing to control whether the browser is sending a cookie along with cross-site requests.\n\nDefault: not set.\n\n**Note that more recent browsers are making \"Lax\" the default value even without specifiying anything here.**\n\n**Examples:**\n\n```javascript\nCookies.set('name', 'value', { sameSite: 'strict' })\nCookies.get('name') // => 'value'\nCookies.remove('name')\n```\n\n### Setting up defaults\n\n```javascript\nconst api = Cookies.withAttributes({ path: '/', domain: '.example.com' })\n```\n\n## Converters\n\n### Read\n\nCreate a new instance of the api that overrides the default decoding implementation. All get methods that rely in a proper decoding to work, such as `Cookies.get()` and `Cookies.get('name')`, will run the given converter for each cookie. The returned value will be used as the cookie value.\n\nExample from reading one of the cookies that can only be decoded using the `escape` function:\n\n```javascript\ndocument.cookie = 'escaped=%u5317'\ndocument.cookie = 'default=%E5%8C%97'\nvar cookies = Cookies.withConverter({\n  read: function (value, name) {\n    if (name === 'escaped') {\n      return unescape(value)\n    }\n    // Fall back to default for all other cookies\n    return Cookies.converter.read(value, name)\n  }\n})\ncookies.get('escaped') // \u5317\ncookies.get('default') // \u5317\ncookies.get() // { escaped: '\u5317', default: '\u5317' }\n```\n\n### Write\n\nCreate a new instance of the api that overrides the default encoding implementation:\n\n```javascript\nCookies.withConverter({\n  write: function (value, name) {\n    return value.toUpperCase()\n  }\n})\n```\n\n## TypeScript declarations\n\n```bash\nnpm i @types/js-cookie\n```\n\n## Server-side integration\n\nCheck out the [Servers Docs](SERVER_SIDE.md)\n\n## Contributing\n\nCheck out the [Contributing Guidelines](CONTRIBUTING.md)\n\n## Releasing\n\nReleasing should be done via the `Release` GitHub Actions workflow, so that published packages on npmjs.com have package provenance.\n\nGitHub releases are created as a draft and need to be published manually!\n(This is so we are able to craft suitable release notes before publishing.)\n\n## Supporters\n\n<p>\n  <a href=\"https://www.browserstack.com/\"><img src=\"https://raw.githubusercontent.com/wiki/js-cookie/js-cookie/Browserstack-logo%402x.png\" width=\"150\"></a>\n</p>\n\nMany thanks to [BrowserStack](https://www.browserstack.com/) for providing unlimited browser testing free of cost.\n\n## Authors\n\n- [Klaus Hartl](https://github.com/carhartl)\n- [Fagner Brack](https://github.com/FagnerMartinsBrack)\n- And awesome [contributors](https://github.com/js-cookie/js-cookie/graphs/contributors)\n",
        "releases": [
            {
                "name": "v3.0.5",
                "date": "2023-04-24T14:02:04Z"
            },
            {
                "name": "v3.0.4",
                "date": "2023-04-21T18:44:56Z"
            },
            {
                "name": "v3.0.1",
                "date": "2021-09-01T10:45:04Z"
            },
            {
                "name": "v3.0.0",
                "date": "2021-07-26T17:10:01Z"
            },
            {
                "name": "v3.0.0-rc.4",
                "date": "2021-07-16T12:05:26Z"
            },
            {
                "name": "v3.0.0-rc.3",
                "date": "2021-07-15T08:03:49Z"
            },
            {
                "name": "v3.0.0-rc.2",
                "date": "2021-07-14T04:47:39Z"
            },
            {
                "name": "v3.0.0-rc.1",
                "date": "2020-09-08T13:15:16Z"
            },
            {
                "name": "v3.0.0-rc.0",
                "date": "2020-03-11T13:53:23Z"
            },
            {
                "name": "v3.0.0-beta.4",
                "date": "2020-03-05T11:28:35Z"
            },
            {
                "name": "v3.0.0-beta.3",
                "date": "2019-12-20T12:45:49Z"
            },
            {
                "name": "v3.0.0-beta.2",
                "date": "2019-12-12T19:32:03Z"
            },
            {
                "name": "v3.0.0-beta.1",
                "date": "2019-12-11T11:16:17Z"
            },
            {
                "name": "v3.0.0-beta.0",
                "date": "2019-10-05T18:48:28Z"
            },
            {
                "name": "v2.2.1",
                "date": "2019-08-06T13:18:34Z"
            },
            {
                "name": "v2.2.0",
                "date": "2017-10-28T05:50:00Z"
            },
            {
                "name": "v2.1.4",
                "date": "2017-04-03T11:36:39Z"
            },
            {
                "name": "v2.1.3",
                "date": "2016-09-02T04:40:58Z"
            },
            {
                "name": "v2.1.2",
                "date": "2016-05-29T06:04:53Z"
            },
            {
                "name": "v2.1.1",
                "date": "2016-04-16T09:28:47Z"
            },
            {
                "name": "v2.1.0",
                "date": "2015-12-31T11:43:01Z"
            },
            {
                "name": "v2.0.4",
                "date": "2015-10-17T18:14:36Z"
            },
            {
                "name": "v2.0.3",
                "date": "2015-07-20T01:37:14Z"
            },
            {
                "name": "v2.0.2",
                "date": "2015-06-27T16:45:38Z"
            },
            {
                "name": "v2.0.1",
                "date": "2015-06-22T15:19:48Z"
            },
            {
                "name": "v2.0.0",
                "date": "2015-06-22T00:18:36Z"
            },
            {
                "name": "v2.0.0-beta.1",
                "date": "2015-05-10T00:16:40Z"
            },
            {
                "name": "v1.5.1",
                "date": "2015-04-24T02:56:14Z"
            },
            {
                "name": "v1.5.0",
                "date": "2015-04-15T16:34:55Z"
            },
            {
                "name": "v1.4.1",
                "date": "2015-04-23T23:28:26Z"
            },
            {
                "name": "v1.4.0",
                "date": "2015-04-23T23:28:05Z"
            },
            {
                "name": "v1.3.1",
                "date": "2015-04-23T23:27:14Z"
            },
            {
                "name": "v1.3.0",
                "date": "2015-04-23T23:26:43Z"
            },
            {
                "name": "v1.2.0",
                "date": "2015-04-23T23:26:03Z"
            },
            {
                "name": "v1.1",
                "date": "2015-04-23T23:25:22Z"
            },
            {
                "name": "",
                "date": "2015-04-23T23:31:12Z"
            }
        ]
    }
}