{
    "https://api.github.com/repos/psf/black": {
        "forks": 2508,
        "watchers": 39451,
        "stars": 39451,
        "languages": {
            "Python": 5253887,
            "Vim Script": 9748,
            "Jupyter Notebook": 2848,
            "Dockerfile": 1087
        },
        "commits": [
            "2025-01-21T20:43:08Z",
            "2025-01-17T06:09:22Z",
            "2025-01-17T05:21:08Z",
            "2025-01-10T03:22:59Z",
            "2025-01-07T19:42:27Z",
            "2025-01-06T20:02:56Z",
            "2024-12-30T01:17:50Z",
            "2024-12-28T00:48:23Z",
            "2024-12-24T20:25:08Z",
            "2024-12-23T18:46:25Z",
            "2024-12-23T06:19:40Z",
            "2024-12-20T00:07:27Z",
            "2024-12-11T19:35:20Z",
            "2024-12-09T20:44:44Z",
            "2024-12-08T03:53:22Z",
            "2024-12-04T04:44:26Z",
            "2024-12-04T04:39:35Z",
            "2024-11-28T03:59:29Z",
            "2024-11-26T04:22:37Z",
            "2024-11-25T16:54:00Z",
            "2024-11-14T15:43:59Z",
            "2024-11-14T04:27:54Z",
            "2024-11-14T04:15:30Z",
            "2024-11-14T04:14:50Z",
            "2024-11-05T16:03:32Z",
            "2024-10-25T01:58:24Z",
            "2024-10-23T14:00:55Z",
            "2024-10-20T01:01:05Z",
            "2024-10-14T23:37:58Z",
            "2024-10-14T13:55:59Z"
        ],
        "creation_date": "2018-03-14T19:54:45Z",
        "contributors": 30,
        "topics": [
            "autopep8",
            "code",
            "codeformatter",
            "formatter",
            "gofmt",
            "hacktoberfest",
            "pre-commit-hook",
            "python",
            "yapf"
        ],
        "subscribers": 229,
        "readme": "[![Black Logo](https://raw.githubusercontent.com/psf/black/main/docs/_static/logo2-readme.png)](https://black.readthedocs.io/en/stable/)\n\n<h2 align=\"center\">The Uncompromising Code Formatter</h2>\n\n<p align=\"center\">\n<a href=\"https://github.com/psf/black/actions\"><img alt=\"Actions Status\" src=\"https://github.com/psf/black/workflows/Test/badge.svg\"></a>\n<a href=\"https://black.readthedocs.io/en/stable/?badge=stable\"><img alt=\"Documentation Status\" src=\"https://readthedocs.org/projects/black/badge/?version=stable\"></a>\n<a href=\"https://coveralls.io/github/psf/black?branch=main\"><img alt=\"Coverage Status\" src=\"https://coveralls.io/repos/github/psf/black/badge.svg?branch=main\"></a>\n<a href=\"https://github.com/psf/black/blob/main/LICENSE\"><img alt=\"License: MIT\" src=\"https://black.readthedocs.io/en/stable/_static/license.svg\"></a>\n<a href=\"https://pypi.org/project/black/\"><img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/black\"></a>\n<a href=\"https://pepy.tech/project/black\"><img alt=\"Downloads\" src=\"https://static.pepy.tech/badge/black\"></a>\n<a href=\"https://anaconda.org/conda-forge/black/\"><img alt=\"conda-forge\" src=\"https://img.shields.io/conda/dn/conda-forge/black.svg?label=conda-forge\"></a>\n<a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n</p>\n\n> \u201cAny color you like.\u201d\n\n_Black_ is the uncompromising Python code formatter. By using it, you agree to cede\ncontrol over minutiae of hand-formatting. In return, _Black_ gives you speed,\ndeterminism, and freedom from `pycodestyle` nagging about formatting. You will save time\nand mental energy for more important matters.\n\nBlackened code looks the same regardless of the project you're reading. Formatting\nbecomes transparent after a while and you can focus on the content instead.\n\n_Black_ makes code review faster by producing the smallest diffs possible.\n\nTry it out now using the [Black Playground](https://black.vercel.app). Watch the\n[PyCon 2019 talk](https://youtu.be/esZLCuWs_2Y) to learn more.\n\n---\n\n**[Read the documentation on ReadTheDocs!](https://black.readthedocs.io/en/stable)**\n\n---\n\n## Installation and usage\n\n### Installation\n\n_Black_ can be installed by running `pip install black`. It requires Python 3.9+ to run.\nIf you want to format Jupyter Notebooks, install with `pip install \"black[jupyter]\"`.\n\nIf you can't wait for the latest _hotness_ and want to install from GitHub, use:\n\n`pip install git+https://github.com/psf/black`\n\n### Usage\n\nTo get started right away with sensible defaults:\n\n```sh\nblack {source_file_or_directory}\n```\n\nYou can run _Black_ as a package if running it as a script doesn't work:\n\n```sh\npython -m black {source_file_or_directory}\n```\n\nFurther information can be found in our docs:\n\n- [Usage and Configuration](https://black.readthedocs.io/en/stable/usage_and_configuration/index.html)\n\n_Black_ is already [successfully used](https://github.com/psf/black#used-by) by many\nprojects, small and big. _Black_ has a comprehensive test suite, with efficient parallel\ntests, and our own auto formatting and parallel Continuous Integration runner. Now that\nwe have become stable, you should not expect large formatting changes in the future.\nStylistic changes will mostly be responses to bug reports and support for new Python\nsyntax. For more information please refer to\n[The Black Code Style](https://black.readthedocs.io/en/stable/the_black_code_style/index.html).\n\nAlso, as a safety measure which slows down processing, _Black_ will check that the\nreformatted code still produces a valid AST that is effectively equivalent to the\noriginal (see the\n[Pragmatism](https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#ast-before-and-after-formatting)\nsection for details). If you're feeling confident, use `--fast`.\n\n## The _Black_ code style\n\n_Black_ is a PEP 8 compliant opinionated formatter. _Black_ reformats entire files in\nplace. Style configuration options are deliberately limited and rarely added. It doesn't\ntake previous formatting into account (see\n[Pragmatism](https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#pragmatism)\nfor exceptions).\n\nOur documentation covers the current _Black_ code style, but planned changes to it are\nalso documented. They're both worth taking a look at:\n\n- [The _Black_ Code Style: Current style](https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html)\n- [The _Black_ Code Style: Future style](https://black.readthedocs.io/en/stable/the_black_code_style/future_style.html)\n\nChanges to the _Black_ code style are bound by the Stability Policy:\n\n- [The _Black_ Code Style: Stability Policy](https://black.readthedocs.io/en/stable/the_black_code_style/index.html#stability-policy)\n\nPlease refer to this document before submitting an issue. What seems like a bug might be\nintended behaviour.\n\n### Pragmatism\n\nEarly versions of _Black_ used to be absolutist in some respects. They took after its\ninitial author. This was fine at the time as it made the implementation simpler and\nthere were not many users anyway. Not many edge cases were reported. As a mature tool,\n_Black_ does make some exceptions to rules it otherwise holds.\n\n- [The _Black_ code style: Pragmatism](https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#pragmatism)\n\nPlease refer to this document before submitting an issue just like with the document\nabove. What seems like a bug might be intended behaviour.\n\n## Configuration\n\n_Black_ is able to read project-specific default values for its command line options\nfrom a `pyproject.toml` file. This is especially useful for specifying custom\n`--include` and `--exclude`/`--force-exclude`/`--extend-exclude` patterns for your\nproject.\n\nYou can find more details in our documentation:\n\n- [The basics: Configuration via a file](https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-via-a-file)\n\nAnd if you're looking for more general configuration documentation:\n\n- [Usage and Configuration](https://black.readthedocs.io/en/stable/usage_and_configuration/index.html)\n\n**Pro-tip**: If you're asking yourself \"Do I need to configure anything?\" the answer is\n\"No\". _Black_ is all about sensible defaults. Applying those defaults will have your\ncode in compliance with many other _Black_ formatted projects.\n\n## Used by\n\nThe following notable open-source projects trust _Black_ with enforcing a consistent\ncode style: pytest, tox, Pyramid, Django, Django Channels, Hypothesis, attrs,\nSQLAlchemy, Poetry, PyPA applications (Warehouse, Bandersnatch, Pipenv, virtualenv),\npandas, Pillow, Twisted, LocalStack, every Datadog Agent Integration, Home Assistant,\nZulip, Kedro, OpenOA, FLORIS, ORBIT, WOMBAT, and many more.\n\nThe following organizations use _Black_: Dropbox, KeepTruckin, Lyft, Mozilla,\nQuora, Duolingo, QuantumBlack, Tesla, Archer Aviation.\n\nAre we missing anyone? Let us know.\n\n## Testimonials\n\n**Mike Bayer**, [author of `SQLAlchemy`](https://www.sqlalchemy.org/):\n\n> I can't think of any single tool in my entire programming career that has given me a\n> bigger productivity increase by its introduction. I can now do refactorings in about\n> 1% of the keystrokes that it would have taken me previously when we had no way for\n> code to format itself.\n\n**Dusty Phillips**,\n[writer](https://smile.amazon.com/s/ref=nb_sb_noss?url=search-alias%3Daps&field-keywords=dusty+phillips):\n\n> _Black_ is opinionated so you don't have to be.\n\n**Hynek Schlawack**, [creator of `attrs`](https://www.attrs.org/), core developer of\nTwisted and CPython:\n\n> An auto-formatter that doesn't suck is all I want for Xmas!\n\n**Carl Meyer**, [Django](https://www.djangoproject.com/) core developer:\n\n> At least the name is good.\n\n**Kenneth Reitz**, creator of [`requests`](https://requests.readthedocs.io/en/latest/)\nand [`pipenv`](https://readthedocs.org/projects/pipenv/):\n\n> This vastly improves the formatting of our code. Thanks a ton!\n\n## Show your style\n\nUse the badge in your project's README.md:\n\n```md\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n```\n\nUsing the badge in README.rst:\n\n```\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n```\n\nLooks like this:\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n## License\n\nMIT\n\n## Contributing\n\nWelcome! Happy to see you willing to make the project better. You can get started by\nreading this:\n\n- [Contributing: The basics](https://black.readthedocs.io/en/latest/contributing/the_basics.html)\n\nYou can also take a look at the rest of the contributing docs or talk with the\ndevelopers:\n\n- [Contributing documentation](https://black.readthedocs.io/en/latest/contributing/index.html)\n- [Chat on Discord](https://discord.gg/RtVdv86PrH)\n\n## Change log\n\nThe log has become rather long. It moved to its own file.\n\nSee [CHANGES](https://black.readthedocs.io/en/latest/change_log.html).\n\n## Authors\n\nThe author list is quite long nowadays, so it lives in its own file.\n\nSee [AUTHORS.md](./AUTHORS.md)\n\n## Code of Conduct\n\nEveryone participating in the _Black_ project, and in particular in the issue tracker,\npull requests, and social media activity, is expected to treat other people with respect\nand more generally to follow the guidelines articulated in the\n[Python Community Code of Conduct](https://www.python.org/psf/codeofconduct/).\n\nAt the same time, humor is encouraged. In fact, basic familiarity with Monty Python's\nFlying Circus is expected. We are not savages.\n\nAnd if you _really_ need to slap somebody, do it with a fish while dancing.\n",
        "releases": [
            {
                "name": "",
                "date": "2024-10-07T19:20:06Z"
            },
            {
                "name": "24.8.0",
                "date": "2024-08-02T17:42:53Z"
            },
            {
                "name": "24.4.2",
                "date": "2024-04-26T00:31:27Z"
            },
            {
                "name": "",
                "date": "2024-04-24T15:17:30Z"
            },
            {
                "name": "",
                "date": "2024-04-12T20:13:48Z"
            },
            {
                "name": "24.3.0",
                "date": "2024-03-15T19:35:14Z"
            },
            {
                "name": "",
                "date": "2024-02-12T20:20:40Z"
            },
            {
                "name": "",
                "date": "2024-01-28T05:28:09Z"
            },
            {
                "name": "",
                "date": "2024-01-26T05:11:50Z"
            },
            {
                "name": "23.12.1",
                "date": "2023-12-22T23:05:40Z"
            },
            {
                "name": "24.1a1",
                "date": "2023-12-12T06:12:17Z"
            },
            {
                "name": "23.12.0",
                "date": "2023-12-12T06:27:53Z"
            },
            {
                "name": "",
                "date": "2023-11-08T05:40:50Z"
            },
            {
                "name": "23.10.1",
                "date": "2023-10-23T19:23:37Z"
            },
            {
                "name": "23.10.0",
                "date": "2023-10-17T16:13:43Z"
            },
            {
                "name": "23.9.1",
                "date": "2023-09-11T00:38:25Z"
            },
            {
                "name": "23.9.0",
                "date": "2023-09-09T03:29:57Z"
            },
            {
                "name": "",
                "date": "2023-07-11T00:20:37Z"
            },
            {
                "name": "23.3.0",
                "date": "2023-03-29T01:00:11Z"
            },
            {
                "name": "23.1.0",
                "date": "2023-02-01T02:53:37Z"
            },
            {
                "name": "23.1a1",
                "date": "2022-12-18T15:41:57Z"
            },
            {
                "name": "",
                "date": "2022-12-09T15:56:22Z"
            },
            {
                "name": "",
                "date": "2022-10-06T22:43:51Z"
            },
            {
                "name": "",
                "date": "2022-08-31T22:46:11Z"
            },
            {
                "name": "22.6.0",
                "date": "2022-06-28T00:39:09Z"
            },
            {
                "name": "22.3.0",
                "date": "2022-03-28T19:09:55Z"
            },
            {
                "name": "22.1.0",
                "date": "2022-01-29T20:36:55Z"
            },
            {
                "name": "21.12b0",
                "date": "2021-12-05T22:41:43Z"
            },
            {
                "name": "21.11b1",
                "date": "2021-11-18T03:57:34Z"
            },
            {
                "name": "21.11b0",
                "date": "2021-11-17T02:31:34Z"
            },
            {
                "name": "21.10b0",
                "date": "2021-11-01T01:01:49Z"
            },
            {
                "name": "21.9b0",
                "date": "2021-09-14T02:24:50Z"
            },
            {
                "name": "21.8b0",
                "date": "2021-08-29T21:37:18Z"
            },
            {
                "name": "21.7b0",
                "date": "2021-07-16T14:44:04Z"
            },
            {
                "name": "21.6b0",
                "date": "2021-06-10T22:26:39Z"
            },
            {
                "name": "21.5b2",
                "date": "2021-05-31T14:27:43Z"
            },
            {
                "name": "21.5b1",
                "date": "2021-05-10T15:10:43Z"
            },
            {
                "name": "21.5b0",
                "date": "2021-05-04T19:55:43Z"
            },
            {
                "name": "21.4b2",
                "date": "2021-04-28T15:32:39Z"
            },
            {
                "name": "21.4b1",
                "date": "2021-04-27T14:42:02Z"
            },
            {
                "name": "21.4b0",
                "date": "2021-04-25T22:13:31Z"
            },
            {
                "name": null,
                "date": "2020-08-26T15:56:21Z"
            },
            {
                "name": null,
                "date": "2020-08-26T14:32:29Z"
            },
            {
                "name": null,
                "date": "2019-10-28T23:56:53Z"
            },
            {
                "name": null,
                "date": "2019-03-14T17:20:59Z"
            }
        ]
    }
}