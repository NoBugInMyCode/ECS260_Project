{
    "https://api.github.com/repos/jart/cosmopolitan": {
        "forks": 656,
        "watchers": 18788,
        "stars": 18788,
        "languages": {
            "C": 18908001,
            "C++": 6358795,
            "Assembly": 1266886,
            "Lua": 1002679,
            "Shell": 396894,
            "Makefile": 294574,
            "Emacs Lisp": 91665,
            "Common Lisp": 55856,
            "Python": 15391,
            "sed": 4222,
            "HTML": 1333,
            "CSS": 426
        },
        "commits": [
            "2025-01-14T00:48:55Z",
            "2025-01-06T04:53:53Z",
            "2025-01-06T04:47:34Z",
            "2025-01-06T04:15:34Z",
            "2025-01-06T03:54:49Z",
            "2025-01-06T01:04:31Z",
            "2025-01-05T21:56:24Z",
            "2025-01-05T21:46:47Z",
            "2025-01-05T20:04:39Z",
            "2025-01-05T21:59:10Z",
            "2025-01-05T17:24:17Z",
            "2025-01-05T07:37:32Z",
            "2025-01-05T05:27:55Z",
            "2025-01-05T05:11:53Z",
            "2025-01-04T08:20:45Z",
            "2025-01-04T03:51:34Z",
            "2025-01-04T03:51:09Z",
            "2025-01-04T03:01:58Z",
            "2025-01-04T01:28:39Z",
            "2025-01-04T01:27:13Z",
            "2025-01-03T06:27:34Z",
            "2025-01-03T06:25:29Z",
            "2025-01-03T06:19:49Z",
            "2025-01-03T03:09:57Z",
            "2025-01-03T02:44:07Z",
            "2025-01-02T17:15:52Z",
            "2025-01-02T16:07:15Z",
            "2025-01-02T06:25:22Z",
            "2025-01-01T12:59:38Z",
            "2024-12-31T08:55:15Z"
        ],
        "creation_date": "2020-06-15T14:16:13Z",
        "contributors": 30,
        "topics": [
            "bios",
            "containers",
            "darwin",
            "efi",
            "freebsd",
            "libc",
            "linux",
            "netbsd",
            "openbsd",
            "polyglot",
            "windows",
            "zip"
        ],
        "subscribers": 171,
        "readme": "![Cosmopolitan Honeybadger](usr/share/img/honeybadger.png)\n\n[![build](https://github.com/jart/cosmopolitan/actions/workflows/build.yml/badge.svg)](https://github.com/jart/cosmopolitan/actions/workflows/build.yml)\n# Cosmopolitan\n\n[Cosmopolitan Libc](https://justine.lol/cosmopolitan/index.html) makes C\na build-once run-anywhere language, like Java, except it doesn't need an\ninterpreter or virtual machine. Instead, it reconfigures stock GCC and\nClang to output a POSIX-approved polyglot format that runs natively on\nLinux + Mac + Windows + FreeBSD + OpenBSD 7.3 + NetBSD + BIOS with the\nbest possible performance and the tiniest footprint imaginable.\n\n## Background\n\nFor an introduction to this project, please read the [actually portable\nexecutable](https://justine.lol/ape.html) blog post and [cosmopolitan\nlibc](https://justine.lol/cosmopolitan/index.html) website. We also have\n[API\ndocumentation](https://justine.lol/cosmopolitan/documentation.html).\n\n## Getting Started\n\nYou can start by obtaining a release of our `cosmocc` compiler from\n<https://cosmo.zip/pub/cosmocc/>.\n\n```sh\nmkdir -p cosmocc\ncd cosmocc\nwget https://cosmo.zip/pub/cosmocc/cosmocc.zip\nunzip cosmocc.zip\n```\n\nHere's an example program we can write:\n\n```c\n// hello.c\n#include <stdio.h>\n\nint main() {\n  printf(\"hello world\\n\");\n}\n```\n\nIt can be compiled as follows:\n\n```sh\ncosmocc -o hello hello.c\n./hello\n```\n\nThe Cosmopolitan Libc runtime links some heavyweight troubleshooting\nfeatures by default, which are very useful for developers and admins.\nHere's how you can log system calls:\n\n```sh\n./hello --strace\n```\n\nHere's how you can get a much more verbose log of function calls:\n\n```sh\n./hello --ftrace\n```\n\nYou can use the Cosmopolitan's toolchain to build conventional open\nsource projects which use autotools. This strategy normally works:\n\n```sh\nexport CC=x86_64-unknown-cosmo-cc\nexport CXX=x86_64-unknown-cosmo-c++\n./configure --prefix=/opt/cosmos/x86_64\nmake -j\nmake install\n```\n\n## Cosmopolitan Source Builds\n\nCosmopolitan can be compiled from source on any of our supported\nplatforms. The Makefile will download cosmocc automatically.\n\nIt's recommended that you install a systemwide APE Loader. This command\nrequires `sudo` access to copy the `ape` command to a system folder and\nregister with binfmt_misc on Linux, for even more performance.\n\n```sh\nape/apeinstall.sh\n```\n\nYou can now build the mono repo with any modern version of GNU Make. To\nbootstrap your build, you can install Cosmopolitan Make from this site:\n\nhttps://cosmo.zip/pub/cosmos/bin/make\n\nE.g.:\n\n```sh\ncurl -LO https://cosmo.zip/pub/cosmos/bin/make\n./make -j8\no//examples/hello\n```\n\nAfter you've built the repo once, you can also use the make from your\ncosmocc at `.cosmocc/current/bin/make`. You might even prefer to alias\nmake to `$COSMO/.cosmocc/current/bin/make`.\n\nSince the Cosmopolitan repository is very large, you might only want to\nbuild one particular thing. Here's an example of a target that can be\ncompiled relatively quickly, which is a simple POSIX test that only\ndepends on core LIBC packages.\n\n```sh\nrm -rf o//libc o//test\n.cosmocc/current/bin/make o//test/posix/signal_test\no//test/posix/signal_test\n```\n\nSometimes it's desirable to build a subset of targets, without having to\nlist out each individual one. For example if you wanted to build and run\nall the unit tests in the `TEST_POSIX` package, you could say:\n\n```sh\n.cosmocc/current/bin/make o//test/posix\n```\n\nCosmopolitan provides a variety of build modes. For example, if you want\nreally tiny binaries (as small as 12kb in size) then you'd say:\n\n```sh\n.cosmocc/current/bin/make m=tiny\n```\n\nYou can furthermore cut out the bloat of other operating systems, and\nhave Cosmopolitan become much more similar to Musl Libc.\n\n```sh\n.cosmocc/current/bin/make m=tinylinux\n```\n\nFor further details, see [//build/config.mk](build/config.mk).\n\n## Debugging\n\nTo print a log of system calls to stderr:\n\n```sh\ncosmocc -o hello hello.c\n./hello --strace\n```\n\nTo print a log of function calls to stderr:\n\n```sh\ncosmocc -o hello hello.c\n./hello --ftrace\n```\n\nBoth strace and ftrace use the unbreakable kprintf() facility, which is\nable to be sent to a file by setting an environment variable.\n\n```sh\nexport KPRINTF_LOG=log\n./hello --strace\n```\n\n## GDB\n\nHere's the recommended `~/.gdbinit` config:\n\n```gdb\nset host-charset UTF-8\nset target-charset UTF-8\nset target-wide-charset UTF-8\nset osabi none\nset complaints 0\nset confirm off\nset history save on\nset history filename ~/.gdb_history\ndefine asm\n  layout asm\n  layout reg\nend\ndefine src\n  layout src\n  layout reg\nend\nsrc\n```\n\nYou normally run the `.dbg` file under gdb. If you need to debug the\n`` file itself, then you can load the debug symbols independently as\n\n```sh\ngdb foo -ex 'add-symbol-file foo.dbg 0x401000'\n```\n\n## Platform Notes\n\n### Shells\n\nIf you use zsh and have trouble running APE programs try `sh -c ./prog`\nor simply upgrade to zsh 5.9+ (since we patched it two years ago). The\nsame is the case for Python `subprocess`, old versions of fish, etc.\n\n### Linux\n\nSome Linux systems are configured to launch MZ executables under WINE.\nOther distros configure their stock installs so that APE programs will\nprint \"run-detectors: unable to find an interpreter\". For example:\n\n```sh\njart@ubuntu:~$ wget https://cosmo.zip/pub/cosmos/bin/dash\njart@ubuntu:~$ chmod +x dash\njart@ubuntu:~$ ./dash\nrun-detectors: unable to find an interpreter for ./dash\n```\n\nYou can fix that by registering APE with `binfmt_misc`:\n\n```sh\nsudo wget -O /usr/bin/ape https://cosmo.zip/pub/cosmos/bin/ape-$(uname -m).elf\nsudo chmod +x /usr/bin/ape\nsudo sh -c \"echo ':APE:M::MZqFpD::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register\"\nsudo sh -c \"echo ':APE-jart:M::jartsr::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register\"\n```\n\nYou should be good now. APE will not only work, it'll launch executables\n400\u00b5s faster now too. However if things still didn't work out, it's also\npossible to disable `binfmt_misc` as follows:\n\n```sh\nsudo sh -c 'echo -1 > /proc/sys/fs/binfmt_misc/cli'     # remove Ubuntu's MZ interpreter\nsudo sh -c 'echo -1 > /proc/sys/fs/binfmt_misc/status'  # remove ALL binfmt_misc entries\n```\n\n### WSL\n\nIt's normally unsafe to use APE in a WSL environment, because it tries\nto run MZ executables as WIN32 binaries within the WSL environment. In\norder to make it safe to use Cosmopolitan software on WSL, run this:\n\n```sh\nsudo sh -c \"echo -1 > /proc/sys/fs/binfmt_misc/WSLInterop\"\n```\n\n## Discord Chatroom\n\nThe Cosmopolitan development team collaborates on the Redbean Discord\nserver. You're welcome to join us! <https://discord.gg/FwAVVu7eJ4>\n\n## Support Vector\n\n| Platform       | Min Version    | Circa |\n| :---           | ---:           | ---:  |\n| AMD            | K8             | 2003  |\n| Intel          | Core           | 2006  |\n| Linux          | 2.6.18         | 2007  |\n| Windows        | 8 [1]          | 2012  |\n| Darwin (macOS) | 23.1.0+        | 2023  |\n| OpenBSD        | 7.3 or earlier | 2023  |\n| FreeBSD        | 13             | 2020  |\n| NetBSD         | 9.2            | 2021  |\n\n[1] See our [vista branch](https://github.com/jart/cosmopolitan/tree/vista)\n    for a community supported version of Cosmopolitan that works on Windows\n    Vista and Windows 7.\n\n## Special Thanks\n\nFunding for this project is crowdsourced using\n[GitHub Sponsors](https://github.com/sponsors/jart) and\n[Patreon](https://www.patreon.com/jart). Your support is what makes this\nproject possible. Thank you! We'd also like to give special thanks to\nthe following groups and individuals:\n\n- [Joe Drumgoole](https://github.com/jdrumgoole)\n- [Rob Figueiredo](https://github.com/robfig)\n- [Wasmer](https://wasmer.io/)\n\nFor publicly sponsoring our work at the highest tier.\n",
        "releases": [
            {
                "name": "Cosmopolitan v4.0.2",
                "date": "2025-01-06T00:04:15Z"
            },
            {
                "name": "Cosmopolitan v4.0.1",
                "date": "2025-01-04T04:04:29Z"
            },
            {
                "name": "Cosmopolitan v4.0.0",
                "date": "2025-01-03T07:08:30Z"
            },
            {
                "name": "Cosmopolitan v3.9.7",
                "date": "2024-11-23T05:49:21Z"
            },
            {
                "name": "Cosmopolitan v3.9.6",
                "date": "2024-11-01T09:45:55Z"
            },
            {
                "name": "Cosmopolitan v3.9.5",
                "date": "2024-11-01T06:22:15Z"
            },
            {
                "name": "Cosmopolitan v3.9.4",
                "date": "2024-10-13T06:53:49Z"
            },
            {
                "name": "Cosmopolitan v3.9.3",
                "date": "2024-10-09T03:25:14Z"
            },
            {
                "name": "Cosmopolitan v3.9.2",
                "date": "2024-09-22T10:27:05Z"
            },
            {
                "name": "Cosmopolitan v3.9.1",
                "date": "2024-09-17T10:18:50Z"
            },
            {
                "name": "Cosmopolitan v3.9.0",
                "date": "2024-09-16T06:18:40Z"
            },
            {
                "name": "Cosmopolitan v3.8.0",
                "date": "2024-08-31T03:52:21Z"
            },
            {
                "name": "Cosmopolitan v3.7.1",
                "date": "2024-08-16T19:07:47Z"
            },
            {
                "name": "Cosmopolitan v3.7.0",
                "date": "2024-08-16T15:09:09Z"
            },
            {
                "name": "Cosmopolitan v3.6.2",
                "date": "2024-07-28T03:43:52Z"
            },
            {
                "name": "Cosmopolitan v3.6.1",
                "date": "2024-07-25T21:12:18Z"
            },
            {
                "name": "Cosmopolitan v3.6.0",
                "date": "2024-07-23T10:35:25Z"
            },
            {
                "name": "Cosmopolitan v3.5.9",
                "date": "2024-07-23T04:14:46Z"
            },
            {
                "name": "Cosmopolitan v3.5.8",
                "date": "2024-07-22T00:19:27Z"
            },
            {
                "name": "Cosmopolitan v3.5.7",
                "date": "2024-07-20T10:58:20Z"
            },
            {
                "name": "Cosmopolitan v3.5.6",
                "date": "2024-07-20T10:03:04Z"
            },
            {
                "name": "Cosmopolitan v3.5.5",
                "date": "2024-07-20T05:49:41Z"
            },
            {
                "name": "Cosmopolitan v3.5.4",
                "date": "2024-07-01T14:35:01Z"
            },
            {
                "name": "Cosmopolitan v3.5.3",
                "date": "2024-07-01T09:37:48Z"
            },
            {
                "name": "Cosmopolitan v3.5.2",
                "date": "2024-06-29T18:09:27Z"
            },
            {
                "name": "Cosmopolitan v3.5.1",
                "date": "2024-06-24T14:00:55Z"
            },
            {
                "name": "Cosmopolitan v3.5.0",
                "date": "2024-06-24T06:42:51Z"
            },
            {
                "name": "Cosmopolitan v3.4.0",
                "date": "2024-06-05T10:54:26Z"
            },
            {
                "name": "Cosmopolitan v3.3.10",
                "date": "2024-05-27T05:20:49Z"
            },
            {
                "name": "Cosmopolitan v3.3.9",
                "date": "2024-05-26T22:36:23Z"
            },
            {
                "name": "Cosmopolitan v3.3.8",
                "date": "2024-05-25T13:17:34Z"
            },
            {
                "name": "Cosmopolitan v3.3.7",
                "date": "2024-05-25T02:47:30Z"
            },
            {
                "name": "Cosmopolitan v3.3.6",
                "date": "2024-05-08T11:24:03Z"
            },
            {
                "name": "Cosmopolitan v3.3.5",
                "date": "2024-05-08T01:28:40Z"
            },
            {
                "name": "Cosmopolitan v3.3.4",
                "date": "2024-05-03T16:38:20Z"
            },
            {
                "name": "Cosmopolitan v3.3.3",
                "date": "2024-03-31T03:12:59Z"
            },
            {
                "name": "Cosmopolitan v3.3.2",
                "date": "2024-02-27T17:31:17Z"
            },
            {
                "name": "Cosmopolitan v3.3.1",
                "date": "2024-02-27T09:11:08Z"
            },
            {
                "name": "Cosmopolitan v3.3",
                "date": "2024-02-20T22:26:27Z"
            },
            {
                "name": "Cosmopolitan v3.2.4",
                "date": "2024-01-09T04:27:02Z"
            },
            {
                "name": "Cosmopolitan v3.2.3",
                "date": "2024-01-07T20:49:36Z"
            },
            {
                "name": "Cosmopolitan v3.2.2",
                "date": "2024-01-06T05:26:32Z"
            },
            {
                "name": "Cosmopolitan v3.2.1",
                "date": "2024-01-05T23:50:41Z"
            },
            {
                "name": "Cosmopolitan v3.2",
                "date": "2024-01-04T18:15:24Z"
            },
            {
                "name": "Cosmopolitan v3.1.3",
                "date": "2023-12-01T18:46:17Z"
            },
            {
                "name": "Cosmopolitan v3.1.2",
                "date": "2023-12-01T14:58:03Z"
            },
            {
                "name": "Cosmopolitan v3.1.1",
                "date": "2023-11-29T10:30:38Z"
            },
            {
                "name": "Cosmopolitan v3.1",
                "date": "2023-11-19T05:00:42Z"
            },
            {
                "name": "Cosmopolitan v3.0.2",
                "date": "2023-11-06T02:54:50Z"
            },
            {
                "name": "Cosmopolitan v3.0.1",
                "date": "2023-11-01T17:22:39Z"
            },
            {
                "name": "Cosmopolitan v3.0",
                "date": "2023-10-16T07:54:08Z"
            },
            {
                "name": "Cosmopolitan v2.2",
                "date": "2022-11-07T11:11:08Z"
            },
            {
                "name": "Cosmopolitan v2.1.1",
                "date": "2022-10-08T17:13:30Z"
            },
            {
                "name": "redbean v2.1",
                "date": "2022-10-08T16:39:47Z"
            },
            {
                "name": "pledge.com v1.8",
                "date": "2022-10-08T16:50:37Z"
            },
            {
                "name": "Cosmopolitan v2.1",
                "date": "2022-09-20T12:50:34Z"
            },
            {
                "name": "",
                "date": "2022-08-22T05:18:11Z"
            },
            {
                "name": "Cosmopolitan v2.0",
                "date": "2022-08-19T03:12:35Z"
            },
            {
                "name": "Cosmopolitan v1.0",
                "date": "2021-05-17T04:51:44Z"
            },
            {
                "name": "Cosmopolitan v0.3",
                "date": "2021-03-29T18:39:54Z"
            },
            {
                "name": "Cosmopolitan v0.2",
                "date": "2021-02-10T05:06:11Z"
            },
            {
                "name": "Cosmopolitan v0.1.2",
                "date": "2021-01-30T18:15:11Z"
            },
            {
                "name": "Cosmopolitan v0.1.1",
                "date": "2021-01-29T09:37:25Z"
            },
            {
                "name": "Cosmopolitan v0.1",
                "date": "2021-01-29T00:54:12Z"
            }
        ]
    }
}