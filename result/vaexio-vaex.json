{
    "https://api.github.com/repos/vaexio/vaex": {
        "forks": 595,
        "watchers": 8326,
        "stars": 8326,
        "languages": {
            "Python": 3602391,
            "JavaScript": 1449854,
            "C++": 608928,
            "HTML": 183612,
            "PHP": 33807,
            "Shell": 13085,
            "Vue": 8849,
            "CSS": 6604,
            "CMake": 3269,
            "Makefile": 972
        },
        "commits": [
            "2024-10-08T16:23:01Z",
            "2024-10-08T16:22:53Z",
            "2024-10-07T20:06:05Z",
            "2024-10-07T17:57:58Z",
            "2024-10-07T15:45:32Z",
            "2024-10-01T19:46:15Z",
            "2024-10-01T18:38:37Z",
            "2024-09-27T10:19:08Z",
            "2024-09-18T23:03:46Z",
            "2024-09-12T17:43:26Z",
            "2024-09-11T10:24:31Z",
            "2023-07-21T10:40:58Z",
            "2023-07-21T10:40:02Z",
            "2023-07-21T10:39:15Z",
            "2023-07-21T10:38:56Z",
            "2023-07-21T10:38:28Z",
            "2023-07-21T10:37:45Z",
            "2023-07-21T10:37:17Z",
            "2023-07-21T09:31:54Z",
            "2023-07-21T09:31:08Z",
            "2023-07-11T15:49:42Z",
            "2023-07-10T19:55:12Z",
            "2023-07-10T15:01:33Z",
            "2023-07-10T12:40:38Z",
            "2023-07-10T12:05:50Z",
            "2023-07-10T11:42:58Z",
            "2023-07-10T11:23:34Z",
            "2023-07-10T11:06:21Z",
            "2023-07-08T19:40:50Z",
            "2023-07-08T19:40:33Z"
        ],
        "creation_date": "2014-09-27T09:44:42Z",
        "contributors": 30,
        "topics": [
            "bigdata",
            "data-science",
            "dataframe",
            "hdf5",
            "machine-learning",
            "machinelearning",
            "memory-mapped-file",
            "pyarrow",
            "python",
            "tabular-data",
            "visualization"
        ],
        "subscribers": 145,
        "readme": "[![Supported Python Versions](https://img.shields.io/pypi/pyversions/vaex-core)](https://pypi.org/project/vaex-core/)\n[![Documentation](https://readthedocs.org/projects/vaex/badge/?version=latest)](https://docs.vaex.io)\n[![Slack](https://img.shields.io/badge/slack-chat-green.svg)](https://join.slack.com/t/vaexio/shared_invite/zt-shhxzf5i-Cf5n2LtkoYgUjOjbB3bGQQ)\n\n# What is Vaex?\n\nVaex is a high performance Python library for lazy **Out-of-Core DataFrames**\n(similar to Pandas), to visualize and explore big tabular datasets. It\ncalculates *statistics* such as mean, sum, count, standard deviation etc, on an\n*N-dimensional grid* for more than **a billion** (`10^9`) samples/rows **per\nsecond**. Visualization is done using **histograms**, **density plots** and **3d\nvolume rendering**, allowing interactive exploration of big data. Vaex uses\nmemory mapping, zero memory copy policy and lazy computations for best\nperformance (no memory wasted).\n\n# Installing\nWith pip:\n```\n$ pip install vaex\n```\nOr conda:\n```\n$ conda install -c conda-forge vaex\n```\n\n[For more details, see the documentation](https://docs.vaex.io/en/latest/installing.html)\n\n# Key features\n## Instant opening of Huge data files (memory mapping)\n[HDF5](https://en.wikipedia.org/wiki/Hierarchical_Data_Format) and [Apache Arrow](https://arrow.apache.org/) supported.\n\n![opening1a](https://user-images.githubusercontent.com/1765949/82818563-31c1e200-9e9f-11ea-9ee0-0a8c1994cdc9.png)\n\n\n![opening1b](https://user-images.githubusercontent.com/1765949/82820352-49e73080-9ea2-11ea-9153-d73aa399d329.png)\n\n[Read the documentation on how to efficiently convert your data](https://docs.vaex.io/en/latest/example_io.html) from CSV files, Pandas DataFrames, or other sources.\n\n\nLazy streaming from S3 supported in combination with memory mapping.\n\n![opening1c](https://user-images.githubusercontent.com/1765949/82820516-a21e3280-9ea2-11ea-948b-07df26c4b5d3.png)\n\n\n## Expression system\nDon't waste memory or time with feature engineering, we (lazily) transform your data when needed.\n\n\n![expression](https://user-images.githubusercontent.com/1765949/82818733-70f03300-9e9f-11ea-80b0-ab28e7950b5c.png)\n\n\n\n## Out-of-core DataFrame\nFiltering and evaluating expressions will not waste memory by making copies; the data is kept untouched on disk, and will be streamed only when needed. Delay the time before you need a cluster.\n\n\n![occ-animated](https://user-images.githubusercontent.com/1765949/82821111-c6c6da00-9ea3-11ea-9f9e-498de8133cc2.gif)\n\n## Fast groupby / aggregations\nVaex implements parallelized, highly performant `groupby` operations, especially when using categories (>1 billion/second).\n\n\n![groupby](https://user-images.githubusercontent.com/1765949/82818807-97ae6980-9e9f-11ea-8820-41dd4441057a.png)\n\n\n## Fast and efficient join\nVaex doesn't copy/materialize the 'right' table when joining, saving gigabytes of memory. With subsecond joining on a billion rows, it's pretty fast!\n\n![join](https://user-images.githubusercontent.com/1765949/82818840-a268fe80-9e9f-11ea-8ba2-6a6d52c4af88.png)\n\n## More features\n\n * Remote DataFrames (documentation coming soon)\n * Integration into [Jupyter and Voila for interactive notebooks and dashboards](https://vaex.readthedocs.io/en/latest/tutorial_jupyter.html)\n * [Machine Learning without (explicit) pipelines](https://vaex.readthedocs.io/en/latest/tutorial_ml.html)\n\n\n## Contributing\n\nSee [contributing](CONTRIBUTING.md) page.\n\n## Slack\n\nJoin the discussion in our [Slack](https://join.slack.com/t/vaexio/shared_invite/zt-shhxzf5i-Cf5n2LtkoYgUjOjbB3bGQQ) channel!\n\n# Learn more about Vaex\n * Articles\n   * [Beyond Pandas: Spark, Dask, Vaex and other big data technologies battling head to head](https://towardsdatascience.com/beyond-pandas-spark-dask-vaex-and-other-big-data-technologies-battling-head-to-head-a453a1f8cc13) (includes benchmarks)\n   * [7 reasons why I love Vaex for data science](https://towardsdatascience.com/7-reasons-why-i-love-vaex-for-data-science-99008bc8044b) (tips and trics)\n   * [ML impossible: Train 1 billion samples in 5 minutes on your laptop using Vaex and Scikit-Learn](https://towardsdatascience.com/ml-impossible-train-a-1-billion-sample-model-in-20-minutes-with-vaex-and-scikit-learn-on-your-9e2968e6f385)\n   * [How to analyse 100 GB of data on your laptop with Python](https://towardsdatascience.com/how-to-analyse-100s-of-gbs-of-data-on-your-laptop-with-python-f83363dda94)\n   * [Flying high with Vaex: analysis of over 30 years of flight data in Python](https://towardsdatascience.com/https-medium-com-jovan-veljanoski-flying-high-with-vaex-analysis-of-over-30-years-of-flight-data-in-python-b224825a6d56)\n   * [Vaex: A DataFrame with super strings - Speed up your text processing up to a 1000x\n](https://towardsdatascience.com/vaex-a-dataframe-with-super-strings-789b92e8d861)\n   * [Vaex: Out of Core Dataframes for Python and Fast Visualization - 1 billion row datasets on your laptop](https://towardsdatascience.com/vaex-out-of-core-dataframes-for-python-and-fast-visualization-12c102db044a)\n\n * [Follow our tutorials](https://docs.vaex.io/en/latest/tutorials.html)\n * Watch our more recent talks:\n   * [PyData London 2019](https://www.youtube.com/watch?v=2Tt0i823-ec)\n   * [SciPy 2019](https://www.youtube.com/watch?v=ELtjRdPT8is)\n * Contact us for data science solutions, training, or enterprise support at https://vaex.io/\n",
        "releases": [
            {
                "name": "Version linked to the paper",
                "date": "2018-03-29T14:50:46Z"
            },
            {
                "name": "Beta release for version 1",
                "date": "2016-06-10T19:41:04Z"
            },
            {
                "name": "first 0.3 release",
                "date": "2015-02-27T22:17:44Z"
            },
            {
                "name": "",
                "date": "2015-02-25T14:20:07Z"
            }
        ]
    }
}