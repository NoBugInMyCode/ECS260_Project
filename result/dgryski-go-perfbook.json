{
    "https://api.github.com/repos/dgryski/go-perfbook": {
        "forks": 597,
        "watchers": 10705,
        "stars": 10705,
        "languages": {},
        "commits": [
            "2022-01-05T14:13:12Z",
            "2020-08-25T14:14:15Z",
            "2020-08-13T05:21:21Z",
            "2020-07-28T19:58:40Z",
            "2020-07-28T18:31:25Z",
            "2020-07-27T18:12:41Z",
            "2020-07-27T15:44:00Z",
            "2020-07-21T05:00:57Z",
            "2020-07-21T03:50:36Z",
            "2020-02-29T20:40:30Z",
            "2019-11-26T23:19:19Z",
            "2019-11-14T04:37:07Z",
            "2019-11-13T04:29:20Z",
            "2019-11-13T03:47:34Z",
            "2019-11-12T12:38:46Z",
            "2019-11-12T02:01:18Z",
            "2019-11-12T01:41:59Z",
            "2019-11-12T01:30:34Z",
            "2019-10-31T23:25:58Z",
            "2019-09-28T05:22:51Z",
            "2019-09-26T15:05:17Z",
            "2019-09-26T06:04:25Z",
            "2019-07-15T17:16:50Z",
            "2019-06-12T02:43:15Z",
            "2019-06-11T14:16:55Z",
            "2019-05-23T18:40:10Z",
            "2019-05-21T23:34:07Z",
            "2019-05-10T07:38:11Z",
            "2019-05-10T05:15:55Z",
            "2019-05-07T18:53:24Z"
        ],
        "creation_date": "2016-05-22T06:21:35Z",
        "contributors": 30,
        "topics": [
            "optimization",
            "performance",
            "performance-analysis",
            "performance-optimization"
        ],
        "subscribers": 381,
        "readme": "# go-perfbook\n\n[![Buy Me A Coffee](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/dgryski)\n\nThis document outlines best practices for writing high-performance Go code.\n\nThe first sections cover writing optimized code in any language.\nThe later sections cover Go-specific techniques.\n\n### Multiple Language Versions\n\n* [English](performance.md)\n* [\u4e2d\u6587](performance-zh.md)\n* [Espa\u00f1ol](README-es.md)\n* [Portugu\u00eas Brasileiro](performance-ptbr.md)\n\n### Table of Contents\n\n1. [Writing and Optimizing Go code](performance.md#writing-and-optimizing-go-code)\n1. [How to Optimize](performance.md#how-to-optimize)\n   1. [Optimization Workflow](performance.md#optimization-workflow)\n   1. [Concrete Optimization Tips](performance.md#concrete-optimization-tips)\n1. [Data Changes](performance.md#data-changes)\n1. [Algorithmic Changes](performance.md#algorithmic-changes)\n1. [Benchmark Inputs](performance.md#benchmark-inputs)\n1. [Program Tuning](performance.md#program-tuning)\n1. [Optimization Workflow Summary](performance.md#optimization-workflow-summary)\n1. [Garbage Collection](performance.md#garbage-collection)\n1. [Runtime and Compiler](performance.md#runtime-and-compiler)\n1. [Unsafe](performance.md#unsafe)\n1. [Common gotchas with the standard library](performance.md#common-gotchas-with-the-standard-library)\n1. [Alternate Implementations](performance.md#alternate-implementations)\n1. [CGO](performance.md#cgo)\n1. [Advanced Techniques](performance.md#advanced-techniques)\n1. [Assembly](performance.md#assembly)\n1. [Optimizing an Entire Service](performance.md#optimizing-an-entire-service)\n1. [Tooling](performance.md#tooling)\n   1. [Profiling](performance.md#introductory-profiling)\n   1. [Tracer](performance.md#tracer)\n1. Appendix\n   1. [Implementing Research Papers](performance.md#appendix-implementing-research-papers)\n\n### Contributing\n\nThis is a work-in-progress book in Go performance.\n\nThere are different ways to contribute:\n\n   1) add to or summarizes the resources in TODO\n   2) add bullet points or new topics to be covered\n   3) write prose and flesh  out the sections in the book\n\nEventually sample programs to optimize and exercises will be needed (maybe).\n\nCoordination will be done in the #performance channel on the Gophers slack.\n\n",
        "releases": []
    }
}