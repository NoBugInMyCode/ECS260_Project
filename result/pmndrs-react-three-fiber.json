{
    "https://api.github.com/repos/pmndrs/react-three-fiber": {
        "forks": 1633,
        "watchers": 28030,
        "stars": 28030,
        "languages": {
            "TypeScript": 354628,
            "JavaScript": 1248,
            "HTML": 377,
            "Shell": 68
        },
        "commits": [
            "2025-01-09T11:25:07Z",
            "2025-01-09T11:25:04Z",
            "2025-01-09T11:21:30Z",
            "2025-01-09T11:21:27Z",
            "2025-01-09T11:20:59Z",
            "2025-01-09T11:19:54Z",
            "2025-01-09T08:43:39Z",
            "2025-01-09T08:43:36Z",
            "2025-01-09T08:42:41Z",
            "2024-12-12T16:12:02Z",
            "2024-12-09T09:30:27Z",
            "2024-12-07T15:58:12Z",
            "2024-12-07T13:56:30Z",
            "2024-12-06T17:02:03Z",
            "2024-12-06T16:59:38Z",
            "2024-12-04T08:28:46Z",
            "2024-11-26T15:00:47Z",
            "2024-11-02T11:14:40Z",
            "2024-10-09T00:42:54Z",
            "2024-10-09T00:42:51Z",
            "2024-10-09T00:40:40Z",
            "2024-10-09T00:38:58Z",
            "2024-10-01T03:38:58Z",
            "2024-10-01T03:38:55Z",
            "2024-10-01T03:38:01Z",
            "2024-10-01T03:37:50Z",
            "2024-09-23T11:45:28Z",
            "2024-09-23T11:45:26Z",
            "2024-09-23T11:44:17Z",
            "2024-09-14T21:16:44Z"
        ],
        "creation_date": "2019-02-25T14:31:51Z",
        "contributors": 30,
        "topics": [
            "3d",
            "animation",
            "fiber",
            "react",
            "renderer",
            "threejs"
        ],
        "subscribers": 214,
        "readme": "> [!WARNING]  \n> R3F v8 is not compatible with React 19 or Next 15, which uses React 19. Use the R3F v9 RC instead which can be installed with `@react-three/fiber@rc`.\n\n> [!NOTE]  \n> While we work on R3F v9 you can track compatibility of different libraries and common workarounds [here](https://github.com/verekia/three-gpu-ecosystem-tests).\n\n<h1>@react-three/fiber</h1>\n\n[![Version](https://img.shields.io/npm/v/@react-three/fiber?style=flat&colorA=000000&colorB=000000)](https://npmjs.com/package/@react-three/fiber)\n[![Downloads](https://img.shields.io/npm/dt/@react-three/fiber.svg?style=flat&colorA=000000&colorB=000000)](https://npmjs.com/package/@react-three/fiber)\n[![Twitter](https://img.shields.io/twitter/follow/pmndrs?label=%40pmndrs&style=flat&colorA=000000&colorB=000000&logo=twitter&logoColor=000000)](https://twitter.com/pmndrs)\n[![Discord](https://img.shields.io/discord/740090768164651008?style=flat&colorA=000000&colorB=000000&label=discord&logo=discord&logoColor=000000)](https://discord.gg/ZZjjNvJ)\n[![Open Collective](https://img.shields.io/opencollective/all/react-three-fiber?style=flat&colorA=000000&colorB=000000)](https://opencollective.com/react-three-fiber)\n[![ETH](https://img.shields.io/badge/ETH-f5f5f5?style=flat&colorA=000000&colorB=000000)](https://blockchain.com/eth/address/0x6E3f79Ea1d0dcedeb33D3fC6c34d2B1f156F2682)\n[![BTC](https://img.shields.io/badge/BTC-f5f5f5?style=flat&colorA=000000&colorB=000000)](https://blockchain.com/btc/address/36fuguTPxGCNnYZSRdgdh6Ea94brCAjMbH)\n\n<a href=\"https://docs.pmnd.rs/react-three-fiber/getting-started/examples\"><img src=\"/docs/banner-r3f.jpg\" /></a>\n\nreact-three-fiber is a <a href=\"https://reactjs.org/docs/codebase-overview.html#renderers\">React renderer</a> for threejs.\n\nBuild your scene declaratively with re-usable, self-contained components that react to state, are readily interactive and can participate in React's ecosystem.\n\n```bash\nnpm install three @types/three @react-three/fiber\n```\n\n#### Does it have limitations?\n\nNone. Everything that works in Threejs will work here without exception.\n\n#### Is it slower than plain Threejs?\n\nNo. There is no overhead. Components render outside of React. It outperforms Threejs in scale due to React's scheduling abilities.\n\n#### Can it keep up with frequent feature updates to Threejs?\n\nYes. It merely expresses Threejs in JSX, `<mesh />` dynamically turns into `new THREE.Mesh()`. If a new Threejs version adds, removes or changes features, it will be available to you instantly without depending on updates to this library.\n\n### What does it look like?\n\n<table>\n  <tbody>\n    <tr>\n      <td>Let's make a re-usable component that has its own state, reacts to user-input and participates in the render-loop. (<a href=\"https://codesandbox.io/s/rrppl0y8l4?file=/src/App.js\">live demo</a>).</td>\n      <td>\n        <a href=\"https://codesandbox.io/s/rrppl0y8l4\">\n          <img src=\"/docs/basic-app.gif\" />\n        </a>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n```jsx\nimport { createRoot } from 'react-dom/client'\nimport React, { useRef, useState } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\n\nfunction Box(props) {\n  // This reference gives us direct access to the THREE.Mesh object\n  const ref = useRef()\n  // Hold state for hovered and clicked events\n  const [hovered, hover] = useState(false)\n  const [clicked, click] = useState(false)\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  useFrame((state, delta) => (ref.current.rotation.x += delta))\n  // Return the view, these are regular Threejs elements expressed in JSX\n  return (\n    <mesh\n      {...props}\n      ref={ref}\n      scale={clicked ? 1.5 : 1}\n      onClick={(event) => click(!clicked)}\n      onPointerOver={(event) => hover(true)}\n      onPointerOut={(event) => hover(false)}>\n      <boxGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}\n\ncreateRoot(document.getElementById('root')).render(\n  <Canvas>\n    <ambientLight intensity={Math.PI / 2} />\n    <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} decay={0} intensity={Math.PI} />\n    <pointLight position={[-10, -10, -10]} decay={0} intensity={Math.PI} />\n    <Box position={[-1.2, 0, 0]} />\n    <Box position={[1.2, 0, 0]} />\n  </Canvas>,\n)\n```\n\n<details>\n  <summary>Show TypeScript example</summary>\n  \n```bash\nnpm install @types/three\n```\n\n```tsx\nimport * as THREE from 'three'\nimport { createRoot } from 'react-dom/client'\nimport React, { useRef, useState } from 'react'\nimport { Canvas, useFrame, ThreeElements } from '@react-three/fiber'\n\nfunction Box(props: ThreeElements['mesh']) {\n  const ref = useRef<THREE.Mesh>(null!)\n  const [hovered, hover] = useState(false)\n  const [clicked, click] = useState(false)\n  useFrame((state, delta) => (ref.current.rotation.x += delta))\n  return (\n    <mesh\n      {...props}\n      ref={ref}\n      scale={clicked ? 1.5 : 1}\n      onClick={(event) => click(!clicked)}\n      onPointerOver={(event) => hover(true)}\n      onPointerOut={(event) => hover(false)}>\n      <boxGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}\n\ncreateRoot(document.getElementById('root') as HTMLElement).render(\n  <Canvas>\n    <ambientLight intensity={Math.PI / 2} />\n    <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} decay={0} intensity={Math.PI} />\n    <pointLight position={[-10, -10, -10]} decay={0} intensity={Math.PI} />\n    <Box position={[-1.2, 0, 0]} />\n    <Box position={[1.2, 0, 0]} />\n  </Canvas>,\n)\n```\n\nLive demo: https://codesandbox.io/s/icy-tree-brnsm?file=/src/App.tsx\n\n</details>\n\n<details>\n  <summary>Show React Native example</summary>\n\nThis example relies on react 18 and uses `expo-cli`, but you can create a bare project with their template or with the `react-native` CLI.\n\n```bash\n# Install expo-cli, this will create our app\nnpm install expo-cli -g\n# Create app and cd into it\nexpo init my-app\ncd my-app\n# Install dependencies\nnpm install three @react-three/fiber@beta react@rc\n# Start\nexpo start\n```\n\nSome configuration may be required to tell the Metro bundler about your assets if you use `useLoader` or Drei abstractions like `useGLTF` and `useTexture`:\n\n```js\n// metro.config.js\nmodule.exports = {\n  resolver: {\n    sourceExts: ['js', 'jsx', 'json', 'ts', 'tsx', 'cjs'],\n    assetExts: ['glb', 'png', 'jpg'],\n  },\n}\n```\n\n```tsx\nimport React, { useRef, useState } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber/native'\nfunction Box(props) {\n  const mesh = useRef(null)\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n  useFrame((state, delta) => (mesh.current.rotation.x += delta))\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? 1.5 : 1}\n      onClick={(event) => setActive(!active)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}>\n      <boxGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}\nexport default function App() {\n  return (\n    <Canvas>\n      <ambientLight intensity={Math.PI / 2} />\n      <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} decay={0} intensity={Math.PI} />\n      <pointLight position={[-10, -10, -10]} decay={0} intensity={Math.PI} />\n      <Box position={[-1.2, 0, 0]} />\n      <Box position={[1.2, 0, 0]} />\n    </Canvas>\n  )\n}\n```\n\n</details>\n\n---\n\n# Documentation, tutorials, examples\n\nVisit [docs.pmnd.rs](https://docs.pmnd.rs/react-three-fiber)\n\n# First steps\n\nYou need to be versed in both React and Threejs before rushing into this. If you are unsure about React consult the official [React docs](https://react.dev/learn), especially [the section about hooks](https://react.dev/reference/react). As for Threejs, make sure you at least glance over the following links:\n\n1. Make sure you have a [basic grasp of Threejs](https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene). Keep that site open.\n2. When you know what a scene is, a camera, mesh, geometry, material, fork the [demo above](https://github.com/pmndrs/react-three-fiber#what-does-it-look-like).\n3. [Look up](https://threejs.org/docs/index.html#api/en/objects/Mesh) the JSX elements that you see (mesh, ambientLight, etc), _all_ threejs exports are native to three-fiber.\n4. Try changing some values, scroll through our [API](https://docs.pmnd.rs/react-three-fiber) to see what the various settings and hooks do.\n\nSome helpful material:\n\n- [Threejs-docs](https://threejs.org/docs) and [examples](https://threejs.org/examples)\n- [Discover Threejs](https://discoverthreejs.com), especially the [Tips and Tricks](https://discoverthreejs.com/tips-and-tricks) chapter for best practices\n- [Bruno Simons Threejs Jouney](https://threejs-journey.com), arguably the best learning resource, now includes a full [R3F chapter](https://threejs-journey.com/lessons/what-are-react-and-react-three-fiber)\n\n<a href=\"https://threejs-journey.com\"><img src=\"/docs/banner-journey.jpg\" /></a>\n\n# Ecosystem\n\nThere is a vibrant and extensive eco system around three-fiber, full of libraries, helpers and abstractions.\n\n- [`@react-three/drei`](https://github.com/pmndrs/drei) &ndash; useful helpers, this is an eco system in itself\n- [`@react-three/gltfjsx`](https://github.com/pmndrs/gltfjsx) &ndash; turns GLTFs into JSX components\n- [`@react-three/postprocessing`](https://github.com/pmndrs/react-postprocessing) &ndash; post-processing effects\n- [`@react-three/uikit`](https://github.com/pmndrs/uikit) &ndash; WebGL rendered UI components for three-fiber\n- [`@react-three/test-renderer`](https://github.com/pmndrs/react-three-fiber/tree/master/packages/test-renderer) &ndash; for unit tests in node\n- [`@react-three/offscreen`](https://github.com/pmndrs/react-three-offscreen) &ndash; offscreen/worker canvas for react-three-fiber\n- [`@react-three/flex`](https://github.com/pmndrs/react-three-flex) &ndash; flexbox for react-three-fiber\n- [`@react-three/xr`](https://github.com/pmndrs/react-xr) &ndash; VR/AR controllers and events\n- [`@react-three/csg`](https://github.com/pmndrs/react-three-csg) &ndash; constructive solid geometry\n- [`@react-three/rapier`](https://github.com/pmndrs/react-three-rapier) &ndash; 3D physics using Rapier\n- [`@react-three/cannon`](https://github.com/pmndrs/use-cannon) &ndash; 3D physics using Cannon\n- [`@react-three/p2`](https://github.com/pmndrs/use-p2) &ndash; 2D physics using P2\n- [`@react-three/a11y`](https://github.com/pmndrs/react-three-a11y) &ndash; real a11y for your scene\n- [`@react-three/gpu-pathtracer`](https://github.com/pmndrs/react-three-gpu-pathtracer) &ndash; realistic path tracing\n- [`create-r3f-app next`](https://github.com/pmndrs/react-three-next) &ndash; nextjs starter\n- [`lamina`](https://github.com/pmndrs/lamina) &ndash; layer based shader materials\n- [`zustand`](https://github.com/pmndrs/zustand) &ndash; flux based state management\n- [`jotai`](https://github.com/pmndrs/jotai) &ndash; atoms based state management\n- [`valtio`](https://github.com/pmndrs/valtio) &ndash; proxy based state management\n- [`react-spring`](https://github.com/pmndrs/react-spring) &ndash; a spring-physics-based animation library\n- [`framer-motion-3d`](https://www.framer.com/docs/three-introduction/) &ndash; framer motion, a popular animation library\n- [`use-gesture`](https://github.com/pmndrs/react-use-gesture) &ndash; mouse/touch gestures\n- [`leva`](https://github.com/pmndrs/leva) &ndash; create GUI controls in seconds\n- [`maath`](https://github.com/pmndrs/maath) &ndash; a kitchen sink for math helpers\n- [`miniplex`](https://github.com/hmans/miniplex) &ndash; ECS (entity management system)\n- [`composer-suite`](https://github.com/hmans/composer-suite) &ndash; composing shaders, particles, effects and game mechanics\n- [`triplex`](https://triplex.dev/) &ndash; scene editor for react-three-fiber\n- [`koestlich`](https://github.com/coconut-xr/koestlich) &ndash; UI component library for react-three-fiber\n\n[Usage Trend of the @react-three Family](https://npm-compare.com/@react-three/a11y,@react-three/cannon,@react-three/csg,@react-three/drei,@react-three/flex,@react-three/gltfjsx,@react-three/gpu-pathtracer,@react-three/offscreen,@react-three/p2,@react-three/postprocessing,@react-three/rapier,@react-three/test-renderer,@react-three/uikit,@react-three/xr)\n\n# Who is using Three-fiber\n\nA small selection of companies and projects relying on three-fiber.\n\n- [`vercel`](https://www.vercel.com) (design agency)\n- [`basement`](https://basement.studio) (design agency)\n- [`studio freight`](https://studiofreight.com) (design agency)\n- [`14 islands`](https://www.14islands.com) (design agency)\n- [`ueno`](https://dribbble.com/ueno) (design agency) \u2014 [video](https://twitter.com/0xca0a/status/1204373807408013312)\n- [`flux.ai`](https://www.flux.ai) (PCB builder)\n- [`colorful.app`](https://www.colorful.app) (modeller)\n- [`bezi`](https://www.bezi.com) (modeller)\n- [`readyplayer.me`](https://readyplayer.me) (avatar configurator)\n- [`zillow`](https://www.zillow.com) (real estate)\n- [`lumalabs.ai/genie`](https://lumalabs.ai/genie) (AI models)\n- [`skybox.blockadelabs`](https://skybox.blockadelabs.com) (AI envmaps)\n- [`3dconfig`](https://3dconfig.com) (floor planer)\n- [`buerli.io`](https://buerli.io) (CAD)\n- [`getencube`](https://www.getencube.com) (CAD)\n- [`glowbuzzer`](https://www.glowbuzzer.com) (CAD) \u2014 [video](https://twitter.com/glowbuzzer/status/1678396014644940800)\n- [`triplex`](https://triplex.dev) (editor) \u2014 [video](https://twitter.com/_douges/status/1708859381369221539)\n- [`theatrejs`](https://www.theatrejs.com) (editor) \u2014 [video](https://twitter.com/0xca0a/status/1566838823170068480)\n\n# How to contribute\n\nIf you like this project, please consider helping out. All contributions are welcome as well as donations to [Opencollective](https://opencollective.com/react-three-fiber), or in crypto `BTC: 36fuguTPxGCNnYZSRdgdh6Ea94brCAjMbH`, `ETH: 0x6E3f79Ea1d0dcedeb33D3fC6c34d2B1f156F2682`.\n\n#### Backers\n\nThank you to all our backers! \ud83d\ude4f\n\n<a href=\"https://opencollective.com/react-three-fiber#backers\" target=\"_blank\">\n  <img src=\"https://opencollective.com/react-three-fiber/backers.svg?width=890\"/>\n</a>\n\n#### Contributors\n\nThis project exists thanks to all the people who contribute.\n\n<a href=\"https://github.com/pmndrs/react-three-fiber/graphs/contributors\">\n  <img src=\"https://opencollective.com/react-three-fiber/contributors.svg?width=890\" />\n</a>\n",
        "releases": [
            {
                "name": "v8.17.12",
                "date": "2025-01-09T11:25:50Z"
            },
            {
                "name": "v8.17.11",
                "date": "2025-01-09T08:44:24Z"
            },
            {
                "name": "v8.17.10",
                "date": "2024-10-09T00:43:36Z"
            },
            {
                "name": "v8.17.9",
                "date": "2024-10-01T03:39:33Z"
            },
            {
                "name": "v8.17.8",
                "date": "2024-09-23T11:46:07Z"
            },
            {
                "name": "v8.17.7",
                "date": "2024-09-07T20:46:15Z"
            },
            {
                "name": "v8.17.6",
                "date": "2024-08-26T05:51:03Z"
            },
            {
                "name": "v8.17.5",
                "date": "2024-08-10T15:52:14Z"
            },
            {
                "name": "v8.17.0",
                "date": "2024-08-10T10:16:45Z"
            },
            {
                "name": "v8.16.8",
                "date": "2024-06-04T11:34:25Z"
            },
            {
                "name": "v8.16.7",
                "date": "2024-05-31T18:18:58Z"
            },
            {
                "name": "v8.16.6",
                "date": "2024-05-10T18:00:58Z"
            },
            {
                "name": "v8.16.5",
                "date": "2024-05-08T19:07:09Z"
            },
            {
                "name": "v8.16.4",
                "date": "2024-05-08T03:48:41Z"
            },
            {
                "name": "v8.16.3",
                "date": "2024-04-30T17:33:39Z"
            },
            {
                "name": "v8.16.2",
                "date": "2024-04-13T20:24:15Z"
            },
            {
                "name": "v8.16.1",
                "date": "2024-03-29T06:34:01Z"
            },
            {
                "name": "v8.16.0",
                "date": "2024-03-25T03:01:05Z"
            },
            {
                "name": "v8.15.18",
                "date": "2024-03-03T16:37:00Z"
            },
            {
                "name": "v8.15.17",
                "date": "2024-03-03T16:34:22Z"
            },
            {
                "name": "v8.15.16",
                "date": "2024-01-31T17:55:05Z"
            },
            {
                "name": "v8.15.14",
                "date": "2024-01-31T17:52:02Z"
            },
            {
                "name": "v8.15.13",
                "date": "2024-01-02T10:28:21Z"
            },
            {
                "name": "v8.15.12",
                "date": "2023-12-03T11:41:39Z"
            },
            {
                "name": "v8.15.11",
                "date": "2023-11-13T23:28:48Z"
            },
            {
                "name": "v8.15.10",
                "date": "2023-11-06T17:11:21Z"
            },
            {
                "name": "v8.15.9",
                "date": "2023-10-30T11:09:44Z"
            },
            {
                "name": "v8.15.8",
                "date": "2023-10-26T09:11:07Z"
            },
            {
                "name": "v8.15.7",
                "date": "2023-10-25T13:55:38Z"
            },
            {
                "name": "v8.15.6",
                "date": "2023-10-25T11:12:22Z"
            },
            {
                "name": "v8.15.5",
                "date": "2023-10-24T01:12:21Z"
            },
            {
                "name": "v8.15.4",
                "date": "2023-10-22T23:58:56Z"
            },
            {
                "name": "v8.15.3",
                "date": "2023-10-22T09:55:23Z"
            },
            {
                "name": "v8.15.2",
                "date": "2023-10-22T06:25:44Z"
            },
            {
                "name": "v8.15.1",
                "date": "2023-10-21T11:33:33Z"
            },
            {
                "name": "v8.15.0",
                "date": "2023-10-21T09:14:28Z"
            },
            {
                "name": "v8.14.7",
                "date": "2023-10-21T08:56:40Z"
            },
            {
                "name": "v8.14.6",
                "date": "2023-10-17T23:22:43Z"
            },
            {
                "name": "v8.14.5",
                "date": "2023-10-06T10:30:58Z"
            },
            {
                "name": "v8.14.4",
                "date": "2023-10-02T00:24:30Z"
            },
            {
                "name": "v8.14.3",
                "date": "2023-09-24T16:35:32Z"
            },
            {
                "name": "v8.14.2",
                "date": "2023-09-17T01:55:50Z"
            },
            {
                "name": "v8.14.1",
                "date": "2023-09-04T17:07:15Z"
            },
            {
                "name": "8.14.0",
                "date": "2023-09-04T08:42:11Z"
            },
            {
                "name": "v8.13.9",
                "date": "2023-09-04T00:32:39Z"
            },
            {
                "name": "v8.13.8",
                "date": "2023-09-03T23:39:22Z"
            },
            {
                "name": "v8.13.7",
                "date": "2023-08-16T23:47:58Z"
            },
            {
                "name": "v8.13.6",
                "date": "2023-07-26T09:30:33Z"
            },
            {
                "name": "v8.13.5",
                "date": "2023-07-12T12:27:12Z"
            },
            {
                "name": "v8.13.4",
                "date": "2023-06-26T08:29:32Z"
            },
            {
                "name": "v8.13.3",
                "date": "2023-06-13T21:54:42Z"
            },
            {
                "name": "v8.13.2",
                "date": "2023-06-13T21:54:03Z"
            },
            {
                "name": "v8.13.1",
                "date": "2023-06-09T17:35:38Z"
            },
            {
                "name": "v8.13.0",
                "date": "2023-04-27T10:50:04Z"
            },
            {
                "name": "v8.12.0",
                "date": "2023-03-09T01:00:00Z"
            },
            {
                "name": "v8.11.10",
                "date": "2023-03-08T22:57:21Z"
            },
            {
                "name": "v8.11.9",
                "date": "2023-03-06T14:44:49Z"
            },
            {
                "name": "v8.11.8",
                "date": "2023-03-06T02:58:39Z"
            },
            {
                "name": "v8.11.7",
                "date": "2023-03-04T22:25:16Z"
            },
            {
                "name": "v8.11.6",
                "date": "2023-03-04T21:57:31Z"
            },
            {
                "name": "v8.11.5",
                "date": "2023-02-23T15:52:19Z"
            },
            {
                "name": "v8.11.4",
                "date": "2023-02-23T15:45:29Z"
            },
            {
                "name": "v8.11.3",
                "date": "2023-02-23T15:23:43Z"
            },
            {
                "name": "v8.11.2",
                "date": "2023-02-16T22:51:07Z"
            },
            {
                "name": "v8.11.1",
                "date": "2023-02-14T06:59:13Z"
            },
            {
                "name": "v8.11.0",
                "date": "2023-02-14T06:50:06Z"
            },
            {
                "name": "v8.10.4",
                "date": "2023-02-04T14:57:30Z"
            },
            {
                "name": "v8.10.3",
                "date": "2023-02-04T14:06:40Z"
            },
            {
                "name": "v8.10.2",
                "date": "2023-02-04T14:00:37Z"
            },
            {
                "name": "v8.10.1",
                "date": "2023-01-21T20:04:46Z"
            },
            {
                "name": "v8.10.0",
                "date": "2023-01-21T20:04:01Z"
            },
            {
                "name": "v8.9.2",
                "date": "2022-12-29T17:18:26Z"
            },
            {
                "name": "v8.9.1",
                "date": "2022-11-02T09:11:15Z"
            },
            {
                "name": "v8.9.0",
                "date": "2022-10-29T11:48:34Z"
            },
            {
                "name": "v8.8.11",
                "date": "2022-10-29T11:31:00Z"
            },
            {
                "name": "v8.8.10",
                "date": "2022-10-11T10:09:35Z"
            },
            {
                "name": "v8.8.9",
                "date": "2022-10-04T12:42:00Z"
            },
            {
                "name": "v8.8.8",
                "date": "2022-10-03T06:46:10Z"
            },
            {
                "name": "v8.8.7",
                "date": "2022-09-29T00:43:35Z"
            },
            {
                "name": "v8.8.6",
                "date": "2022-09-27T11:12:53Z"
            },
            {
                "name": "v8.8.5",
                "date": "2022-09-27T03:54:53Z"
            },
            {
                "name": "v8.8.4",
                "date": "2022-09-26T16:14:59Z"
            },
            {
                "name": "v8.8.3",
                "date": "2022-09-25T21:08:34Z"
            },
            {
                "name": "v8.8.2",
                "date": "2022-09-22T18:02:29Z"
            },
            {
                "name": "v8.8.1",
                "date": "2022-09-21T19:09:06Z"
            },
            {
                "name": "v8.8.0",
                "date": "2022-09-21T15:21:21Z"
            },
            {
                "name": "v8.7.4",
                "date": "2022-09-15T00:22:30Z"
            },
            {
                "name": "v8.7.3",
                "date": "2022-09-13T09:15:47Z"
            },
            {
                "name": "v8.7.2",
                "date": "2022-09-13T09:12:48Z"
            },
            {
                "name": "v8.7.1",
                "date": "2022-09-06T07:34:38Z"
            },
            {
                "name": "v8.7.0",
                "date": "2022-09-04T17:46:47Z"
            },
            {
                "name": "v8.6.2",
                "date": "2022-09-01T06:43:23Z"
            },
            {
                "name": "v8.6.1",
                "date": "2022-09-01T06:30:54Z"
            },
            {
                "name": "v8.6.0",
                "date": "2022-08-22T19:29:34Z"
            },
            {
                "name": "v8.5.1",
                "date": "2022-08-22T11:35:23Z"
            },
            {
                "name": "v8.5.0",
                "date": "2022-08-21T18:46:15Z"
            },
            {
                "name": "v8.3.1",
                "date": "2022-08-08T23:21:36Z"
            },
            {
                "name": "v8.3.0",
                "date": "2022-08-04T19:27:22Z"
            },
            {
                "name": "v8.2.3",
                "date": "2022-08-04T19:17:15Z"
            },
            {
                "name": "v8.2.2",
                "date": "2022-07-26T14:22:20Z"
            },
            {
                "name": "v8.2.1",
                "date": "2022-07-22T19:25:57Z"
            },
            {
                "name": "v8.2.0",
                "date": "2022-07-14T09:21:06Z"
            },
            {
                "name": "v8.1.0",
                "date": "2022-07-14T09:06:29Z"
            },
            {
                "name": "v8.0.x",
                "date": "2022-03-30T11:44:52Z"
            },
            {
                "name": "v7.X.X",
                "date": "2021-07-15T12:22:30Z"
            },
            {
                "name": "v6.2.3",
                "date": "2021-06-07T20:35:35Z"
            },
            {
                "name": "",
                "date": "2021-04-13T10:15:56Z"
            },
            {
                "name": "6.x",
                "date": "2021-03-29T21:52:26Z"
            },
            {
                "name": "v5.0.0 release",
                "date": "2020-09-24T12:32:21Z"
            },
            {
                "name": "",
                "date": "2020-04-21T14:22:37Z"
            },
            {
                "name": "",
                "date": "2019-04-02T23:39:47Z"
            }
        ]
    }
}