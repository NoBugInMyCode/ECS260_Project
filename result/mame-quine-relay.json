{
    "https://api.github.com/repos/mame/quine-relay": {
        "forks": 558,
        "watchers": 14091,
        "stars": 14091,
        "languages": {
            "Ruby": 71710
        },
        "commits": [
            "2024-12-09T17:19:35Z",
            "2024-12-09T14:43:18Z",
            "2024-12-03T04:37:45Z",
            "2024-10-25T11:57:03Z",
            "2024-10-25T11:37:22Z",
            "2024-07-14T15:33:06Z",
            "2024-04-30T16:31:14Z",
            "2024-04-30T16:02:10Z",
            "2024-04-27T06:20:55Z",
            "2024-04-26T21:05:46Z",
            "2024-04-26T21:03:17Z",
            "2024-04-26T21:02:05Z",
            "2023-10-31T20:39:34Z",
            "2023-10-31T20:27:11Z",
            "2023-10-31T20:23:44Z",
            "2023-10-31T20:14:36Z",
            "2023-10-31T20:02:48Z",
            "2023-10-31T20:00:43Z",
            "2023-10-31T19:58:19Z",
            "2023-10-05T03:55:48Z",
            "2023-10-01T16:19:29Z",
            "2023-10-01T14:30:54Z",
            "2023-08-08T12:16:52Z",
            "2023-08-08T10:19:49Z",
            "2023-05-17T18:45:23Z",
            "2023-05-17T18:37:33Z",
            "2023-04-29T11:48:37Z",
            "2023-04-29T11:41:05Z",
            "2023-04-29T11:40:02Z",
            "2023-04-29T11:39:12Z"
        ],
        "creation_date": "2013-07-15T13:29:20Z",
        "contributors": 21,
        "topics": [
            "quine"
        ],
        "subscribers": 237,
        "readme": "# Quine Relay\n\n[![CI](https://github.com/mame/quine-relay/workflows/CI/badge.svg)](https://github.com/mame/quine-relay/actions?query=workflow%3ACI)\n\n## What this is\n\n[QR.rb](https://github.com/mame/quine-relay/blob/master/QR.rb) is a Ruby program that generates\na Rust program that generates\na Scala program that generates\n...(through 128 languages in total)...\na REXX program that generates\nthe original Ruby code again.\n\n![Language Uroboros][langs]\n\n[langs]: langs.png\n\n(If you want to see the old 50-language version, see the [50](https://github.com/mame/quine-relay/tree/50) branch.)\n\n## Usage\n\n### Ubuntu\n\nIf you are using Ubuntu 24.10 (Oracular Oriole), you can follow these steps.\n\n#### 1. Install all the interpreters/compilers.\n\nFirst, you need to type the following apt-get command to install them all.\n\n    $ sudo apt-get install afnix algol68g aplus-fsf aspectj asymptote \\\n      ats2-lang bash bc bsh clisp clojure cmake coffeescript crystal dc \\\n      dhall dotnet8 elixir emacs-nox erlang execline f2c fish flex \\\n      fp-compiler g++ gambas3-gb-pcre gambas3-scripter gap gawk gcc gdb gdc \\\n      genius gforth gfortran ghc ghostscript gm2 gnat gnucobol4 gnuplot \\\n      gobjc golang gpt groovy guile-3.0 gzip haxe icont iconx intercal \\\n      iverilog jasmin-sable jq kotlin ksh libevent-dev libpolyml-dev lisaac \\\n      livescript llvm lua5.3 m4 make minizinc mono-devel nasm neko nickle \\\n      nim node-typescript nodejs ocaml octave openjdk-11-jdk pari-gp \\\n      parser3-cgi perl php-cli pike8.0 polyml python3 r-base rakudo ratfor \\\n      rc regina-rexx ruby ruby-mustache rustc scala scilab-cli sed slsh spin \\\n      squirrel3 surgescript swi-prolog tcl tcsh valac vim wabt xsltproc \\\n      yabasic yorick zoem zsh\n\nThen, build the bundled interpreters.\n\n    $ sudo apt-get install cmake libpng-dev libgd-dev groff bison curl\n    $ make -C vendor\n\n#### 2. Run each program on each interpreter/compiler.\n\n    $ ulimit -s unlimited\n    $ ruby QR.rb > QR.rs\n    $ rustc QR.rs && ./QR > QR.scala\n    $ scalac QR.scala && scala QR > QR.scm\n    $ guile QR.scm > QR.sci\n    $ scilab-cli -nb -f QR.sci > QR.sed\n    $ sed -E -f QR.sed QR.sed > QR.spl\n    $ spl2c < QR.spl > QR.spl.c && gcc -z muldefs -o QR -I ./vendor/local/include -L ./vendor/local/lib QR.spl.c -lspl -lm &&\n      ./QR > QR.sl\n    $ slsh QR.sl > QR.nut\n    $ squirrel QR.nut > QR.sml\n    $ polyc -o QR QR.sml && ./QR > QR.sq\n    $ ruby vendor/subleq.rb QR.sq > QR.ss\n    $ surgescript QR.ss > QR.tcl\n    $ tclsh QR.tcl > QR.tcsh\n    $ tcsh QR.tcsh > QR.t\n    $ ruby vendor/thue.rb QR.t > QR.ts\n    $ tsc --outFile QR.ts.js QR.ts && nodejs QR.ts.js > QR.unl\n    $ ruby vendor/unlambda.rb QR.unl > QR.vala\n    $ valac QR.vala && ./QR > QR.mid\n    $ mono vendor/local/bin/Vlt.exe /s QR.mid && mono QR.exe > QR.v\n    $ iverilog -o QR QR.v && ./QR -vcd-none > QR.vim\n    $ vim -EsS QR.vim > QR.vb\n    $ echo '<Project Sdk=\"Microsoft.NET.Sdk\"><PropertyGroup><OutputType>Exe</OutputType><TargetFramework>net8.0</TargetFramework><EnableDefaultCompileItems>false</EnableDefaultCompileItems></PropertyGroup><ItemGroup><Compile Include=\"QR.vb\" /></ItemGroup></Project>' > tmp.vbproj &&\n      DOTNET_NOLOGO=1 dotnet run --project tmp.vbproj > QR.wasm\n    $ $(WASI_RUNTIME) QR.wasm > QR.wat\n    $ wat2wasm QR.wat -o QR.wat.wasm && $(WASI_RUNTIME) QR.wat.wasm > QR.ws\n    $ ruby vendor/whitespace.rb QR.ws > QR.xslt\n    $ xsltproc QR.xslt > QR.yab\n    $ yabasic QR.yab > QR.yorick\n    $ yorick -batch QR.yorick > QR.azm\n    $ zoem -i QR.azm > QR.zsh\n    $ zsh QR.zsh > QR.+\n    $ a+ QR.+ > qr.adb\n    $ gnatmake qr.adb && ./qr > QR.als\n    $ LANG=C LD_LIBRARY_PATH=/usr/lib/afnix axi QR.als > QR.aheui\n    $ ruby vendor/aheui.rb QR.aheui > QR.a68\n    $ a68g QR.a68 > QR.ante\n    $ ruby vendor/ante.rb QR.ante > QR.aj\n    $ ajc QR.aj && java QR > QR.asy\n    $ asy QR.asy > QR.dats\n    $ patscc -o QR QR.dats && ./QR > QR.awk\n    $ awk -f QR.awk > QR.bash\n    $ bash QR.bash > QR.bc\n    $ BC_LINE_LENGTH=4000000 bc -q QR.bc > QR.bsh\n    $ bsh QR.bsh > QR.bef\n    $ cfunge QR.bef > QR.Blc\n    $ ruby vendor/blc.rb < QR.Blc > QR.bf\n    $ ruby vendor/bf.rb QR.bf > QR.c\n    $ gcc -o QR QR.c && ./QR > QR.cpp\n    $ g++ -o QR QR.cpp && ./QR > QR.cs\n    $ echo '<Project Sdk=\"Microsoft.NET.Sdk\"><PropertyGroup><OutputType>Exe</OutputType><TargetFramework>net8.0</TargetFramework><EnableDefaultCompileItems>false</EnableDefaultCompileItems></PropertyGroup><ItemGroup><Compile Include=\"QR.cs\" /></ItemGroup></Project>' > tmp.csproj &&\n      DOTNET_NOLOGO=1 dotnet run --project tmp.csproj > QR.chef\n    $ PERL5LIB=vendor/local/lib/perl5 compilechef QR.chef QR.chef.pl &&\n      perl QR.chef.pl > QR.clj\n    $ clojure QR.clj > QR.cmake\n    $ cmake -P QR.cmake > QR.cob\n    $ cobc -O2 -x QR.cob && ./QR > QR.coffee\n    $ coffee --nodejs --stack_size=100000 QR.coffee > QR.lisp\n    $ clisp QR.lisp > QR.cr\n    $ crystal QR.cr > QR.d\n    $ gdc -o QR QR.d && ./QR > QR.dc\n    $ dc QR.dc > QR.dhall || true\n    $ dhall text --file QR.dhall > QR.exs\n    $ elixir QR.exs > QR.el\n    $ emacs -Q --script QR.el > QR.erl\n    $ escript QR.erl > QR.e\n    $ execlineb QR.e > QR.fsx\n    $ echo '<Project Sdk=\"Microsoft.NET.Sdk\"><PropertyGroup><OutputType>Exe</OutputType><TargetFramework>net8.0</TargetFramework><EnableDefaultCompileItems>false</EnableDefaultCompileItems></PropertyGroup><ItemGroup><Compile Include=\"QR.fsx\" /></ItemGroup></Project>' > tmp.fsproj &&\n      DOTNET_NOLOGO=1 dotnet run --project tmp.fsproj > QR.false\n    $ ruby vendor/false.rb QR.false > QR.fl\n    $ flex -o QR.fl.c QR.fl && gcc -o QR QR.fl.c && ./QR > QR.fish\n    $ fish QR.fish > QR.fs\n    $ gforth QR.fs > QR.f\n    $ gfortran -o QR QR.f && ./QR > QR.f90\n    $ gfortran -o QR QR.f90 && ./QR > QR.gbs\n    $ gbs3 QR.gbs > QR.g\n    $ gap -q QR.g > QR.gdb\n    $ gdb -q -x QR.gdb > QR.gel\n    $ genius QR.gel > QR.plt\n    $ gnuplot QR.plt > QR.go\n    $ go run QR.go > QR.gs\n    $ ruby vendor/golfscript.rb QR.gs > QR.gpt\n    $ mv QR.c QR.c.bak && gpt -t QR.c QR.gpt && gcc -o QR QR.c && ./QR > QR.grass &&\n      mv QR.c.bak QR.c\n    $ ruby vendor/grass.rb QR.grass > QR.groovy\n    $ groovy QR.groovy > QR.gz\n    $ gzip -cd QR.gz > QR.hs\n    $ rm -f QR.o && ghc QR.hs && ./QR > QR.hx\n    $ haxe -main QR -neko QR.n && neko QR.n > QR.icn\n    $ icont -s QR.icn && ./QR > QR.i\n    $ ick -bfOc QR.i && gcc -static QR.c -I /usr/include/ick-* -o QR -lick &&\n      ./QR > QR.j\n    $ jasmin QR.j && java QR > QR.java\n    $ javac QR.java && java QR > QR.js\n    $ nodejs QR.js > QR.jq\n    $ jq -r -n -f QR.jq > QR.jsfuck\n    $ nodejs --stack_size=100000 QR.jsfuck > QR.kt\n    $ kotlinc QR.kt -include-runtime -d QR.jar && kotlin QR.jar > QR.ksh\n    $ ksh QR.ksh > QR.lazy\n    $ lazyk QR.lazy > qr.li\n    $ lisaac -gcc -Wno-implicit-function-declaration qr.li && ./qr > QR.ls\n    $ lsc QR.ls > QR.ll\n    $ llvm-as QR.ll && lli QR.bc > QR.lol\n    $ lci QR.lol > QR.lua\n    $ lua5.3 QR.lua > QR.m4\n    $ m4 QR.m4 > QR.mk\n    $ make -f QR.mk > QR.mzn\n    $ minizinc --solver COIN-BC --soln-sep '' QR.mzn > QR.mod\n    $ gm2 -fiso QR.mod -o QR && ./QR > QR.il\n    $ ilasm QR.il && mono QR.exe > QR.mustache\n    $ mustache QR.mustache QR.mustache > QR.asm\n    $ nasm -felf QR.asm && ld -m elf_i386 -o QR QR.o && ./QR > QR.neko\n    $ nekoc QR.neko && neko QR.n > QR.5c\n    $ nickle QR.5c > QR.nim\n    $ nim compile QR.nim && ./QR > QR.m\n    $ gcc -o QR QR.m && ./QR > QR.ml\n    $ ocaml QR.ml > QR.octave\n    $ mv QR.m QR.m.bak && octave -qf QR.octave > QR.ook && mv QR.m.bak QR.m\n    $ ruby vendor/ook-to-bf.rb QR.ook QR.ook.bf && ruby vendor/bf.rb QR.ook.bf > QR.gp\n    $ gp -f -q QR.gp > QR.p\n    $ parser3 QR.p > QR.pas\n    $ fpc QR.pas && ./QR > QR.pl\n    $ perl QR.pl > QR.pl6\n    $ perl6 QR.pl6 > QR.php\n    $ php QR.php > QR.png\n    $ npiet QR.png > QR.pike\n    $ pike QR.pike > QR.ps\n    $ gs -dNODISPLAY -q QR.ps > QR.prolog\n    $ swipl -q -t qr -f QR.prolog > QR.pr\n    $ spin -T QR.pr > QR.py\n    $ python3 QR.py > QR.R\n    $ R --slave -f QR.R > QR.ratfor\n    $ ratfor -o QR.ratfor.f QR.ratfor && gfortran -o QR QR.ratfor.f &&\n      ./QR > QR.rc\n    $ rc QR.rc > QR.rexx\n    $ rexx ./QR.rexx > QR2.rb\n\nYou will see that `QR.rb` is the same as `QR2.rb`.\n\n    $ diff QR.rb QR2.rb\n\nAlternatively, just type `make`.\n\n    $ make\n\nNote: It may take a lot of memory to compile some files.\n\n### Docker\n\nSimply build the image and run a container as follows:\n\n    $ docker build -t qr .\n    $ docker run --privileged --rm -e CI=true qr\n\nNote: You must run in privileged mode, otherwise the `maxima` command will fail.\n\nIf you want to check the generated files, you can mount the local directory in the Docker container (but still use the `vendor` directory of the container), as follows:\n\n    $ docker run --privileged --rm -e CI=true -v $(pwd):/usr/local/share/quine-relay -v /usr/local/share/quine-relay/vendor qr\n\n### Other platforms\n\nYou may find [instructions for other platforms in the wiki](https://github.com/mame/quine-relay/wiki/Installation).\n\nIf you do not use these Linux distributions, please find your own way.\nIf you manage it, please let me know.  I wish you good luck.\n\n## Interpreter/compiler versions tested\n\nI used the following Ubuntu deb packages to test this program.\n\n\\#  |language                    |ubuntu package                    |version\n----|----------------------------|----------------------------------|-------------------------------------\n1   |Ruby                        |ruby                              |1:3.3\\~ubuntu3\n2   |Rust                        |rustc                             |1.80.1ubuntu2\n3   |Scala                       |scala                             |2.11.12-5\n4   |Scheme                      |guile-3.0                         |3.0.10+really3.0.9-1\n5   |Scilab                      |scilab-cli                        |2024.1.0+dfsg-4\n6   |sed                         |sed                               |4.9-2build1\n7   |Shakespeare                 |*N/A*                             |-\n8   |S-Lang                      |slsh                              |2.3.3-5\n9   |Squirrel                    |squirrel3                         |3.1-8.2\n10  |Standard ML                 |polyml, libpolyml-dev             |5.7.1-5build1\n11  |Subleq                      |*N/A*                             |-\n12  |SurgeScript                 |surgescript                       |0.5.4.4-1.1\n13  |Tcl                         |tcl                               |8.6.14build1\n14  |tcsh                        |tcsh                              |6.24.13-2\n15  |Thue                        |*N/A*                             |-\n16  |TypeScript                  |node-typescript                   |4.8.4+ds1-2\n17  |Unlambda                    |*N/A*                             |-\n18  |Vala                        |valac                             |0.56.17-1\n19  |Velato                      |*N/A*                             |-\n20  |Verilog                     |iverilog                          |12.0-2build2\n21  |Vimscript                   |vim                               |2:9.1.0496-1ubuntu6\n22  |Visual Basic                |dotnet8                           |8.0.110-8.0.10-0ubuntu1\n23  |WebAssembly (Binary format) |wabt                              |1.0.34+dsfg2+\\~cs1.0.32-1ubuntu2\n24  |WebAssembly (Text format)   |wabt                              |1.0.34+dsfg2+\\~cs1.0.32-1ubuntu2\n25  |Whitespace                  |*N/A*                             |-\n26  |XSLT                        |xsltproc                          |1.1.39-0exp1ubuntu1\n27  |Yabasic                     |yabasic                           |1:2.90.3-1\n28  |Yorick                      |yorick                            |2.2.04+dfsg1-13\n29  |Zoem                        |zoem                              |21-341-1\n30  |zsh                         |zsh                               |5.9-6ubuntu3\n31  |A+                          |aplus-fsf                         |4.22.1-13\n32  |Ada                         |gnat                              |13.2ubuntu2\n33  |AFNIX                       |afnix                             |3.8.0-1\n34  |Aheui                       |*N/A*                             |-\n35  |ALGOL 68                    |algol68g                          |3.1.2-1\n36  |Ante                        |*N/A*                             |-\n37  |AspectJ                     |aspectj                           |1.9.5-2\n38  |Asymptote                   |asymptote                         |2.90+ds-1build1\n39  |ATS                         |ats2-lang                         |0.4.2-2\n40  |Awk                         |gawk                              |1:5.2.1-2build3\n41  |bash                        |bash                              |5.2.32-1ubuntu1\n42  |bc                          |bc                                |1.07.1-4\n43  |BeanShell                   |bsh                               |2.0b4-20\n44  |Befunge                     |*N/A*                             |-\n45  |BLC8                        |*N/A*                             |-\n46  |Brainfuck                   |*N/A*                             |-\n47  |C                           |gcc                               |4:14.1.0-2ubuntu1\n48  |C++                         |g++                               |4:14.1.0-2ubuntu1\n49  |C#                          |dotnet8                           |8.0.110-8.0.10-0ubuntu1\n50  |Chef                        |*N/A*                             |-\n51  |Clojure                     |clojure                           |1.11.2-1\n52  |CMake                       |cmake                             |3.30.3-1\n53  |Cobol                       |gnucobol4                         |4.0\\~early\\~20200606-6.1build1\n54  |CoffeeScript                |coffeescript                      |2.7.0+dfsg1-2\n55  |Common Lisp                 |clisp                             |1:2.49.20210628.gitde01f0f-3.1build3\n56  |Crystal                     |crystal, libevent-dev             |1.12.1+dfsg-1\n57  |D                           |gdc                               |4:14.1.0-2ubuntu1\n58  |dc                          |dc                                |1.07.1-4\n59  |Dhall                       |dhall                             |1.41.2-1build2\n60  |Elixir                      |elixir                            |1.14.0.dfsg-2\n61  |Emacs Lisp                  |emacs-nox                         |1:29.4+1-3ubuntu1\n62  |Erlang                      |erlang                            |1:25.3.2.12+dfsg-1ubuntu2\n63  |Execline                    |execline                          |2.9.6.0-1\n64  |F#                          |dotnet8                           |8.0.110-8.0.10-0ubuntu1\n65  |FALSE                       |*N/A*                             |-\n66  |Flex                        |flex                              |2.6.4-8.2build1\n67  |Fish                        |fish                              |3.7.1-1\n68  |Forth                       |gforth                            |0.7.3+dfsg-9build4.1\n69  |FORTRAN77                   |f2c                               |20240504-1\n70  |Fortran90                   |gfortran                          |4:14.1.0-2ubuntu1\n71  |Gambas script               |gambas3-scripter, gambas3-gb-pcre |3.19.3-1ubuntu2\n72  |GAP                         |gap                               |4.13.1-1\n73  |GDB                         |gdb                               |15.1-1ubuntu2\n74  |GEL (Genius)                |genius                            |1.0.27-1build4\n75  |Gnuplot                     |gnuplot                           |6.0.0+dfsg1-1ubuntu3\n76  |Go                          |golang                            |2:1.23\\~1\n77  |GolfScript                  |*N/A*                             |-\n78  |G-Portugol                  |gpt                               |1.1-8\n79  |Grass                       |*N/A*                             |-\n80  |Groovy                      |groovy                            |2.4.21-10\n81  |Gzip                        |gzip                              |1.12-1.1ubuntu1\n82  |Haskell                     |ghc                               |9.4.7-5build1\n83  |Haxe                        |haxe                              |1:4.3.4-2\n84  |Icon                        |icont, iconx                      |9.5.24a-1\n85  |INTERCAL                    |intercal                          |30:0.30-6\n86  |Jasmin                      |jasmin-sable                      |2.5.0-2\n87  |Java                        |openjdk-11-jdk                    |11.0.25\\~5ea-1ubuntu1\n88  |JavaScript                  |nodejs                            |20.16.0+dfsg-1ubuntu1\n89  |Jq                          |jq                                |1.7.1-3build1\n90  |JSFuck                      |nodejs                            |20.16.0+dfsg-1ubuntu1\n91  |Kotlin                      |kotlin                            |1.3.31+ds1-1ubuntu1\n92  |ksh                         |ksh                               |20240113-1.0.8-1.2\n93  |Lazy K                      |*N/A*                             |-\n94  |Lisaac                      |lisaac                            |1:0.39\\~rc1-3.1\n95  |LiveScript                  |livescript                        |1.6.1+dfsg-3\n96  |LLVM asm                    |llvm                              |1:19.0-60\\~exp1\n97  |LOLCODE                     |*N/A*                             |-\n98  |Lua                         |lua5.3                            |5.3.6-2build2\n99  |M4                          |m4                                |1.4.19-4build1\n100 |Makefile                    |make                              |4.3-4.1build2\n101 |MiniZinc                    |minizinc                          |2.8.5+dfsg1-2\n102 |Modula-2                    |gm2                               |4:14.1.0-2ubuntu1\n103 |MSIL                        |mono-devel                        |6.12.0.199+dfsg-1\n104 |Mustache                    |ruby-mustache                     |1.1.1-2\n105 |NASM                        |nasm                              |2.16.03-1\n106 |Neko                        |neko                              |2.4.0-1\n107 |Nickle                      |nickle                            |2.97build2\n108 |Nim                         |nim                               |1.6.14-1ubuntu2\n109 |Objective-C                 |gobjc                             |4:14.1.0-2ubuntu1\n110 |OCaml                       |ocaml                             |5.2.0-3\n111 |Octave                      |octave                            |9.2.0-3\n112 |Ook!                        |*N/A*                             |-\n113 |PARI/GP                     |pari-gp                           |2.15.5-1\n114 |Parser 3                    |parser3-cgi                       |3.4.6-5\n115 |Pascal                      |fp-compiler                       |3.2.2+dfsg-34\n116 |Perl 5                      |perl                              |5.38.2-5\n117 |Perl 6                      |rakudo                            |2022.12-1\n118 |PHP                         |php-cli                           |2:8.3+93ubuntu2\n119 |Piet                        |*N/A*                             |-\n120 |Pike                        |pike8.0                           |8.0.1738-1.4\n121 |PostScript                  |ghostscript                       |10.03.1\\~dfsg1-0ubuntu2\n122 |Prolog                      |swi-prolog                        |9.0.4+dfsg-3.1ubuntu4\n123 |Promela (Spin)              |spin                              |6.5.2+dfsg-1\n124 |Python                      |python3                           |3.12.6-0ubuntu1\n125 |R                           |r-base                            |4.4.1-1\n126 |Ratfor                      |ratfor                            |1.05-2\n127 |rc                          |rc                                |1.7.4+97.gceb59bb-5build2\n128 |REXX                        |regina-rexx                       |3.9.5+dfsg1-0.1\n\nNote that some languages are not available in Ubuntu (marked as *N/A*).\nThis repository contains their implementations in `vendor/`.\nSee also `vendor/README` for detail.\n\n\n## Frequently asked questions\n\n### Q. Why?\n\nA. [Take your pick](https://github.com/mame/quine-relay/issues/11).\n\n### Q. How?\n\nA. Good news: I have published a book, [\"The World of Obfuscated, Esoteric, Artistic Programming\"](http://gihyo.jp/book/2015/978-4-7741-7643-7).\nIt explains how to write a quine, an ascii-art quine, and an uroboros quine like this quine-relay.\nYou can buy my book on [amazon.co.jp](http://www.amazon.co.jp/dp/4774176435).\n\n(It also contains my almost all of my (about forty) works, including\n[alphabet-only Ruby program](http://www.slideshare.net/mametter/ruby-esoteric-obfuscated-ruby-programming-5088683),\n[radiation-hardened quine](https://github.com/mame/radiation-hardened-quine),\netc., and explains many techniques for writing such programs.)\n\nBad news: It is written in Japanese.\nI hope you can translate it into English <strike>and help me earn royalties</strike>.\n\n### Q. Language XXX is missing!\n\nA. See [the language inclusion criteria][criteria] in detail.  (In short, please create a deb package and contribute it to Ubuntu.)\n\nSee also [:heart:][sponsors].\n\n[criteria]: https://github.com/mame/quine-relay/wiki/Language-inclusion-criteria\n[sponsors]: https://github.com/sponsors/mame\n\n\n### Q. Does it really work?\n\nA. [![CI](https://github.com/mame/quine-relay/workflows/CI/badge.svg)](https://github.com/mame/quine-relay/actions?query=workflow%2ACI)\n\n### Q. How long did it take you?\n\nA. [Are you trying to cross the world line?](https://github.com/mame/quine-relay/issues/60)\n\n### Q. The code does not fit in my screen!\n\nA. [Here you go][thumbnail].\n\n[thumbnail]: thumbnail.png\n\n### Q. How was the code generated?\n\nA.\n\n    $ sudo apt-get install rake ruby-cairo ruby-rsvg2 ruby-gdk-pixbuf2 \\\n      optipng advancecomp ruby-chunky-png\n    $ cd src\n    $ rake2.0 clobber\n    $ rake2.0\n\n## History\n\n## for Ubuntu 13.04\n\n[50 languages](https://github.com/mame/quine-relay/tree/ad3f8222c796969db8cfb1bae015a46c2387b3d6)\n\nAdded: Ruby, Scala, Scheme, bash, Smalltalk, Unlambda, Tcl, Whitespace, Verilog, Vala, Ada, ALGOL 68, Awk, Brainfuck, Boo, C, C++, C#, Cobol, Clojure, Fortran90, FORTRAN77, Forth, Common Lisp, CoffeeScript, Groovy, Go, INTERCAL, Icon, Haskell, Jasmin, Java, LLVM asm, Logo, Lua, Makefile, MSIL, Objective-C, JavaScript, OCaml, Octave, Parrot asm, Pascal, Perl, PHP, Pike, Prolog, Python, R, REXX\n\n## for Ubuntu 13.10\n\n[50 languages](https://github.com/mame/quine-relay/tree/ea4d39fb1ebc7ee23ec6f60ca7bfa0d465b5806a)\n\n## for Ubuntu 14.04\n\n[50 languages](https://github.com/mame/quine-relay/tree/d16bf072e3063dc476dc440c8f3e33d7426e98db)\n\n## for Ubuntu 14.10\n\n[64 languages](https://github.com/mame/quine-relay/tree/e449baba456d4885102482cbd365335be59241b2)\n\nAdded: Scilab, S-Lang, SPL, LOLCODE, Maxima, NASM, Neko, Nickle, Ook!, PARI/GP, Piet, PPT (Punched tape), PostScript, Ratfor\n\n## for Ubuntu 15.04\n\n[100 languages](https://github.com/mame/quine-relay/tree/7749715289ca162eb1c1eb1ff1ed1393edc41630)\n\nAdded: Subleq, Standard ML, Thue, Visual Basic, XSLT, Yorick, Zoem, A+, AFNIX, Ante, Asymptote, ATS, BLC8, Befunge, bc, Chef, CDuce, D, dc, eC, Emacs Lisp, Erlang, F#, Falcon, FALSE, Gambas script, GAP, GEL (Genius), Gnuplot, G-Portugol, Gri, Haxe, Julia, Lisaac, Lazy K, Kaya\n\n## for Ubuntu 15.10\n\n[100 languages](https://github.com/mame/quine-relay/tree/f45035f867c7c8f7b4e12fa63e7c8eef9aabecad)\n\nRemoved: Boo, Falcon, Kaya\n\nAdded: Elixir, Jq, Nim\n\n## for Ubuntu 16.04\n\n[100 languages](https://github.com/mame/quine-relay/tree/233ba8b4e1d7e4c59a46d64481048a8ea7f4400e)\n\n## for Ubuntu 17.04\n\n[100 languages](https://github.com/mame/quine-relay/tree/e65a798da23df0367d9eb5e4d46f00d87e6cb342)\n\nRemoved: SPL, Gri, Logo, Parrot asm\n\nAdded: Squirrel, Dafny, Grass, MiniZinc\n\n## for Ubuntu 17.10\n\n[100 languages](https://github.com/mame/quine-relay/tree/943b83801a1bd019ebf348adc78df2cdfde06513)\n\nRemoved: CDuce\n\nAdded: Rust\n\n## for Ubuntu 18.04\n\n[128 languages](https://github.com/mame/quine-relay/tree/6e173d76e972e1da7992b84768bf9f4c788949ed)\n\nRemoved: Gambas script, Perl\n\nAdded: Shakespeare, sed, tcsh, TypeScript, Velato, Vimscript, Yabasic, zsh, Aheui, AspectC++, AspectJ, BeanShell, CMake, Flex, Fish, GDB, GolfScript, Gzip, Gri, JSFuck, ksh, LiveScript, M4, Mustache, nesC, Parser 3, Perl 5, Perl 6, Promela (Spin), rc\n\n## for Ubuntu 19.04\n\n[128 languages](https://github.com/mame/quine-relay/tree/c8898351500682cea02219313e9203da7eca5505)\n\nRemoved: Scilab, G-Portugol, nesC\n\nAdded: Curry, Gambas script, GeneratorScriptingLanguage\n\n## for Ubuntu 19.10\n\n[128 languages](https://github.com/mame/quine-relay/tree/13041dbf3f80a90c9221ef94f8e8bc385800b6fd)\n\nRemoved: Gri\n\nAdded: Scilab\n\n## for Ubuntu 20.04\n\n[128 languages](https://github.com/mame/quine-relay/tree/62e2cc2d61d99719328094d185d899bc03a851fb)\n\n## for Ubuntu 20.10\n\n[128 languages](https://github.com/mame/quine-relay/tree/114f44fefd610812d2f5e3032603762752ed51b2)\n\nRemoved: AspectC++, eC\n\nAdded: SurgeScript, Dhall\n\n## for Ubuntu 21.04\n\n[128 languages](https://github.com/mame/quine-relay/tree/d8df33bad3693afd0bd3bf1c2b1cedd5753325dc)\n\nRemoved: Curry\n\nAdded: G-Portugol\n\n## for Ubuntu 21.10\n\n[128 languages](https://github.com/mame/quine-relay/tree/158b6251d36a48122ec0006feaf759d8b1973b0f)\n\n## for Ubuntu 22.04\n\n[128 languages](https://github.com/mame/quine-relay/tree/7b81d8704549d31814499c5300be2be9568467c8)\n\nRemoved: Julia, Nim, Pike\n\nAdded: WebAssembly (Text format), WebAssembly (Binary format), Kotlin\n\n## for Ubuntu 22.10\n\n[128 languages](https://github.com/mame/quine-relay/tree/362962dd2d55d7c36dd9fa3e0d4c0c52c0e6a18f)\n\n## for Ubuntu 23.04\n\n[128 languages](https://github.com/mame/quine-relay/tree/5dfdada5aa58f6a97ae85b84f86c7eb091225a8c)\n\nRemoved: Squirrel, GeneratorScriptingLanguage\n\nAdded: Crystal, Nim\n\n## for Ubuntu 23.10\n\n[128 languages](https://github.com/mame/quine-relay/tree/74c4cc7d79fccbb1c8315070b9efea03cb787755)\n\nRemoved: Smalltalk\n\nAdded: Modula-2\n\n## for Ubuntu 24.04\n\n[128 languages](https://github.com/mame/quine-relay/tree/20d7f437c053b8e0b301ba996d124a4b812e3571)\n\nRemoved: PPT (Punched tape)\n\nAdded: Pike\n\n## for Ubuntu 24.10\n\n128 languages\n\nRemoved: Dafny, Maxima\n\nAdded: Execline, Squirrel\n\n## License\n\nThe MIT License applies to all resources\n*except* the files in the `vendor/` directory.\n\nThe files in the `vendor/` directory are from third-parties\nand are distributed under different licenses.\nSee `vendor/README` in detail.\n\n---\n\nThe MIT License (MIT)\n\nCopyright (c) 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024 Yusuke Endoh (@mametter), @hirekoke\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "releases": []
    }
}