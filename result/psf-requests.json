{
    "https://api.github.com/repos/psf/requests": {
        "forks": 9346,
        "watchers": 52404,
        "stars": 52404,
        "languages": {
            "Python": 359117,
            "Makefile": 2508
        },
        "commits": [
            "2024-11-10T16:18:36Z",
            "2024-11-10T05:50:30Z",
            "2024-11-02T20:13:02Z",
            "2024-10-28T16:24:23Z",
            "2024-10-28T16:24:12Z",
            "2024-10-28T16:05:20Z",
            "2024-10-28T16:05:11Z",
            "2024-09-30T17:32:21Z",
            "2024-09-30T16:34:20Z",
            "2024-09-19T11:19:03Z",
            "2024-09-18T18:40:02Z",
            "2024-09-18T18:14:19Z",
            "2024-09-18T15:36:43Z",
            "2024-09-18T14:04:53Z",
            "2024-09-18T14:04:08Z",
            "2024-09-18T14:03:08Z",
            "2024-09-02T17:37:44Z",
            "2024-09-02T16:56:26Z",
            "2024-08-12T16:54:11Z",
            "2024-08-12T16:23:16Z",
            "2024-07-30T01:44:13Z",
            "2024-07-29T03:49:48Z",
            "2024-07-23T11:28:03Z",
            "2024-07-18T16:43:49Z",
            "2024-07-02T01:08:04Z",
            "2024-05-29T15:36:10Z",
            "2024-05-29T15:23:39Z",
            "2024-05-24T21:37:06Z",
            "2024-05-24T16:00:52Z",
            "2024-05-22T20:43:57Z"
        ],
        "creation_date": "2011-02-13T18:38:17Z",
        "contributors": 30,
        "topics": [
            "client",
            "cookies",
            "forhumans",
            "http",
            "humans",
            "python",
            "python-requests",
            "requests"
        ],
        "subscribers": 1324,
        "readme": "# Requests\n\n**Requests** is a simple, yet elegant, HTTP library.\n\n```python\n>>> import requests\n>>> r = requests.get('https://httpbin.org/basic-auth/user/pass', auth=('user', 'pass'))\n>>> r.status_code\n200\n>>> r.headers['content-type']\n'application/json; charset=utf8'\n>>> r.encoding\n'utf-8'\n>>> r.text\n'{\"authenticated\": true, ...'\n>>> r.json()\n{'authenticated': True, ...}\n```\n\nRequests allows you to send HTTP/1.1 requests extremely easily. There\u2019s no need to manually add query strings to your URLs, or to form-encode your `PUT` & `POST` data \u2014 but nowadays, just use the `json` method!\n\nRequests is one of the most downloaded Python packages today, pulling in around `30M downloads / week`\u2014 according to GitHub, Requests is currently [depended upon](https://github.com/psf/requests/network/dependents?package_id=UGFja2FnZS01NzA4OTExNg%3D%3D) by `1,000,000+` repositories. You may certainly put your trust in this code.\n\n[![Downloads](https://static.pepy.tech/badge/requests/month)](https://pepy.tech/project/requests)\n[![Supported Versions](https://img.shields.io/pypi/pyversions/requests.svg)](https://pypi.org/project/requests)\n[![Contributors](https://img.shields.io/github/contributors/psf/requests.svg)](https://github.com/psf/requests/graphs/contributors)\n\n## Installing Requests and Supported Versions\n\nRequests is available on PyPI:\n\n```console\n$ python -m pip install requests\n```\n\nRequests officially supports Python 3.8+.\n\n## Supported Features & Best\u2013Practices\n\nRequests is ready for the demands of building robust and reliable HTTP\u2013speaking applications, for the needs of today.\n\n- Keep-Alive & Connection Pooling\n- International Domains and URLs\n- Sessions with Cookie Persistence\n- Browser-style TLS/SSL Verification\n- Basic & Digest Authentication\n- Familiar `dict`\u2013like Cookies\n- Automatic Content Decompression and Decoding\n- Multi-part File Uploads\n- SOCKS Proxy Support\n- Connection Timeouts\n- Streaming Downloads\n- Automatic honoring of `.netrc`\n- Chunked HTTP Requests\n\n## API Reference and User Guide available on [Read the Docs](https://requests.readthedocs.io)\n\n[![Read the Docs](https://raw.githubusercontent.com/psf/requests/main/ext/ss.png)](https://requests.readthedocs.io)\n\n## Cloning the repository\n\nWhen cloning the Requests repository, you may need to add the `-c\nfetch.fsck.badTimezone=ignore` flag to avoid an error about a bad commit (see\n[this issue](https://github.com/psf/requests/issues/2690) for more background):\n\n```shell\ngit clone -c fetch.fsck.badTimezone=ignore https://github.com/psf/requests.git\n```\n\nYou can also apply this setting to your global Git config:\n\n```shell\ngit config --global fetch.fsck.badTimezone ignore\n```\n\n---\n\n[![Kenneth Reitz](https://raw.githubusercontent.com/psf/requests/main/ext/kr.png)](https://kennethreitz.org) [![Python Software Foundation](https://raw.githubusercontent.com/psf/requests/main/ext/psf.png)](https://www.python.org/psf)\n",
        "releases": [
            {
                "name": "v2.32.3",
                "date": "2024-05-29T15:39:40Z"
            },
            {
                "name": "v2.32.2",
                "date": "2024-05-21T18:53:48Z"
            },
            {
                "name": "v2.32.1",
                "date": "2024-05-21T18:53:03Z"
            },
            {
                "name": "v2.32.0",
                "date": "2024-05-20T16:19:14Z"
            },
            {
                "name": "v2.31.0",
                "date": "2023-05-22T15:26:23Z"
            },
            {
                "name": "v2.30.0",
                "date": "2023-05-04T14:39:22Z"
            },
            {
                "name": "v2.29.0",
                "date": "2023-04-26T15:26:24Z"
            },
            {
                "name": "v2.28.2",
                "date": "2023-01-12T16:34:32Z"
            },
            {
                "name": "v2.28.1",
                "date": "2022-06-29T15:15:43Z"
            },
            {
                "name": "v2.28.0",
                "date": "2022-06-09T14:47:15Z"
            },
            {
                "name": "v2.27.1",
                "date": "2022-01-06T17:49:01Z"
            },
            {
                "name": "v2.27.0",
                "date": "2022-01-06T17:46:50Z"
            }
        ]
    }
}