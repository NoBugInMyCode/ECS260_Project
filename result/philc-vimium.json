{
    "https://api.github.com/repos/philc/vimium": {
        "forks": 2490,
        "watchers": 23903,
        "stars": 23903,
        "languages": {
            "JavaScript": 566259,
            "HTML": 44880,
            "CSS": 23144,
            "TypeScript": 11762
        },
        "commits": [
            "2025-01-22T03:56:34Z",
            "2025-01-22T03:40:14Z",
            "2025-01-21T06:10:52Z",
            "2025-01-22T03:41:55Z",
            "2025-01-21T06:10:59Z",
            "2025-01-21T06:06:39Z",
            "2025-01-21T05:03:55Z",
            "2025-01-21T05:00:50Z",
            "2025-01-21T02:25:57Z",
            "2025-01-21T02:27:07Z",
            "2025-01-21T02:26:38Z",
            "2025-01-21T04:54:43Z",
            "2025-01-21T04:54:23Z",
            "2025-01-14T05:07:08Z",
            "2024-10-09T19:50:06Z",
            "2024-10-09T19:41:44Z",
            "2024-10-08T17:19:34Z",
            "2024-10-08T16:47:44Z",
            "2024-10-08T07:43:17Z",
            "2024-10-08T07:30:20Z",
            "2024-06-09T17:27:32Z",
            "2025-01-12T05:46:40Z",
            "2025-01-12T05:37:50Z",
            "2025-01-12T02:34:49Z",
            "2025-01-12T02:30:06Z",
            "2025-01-12T02:28:12Z",
            "2024-07-16T11:31:19Z",
            "2024-06-20T16:09:24Z",
            "2025-01-07T05:51:56Z",
            "2025-01-07T05:47:10Z"
        ],
        "creation_date": "2009-09-20T07:08:19Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 289,
        "readme": "# Vimium - The Hacker's Browser\n\nVimium is a browser extension that provides keyboard-based navigation and control of the web in the\nspirit of the Vim editor.\n\n**Installation instructions:**\n\n- Chrome:\n  [Chrome web store](https://chrome.google.com/extensions/detail/dbepggeogbaibhgnhhndojpepiihcmeb)\n- Edge:\n  [Edge Add-ons](https://microsoftedge.microsoft.com/addons/detail/vimium/djmieaghokpkpjfbpelnlkfgfjapaopa)\n- Firefox: [Firefox Add-ons](https://addons.mozilla.org/en-GB/firefox/addon/vimium-ff/)\n\nTo install from source, see [here](CONTRIBUTING.md#installing-from-source).\n\nVimium's Options page can be reached via a link on the help dialog (type `?`) or via the button next\nto Vimium on the extension pages of Chrome and Edge (`chrome://extensions`), or Firefox\n(`about:addons`).\n\n## Keyboard Bindings\n\nModifier keys are specified as `<c-x>`, `<m-x>`, and `<a-x>` for ctrl+x, meta+x, and alt+x\nrespectively. For shift+x and ctrl-shift-x, just type `X` and `<c-X>`. See the next section for how\nto customize these bindings.\n\nOnce you have Vimium installed, you can see this list of key bindings at any time by typing `?`.\n\nNavigating the current page:\n\n    ?       show the help dialog for a list of all available keys\n    h       scroll left\n    j       scroll down\n    k       scroll up\n    l       scroll right\n    gg      scroll to top of the page\n    G       scroll to bottom of the page\n    d       scroll down half a page\n    u       scroll up half a page\n    f       open a link in the current tab\n    F       open a link in a new tab\n    r       reload\n    gs      view source\n    i       enter insert mode -- all commands will be ignored until you hit Esc to exit\n    yy      copy the current url to the clipboard\n    yf      copy a link url to the clipboard\n    gf      cycle forward to the next frame\n    gF      focus the main/top frame\n\nNavigating to new pages:\n\n    o       Open URL, bookmark, or history entry\n    O       Open URL, bookmark, history entry in a new tab\n    b       Open bookmark\n    B       Open bookmark in a new tab\n\nUsing find:\n\n    /       enter find mode\n              -- type your search query and hit enter to search, or Esc to cancel\n    n       cycle forward to the next find match\n    N       cycle backward to the previous find match\n\nFor advanced usage, see [regular expressions](https://github.com/philc/vimium/wiki/Find-Mode) on the\nwiki.\n\nNavigating your history:\n\n    H       go back in history\n    L       go forward in history\n\nManipulating tabs:\n\n    J, gT   go one tab left\n    K, gt   go one tab right\n    g0      go to the first tab. Use ng0 to go to n-th tab\n    g$      go to the last tab\n    ^       visit the previously-visited tab\n    t       create tab\n    yt      duplicate current tab\n    x       close current tab\n    X       restore closed tab (i.e. unwind the 'x' command)\n    T       search through your open tabs\n    W       move current tab to new window\n    <a-p>   pin/unpin current tab\n\nUsing marks:\n\n    ma, mA  set local mark \"a\" (global mark \"A\")\n    `a, `A  jump to local mark \"a\" (global mark \"A\")\n    ``      jump back to the position before the previous jump\n              -- that is, before the previous gg, G, n, N, / or `a\n\nAdditional advanced browsing commands:\n\n    ]], [[  Follow the link labeled 'next' or '>' ('previous' or '<')\n              - helpful for browsing paginated sites\n    <a-f>   open multiple links in a new tab\n    gi      focus the first (or n-th) text input box on the page. Use <tab> to cycle through options.\n    gu      go up one level in the URL hierarchy\n    gU      go up to root of the URL hierarchy\n    ge      edit the current URL\n    gE      edit the current URL and open in a new tab\n    zH      scroll all the way left\n    zL      scroll all the way right\n    v       enter visual mode; use p/P to paste-and-go, use y to yank\n    V       enter visual line mode\n    R       Hard reload the page (skip the cache)\n\nVimium supports command repetition so, for example, hitting `5t` will open 5 tabs in rapid\nsuccession. `<Esc>` (or `<c-[>`) will clear any partial commands in the queue and will also exit\ninsert and find modes.\n\nThere are some advanced commands which aren't documented here; refer to the help dialog (type `?`)\nfor a full list.\n\n## Custom Key Mappings\n\nYou may remap or unmap any of the default key bindings in the \"Custom key mappings\" on the options\npage.\n\nEnter one of the following key mapping commands per line:\n\n- `map key command`: Maps a key to a Vimium command. Overrides Chrome's default behavior (if any).\n- `unmap key`: Unmaps a key and restores Chrome's default behavior (if any).\n- `unmapAll`: Unmaps all bindings. This is useful if you want to completely wipe Vimium's defaults\n  and start from scratch with your own setup.\n\nExamples:\n\n- `map <c-d> scrollPageDown` maps ctrl+d to scrolling the page down. Chrome's default behavior of\n  bringing up a bookmark dialog is suppressed.\n- `map r reload` maps the r key to reloading the page.\n- `unmap <c-d>` removes any mapping for ctrl+d and restores Chrome's default behavior.\n- `unmap r` removes any mapping for the r key.\n\nAvailable Vimium commands can be found via the \"Show available commands\" link near the key mapping\nbox on the options page. The command name appears to the right of the description in parenthesis.\n\nYou can add comments to key mappings by starting a line with `\"` or `#`.\n\nThe following special keys are available for mapping:\n\n- `<c-*>`, `<a-*>`, `<s-*>`, `<m-*>` for ctrl, alt, shift, and meta (command on Mac) respectively\n  with any key. Replace `*` with the key of choice.\n- `<left>`, `<right>`, `<up>`, `<down>` for the arrow keys.\n- `<f1>` through `<f12>` for the function keys.\n- `<space>` for the space key.\n- `<tab>`, `<enter>`, `<delete>`, `<backspace>`, `<insert>`, `<home>` and `<end>` for the\n  corresponding non-printable keys.\n\nShifts are automatically detected so, for example, `<c-&>` corresponds to ctrl+shift+7 on an English\nkeyboard.\n\n## More documentation\n\nMany of the more advanced or involved features are documented on\n[Vimium's GitHub wiki](https://github.com/philc/vimium/wiki). Also see the\n[FAQ](https://github.com/philc/vimium/wiki/FAQ).\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for details.\n\n## Release Notes\n\nSee [CHANGELOG](CHANGELOG.md) for the major changes in each release.\n\n## License\n\nCopyright (c) Phil Crosby, Ilya Sukhar. See [MIT-LICENSE.txt](MIT-LICENSE.txt) for details.\n",
        "releases": []
    }
}