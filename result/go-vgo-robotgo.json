{
    "https://api.github.com/repos/go-vgo/robotgo": {
        "forks": 900,
        "watchers": 9827,
        "stars": 9827,
        "languages": {
            "Go": 79002,
            "C": 71512,
            "Objective-C": 19130,
            "HTML": 840,
            "Dockerfile": 552
        },
        "commits": [
            "2024-12-10T19:32:09Z",
            "2024-12-10T03:51:43Z",
            "2024-10-07T21:17:46Z",
            "2024-10-07T21:15:17Z",
            "2024-10-07T21:10:09Z",
            "2024-10-07T21:09:01Z",
            "2024-10-07T21:00:37Z",
            "2024-10-07T20:56:46Z",
            "2024-10-07T20:45:03Z",
            "2024-10-07T20:29:39Z",
            "2024-10-07T01:12:41Z",
            "2024-10-07T01:11:23Z",
            "2024-10-07T01:04:17Z",
            "2024-10-07T00:54:40Z",
            "2024-10-07T00:51:51Z",
            "2024-10-07T00:40:34Z",
            "2024-09-17T20:39:26Z",
            "2024-09-17T20:38:38Z",
            "2024-09-17T20:32:46Z",
            "2024-09-17T20:14:54Z",
            "2024-09-17T20:11:02Z",
            "2024-09-17T19:59:15Z",
            "2024-09-15T19:25:18Z",
            "2024-09-05T20:26:02Z",
            "2024-09-05T20:23:14Z",
            "2024-09-05T20:11:35Z",
            "2024-09-05T20:09:51Z",
            "2024-08-16T18:36:44Z",
            "2024-08-16T18:35:18Z",
            "2024-08-05T20:13:39Z"
        ],
        "creation_date": "2016-09-26T16:26:56Z",
        "contributors": 25,
        "topics": [
            "automation",
            "c",
            "go",
            "golang",
            "hook",
            "image",
            "mouse",
            "opencv",
            "robot",
            "robotgo",
            "rpa",
            "window"
        ],
        "subscribers": 246,
        "readme": "# Robotgo\n\n<!--<img align=\"right\" src=\"https://raw.githubusercontent.com/go-vgo/robotgo/master/logo.jpg\">-->\n<!--[![Build Status](https://travis-ci.org/go-vgo/robotgo.svg)](https://travis-ci.org/go-vgo/robotgo)\n[![codecov](https://codecov.io/gh/go-vgo/robotgo/branch/master/graph/badge.svg)](https://codecov.io/gh/go-vgo/robotgo)-->\n<!--<a href=\"https://circleci.com/gh/go-vgo/robotgo/tree/dev\"><img src=\"https://img.shields.io/circleci/project/go-vgo/robotgo/dev.svg\" alt=\"Build Status\"></a>-->\n\n[![Build Status](https://github.com/go-vgo/robotgo/workflows/Go/badge.svg)](https://github.com/go-vgo/robotgo/commits/master)\n[![CircleCI Status](https://circleci.com/gh/go-vgo/robotgo.svg?style=shield)](https://circleci.com/gh/go-vgo/robotgo)\n[![Build Status](https://travis-ci.org/go-vgo/robotgo.svg)](https://travis-ci.org/go-vgo/robotgo)\n![Appveyor](https://ci.appveyor.com/api/projects/status/github/go-vgo/robotgo?branch=master&svg=true)\n[![Go Report Card](https://goreportcard.com/badge/github.com/go-vgo/robotgo)](https://goreportcard.com/report/github.com/go-vgo/robotgo)\n[![GoDoc](https://pkg.go.dev/badge/github.com/go-vgo/robotgo?status.svg)](https://pkg.go.dev/github.com/go-vgo/robotgo?tab=doc)\n[![GitHub release](https://img.shields.io/github/release/go-vgo/robotgo.svg)](https://github.com/go-vgo/robotgo/releases/latest)\n[![Join the chat at https://gitter.im/go-vgo/robotgo](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/go-vgo/robotgo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n<!-- [![Release](https://github-release-version.herokuapp.com/github/go-vgo/robotgo/release.svg?style=flat)](https://github.com/go-vgo/robotgo/releases/latest) -->\n<!-- <a href=\"https://github.com/go-vgo/robotgo/releases\"><img src=\"https://img.shields.io/badge/%20version%20-%206.0.0%20-blue.svg?style=flat-square\" alt=\"Releases\"></a> -->\n\n> Golang Desktop Automation. Control the mouse, keyboard, read the screen, process, Window Handle, image and bitmap and global event listener.\n\nRobotGo supports Mac, Windows, and Linux(X11); and robotgo supports arm64 and x86-amd64.\n\n## Contents\n\n- [Docs](#docs)\n- [Binding](#binding)\n- [Requirements](#requirements)\n- [Installation](#installation)\n- [Update](#update)\n- [Examples](#examples)\n- [Type Conversion and keys](https://github.com/go-vgo/robotgo/blob/master/docs/keys.md)\n- [Cross-Compiling](https://github.com/go-vgo/robotgo/blob/master/docs/install.md#crosscompiling)\n- [Authors](#authors)\n- [Plans](#plans)\n- [Donate](#donate)\n- [Contributors](#contributors)\n- [License](#license)\n\n## Docs\n\n- [GoDoc](https://godoc.org/github.com/go-vgo/robotgo) <br>\n- [API Docs](https://github.com/go-vgo/robotgo/blob/master/docs/doc.md) (Deprecated, no updated)\n\n## Binding:\n\n[ADB](https://github.com/vcaesar/adb), packaging android adb API.\n\n[Robotn](https://github.com/vcaesar/robotn), binding JavaScript and other, support more language.\n\n## Requirements:\n\nNow, Please make sure `Golang, GCC` is installed correctly before installing RobotGo.\n\n### ALL:\n\n```\nGolang\n\nGCC\n```\n\n#### For MacOS:\n\nXcode Command Line Tools (And Privacy setting: [#277](https://github.com/go-vgo/robotgo/issues/277))\n\n```\nxcode-select --install\n```\n\n#### For Windows:\n\n[MinGW-w64](https://sourceforge.net/projects/mingw-w64/files) (Use recommended) or others Mingw [llvm-mingw](https://github.com/mstorsjo/llvm-mingw);\n\nDownload the Mingw, then set system environment variables `C:\\mingw64\\bin` to the Path.\n[Set environment variables to run GCC from command line](https://www.youtube.com/results?search_query=Set+environment+variables+to+run+GCC+from+command+line).\n\n`Or the other GCC` (But you should compile the \"libpng\" with yourself when use the [bitmap](https://github.com/vcaesar/bitmap).)\n\n#### For everything else:\n\n```\nGCC\n\nX11 with the XTest extension (the Xtst library)\n\n\"Clipboard\": xsel xclip\n\n\n\"Bitmap\": libpng (Just used by the \"bitmap\".)\n\n\"Event-Gohook\": xcb, xkb, libxkbcommon (Just used by the \"hook\".)\n\n```\n\n##### Ubuntu:\n\n```yml\n# gcc\nsudo apt install gcc libc6-dev\n\n# x11\nsudo apt install libx11-dev xorg-dev libxtst-dev\n\n# Clipboard\nsudo apt install xsel xclip\n\n#\n# Bitmap\nsudo apt install libpng++-dev\n\n# GoHook\nsudo apt install xcb libxcb-xkb-dev x11-xkb-utils libx11-xcb-dev libxkbcommon-x11-dev libxkbcommon-dev\n\n```\n\n##### Fedora:\n\n```yml\n# x11\nsudo dnf install libXtst-devel\n\n# Clipboard\nsudo dnf install xsel xclip\n\n#\n# Bitmap\nsudo dnf install libpng-devel\n\n# GoHook\nsudo dnf install libxkbcommon-devel libxkbcommon-x11-devel xorg-x11-xkb-utils-devel\n\n```\n\n## Installation:\n\nWith Go module support (Go 1.11+), just import:\n\n```go\nimport \"github.com/go-vgo/robotgo\"\n```\n\nOtherwise, to install the robotgo package, run the command:\n\n```\ngo get github.com/go-vgo/robotgo\n```\n\npng.h: No such file or directory? Please see [issues/47](https://github.com/go-vgo/robotgo/issues/47).\n\n## Update:\n\n```\ngo get -u github.com/go-vgo/robotgo\n```\n\nNote go1.10.x C file compilation cache problem, [golang #24355](https://github.com/golang/go/issues/24355).\n`go mod vendor` problem, [golang #26366](https://github.com/golang/go/issues/26366).\n\n## [Examples:](https://github.com/go-vgo/robotgo/blob/master/examples)\n\n#### [Mouse](https://github.com/go-vgo/robotgo/blob/master/examples/mouse/main.go)\n\n```Go\npackage main\n\nimport (\n  \"github.com/go-vgo/robotgo\"\n)\n\nfunc main() {\n  robotgo.MouseSleep = 100\n\n  robotgo.ScrollDir(10, \"up\")\n  robotgo.ScrollDir(20, \"right\")\n\n  robotgo.Scroll(0, -10)\n  robotgo.Scroll(100, 0)\n\n  robotgo.MilliSleep(100)\n  robotgo.ScrollSmooth(-10, 6)\n  // robotgo.ScrollRelative(10, -100)\n\n  robotgo.Move(10, 20)\n  robotgo.MoveRelative(0, -10)\n  robotgo.DragSmooth(10, 10)\n\n  robotgo.Click(\"wheelRight\")\n  robotgo.Click(\"left\", true)\n  robotgo.MoveSmooth(100, 200, 1.0, 10.0)\n\n  robotgo.Toggle(\"left\")\n  robotgo.Toggle(\"left\", \"up\")\n}\n```\n\n#### [Keyboard](https://github.com/go-vgo/robotgo/blob/master/examples/key/main.go)\n\n```Go\npackage main\n\nimport (\n  \"fmt\"\n\n  \"github.com/go-vgo/robotgo\"\n)\n\nfunc main() {\n  robotgo.TypeStr(\"Hello World\")\n  robotgo.TypeStr(\"\u3060\u3093\u3057\u3083\u308a\", 0, 1)\n  // robotgo.TypeStr(\"\u30c6\u30b9\u30c8\u3059\u308b\")\n\n  robotgo.TypeStr(\"Hi, Seattle space needle, Golden gate bridge, One world trade center.\")\n  robotgo.TypeStr(\"Hi galaxy, hi stars, hi MT.Rainier, hi sea. \u3053\u3093\u306b\u3061\u306f\u4e16\u754c.\")\n  robotgo.Sleep(1)\n\n  // ustr := uint32(robotgo.CharCodeAt(\"Test\", 0))\n  // robotgo.UnicodeType(ustr)\n\n  robotgo.KeySleep = 100\n  robotgo.KeyTap(\"enter\")\n  // robotgo.TypeStr(\"en\")\n  robotgo.KeyTap(\"i\", \"alt\", \"cmd\")\n\n  arr := []string{\"alt\", \"cmd\"}\n  robotgo.KeyTap(\"i\", arr)\n\n  robotgo.MilliSleep(100)\n  robotgo.KeyToggle(\"a\")\n  robotgo.KeyToggle(\"a\", \"up\")\n\n  robotgo.WriteAll(\"Test\")\n  text, err := robotgo.ReadAll()\n  if err == nil {\n    fmt.Println(text)\n  }\n}\n```\n\n#### [Screen](https://github.com/go-vgo/robotgo/blob/master/examples/screen/main.go)\n\n```Go\npackage main\n\nimport (\n  \"fmt\"\n  \"strconv\"\n\n  \"github.com/go-vgo/robotgo\"\n  \"github.com/vcaesar/imgo\"\n)\n\nfunc main() {\n  x, y := robotgo.Location()\n  fmt.Println(\"pos: \", x, y)\n\n  color := robotgo.GetPixelColor(100, 200)\n  fmt.Println(\"color---- \", color)\n\n  sx, sy := robotgo.GetScreenSize()\n  fmt.Println(\"get screen size: \", sx, sy)\n\n  bit := robotgo.CaptureScreen(10, 10, 30, 30)\n  defer robotgo.FreeBitmap(bit)\n\n  img := robotgo.ToImage(bit)\n  imgo.Save(\"test.png\", img)\n\n  num := robotgo.DisplaysNum()\n  for i := 0; i < num; i++ {\n    robotgo.DisplayID = i\n    img1, _ := robotgo.CaptureImg()\n    path1 := \"save_\" + strconv.Itoa(i)\n    robotgo.Save(img1, path1+\".png\")\n    robotgo.SaveJpeg(img1, path1+\".jpeg\", 50)\n\n    img2, _ := robotgo.CaptureImg(10, 10, 20, 20)\n    robotgo.Save(img2, \"test_\"+strconv.Itoa(i)+\".png\")\n\n    x, y, w, h := robotgo.GetDisplayBounds(i)\n    img3, err := robotgo.CaptureImg(x, y, w, h)\n    fmt.Println(\"Capture error: \", err)\n    robotgo.Save(img3, path1+\"_1.png\")\n  }\n}\n```\n\n#### [Bitmap](https://github.com/vcaesar/bitmap/blob/main/examples/main.go)\n\n```Go\npackage main\n\nimport (\n  \"fmt\"\n\n  \"github.com/go-vgo/robotgo\"\n  \"github.com/vcaesar/bitmap\"\n)\n\nfunc main() {\n  bit := robotgo.CaptureScreen(10, 20, 30, 40)\n  // use `defer robotgo.FreeBitmap(bit)` to free the bitmap\n  defer robotgo.FreeBitmap(bit)\n\n  fmt.Println(\"bitmap...\", bit)\n  img := robotgo.ToImage(bit)\n  // robotgo.SavePng(img, \"test_1.png\")\n  robotgo.Save(img, \"test_1.png\")\n\n  bit2 := robotgo.ToCBitmap(robotgo.ImgToBitmap(img))\n  fx, fy := bitmap.Find(bit2)\n  fmt.Println(\"FindBitmap------ \", fx, fy)\n  robotgo.Move(fx, fy)\n\n  arr := bitmap.FindAll(bit2)\n  fmt.Println(\"Find all bitmap: \", arr)\n\n  fx, fy = bitmap.Find(bit)\n  fmt.Println(\"FindBitmap------ \", fx, fy)\n\n  bitmap.Save(bit, \"test.png\")\n}\n```\n\n#### [OpenCV](https://github.com/vcaesar/gcv)\n\n```Go\npackage main\n\nimport (\n  \"fmt\"\n  \"math/rand\"\n\n  \"github.com/go-vgo/robotgo\"\n  \"github.com/vcaesar/gcv\"\n  \"github.com/vcaesar/bitmap\"\n)\n\nfunc main() {\n  opencv()\n}\n\nfunc opencv() {\n  name := \"test.png\"\n  name1 := \"test_001.png\"\n  robotgo.SaveCapture(name1, 10, 10, 30, 30)\n  robotgo.SaveCapture(name)\n\n  fmt.Print(\"gcv find image: \")\n  fmt.Println(gcv.FindImgFile(name1, name))\n  fmt.Println(gcv.FindAllImgFile(name1, name))\n\n  bit := bitmap.Open(name1)\n  defer robotgo.FreeBitmap(bit)\n  fmt.Print(\"find bitmap: \")\n  fmt.Println(bitmap.Find(bit))\n\n  // bit0 := robotgo.CaptureScreen()\n  // img := robotgo.ToImage(bit0)\n  // bit1 := robotgo.CaptureScreen(10, 10, 30, 30)\n  // img1 := robotgo.ToImage(bit1)\n  // defer robotgo.FreeBitmapArr(bit0, bit1)\n  img, _ := robotgo.CaptureImg()\n  img1, _ := robotgo.CaptureImg(10, 10, 30, 30)\n\n  fmt.Print(\"gcv find image: \")\n  fmt.Println(gcv.FindImg(img1, img))\n  fmt.Println()\n\n  res := gcv.FindAllImg(img1, img)\n  fmt.Println(res[0].TopLeft.Y, res[0].Rects.TopLeft.X, res)\n  x, y := res[0].TopLeft.X, res[0].TopLeft.Y\n  robotgo.Move(x, y-rand.Intn(5))\n  robotgo.MilliSleep(100)\n  robotgo.Click()\n\n  res = gcv.FindAll(img1, img) // use find template and sift\n  fmt.Println(\"find all: \", res)\n  res1 := gcv.Find(img1, img)\n  fmt.Println(\"find: \", res1)\n\n  img2, _, _ := robotgo.DecodeImg(\"test_001.png\")\n  x, y = gcv.FindX(img2, img)\n  fmt.Println(x, y)\n}\n```\n\n#### [Event](https://github.com/robotn/gohook/blob/master/examples/main.go)\n\n```Go\npackage main\n\nimport (\n  \"fmt\"\n\n  // \"github.com/go-vgo/robotgo\"\n  hook \"github.com/robotn/gohook\"\n)\n\nfunc main() {\n  add()\n  low()\n  event()\n}\n\nfunc add() {\n  fmt.Println(\"--- Please press ctrl + shift + q to stop hook ---\")\n  hook.Register(hook.KeyDown, []string{\"q\", \"ctrl\", \"shift\"}, func(e hook.Event) {\n    fmt.Println(\"ctrl-shift-q\")\n    hook.End()\n  })\n\n  fmt.Println(\"--- Please press w---\")\n  hook.Register(hook.KeyDown, []string{\"w\"}, func(e hook.Event) {\n    fmt.Println(\"w\")\n  })\n\n  s := hook.Start()\n  <-hook.Process(s)\n}\n\nfunc low() {\n\tevChan := hook.Start()\n\tdefer hook.End()\n\n\tfor ev := range evChan {\n\t\tfmt.Println(\"hook: \", ev)\n\t}\n}\n\nfunc event() {\n  ok := hook.AddEvents(\"q\", \"ctrl\", \"shift\")\n  if ok {\n    fmt.Println(\"add events...\")\n  }\n\n  keve := hook.AddEvent(\"k\")\n  if keve {\n    fmt.Println(\"you press... \", \"k\")\n  }\n\n  mleft := hook.AddEvent(\"mleft\")\n  if mleft {\n    fmt.Println(\"you press... \", \"mouse left button\")\n  }\n}\n```\n\n#### [Window](https://github.com/go-vgo/robotgo/blob/master/examples/window/main.go)\n\n```Go\npackage main\n\nimport (\n  \"fmt\"\n\n  \"github.com/go-vgo/robotgo\"\n)\n\nfunc main() {\n  fpid, err := robotgo.FindIds(\"Google\")\n  if err == nil {\n    fmt.Println(\"pids... \", fpid)\n\n    if len(fpid) > 0 {\n      robotgo.TypeStr(\"Hi galaxy!\", fpid[0])\n      robotgo.KeyTap(\"a\", fpid[0], \"cmd\")\n\n      robotgo.KeyToggle(\"a\", fpid[0])\n      robotgo.KeyToggle(\"a\", fpid[0], \"up\")\n\n      robotgo.ActivePid(fpid[0])\n\n      robotgo.Kill(fpid[0])\n    }\n  }\n\n  robotgo.ActiveName(\"chrome\")\n\n  isExist, err := robotgo.PidExists(100)\n  if err == nil && isExist {\n    fmt.Println(\"pid exists is\", isExist)\n\n    robotgo.Kill(100)\n  }\n\n  abool := robotgo.Alert(\"test\", \"robotgo\")\n  if abool {\n \t  fmt.Println(\"ok@@@ \", \"ok\")\n  }\n\n  title := robotgo.GetTitle()\n  fmt.Println(\"title@@@ \", title)\n}\n```\n\n## Authors\n\n- [The author is vz](https://github.com/vcaesar)\n- [Maintainers](https://github.com/orgs/go-vgo/people)\n- [Contributors](https://github.com/go-vgo/robotgo/graphs/contributors)\n\n## Plans\n\n- Refactor some C code to Go (such as x11, windows)\n- Better multiscreen support\n- Wayland support\n- Update Window Handle\n- Try to support Android and IOS\n\n## Contributors\n\n- See [contributors page](https://github.com/go-vgo/robotgo/graphs/contributors) for full list of contributors.\n- See [Contribution Guidelines](https://github.com/go-vgo/robotgo/blob/master/CONTRIBUTING.md).\n\n## License\n\nRobotgo is primarily distributed under the terms of \"both the MIT license and the Apache License (Version 2.0)\", with portions covered by various BSD-like licenses.\n\nSee [LICENSE-APACHE](http://www.apache.org/licenses/LICENSE-2.0), [LICENSE-MIT](https://github.com/go-vgo/robotgo/blob/master/LICENSE).\n",
        "releases": [
            {
                "name": "v0.110.5 (v1.0.0-rc4)",
                "date": "2024-10-07T21:18:13Z"
            },
            {
                "name": "v0.110.4 (v1.0.0-rc4)",
                "date": "2024-10-07T21:05:16Z"
            },
            {
                "name": "v0.110.3 (v1.0.0-rc4)",
                "date": "2024-09-17T20:59:22Z"
            },
            {
                "name": "v0.110.2 (v1.0.0-rc3)",
                "date": "2024-08-05T20:14:26Z"
            },
            {
                "name": "v0.110.1 (v1.0.0-rc3)",
                "date": "2024-04-15T17:21:53Z"
            },
            {
                "name": "v0.110.0 (v1.0.0-rc3)",
                "date": "2023-11-13T15:22:59Z"
            },
            {
                "name": "v1.0.0-rc2.1",
                "date": "2023-09-03T19:17:22Z"
            },
            {
                "name": "v1.0.0-rc2",
                "date": "2023-09-01T20:29:24Z"
            },
            {
                "name": "v1.0.0-rc1",
                "date": "2023-01-24T22:57:43Z"
            },
            {
                "name": "v1.0.0-beta6.2",
                "date": "2023-01-15T17:18:35Z"
            },
            {
                "name": "v1.0.0-beta6.1",
                "date": "2023-01-12T00:11:38Z"
            },
            {
                "name": "v1.0.0-beta6",
                "date": "2022-11-28T02:45:10Z"
            },
            {
                "name": "v1.0.0-beta5.3",
                "date": "2022-06-24T04:16:22Z"
            },
            {
                "name": "v1.0.0-beta5.2",
                "date": "2022-04-14T16:07:07Z"
            },
            {
                "name": "v1.0.0-beta5.1",
                "date": "2022-03-21T17:12:24Z"
            },
            {
                "name": "v1.0.0-beta5",
                "date": "2022-02-19T19:53:33Z"
            },
            {
                "name": "v1.0.0-beta4.1",
                "date": "2022-02-09T18:23:39Z"
            },
            {
                "name": "v1.0.0-beta4",
                "date": "2022-02-04T08:37:43Z"
            },
            {
                "name": "v1.0.0-beta3",
                "date": "2022-01-26T18:50:52Z"
            },
            {
                "name": "v1.0.0-beta2",
                "date": "2022-01-22T17:03:26Z"
            },
            {
                "name": "v1.0.0-beta1",
                "date": "2022-01-04T02:10:45Z"
            },
            {
                "name": "v0.100.10",
                "date": "2021-12-14T19:17:05Z"
            },
            {
                "name": "v0.100.9",
                "date": "2021-11-24T20:24:38Z"
            },
            {
                "name": "v0.100.8",
                "date": "2021-11-17T21:36:11Z"
            },
            {
                "name": "v0.100.7",
                "date": "2021-11-13T19:26:04Z"
            },
            {
                "name": "v0.100.6",
                "date": "2021-11-09T21:07:40Z"
            },
            {
                "name": "v0.100.5",
                "date": "2021-11-07T20:28:57Z"
            },
            {
                "name": "v0.100.4",
                "date": "2021-11-06T19:51:20Z"
            },
            {
                "name": "v0.100.3",
                "date": "2021-10-29T17:10:02Z"
            },
            {
                "name": "v0.100.2",
                "date": "2021-10-18T15:39:27Z"
            },
            {
                "name": "v0.100.1",
                "date": "2021-10-13T19:28:20Z"
            },
            {
                "name": "v0.100.0",
                "date": "2021-09-27T18:44:22Z"
            },
            {
                "name": "v0.100.0-RC2",
                "date": "2021-09-24T16:40:17Z"
            },
            {
                "name": "v0.100.0-RC1",
                "date": "2021-09-19T20:29:17Z"
            },
            {
                "name": "v0.99.9",
                "date": "2021-09-08T17:59:46Z"
            },
            {
                "name": "v0.99.4",
                "date": "2021-08-26T15:49:39Z"
            },
            {
                "name": "v0.99.3",
                "date": "2021-08-21T15:07:10Z"
            },
            {
                "name": "v0.99.2",
                "date": "2021-08-20T15:36:18Z"
            },
            {
                "name": "v0.99.1",
                "date": "2021-08-19T18:06:13Z"
            },
            {
                "name": "v0.99.0",
                "date": "2021-07-29T15:59:43Z"
            },
            {
                "name": "v0.94.1",
                "date": "2021-06-10T17:28:48Z"
            },
            {
                "name": "v0.94.0",
                "date": "2021-06-09T16:22:00Z"
            },
            {
                "name": "v0.93.2",
                "date": "2021-05-29T14:38:49Z"
            },
            {
                "name": "v0.93.1",
                "date": "2021-02-02T14:21:08Z"
            },
            {
                "name": "v0.93.0",
                "date": "2021-01-31T17:36:50Z"
            },
            {
                "name": "v0.92.1",
                "date": "2020-11-05T15:04:31Z"
            },
            {
                "name": "v0.92.0",
                "date": "2020-11-04T14:03:04Z"
            },
            {
                "name": "v0.91.0",
                "date": "2020-10-06T15:35:30Z"
            },
            {
                "name": "v0.90.3",
                "date": "2020-09-17T14:45:50Z"
            },
            {
                "name": "v0.90.2",
                "date": "2020-05-31T14:20:21Z"
            },
            {
                "name": "v0.90.1",
                "date": "2020-05-28T14:40:54Z"
            },
            {
                "name": "v0.90.0",
                "date": "2020-05-26T15:42:18Z"
            },
            {
                "name": "v0.80.0",
                "date": "2019-03-12T14:29:03Z"
            },
            {
                "name": "v0.70.0",
                "date": "2019-01-07T18:17:14Z"
            },
            {
                "name": "v0.60.0",
                "date": "2018-10-09T16:39:53Z"
            },
            {
                "name": "v0.50.0",
                "date": "2018-08-08T15:55:34Z"
            },
            {
                "name": "v0.49.0",
                "date": "2018-04-27T10:51:07Z"
            },
            {
                "name": "v0.48.0",
                "date": "2018-01-25T14:26:20Z"
            },
            {
                "name": "v0.47.0",
                "date": "2017-12-12T10:50:50Z"
            },
            {
                "name": "v0.46.6",
                "date": "2017-11-10T13:45:58Z"
            },
            {
                "name": "v0.46.0",
                "date": "2017-08-24T13:00:49Z"
            },
            {
                "name": "v0.45.0",
                "date": "2017-07-02T14:38:36Z"
            },
            {
                "name": "v0.44.0",
                "date": "2017-05-28T06:19:51Z"
            },
            {
                "name": "v0.43.0",
                "date": "2017-02-25T10:24:23Z"
            },
            {
                "name": "v0.42.0",
                "date": "2017-01-15T10:53:12Z"
            },
            {
                "name": "v0.41.1",
                "date": "2017-01-01T07:27:38Z"
            },
            {
                "name": "v0.40.0",
                "date": "2016-11-23T13:08:31Z"
            }
        ]
    }
}