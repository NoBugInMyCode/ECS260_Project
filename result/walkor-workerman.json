{
    "https://api.github.com/repos/walkor/workerman": {
        "forks": 2271,
        "watchers": 11241,
        "stars": 11241,
        "languages": {
            "PHP": 339757
        },
        "commits": [
            "2025-01-20T04:29:26Z",
            "2025-01-20T03:43:29Z",
            "2025-01-20T03:14:33Z",
            "2025-01-19T14:28:22Z",
            "2025-01-19T13:42:28Z",
            "2025-01-19T13:42:13Z",
            "2025-01-19T11:30:21Z",
            "2025-01-18T08:38:55Z",
            "2025-01-12T07:54:43Z",
            "2025-01-11T08:43:44Z",
            "2025-01-09T14:44:02Z",
            "2025-01-09T06:47:13Z",
            "2025-01-09T01:18:57Z",
            "2025-01-09T01:15:02Z",
            "2025-01-09T01:14:49Z",
            "2025-01-02T00:46:47Z",
            "2025-01-01T10:36:32Z",
            "2024-12-30T15:42:54Z",
            "2024-12-28T08:30:49Z",
            "2024-12-19T03:21:08Z",
            "2024-12-19T02:25:10Z",
            "2024-12-18T13:24:55Z",
            "2024-12-18T07:36:24Z",
            "2024-12-17T09:09:44Z",
            "2024-12-17T06:51:09Z",
            "2024-12-17T06:50:31Z",
            "2024-12-11T15:54:23Z",
            "2024-12-11T15:32:17Z",
            "2024-12-11T15:16:32Z",
            "2024-12-08T15:10:29Z"
        ],
        "creation_date": "2013-12-08T07:49:28Z",
        "contributors": 30,
        "topics": [
            "asynchronous",
            "event-driven",
            "high-performance",
            "php",
            "socket",
            "socket-server",
            "tcp",
            "timer",
            "websocket",
            "ws",
            "wss"
        ],
        "subscribers": 467,
        "readme": "# Workerman\n[![Gitter](https://badges.gitter.im/walkor/Workerman.svg)](https://gitter.im/walkor/Workerman?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge)\n[![Latest Stable Version](https://poser.pugx.org/workerman/workerman/v/stable)](https://packagist.org/packages/workerman/workerman)\n[![Total Downloads](https://poser.pugx.org/workerman/workerman/downloads)](https://packagist.org/packages/workerman/workerman)\n[![Monthly Downloads](https://poser.pugx.org/workerman/workerman/d/monthly)](https://packagist.org/packages/workerman/workerman)\n[![Daily Downloads](https://poser.pugx.org/workerman/workerman/d/daily)](https://packagist.org/packages/workerman/workerman)\n[![License](https://poser.pugx.org/workerman/workerman/license)](https://packagist.org/packages/workerman/workerman)\n\n## What is it\nWorkerman is an asynchronous event-driven PHP framework with high performance to build fast and scalable network applications. \nWorkerman supports HTTP, Websocket, SSL and other custom protocols. \nWorkerman supports event extension.\n\n## Requires \nA POSIX compatible operating system (Linux, OSX, BSD)  \nPOSIX and PCNTL extensions required   \nEvent extension recommended for better performance  \n\n## Installation\n\n```\ncomposer require workerman/workerman\n```\n\n## Documentation\n\n[https://manual.workerman.net](https://manual.workerman.net)\n\n## Basic Usage\n\n### A websocket server \n```php\n<?php\n\nuse Workerman\\Worker;\n\nrequire_once __DIR__ . '/vendor/autoload.php';\n\n// Create a Websocket server\n$ws_worker = new Worker('websocket://0.0.0.0:2346');\n\n// Emitted when new connection come\n$ws_worker->onConnect = function ($connection) {\n    echo \"New connection\\n\";\n};\n\n// Emitted when data received\n$ws_worker->onMessage = function ($connection, $data) {\n    // Send hello $data\n    $connection->send('Hello ' . $data);\n};\n\n// Emitted when connection closed\n$ws_worker->onClose = function ($connection) {\n    echo \"Connection closed\\n\";\n};\n\n// Run worker\nWorker::runAll();\n```\n\n### An http server\n```php\nuse Workerman\\Worker;\n\nrequire_once __DIR__ . '/vendor/autoload.php';\n\n// #### http worker ####\n$http_worker = new Worker('http://0.0.0.0:2345');\n\n// 4 processes\n$http_worker->count = 4;\n\n// Emitted when data received\n$http_worker->onMessage = function ($connection, $request) {\n    //$request->get();\n    //$request->post();\n    //$request->header();\n    //$request->cookie();\n    //$request->session();\n    //$request->uri();\n    //$request->path();\n    //$request->method();\n\n    // Send data to client\n    $connection->send(\"Hello World\");\n};\n\n// Run all workers\nWorker::runAll();\n```\n\n### A tcp server\n```php\nuse Workerman\\Worker;\n\nrequire_once __DIR__ . '/vendor/autoload.php';\n\n// #### create socket and listen 1234 port ####\n$tcp_worker = new Worker('tcp://0.0.0.0:1234');\n\n// 4 processes\n$tcp_worker->count = 4;\n\n// Emitted when new connection come\n$tcp_worker->onConnect = function ($connection) {\n    echo \"New Connection\\n\";\n};\n\n// Emitted when data received\n$tcp_worker->onMessage = function ($connection, $data) {\n    // Send data to client\n    $connection->send(\"Hello $data \\n\");\n};\n\n// Emitted when connection is closed\n$tcp_worker->onClose = function ($connection) {\n    echo \"Connection closed\\n\";\n};\n\nWorker::runAll();\n```\n\n### Enable SSL\n```php\n<?php\n\nuse Workerman\\Worker;\n\nrequire_once __DIR__ . '/vendor/autoload.php';\n\n// SSL context.\n$context = [\n    'ssl' => [\n        'local_cert'  => '/your/path/of/server.pem',\n        'local_pk'    => '/your/path/of/server.key',\n        'verify_peer' => false,\n    ]\n];\n\n// Create a Websocket server with ssl context.\n$ws_worker = new Worker('websocket://0.0.0.0:2346', $context);\n\n// Enable SSL. WebSocket+SSL means that Secure WebSocket (wss://). \n// The similar approaches for Https etc.\n$ws_worker->transport = 'ssl';\n\n$ws_worker->onMessage = function ($connection, $data) {\n    // Send hello $data\n    $connection->send('Hello ' . $data);\n};\n\nWorker::runAll();\n```\n\n### Custom protocol\nProtocols/MyTextProtocol.php\n```php\n\nnamespace Protocols;\n\n/**\n * User defined protocol\n * Format Text+\"\\n\"\n */\nclass MyTextProtocol\n{\n    public static function input($recv_buffer)\n    {\n        // Find the position of the first occurrence of \"\\n\"\n        $pos = strpos($recv_buffer, \"\\n\");\n\n        // Not a complete package. Return 0 because the length of package can not be calculated\n        if ($pos === false) {\n            return 0;\n        }\n\n        // Return length of the package\n        return $pos + 1;\n    }\n\n    public static function decode($recv_buffer)\n    {\n        return trim($recv_buffer);\n    }\n\n    public static function encode($data)\n    {\n        return $data . \"\\n\";\n    }\n}\n```\n\n```php\nuse Workerman\\Worker;\n\nrequire_once __DIR__ . '/vendor/autoload.php';\n\n// #### MyTextProtocol worker ####\n$text_worker = new Worker('MyTextProtocol://0.0.0.0:5678');\n\n$text_worker->onConnect = function ($connection) {\n    echo \"New connection\\n\";\n};\n\n$text_worker->onMessage = function ($connection, $data) {\n    // Send data to client\n    $connection->send(\"Hello world\\n\");\n};\n\n$text_worker->onClose = function ($connection) {\n    echo \"Connection closed\\n\";\n};\n\n// Run all workers\nWorker::runAll();\n```\n\n### Timer\n```php\n\nuse Workerman\\Worker;\nuse Workerman\\Timer;\n\nrequire_once __DIR__ . '/vendor/autoload.php';\n\n$task = new Worker();\n$task->onWorkerStart = function ($task) {\n    // 2.5 seconds\n    $time_interval = 2.5; \n    $timer_id = Timer::add($time_interval, function () {\n        echo \"Timer run\\n\";\n    });\n};\n\n// Run all workers\nWorker::runAll();\n```\n\n### AsyncTcpConnection (tcp/ws/text/frame etc...)\n```php\n\nuse Workerman\\Worker;\nuse Workerman\\Connection\\AsyncTcpConnection;\n\nrequire_once __DIR__ . '/vendor/autoload.php';\n\n$worker = new Worker();\n$worker->onWorkerStart = function () {\n    // Websocket protocol for client.\n    $ws_connection = new AsyncTcpConnection('ws://echo.websocket.org:80');\n    $ws_connection->onConnect = function ($connection) {\n        $connection->send('Hello');\n    };\n    $ws_connection->onMessage = function ($connection, $data) {\n        echo \"Recv: $data\\n\";\n    };\n    $ws_connection->onError = function ($connection, $code, $msg) {\n        echo \"Error: $msg\\n\";\n    };\n    $ws_connection->onClose = function ($connection) {\n        echo \"Connection closed\\n\";\n    };\n    $ws_connection->connect();\n};\n\nWorker::runAll();\n```\n\n\n\n#### Use HTTP proxy\n\n```php\n<?php\n\nrequire __DIR__ . '/vendor/autoload.php';\n\nuse Workerman\\Connection\\AsyncTcpConnection;\n$worker = new \\Workerman\\Worker();\n$worker->onWorkerStart = function($worker){\n    echo '\u5f00\u59cb\u94fe\u63a5' . PHP_EOL;\n    $url = 'ws://stream.binance.com:9443/ws';\n    $con = new AsyncTcpConnection($url);\n    $con->transport = 'ssl';\n//    $con->proxySocks5 = '127.0.0.1:1080';\n    $con->proxyHttp = '127.0.0.1:25378';\n\n    $con->onConnect = function(AsyncTcpConnection $con) {\n        $ww = [\n            'id' => 1,\n            'method' => 'SUBSCRIBE',\n            'params' => [\n                \"btcusdt@aggTrade\",\n                \"btcusdt@depth\"\n            ]\n        ];\n        echo '\u94fe\u63a5\u6210\u529f';\n        $con->send(json_encode($ww));\n        echo 'ok';\n    };\n\n    $con->onMessage = function(AsyncTcpConnection $con, $data) {\n        echo $data;\n    };\n\n    $con->onClose = function (AsyncTcpConnection $con) {\n        echo 'onClose' . PHP_EOL;\n    };\n\n    $con->onError = function (AsyncTcpConnection $con, $code, $msg) {\n        echo \"error [ $code ] $msg\\n\";\n    };\n\n    $con->connect();\n};\n\\Workerman\\Worker::runAll();\n```\n\n\n\n#### Use Socks5 proxy\n\n```php\n<?php\n\nrequire __DIR__ . '/vendor/autoload.php';\n\nuse Workerman\\Connection\\AsyncTcpConnection;\n$worker = new \\Workerman\\Worker();\n$worker->onWorkerStart = function($worker){\n    echo '\u5f00\u59cb\u94fe\u63a5' . PHP_EOL;\n    $url = 'ws://stream.binance.com:9443/ws';\n    $con = new AsyncTcpConnection($url);\n    $con->transport = 'ssl';\n    $con->proxySocks5 = '127.0.0.1:1080';\n//    $con->proxyHttp = '127.0.0.1:25378';\n\n    $con->onConnect = function(AsyncTcpConnection $con) {\n        $ww = [\n            'id' => 1,\n            'method' => 'SUBSCRIBE',\n            'params' => [\n                \"btcusdt@aggTrade\",\n                \"btcusdt@depth\"\n            ]\n        ];\n        echo '\u94fe\u63a5\u6210\u529f';\n        $con->send(json_encode($ww));\n        echo 'ok';\n    };\n\n    $con->onMessage = function(AsyncTcpConnection $con, $data) {\n        echo $data;\n    };\n\n    $con->onClose = function (AsyncTcpConnection $con) {\n        echo 'onClose' . PHP_EOL;\n    };\n\n    $con->onError = function (AsyncTcpConnection $con, $code, $msg) {\n        echo \"error [ $code ] $msg\\n\";\n    };\n\n    $con->connect();\n};\n\\Workerman\\Worker::runAll();\n\n```\n\n\n\nproxy supports TLS1.3, no Sniproxy channel\n\n\n\n## Available commands\n```php start.php start  ```  \n```php start.php start -d  ```  \n```php start.php status  ```  \n```php start.php status -d  ```  \n```php start.php connections```  \n```php start.php stop  ```  \n```php start.php stop -g  ```  \n```php start.php restart  ```  \n```php start.php reload  ```  \n```php start.php reload -g  ```\n\n# Benchmarks\nhttps://www.techempower.com/benchmarks/#section=data-r19&hw=ph&test=plaintext&l=zik073-1r\n\n\n\n### Supported by\n\n[![JetBrains logo.](https://resources.jetbrains.com/storage/products/company/brand/logos/jetbrains.svg)](https://jb.gg/OpenSourceSupport)\n\n\n## Other links with workerman\n\n[webman](https://github.com/walkor/webman)   \n[AdapterMan](https://github.com/joanhey/AdapterMan)\n\n## Donate\n<a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=UQGGS9UB35WWG\">PayPal</a>\n\n## LICENSE\n\nWorkerman is released under the [MIT license](https://github.com/walkor/workerman/blob/master/MIT-LICENSE.txt).\n",
        "releases": [
            {
                "name": "v5.0.0",
                "date": "2024-12-31T16:03:11Z"
            },
            {
                "name": "v5.0.0-rc.3",
                "date": "2024-11-24T14:57:02Z"
            },
            {
                "name": "v4.2.1",
                "date": "2024-11-24T13:30:22Z"
            },
            {
                "name": "v5.0.0-rc.2",
                "date": "2024-11-07T13:07:53Z"
            },
            {
                "name": "v4.2.0",
                "date": "2024-11-07T08:34:04Z"
            },
            {
                "name": "v4.1.17",
                "date": "2024-11-07T07:56:01Z"
            },
            {
                "name": "v5.0.0-rc.1",
                "date": "2024-10-09T15:10:39Z"
            },
            {
                "name": "v5.0.0-beta.8",
                "date": "2024-09-04T00:48:15Z"
            },
            {
                "name": "v4.1.16",
                "date": "2024-07-04T08:33:11Z"
            },
            {
                "name": "v4.0.47",
                "date": "2024-07-04T08:37:02Z"
            },
            {
                "name": "v4.1.15",
                "date": "2024-02-19T02:12:42Z"
            },
            {
                "name": "v3.5.35",
                "date": "2023-09-13T14:32:17Z"
            },
            {
                "name": "v4.1.14",
                "date": "2023-12-19T08:47:33Z"
            },
            {
                "name": "v4.1.13",
                "date": "2023-07-31T05:58:37Z"
            },
            {
                "name": "v4.0.46",
                "date": "2023-07-31T06:09:59Z"
            },
            {
                "name": "v4.1.12",
                "date": "2023-07-30T14:06:48Z"
            },
            {
                "name": "v5.0.0-beta.7",
                "date": "2023-07-27T07:46:33Z"
            },
            {
                "name": "v4.1.11",
                "date": "2023-07-21T11:30:32Z"
            },
            {
                "name": "v4.0.45",
                "date": "2023-07-21T11:33:42Z"
            },
            {
                "name": "v5.0.0-beta.6",
                "date": "2023-06-12T08:44:43Z"
            },
            {
                "name": "v4.1.10",
                "date": "2023-05-01T02:21:31Z"
            },
            {
                "name": "v4.0.44",
                "date": "2023-05-01T02:17:16Z"
            },
            {
                "name": "v5.0.0-beta.5",
                "date": "2023-05-01T02:25:31Z"
            },
            {
                "name": "v5.0.0-beta.4",
                "date": "2023-03-28T05:17:54Z"
            },
            {
                "name": "v5.0.0-beta.3",
                "date": "2023-03-10T14:08:03Z"
            },
            {
                "name": "v4.1.9",
                "date": "2023-03-10T14:12:20Z"
            },
            {
                "name": "v4.0.43",
                "date": "2023-03-10T14:11:22Z"
            },
            {
                "name": "v4.1.8",
                "date": "2023-02-19T03:29:38Z"
            },
            {
                "name": "v4.1.7",
                "date": "2023-02-18T12:53:35Z"
            },
            {
                "name": "v5.0.0-beta.2",
                "date": "2023-02-06T11:50:00Z"
            },
            {
                "name": "v5.0.0-beta.1",
                "date": "2023-02-01T02:10:35Z"
            },
            {
                "name": "v4.1.6",
                "date": "2023-01-13T02:18:24Z"
            },
            {
                "name": "v3.5.34",
                "date": "2022-12-16T02:47:41Z"
            },
            {
                "name": "v4.1.5",
                "date": "2022-12-14T12:04:23Z"
            },
            {
                "name": "4.0.43",
                "date": "2022-12-14T12:12:30Z"
            },
            {
                "name": "v3.5.33",
                "date": "2022-11-17T03:33:55Z"
            },
            {
                "name": "v3.5.32",
                "date": "2022-10-22T09:23:03Z"
            },
            {
                "name": "v4.1.4",
                "date": "2022-10-09T11:34:50Z"
            },
            {
                "name": "v4.1.3",
                "date": "2022-09-23T14:07:25Z"
            },
            {
                "name": "v4.1.2",
                "date": "2022-09-22T13:02:03Z"
            },
            {
                "name": "v4.1.1",
                "date": "2022-09-19T13:06:56Z"
            },
            {
                "name": "v4.1.0",
                "date": "2022-08-20T10:24:54Z"
            },
            {
                "name": "v4.0.42",
                "date": "2022-07-29T09:08:49Z"
            },
            {
                "name": "v4.0.41",
                "date": "2022-07-19T08:07:46Z"
            },
            {
                "name": "v4.0.40",
                "date": "2022-07-18T13:23:51Z"
            },
            {
                "name": "v4.0.39",
                "date": "2022-06-16T14:26:11Z"
            },
            {
                "name": "v4.0.38",
                "date": "2022-06-11T04:55:03Z"
            },
            {
                "name": "v4.0.37",
                "date": "2022-05-17T03:39:34Z"
            },
            {
                "name": "v4.0.36",
                "date": "2022-04-29T15:16:42Z"
            },
            {
                "name": "v4.0.35",
                "date": "2022-04-28T04:40:15Z"
            },
            {
                "name": "4.0.34",
                "date": "2022-04-21T13:30:56Z"
            },
            {
                "name": "v4.0.33",
                "date": "2022-03-29T14:21:06Z"
            },
            {
                "name": "v4.0.31",
                "date": "2022-03-23T15:38:25Z"
            },
            {
                "name": "v4.0.30",
                "date": "2022-02-28T10:14:28Z"
            },
            {
                "name": "4.0.29",
                "date": "2022-02-25T13:21:24Z"
            },
            {
                "name": "v4.0.28",
                "date": "2022-02-19T10:21:11Z"
            },
            {
                "name": "v4.0.27",
                "date": "2022-02-11T02:50:48Z"
            },
            {
                "name": "v4.0.26",
                "date": "2021-12-21T03:41:49Z"
            },
            {
                "name": "v4.0.25",
                "date": "2021-12-10T04:10:08Z"
            },
            {
                "name": "v4.0.24",
                "date": "2021-12-02T14:30:29Z"
            },
            {
                "name": "workerman-4.0.23-stable",
                "date": "2021-12-01T11:58:01Z"
            },
            {
                "name": "v4.0.22",
                "date": "2021-10-29T12:05:43Z"
            },
            {
                "name": "workerman-4.0.21-stable",
                "date": "2021-10-27T13:56:23Z"
            },
            {
                "name": "workerman-4.0.20-stable",
                "date": "2021-10-16T13:28:58Z"
            },
            {
                "name": "workerman-4.0.19-stable",
                "date": "2021-03-05T06:50:29Z"
            },
            {
                "name": "workerman-4.0.18-stable",
                "date": "2021-01-02T06:17:20Z"
            },
            {
                "name": "workerman-4.0.17-stable",
                "date": "2020-11-27T04:16:38Z"
            },
            {
                "name": "workerman-4.0.16-stable",
                "date": "2020-11-16T02:51:23Z"
            },
            {
                "name": "workerman-4.0.15-stable",
                "date": "2020-10-28T03:38:47Z"
            },
            {
                "name": "workerman-4.0.14-stable",
                "date": "2020-10-17T04:19:59Z"
            },
            {
                "name": "workerman-4.0.13-stable",
                "date": "2020-10-16T09:19:01Z"
            },
            {
                "name": "workerman-4.0.12-stable",
                "date": "2020-10-13T10:22:21Z"
            },
            {
                "name": "workerman-4.0.11-stable",
                "date": "2020-10-03T02:58:44Z"
            },
            {
                "name": "workerman-4.0.10-stable",
                "date": "2020-09-15T09:24:23Z"
            },
            {
                "name": "workerman-4.0.9-stable",
                "date": "2020-08-31T07:41:08Z"
            },
            {
                "name": "workerman-4.0.8-stable",
                "date": "2020-08-28T06:23:45Z"
            },
            {
                "name": "workerman-3.5.31-stable",
                "date": "2020-08-24T03:50:25Z"
            },
            {
                "name": "workerman-4.0.7-stable",
                "date": "2020-08-10T05:15:20Z"
            },
            {
                "name": "v4.0.6",
                "date": "2020-06-12T16:22:42Z"
            },
            {
                "name": "v4.0.5",
                "date": "2020-05-19T07:59:06Z"
            },
            {
                "name": "v4.0.4",
                "date": "2020-04-20T02:21:46Z"
            },
            {
                "name": "v4.0.3",
                "date": "2020-03-31T07:43:32Z"
            },
            {
                "name": "workerman-3.5.30-stable",
                "date": "2020-03-31T07:41:48Z"
            },
            {
                "name": "v4.0.2",
                "date": "2020-03-13T08:17:48Z"
            },
            {
                "name": "v4.0.1",
                "date": "2020-03-09T10:24:38Z"
            },
            {
                "name": "v4.0.0",
                "date": "2020-03-08T14:45:43Z"
            },
            {
                "name": "workerman-3.5.29-stable",
                "date": "2020-03-05T11:12:08Z"
            },
            {
                "name": "workerman-3.5.28-stable",
                "date": "2020-02-24T12:21:49Z"
            },
            {
                "name": "workerman-3.5.27-stable",
                "date": "2020-01-31T08:14:56Z"
            },
            {
                "name": "workerman-3.5.26-stable",
                "date": "2020-01-26T14:20:38Z"
            },
            {
                "name": "workerman-3.5.25-stable",
                "date": "2020-01-19T07:03:13Z"
            },
            {
                "name": "workerman-3.5.24-stable",
                "date": "2020-01-08T07:09:47Z"
            },
            {
                "name": "workerman-3.5.23-stable",
                "date": "2019-12-26T02:48:07Z"
            },
            {
                "name": "workerman-3.5.22-stable",
                "date": "2019-09-06T03:44:42Z"
            },
            {
                "name": "workerman-3.5.21-stable",
                "date": "2019-08-30T06:44:59Z"
            },
            {
                "name": "workerman-3.5.20-stable",
                "date": "2019-07-02T10:24:33Z"
            },
            {
                "name": "workerman-3.5.19-stable",
                "date": "2019-04-05T10:40:17Z"
            },
            {
                "name": "workerman-3.5.18-stable",
                "date": "2019-01-19T02:42:35Z"
            },
            {
                "name": "workerman-3.5.17-stable",
                "date": "2018-12-27T08:12:31Z"
            },
            {
                "name": "workerman-3.5.16-stable",
                "date": "2018-11-18T06:18:04Z"
            },
            {
                "name": "workerman-3.5.15-stable",
                "date": "2018-09-20T09:19:41Z"
            },
            {
                "name": "workerman-3.5.14-stable",
                "date": "2018-08-04T12:45:11Z"
            },
            {
                "name": "workerman-3.5.13-stable",
                "date": "2018-07-16T02:14:34Z"
            },
            {
                "name": "workerman-3.5.12-stable",
                "date": "2018-07-05T08:56:24Z"
            },
            {
                "name": "workerman-3.5.11-stable",
                "date": "2018-06-07T09:37:23Z"
            },
            {
                "name": "workerman-3.5.10-stable",
                "date": "2018-06-04T13:20:50Z"
            },
            {
                "name": "workerman-3.5.9-stable",
                "date": "2018-05-29T05:43:02Z"
            },
            {
                "name": "workerman-3.5.8-stable",
                "date": "2018-05-23T05:38:12Z"
            },
            {
                "name": "workerman-3.5.7-stable",
                "date": "2018-05-22T17:06:34Z"
            },
            {
                "name": "workerman-v3.5.6-stable",
                "date": "2018-04-11T11:30:56Z"
            },
            {
                "name": "workerman-3.5.5-stable",
                "date": "2018-04-03T06:32:36Z"
            },
            {
                "name": "workerman-3.5.4-stable",
                "date": "2017-12-06T04:19:52Z"
            },
            {
                "name": "workerman-3.5.3-stable",
                "date": "2017-12-04T07:40:13Z"
            },
            {
                "name": "workerman-3.5.2-stable",
                "date": "2017-11-02T09:41:03Z"
            },
            {
                "name": "workerman-3.5.1-stable",
                "date": "2017-08-25T08:27:02Z"
            },
            {
                "name": "workerman-3.5.0-stable",
                "date": "2017-08-23T06:06:12Z"
            },
            {
                "name": "workerman-3.4.7-stable",
                "date": "2017-08-08T08:54:01Z"
            },
            {
                "name": "workerman-3.4.6-stable",
                "date": "2017-07-24T09:48:23Z"
            },
            {
                "name": "workerman-3.4.5-stable",
                "date": "2017-07-14T02:26:46Z"
            },
            {
                "name": "workerman-3.4.4-stable",
                "date": "2017-07-06T07:04:26Z"
            },
            {
                "name": "workerman-3.4.3-stable",
                "date": "2017-06-20T15:23:20Z"
            },
            {
                "name": "workerman-3.4.2-stable",
                "date": "2017-05-04T15:11:31Z"
            },
            {
                "name": "workerman-3.4.1-stable",
                "date": "2017-04-21T01:01:30Z"
            },
            {
                "name": "workerman-3.4.0-stable",
                "date": "2017-04-15T08:31:55Z"
            },
            {
                "name": "workerman-3.3.9-stable",
                "date": "2017-02-15T02:56:58Z"
            },
            {
                "name": "workerman-3.3.8-stable",
                "date": "2017-02-09T08:13:22Z"
            },
            {
                "name": "workerman-3.3.7-stable",
                "date": "2017-02-02T02:53:55Z"
            },
            {
                "name": "workerman-3.3.6-stable",
                "date": "2016-12-22T14:34:01Z"
            },
            {
                "name": "workerman-3.3.5-stable",
                "date": "2016-11-23T15:17:01Z"
            },
            {
                "name": "workerman-3.3.4-stable",
                "date": "2016-09-29T09:05:43Z"
            },
            {
                "name": "workerman-3.3.3-stable",
                "date": "2016-07-01T13:27:49Z"
            },
            {
                "name": "workerman-3.3.1-stable",
                "date": "2016-03-26T14:21:41Z"
            },
            {
                "name": "workerman-3.3.0-stable ",
                "date": "2016-02-25T15:18:01Z"
            },
            {
                "name": "workerman-3.2.9-stable",
                "date": "2016-02-25T10:28:27Z"
            },
            {
                "name": "workerman-3.2.8-stable ",
                "date": "2016-01-26T13:52:55Z"
            },
            {
                "name": "workerman-3.2.7-stable ",
                "date": "2016-01-13T15:32:18Z"
            },
            {
                "name": "workerman-3.2.6-stable ",
                "date": "2016-01-04T03:44:44Z"
            },
            {
                "name": "workerman-3.2.5-stable ",
                "date": "2015-12-10T15:55:04Z"
            },
            {
                "name": "workerman-3.2.2-stable",
                "date": "2015-10-27T01:40:31Z"
            },
            {
                "name": "workerman-3.2.0-stable ",
                "date": "2015-10-12T15:07:55Z"
            },
            {
                "name": "workerman-3.1.9-stable ",
                "date": "2015-09-09T13:33:22Z"
            },
            {
                "name": "workerman-3.1.8-stable ",
                "date": "2015-08-03T15:28:32Z"
            },
            {
                "name": "workerman-3.1.7-stable",
                "date": "2015-06-15T08:28:57Z"
            },
            {
                "name": "workerman-3.1.6-stable",
                "date": "2015-05-25T05:32:08Z"
            },
            {
                "name": "workerman-3.1.5-stable ",
                "date": "2015-05-20T15:46:37Z"
            },
            {
                "name": "workerman-3.1.4-stable",
                "date": "2015-04-27T01:58:51Z"
            },
            {
                "name": "workerman-3.1.3-stable ",
                "date": "2015-04-13T15:12:45Z"
            },
            {
                "name": "workerman-3.1.2-stable ",
                "date": "2015-04-11T15:36:57Z"
            },
            {
                "name": "workerman-3.1.1-stable",
                "date": "2015-04-09T09:31:52Z"
            },
            {
                "name": "workerman-2.1.6-stable ",
                "date": "2015-01-31T12:55:46Z"
            }
        ]
    }
}