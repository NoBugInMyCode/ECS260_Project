{
    "https://api.github.com/repos/oblador/react-native-vector-icons": {
        "forks": 2122,
        "watchers": 17508,
        "stars": 17508,
        "languages": {
            "TypeScript": 116172,
            "JavaScript": 15393,
            "Shell": 9738,
            "Objective-C++": 6183,
            "Kotlin": 6046,
            "Ruby": 2889,
            "CSS": 2658,
            "HTML": 1997,
            "Dockerfile": 993,
            "Objective-C": 978,
            "Python": 266
        },
        "commits": [
            "2025-01-12T02:29:51Z",
            "2025-01-12T02:15:17Z",
            "2025-01-01T04:06:37Z",
            "2025-01-01T04:04:25Z",
            "2025-01-01T04:01:19Z",
            "2024-12-21T00:17:44Z",
            "2024-12-15T00:09:36Z",
            "2024-12-14T02:13:42Z",
            "2024-11-28T21:45:36Z",
            "2024-11-28T21:30:23Z",
            "2024-11-28T10:11:38Z",
            "2024-11-28T07:58:27Z",
            "2024-11-28T07:43:53Z",
            "2024-11-28T07:32:05Z",
            "2024-11-28T07:08:49Z",
            "2024-11-28T07:04:39Z",
            "2024-11-28T07:04:00Z",
            "2024-11-28T06:53:52Z",
            "2024-11-25T12:08:54Z",
            "2024-11-25T11:57:52Z",
            "2024-11-25T11:47:37Z",
            "2024-11-25T07:33:54Z",
            "2024-11-25T07:24:04Z",
            "2024-11-09T22:45:27Z",
            "2024-11-09T21:55:13Z",
            "2024-11-09T21:53:06Z",
            "2024-11-09T21:52:37Z",
            "2024-11-09T21:34:55Z",
            "2024-10-30T08:37:33Z",
            "2024-10-30T08:26:00Z"
        ],
        "creation_date": "2015-05-15T16:38:57Z",
        "contributors": 30,
        "topics": [
            "icon",
            "icon-pack",
            "react-native",
            "ui"
        ],
        "subscribers": 201,
        "readme": "![Vector Icons for React Native](https://cloud.githubusercontent.com/assets/378279/12009887/33f4ae1c-ac8d-11e5-8666-7a87458753ee.png)\n\n[![npm](https://img.shields.io/npm/v/@react-native-vector-icons/common.svg)](https://npmjs.com/package/@react-native-vector-icons/common.svg) [![npm](https://img.shields.io/npm/dm/@react-native-vector-icons/common.svg)](https://npmjs.com/package/@react-native-vector-icons/common)\n\n# React Native Vector Icons\n\nElevate your React Native applications with the power of customizable vector\nicons. Ideal for embellishing buttons, logos, and navigation or tab bars, these\nicons seamlessly integrate into your projects. Their versatility makes\nextension and styling effortless.\n\nFor the integration of `.svg` files natively, you can explore [`react-native-vector-image`](https://github.com/oblador/react-native-vector-image).\n\n> [!TIP]\n> If you are still using the old single package `react-native-vector-icons` please visit https://github.com/oblador/react-native-vector-icons/tree/10.x\n\n## Table of Contents\n\n- [Sponsorship](#sponsorship)\n- [Available Icon Sets](#available-icon-sets)\n- [Installation](#installation)\n- [Setup](#setup)\n- [Icon Component](#icon-component)\n- [Usage as PNG Image/Source Object](#usage-as-png-imagesource-object)\n- [Multi-Style Fonts](#multi-style-fonts)\n- [Custom Fonts](#custom-fonts)\n- [Animation](#animation)\n- [Dynamic icon font loading](#dynamic-icon-font-loading)\n- [Usage Examples](#usage-examples)\n- [Changelog](https://github.com/react-native-vector-icons/react-native-vector-icons/releases)\n- [License](#license)\n\n## Sponsorship\n\nShould you find this library beneficial, kindly contemplate the option of\n[sponsoring](https://github.com/sponsors/oblador).\n\n## Available Icon Sets\n\n[Explore all icons](https://oblador.github.io/react-native-vector-icons/).\n\nRNVI comes with the following supported icons. You can [search NPM](https://www.npmjs.com/search?q=keywords%3Areact-native-vector-icons-icon) for third party icons.\n\n### Actively maintained\n\n- [`AntDesign`](https://ant.design/components/icon) from Ant Group (v4.4.2 with _449_ icons)\n- [`Feather`](http://feathericons.com) created by Cole Bemis & Contributors (v4.29.2 featuring _287_ icons)\n- [`FontAwesome 6`](https://fontawesome.com/search) designed by Fonticons, Inc. (v6.7.2 featuring _2060_ free and _52663_ pro icons)\n- [`Foundation`](http://zurb.com/playground/foundation-icon-fonts-3) by ZURB, Inc. (v3.0 with _283_ icons)\n- [`Ionicons`](https://ionic.io/ionicons) crafted by Ionic (v7.4.0 containing _1356_ icons)\n- [`MaterialDesignIcons`](https://pictogrammers.com/library/mdi/) from MaterialDesignIcons.com (v7.4.47 including _7448_ icons)\n- [`Octicons`](https://primer.style/foundations/icons) designed by GitHub, Inc. (v19.14.0 with _332_ icons)\n\n### No longer maintained upstream\n\n- [`Entypo`](http://entypo.com) by Daniel Bruce (v1.0.1 with _411_ icons)\n- [`EvilIcons`](http://evil-icons.io) designed by Alexander Madyankin & Roman Shamin (v1.10.1 with _70_ icons)\n- [`FontAwesome`](https://fontawesome.com/v4/icons) by Fonticons, Inc. (v4.7.0 containing _785_ icons)\n- [`FontAwesome 5`](https://fontawesome.com/v5/search) from Fonticons, Inc. (v5.15.4 offering _1611_ free and _7869_ pro icons)\n- [`Fontisto`](https://github.com/kenangundogan/fontisto) created by Kenan G\u00fcndo\u011fan (v3.0.4 featuring _617_ icons)\n- [`MaterialIcons`](https://fonts.google.com/icons?icon.set=Material+Icons) by Google, Inc. (v4.0.0 featuring _2234_ icons)\n- [`SimpleLineIcons`](https://simplelineicons.github.io/) crafted by Sabbir & Contributors (v2.5.5 with _189_ icons)\n- [`Zocial`](https://smcllns.github.io/css-social-buttons) by Sam Collins (v1.1.1 with _100_ icons)\n\n## Migration\n\nSee [MIGRATION.md](MIGRATION.md) if you are migrating from `react-native-vector-icons` to the package-per-icon-set approach.\n\n## Installation\n\n1. Install the common package\n\n   ```sh\n   npm install --save @react-native-vector-icons/common\n   ```\n\n2. Install the packages for the icons you want use\n\n   ```sh\n   npm install --save @react-native-vector-icons/fontawesome6 @react-native-vector-icons/evil-icons\n   ```\n\n3. Depending on the platform you're targeting (iOS/Android/Windows), follow the appropriate setup instructions below.\n4. If you are using one of the following fonts refer to their guides for further instructions\n\n- [FontAwesome 6](packages/fontawesome6/README.md)\n- [FontAwesome 6 Pro](packages/fontawesome6-pro/README.md)\n- [FontAwesome 5](packages/fontawesome5/README.md)\n- [FontAwesome 5 Pro](packages/fontawesome5-pro/README.md)\n- [Fontello](packages/fontello/README.md)\n- [Icomoon](packages/icomoon/README.md)\n\n## Setup\n\nPlease refer to the guide for [Expo](./docs/SETUP-EXPO.md), [React Native](./docs/SETUP-REACT-NATIVE.md) or [Web](./docs/SETUP-WEB.md) for further instructions.\n\n## `Icon` Component\n\nYou can either use one of the bundled icons above or roll your own custom font.\n\n```js\nimport Icon from '@react-native-vector-icons/fontawesome';\nconst myIcon = <Icon name=\"rocket\" size={30} color=\"#900\" />;\n```\n\n### Props\n\nAny [Text props](https://reactnative.dev/docs/text.html#props) and the following:\n\n| Prop        | Description                                                             | Default     |\n| ----------- | ----------------------------------------------------------------------- | ----------- |\n| **`size`**  | Size of the icon, can also be passed as `fontSize` in the style object. | `12`        |\n| **`name`**  | What icon to show, see Icon Explorer app or one of the links above.     | _None_      |\n| **`color`** | Color of the icon.                                                      | _Inherited_ |\n\n### Static Methods\n\n| Prop                     | Description                                                                                                                                                                               |\n| ------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **`getImageSource`**     | Returns a promise that resolving to the source of a bitmap version of the icon for use with `Image` component et al. Usage: `const source = await Icon.getImageSource(name, size, color)` |\n| **`getImageSourceSync`** | Same as `getImageSource` but synchronous. Usage: `const source = Icon.getImageSourceSync(name, size, color)`                                                                              |\n\n### Styling\n\nSince `Icon` builds on top of the `Text` component, most [style properties](https://reactnative.dev/docs/style.html) will work as expected, you might find it useful to play around with these:\n\n- `backgroundColor`\n- `borderWidth`\n- `borderColor`\n- `borderRadius`\n- `padding`\n- `margin`\n- `color`\n- `fontSize`\n\nBy combining some of these you can create for example :\n\n![type](https://cloud.githubusercontent.com/assets/378279/7667570/33817554-fc0d-11e4-9ad7-4eb60139cfb7.png)\n![star](https://cloud.githubusercontent.com/assets/378279/7667569/3010dd7e-fc0d-11e4-9696-cb721fe8e98d.png)\n\n## Usage as PNG Image/Source Object\n\nConvenient way to plug this in into other components that rely on bitmap images rather than scalable vector icons. Takes the arguments `name`, `size` and `color` as described above.\n\n```jsx\nconst source = Icon.getImageSourceSync('user', 20, 'red');\nreturn <Image source={source} />;\n);\n```\n\nAlternatively you may use the async method `Icon.getImageSource`.\n\nKeep in mind that `Icon.getImageSourceSync` is blocking and might incur performance penalties. Subsequent calls will use cache however.\n\n## Multi-Style Fonts\n\nSome fonts today use multiple styles, FontAwesome 5 for example, which is supported by this library. The usage is pretty much the same as the standard `Icon` component:\n\n```jsx\nimport Icon from '@react-native-vector-icons/fontawesome5';\n\nconst myIcon1 = <Icon name=\"comments\" size={30} color=\"#900\" />; // Defaults to solid\nconst myIcon2 = <Icon name=\"comments\" size={30} color=\"#900\" iconType=\"solid\" />;\nconst myIcon3 = <Icon name=\"comments\" size={30} color=\"#900\" iconType=\"light\" />; // Only in FA5 Pro\n```\n\n### Static methods\n\nAll static methods from `Icon` is supported by multi-styled fonts.\n\n| Prop                     | Description                                                                                                                                                                               |\n| ------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **`getImageSource`**     | Returns a promise that resolving to the source of a bitmap version of the icon for use with `Image` component et al. Usage: `const source = await Icon.getImageSource(name, size, color)` |\n| **`getImageSourceSync`** | Same as `getImageSource` but synchronous. Usage: `const source = Icon.getImageSourceSync(name, size, color)`                                                                              |\n\n## Custom Fonts\n\nThe best approach is to use our icon generator to create your own icon package.\n\nSee [CREATE_FONT_PACKAGE.md](./docs/CREATE_FONT_PACKAGE.md) to learn how to create your own font packages.\n\nYou can also use `createIconSet()` directly in your project. This\nreturns your own custom font based on the `glyphMap` where the key is the icon\nname and the value is either a UTF-8 character or it's character code.\n`postScriptName` is the name of the postscript font. Open the font in https://fontdrop.info/, \nFont Book.app or similar to learn the name. Also pass the `fontFileName` argument for Android support.\n\n```js\nimport { createIconSet } from '@react-native-vector-icons/common';\nconst glyphMap = { 'icon-name': 1234, test: '\u2206' };\n\n// use createIconSet() with object parameter\n// or use positional parameters for compatibility with version <= 10: `createIconSet(glyphMap, fontFamily[, fontFile])`\nconst Icon = createIconSet(glyphMap, {\n   postScriptName: 'FontName',\n   fontFileName: 'font-name.ttf',\n   fontSource: require('../fonts/font-name.ttf') // optional, for dynamic loading. Can also be a local file uri.\n})\n```\n\nYou should place the font ttf file into `rnvi-fonts`. You can customise this location by adding the following snippet to your package.json\n\n```json\n{\n  \"reactNativeVectorIcons\": {\n    \"fontDir\": \"src/assets/fonts\"\n  }\n}\n  ```\n\n## Animation\n\nReact Native comes with an amazing animation library called\n[`Animated`](https://reactnative.dev/docs/animated.html). To use it with an\nicon, simply create an animated component with this line: `const AnimatedIcon =\nAnimated.createAnimatedComponent(Icon)`. You can also use the higher level\nanimation library\n[react-native-animatable](https://github.com/oblador/react-native-animatable).\n\n## Dynamic icon font loading\n\n> At the moment, dynamic loading is supported on native platforms (not on web) only if you use Expo. In the future, it should become available for all React Native projects via React Native core.\n\nFonts can be available in an app statically (since build time) or loaded dynamically at runtime. The latter can be useful e.g. for apps that use over-the-air updates and want to load new fonts with an update, or when you need to use a font from a remote location.\n\nDynamic loading in react-native-vector-icons is currently limited to those fonts that are bundled within the provided packages: it doesn't support Pro fonts (such as FontAwesome 5 Pro). However, loading of custom fonts is not difficult to implement: see any of the free font packages for reference.\n\nBy default, dynamic loading is enabled if supported by the version of Expo that you're using. It doesn't change the way you work with the package: If rendering an icon requires a font that is not known to the app, it will be loaded automatically and icon will render as expected.\n\n`@react-native-vector-icons/common` exports several functions which you can use to control dynamic loading:\n\n- `isDynamicLoadingEnabled`: Returns whether dynamic loading is enabled.\n- `isDynamicLoadingSupported`: Returns whether dynamic loading is supported by your runtime (checks that necessary Expo features are present).\n- `setDynamicLoadingEnabled`: Enables or disables dynamic loading.\n- `setDynamicLoadingErrorCallback`: Sets a callback that is called (in the unlikely case) when an error occurs during dynamic loading. An example of when an error might happen is loading a misconfigured OTA update which doesn't include a necessary font file.\n\n## Usage Examples\n\n### Icon Explorer\n\nTry the `IconExplorer` project in `Examples/IconExplorer` folder, there you can also search for any icon.\n\n![Screenshot of IconExplorer](https://cloud.githubusercontent.com/assets/378279/8903470/a9fe6b46-3458-11e5-901f-98b7b676d0d3.png)\n\n### Basic Example\n\n```js\nimport Icon from '@react-native-vector-icons/ionicons';\n\nfunction ExampleView(props) {\n  return <Icon name=\"ios-person\" size={30} color=\"#4F8EF7\" />;\n}\n```\n\n### Inline Icons\n\n```js\nimport { Text } from 'react-native';\nimport Icon from '@react-native-vector-icons/ionicons';\n\nfunction ExampleView(props) {\n  return (\n    <Text>\n      Lorem <Icon name=\"ios-book\" color=\"#4F8EF7\" /> Ipsum\n    </Text>\n  );\n}\n```\n\n## [Changelog](https://github.com/react-native-vector-icons/react-native-vector-icons/releases)\n\n## License\n\nThis project is licenced under the [MIT License](http://opensource.org/licenses/mit-license.html).\n\nAny bundled fonts are copyright to their respective authors and mostly under MIT or [SIL OFL](http://scripts.sil.org/OFL).\n",
        "releases": [
            {
                "name": "10.2.0",
                "date": "2024-09-15T18:06:03Z"
            },
            {
                "name": "10.1.0",
                "date": "2024-05-01T12:01:37Z"
            },
            {
                "name": "10.0.3",
                "date": "2023-12-14T08:27:16Z"
            },
            {
                "name": "10.0.2",
                "date": "2023-11-09T12:54:47Z"
            },
            {
                "name": "10.0.1",
                "date": "2023-10-26T12:51:45Z"
            },
            {
                "name": "10.0.0",
                "date": "2023-07-17T13:34:46Z"
            },
            {
                "name": "9.2.0 re-release",
                "date": "2022-06-24T20:26:52Z"
            },
            {
                "name": "9.2.0",
                "date": "2022-06-23T13:06:31Z"
            },
            {
                "name": "9.1.0",
                "date": "2022-02-13T16:53:46Z"
            },
            {
                "name": "9.0.0",
                "date": "2021-10-24T20:29:42Z"
            },
            {
                "name": "8.1.0",
                "date": "2021-02-23T15:06:18Z"
            },
            {
                "name": "8.0.0",
                "date": "2021-01-18T22:22:59Z"
            },
            {
                "name": "7.1.0",
                "date": "2020-09-10T20:59:02Z"
            },
            {
                "name": "7.0.0",
                "date": "2020-07-04T11:24:43Z"
            },
            {
                "name": "6.7.0",
                "date": "2020-07-02T20:54:51Z"
            },
            {
                "name": "6.6.0",
                "date": "2019-06-27T12:30:29Z"
            },
            {
                "name": "6.5.0",
                "date": "2019-06-06T12:27:31Z"
            },
            {
                "name": "6.4.2",
                "date": "2019-03-20T10:26:15Z"
            },
            {
                "name": "6.4.1",
                "date": "2019-03-12T22:29:30Z"
            },
            {
                "name": "6.4.0",
                "date": "2019-03-11T19:23:32Z"
            },
            {
                "name": "6.3.0",
                "date": "2019-02-13T21:27:18Z"
            },
            {
                "name": "6.2.0",
                "date": "2019-01-21T09:08:26Z"
            },
            {
                "name": "6.1.0",
                "date": "2018-11-16T19:06:08Z"
            },
            {
                "name": "6.0.2",
                "date": "2018-10-08T19:46:39Z"
            },
            {
                "name": "6.0.1",
                "date": "2018-10-04T16:59:14Z"
            },
            {
                "name": "6.0.0",
                "date": "2018-10-02T19:04:37Z"
            },
            {
                "name": "5.0.0",
                "date": "2018-07-28T08:26:14Z"
            },
            {
                "name": "4.6.0",
                "date": "2018-04-02T13:39:10Z"
            },
            {
                "name": "4.5.0",
                "date": "2018-01-08T22:33:28Z"
            },
            {
                "name": "4.4.3",
                "date": "2017-12-19T23:06:25Z"
            },
            {
                "name": "4.4.2",
                "date": "2017-10-08T09:45:51Z"
            },
            {
                "name": "4.4.1",
                "date": "2017-10-07T17:46:05Z"
            },
            {
                "name": "4.4.0",
                "date": "2017-09-16T13:34:53Z"
            },
            {
                "name": "4.3.0",
                "date": "2017-07-30T17:17:36Z"
            },
            {
                "name": "4.2.0",
                "date": "2017-05-29T19:48:39Z"
            },
            {
                "name": "4.1.1",
                "date": "2017-05-07T10:30:25Z"
            },
            {
                "name": "4.1.0",
                "date": "2017-05-04T06:25:28Z"
            },
            {
                "name": "4.0.1",
                "date": "2017-04-04T22:05:49Z"
            },
            {
                "name": "4.0.0",
                "date": "2017-01-05T21:49:26Z"
            },
            {
                "name": "3.0.0",
                "date": "2016-10-27T00:02:16Z"
            },
            {
                "name": "2.1.0",
                "date": "2016-08-24T12:44:35Z"
            },
            {
                "name": "2.0.3",
                "date": "2016-05-27T11:35:53Z"
            },
            {
                "name": "2.0.2",
                "date": "2016-05-13T08:37:05Z"
            },
            {
                "name": "2.0.1",
                "date": "2016-05-11T10:37:05Z"
            },
            {
                "name": "2.0.0",
                "date": "2016-05-09T07:16:12Z"
            },
            {
                "name": "1.3.4",
                "date": "2016-04-03T17:42:41Z"
            },
            {
                "name": "1.3.3",
                "date": "2016-03-28T02:29:18Z"
            },
            {
                "name": "1.3.2",
                "date": "2016-03-03T12:48:23Z"
            },
            {
                "name": "1.2.1",
                "date": "2016-02-22T12:58:51Z"
            },
            {
                "name": "1.2.0",
                "date": "2016-02-14T16:36:47Z"
            },
            {
                "name": "1.1.1",
                "date": "2016-01-29T15:56:51Z"
            },
            {
                "name": "1.1.0",
                "date": "2016-01-25T06:34:27Z"
            },
            {
                "name": "1.0.4",
                "date": "2015-12-28T07:41:34Z"
            },
            {
                "name": "1.0.3",
                "date": "2015-12-19T07:52:37Z"
            },
            {
                "name": "1.0.2",
                "date": "2015-12-17T18:06:39Z"
            },
            {
                "name": "1.0.1",
                "date": "2015-12-11T17:38:17Z"
            },
            {
                "name": "1.0.0",
                "date": "2015-11-29T12:36:27Z"
            },
            {
                "name": "1.0.0-rc",
                "date": "2015-11-25T14:19:24Z"
            },
            {
                "name": "0.8.5",
                "date": "2015-11-12T23:13:26Z"
            },
            {
                "name": "0.8.4",
                "date": "2015-10-28T15:01:46Z"
            },
            {
                "name": "0.8.3",
                "date": "2015-10-23T04:35:22Z"
            },
            {
                "name": "0.8.2",
                "date": "2015-10-14T17:03:58Z"
            },
            {
                "name": "0.8.1",
                "date": "2015-10-13T16:03:26Z"
            },
            {
                "name": "0.8.0",
                "date": "2015-10-13T15:48:24Z"
            },
            {
                "name": "0.7.2",
                "date": "2015-10-03T21:04:58Z"
            },
            {
                "name": "0.7.1",
                "date": "2015-09-30T18:29:10Z"
            },
            {
                "name": "0.7.0",
                "date": "2015-09-30T03:14:48Z"
            },
            {
                "name": "0.6.7",
                "date": "2015-07-27T10:17:08Z"
            },
            {
                "name": "0.6.5",
                "date": "2015-07-16T08:13:36Z"
            },
            {
                "name": "0.6.3",
                "date": "2015-07-06T10:23:14Z"
            }
        ]
    }
}