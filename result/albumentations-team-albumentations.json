{
    "https://api.github.com/repos/albumentations-team/albumentations": {
        "forks": 1660,
        "watchers": 14504,
        "stars": 14504,
        "languages": {
            "Python": 1683165,
            "Shell": 833
        },
        "commits": [
            "2025-01-19T17:26:31Z",
            "2025-01-19T00:31:35Z",
            "2025-01-19T00:08:49Z",
            "2025-01-18T23:53:35Z",
            "2025-01-18T18:20:34Z",
            "2025-01-17T21:01:06Z",
            "2025-01-17T17:52:13Z",
            "2025-01-15T20:29:27Z",
            "2025-01-14T21:41:45Z",
            "2025-01-08T19:22:12Z",
            "2025-01-08T02:43:53Z",
            "2025-01-08T02:28:48Z",
            "2025-01-08T02:08:41Z",
            "2025-01-08T01:59:45Z",
            "2025-01-08T00:50:51Z",
            "2025-01-08T00:27:45Z",
            "2025-01-08T00:10:43Z",
            "2025-01-08T00:02:04Z",
            "2025-01-07T23:49:37Z",
            "2025-01-07T23:33:46Z",
            "2025-01-07T23:10:07Z",
            "2025-01-07T22:31:04Z",
            "2025-01-07T22:06:33Z",
            "2025-01-07T21:31:05Z",
            "2025-01-07T21:17:21Z",
            "2025-01-07T20:29:36Z",
            "2025-01-07T20:19:12Z",
            "2025-01-07T20:04:44Z",
            "2025-01-07T19:51:58Z",
            "2025-01-07T19:40:54Z"
        ],
        "creation_date": "2018-06-06T03:10:50Z",
        "contributors": 30,
        "topics": [
            "augmentation",
            "deep-learning",
            "detection",
            "fast-augmentations",
            "image-augmentation",
            "image-classification",
            "image-processing",
            "image-segmentation",
            "machine-learning",
            "object-detection",
            "python",
            "segmentation"
        ],
        "subscribers": 128,
        "readme": "# Albumentations\n\n[![PyPI version](https://badge.fury.io/py/albumentations.svg)](https://badge.fury.io/py/albumentations)\n![CI](https://github.com/albumentations-team/albumentations/workflows/CI/badge.svg)\n[![PyPI Downloads](https://img.shields.io/pypi/dm/albumentations.svg?label=PyPI%20downloads)](\nhttps://pypi.org/project/albumentations/)\n[![Conda Downloads](https://img.shields.io/conda/dn/conda-forge/albumentations.svg?label=Conda%20downloads)](\nhttps://anaconda.org/conda-forge/albumentations)\n[![Stack Overflow](https://img.shields.io/badge/stackoverflow-Ask%20questions-blue.svg)](\nhttps://stackoverflow.com/questions/tagged/albumentations)\n[![License: MIT](https://img.shields.io/badge/License-MIT-brightgreen.svg)](https://opensource.org/licenses/MIT)\n[![Gurubase](https://img.shields.io/badge/Gurubase-Ask%20Albumentations%20Guru-006BFF)](https://gurubase.io/g/albumentations)\n\n[Docs](https://albumentations.ai/docs/) | [Discord](https://discord.gg/AKPrrDYNAt) | [Twitter](https://twitter.com/albumentations) | [LinkedIn](https://www.linkedin.com/company/100504475/)\n\nAlbumentations is a Python library for image augmentation. Image augmentation is used in deep learning and computer vision tasks to increase the quality of trained models. The purpose of image augmentation is to create new training samples from the existing data.\n\nHere is an example of how you can apply some [pixel-level](#pixel-level-transforms) augmentations from Albumentations to create new images from the original one:\n![parrot](https://habrastorage.org/webt/bd/ne/rv/bdnerv5ctkudmsaznhw4crsdfiw.jpeg)\n\n## Why Albumentations\n\n- **Complete Computer Vision Support**: Works with [all major CV tasks](#i-want-to-use-albumentations-for-the-specific-task-such-as-classification-or-segmentation) including classification, segmentation (semantic & instance), object detection, and pose estimation.\n- **Simple, Unified API**: [One consistent interface](#a-simple-example) for all data types - RGB/grayscale/multispectral images, masks, bounding boxes, and keypoints.\n- **Rich Augmentation Library**: [70+ high-quality augmentations](https://albumentations.ai/docs/api_reference/transforms/) to enhance your training data.\n- **Fast**: Consistently benchmarked as the [fastest augmentation library](https://albumentations.ai/docs/benchmarks/), with optimizations for production use.\n- **Deep Learning Integration**: Works with [PyTorch](https://pytorch.org/), [TensorFlow](https://www.tensorflow.org/), and other frameworks. Part of the [PyTorch ecosystem](https://pytorch.org/ecosystem/).\n- **Created by Experts**: Built by [developers with deep experience in computer vision and machine learning competitions](#authors).\n\n## Community-Driven Project, Supported By\n\nAlbumentations thrives on developer contributions. We appreciate our sponsors who help sustain the project's infrastructure.\n\n| \ud83c\udfc6 Gold Sponsors |\n|-----------------|\n| Your company could be here |\n\n| \ud83e\udd48 Silver Sponsors |\n|-------------------|\n| <a href=\"https://datature.io\" target=\"_blank\"><img src=\"https://albumentations.ai/assets/sponsors/datature-full.png\" width=\"100\" alt=\"Datature\"/></a> |\n\n| \ud83e\udd49 Bronze Sponsors |\n|-------------------|\n| <a href=\"https://roboflow.com\" target=\"_blank\"><img src=\"https://albumentations.ai/assets/sponsors/roboflow.png\" width=\"100\" alt=\"Roboflow\"/></a> |\n\n---\n\n### \ud83d\udc9d Become a Sponsor\n\nYour sponsorship is a way to say \"thank you\" to the maintainers and contributors who spend their free time building and maintaining Albumentations. Sponsors are featured on our website and README. View sponsorship tiers on [GitHub Sponsors](https://github.com/sponsors/albumentations-team)\n\n## Table of contents\n\n- [Albumentations](#albumentations)\n  - [Why Albumentations](#why-albumentations)\n  - [Community-Driven Project, Supported By](#community-driven-project-supported-by)\n    - [\ud83d\udc9d Become a Sponsor](#-become-a-sponsor)\n  - [Table of contents](#table-of-contents)\n  - [Authors](#authors)\n    - [Current Maintainer](#current-maintainer)\n    - [Emeritus Core Team Members](#emeritus-core-team-members)\n  - [Installation](#installation)\n  - [Documentation](#documentation)\n  - [A simple example](#a-simple-example)\n  - [Getting started](#getting-started)\n    - [I am new to image augmentation](#i-am-new-to-image-augmentation)\n    - [I want to use Albumentations for the specific task such as classification or segmentation](#i-want-to-use-albumentations-for-the-specific-task-such-as-classification-or-segmentation)\n    - [I want to know how to use Albumentations with deep learning frameworks](#i-want-to-know-how-to-use-albumentations-with-deep-learning-frameworks)\n    - [I want to explore augmentations and see Albumentations in action](#i-want-to-explore-augmentations-and-see-albumentations-in-action)\n  - [Who is using Albumentations](#who-is-using-albumentations)\n    - [See also](#see-also)\n  - [List of augmentations](#list-of-augmentations)\n    - [Pixel-level transforms](#pixel-level-transforms)\n    - [Spatial-level transforms](#spatial-level-transforms)\n  - [A few more examples of **augmentations**](#a-few-more-examples-of-augmentations)\n    - [Semantic segmentation on the Inria dataset](#semantic-segmentation-on-the-inria-dataset)\n    - [Medical imaging](#medical-imaging)\n    - [Object detection and semantic segmentation on the Mapillary Vistas dataset](#object-detection-and-semantic-segmentation-on-the-mapillary-vistas-dataset)\n    - [Keypoints augmentation](#keypoints-augmentation)\n  - [Benchmarking results](#benchmarking-results)\n    - [System Information](#system-information)\n    - [Benchmark Parameters](#benchmark-parameters)\n    - [Library Versions](#library-versions)\n  - [Performance Comparison](#performance-comparison)\n  - [Contributing](#contributing)\n  - [Community](#community)\n  - [Citing](#citing)\n\n## Authors\n\n### Current Maintainer\n\n[**Vladimir I. Iglovikov**](https://www.linkedin.com/in/iglovikov/) | [Kaggle Grandmaster](https://www.kaggle.com/iglovikov)\n\n### Emeritus Core Team Members\n\n[**Mikhail Druzhinin**](https://www.linkedin.com/in/mikhail-druzhinin-548229100/) | [Kaggle Expert](https://www.kaggle.com/dipetm)\n\n[**Alex Parinov**](https://www.linkedin.com/in/alex-parinov/) | [Kaggle Master](https://www.kaggle.com/creafz)\n\n[**Alexander Buslaev**](https://www.linkedin.com/in/al-buslaev/) | [Kaggle Master](https://www.kaggle.com/albuslaev)\n\n[**Eugene Khvedchenya**](https://www.linkedin.com/in/cvtalks/) | [Kaggle Grandmaster](https://www.kaggle.com/bloodaxe)\n\n## Installation\n\nAlbumentations requires Python 3.9 or higher. To install the latest version from PyPI:\n\n```bash\npip install -U albumentations\n```\n\nOther installation options are described in the [documentation](https://albumentations.ai/docs/getting_started/installation/).\n\n## Documentation\n\nThe full documentation is available at **[https://albumentations.ai/docs/](https://albumentations.ai/docs/)**.\n\n## A simple example\n\n```python\nimport albumentations as A\nimport cv2\n\n# Declare an augmentation pipeline\ntransform = A.Compose([\n    A.RandomCrop(width=256, height=256),\n    A.HorizontalFlip(p=0.5),\n    A.RandomBrightnessContrast(p=0.2),\n])\n\n# Read an image with OpenCV and convert it to the RGB colorspace\nimage = cv2.imread(\"image.jpg\")\nimage = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n\n# Augment an image\ntransformed = transform(image=image)\ntransformed_image = transformed[\"image\"]\n```\n\n## Getting started\n\n### I am new to image augmentation\n\nPlease start with the [introduction articles](https://albumentations.ai/docs/#learning-path) about why image augmentation is important and how it helps to build better models.\n\n### I want to use Albumentations for the specific task such as classification or segmentation\n\nIf you want to use Albumentations for a specific task such as classification, segmentation, or object detection, refer to the [set of articles](https://albumentations.ai/docs/#quick-start-guide) that has an in-depth description of this task. We also have a [list of examples](https://albumentations.ai/docs/examples/) on applying Albumentations for different use cases.\n\n### I want to know how to use Albumentations with deep learning frameworks\n\nWe have [examples of using Albumentations](https://albumentations.ai/docs/#examples-of-how-to-use-albumentations-with-different-deep-learning-frameworks) along with PyTorch and TensorFlow.\n\n### I want to explore augmentations and see Albumentations in action\n\nCheck the [online demo of the library](https://albumentations-demo.herokuapp.com/). With it, you can apply augmentations to different images and see the result. Also, we have a [list of all available augmentations and their targets](#list-of-augmentations).\n\n## Who is using Albumentations\n\n<a href=\"https://www.apple.com/\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/albumentations-team/albumentations.ai/main/website/public/assets/industry/apple.jpeg\" width=\"100\"/></a>\n<a href=\"https://research.google/\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/albumentations-team/albumentations.ai/main/website/public/assets/industry/google.png\" width=\"100\"/></a>\n<a href=\"https://opensource.fb.com/\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/albumentations-team/albumentations.ai/main/website/public/assets/industry/meta_research.png\" width=\"100\"/></a>\n<a href=\"https://www.nvidia.com/en-us/research/\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/albumentations-team/albumentations.ai/main/website/public/assets/industry/nvidia_research.jpeg\" width=\"100\"/></a>\n<a href=\"https://www.amazon.science/\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/albumentations-team/albumentations.ai/main/website/public/assets/industry/amazon_science.png\" width=\"100\"/></a>\n<a href=\"https://opensource.microsoft.com/\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/albumentations-team/albumentations.ai/main/website/public/assets/industry/microsoft.png\" width=\"100\"/></a>\n<a href=\"https://engineering.salesforce.com/open-source/\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/albumentations-team/albumentations.ai/main/website/public/assets/industry/salesforce_open_source.png\" width=\"100\"/></a>\n<a href=\"https://stability.ai/\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/albumentations-team/albumentations.ai/main/website/public/assets/industry/stability.png\" width=\"100\"/></a>\n<a href=\"https://www.ibm.com/opensource/\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/albumentations-team/albumentations.ai/main/website/public/assets/industry/ibm.jpeg\" width=\"100\"/></a>\n<a href=\"https://huggingface.co/\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/albumentations-team/albumentations.ai/main/website/public/assets/industry/hugging_face.png\" width=\"100\"/></a>\n<a href=\"https://www.sony.com/en/\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/albumentations-team/albumentations.ai/main/website/public/assets/industry/sony.png\" width=\"100\"/></a>\n<a href=\"https://opensource.alibaba.com/\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/albumentations-team/albumentations.ai/main/website/public/assets/industry/alibaba.png\" width=\"100\"/></a>\n<a href=\"https://opensource.tencent.com/\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/albumentations-team/albumentations.ai/main/website/public/assets/industry/tencent.png\" width=\"100\"/></a>\n<a href=\"https://h2o.ai/\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/albumentations-team/albumentations.ai/main/website/public/assets/industry/h2o_ai.png\" width=\"100\"/></a>\n\n### See also\n\n- [A list of papers that cite Albumentations](https://scholar.google.com/citations?view_op=view_citation&citation_for_view=vkjh9X0AAAAJ:r0BpntZqJG4C).\n- [Open source projects that use Albumentations](https://github.com/albumentations-team/albumentations/network/dependents?dependent_type=PACKAGE).\n\n## List of augmentations\n\n### Pixel-level transforms\n\nPixel-level transforms will change just an input image and will leave any additional targets such as masks, bounding boxes, and keypoints unchanged. For volumetric data (volumes and 3D masks), these transforms are applied independently to each slice along the Z-axis (depth dimension), maintaining consistency across the volume. The list of pixel-level transforms:\n\n- [AdditiveNoise](https://explore.albumentations.ai/transform/AdditiveNoise)\n- [AdvancedBlur](https://explore.albumentations.ai/transform/AdvancedBlur)\n- [AutoContrast](https://explore.albumentations.ai/transform/AutoContrast)\n- [Blur](https://explore.albumentations.ai/transform/Blur)\n- [CLAHE](https://explore.albumentations.ai/transform/CLAHE)\n- [ChannelDropout](https://explore.albumentations.ai/transform/ChannelDropout)\n- [ChannelShuffle](https://explore.albumentations.ai/transform/ChannelShuffle)\n- [ChromaticAberration](https://explore.albumentations.ai/transform/ChromaticAberration)\n- [ColorJitter](https://explore.albumentations.ai/transform/ColorJitter)\n- [Defocus](https://explore.albumentations.ai/transform/Defocus)\n- [Downscale](https://explore.albumentations.ai/transform/Downscale)\n- [Emboss](https://explore.albumentations.ai/transform/Emboss)\n- [Equalize](https://explore.albumentations.ai/transform/Equalize)\n- [FDA](https://explore.albumentations.ai/transform/FDA)\n- [FancyPCA](https://explore.albumentations.ai/transform/FancyPCA)\n- [FromFloat](https://explore.albumentations.ai/transform/FromFloat)\n- [GaussNoise](https://explore.albumentations.ai/transform/GaussNoise)\n- [GaussianBlur](https://explore.albumentations.ai/transform/GaussianBlur)\n- [GlassBlur](https://explore.albumentations.ai/transform/GlassBlur)\n- [HistogramMatching](https://explore.albumentations.ai/transform/HistogramMatching)\n- [HueSaturationValue](https://explore.albumentations.ai/transform/HueSaturationValue)\n- [ISONoise](https://explore.albumentations.ai/transform/ISONoise)\n- [Illumination](https://explore.albumentations.ai/transform/Illumination)\n- [ImageCompression](https://explore.albumentations.ai/transform/ImageCompression)\n- [InvertImg](https://explore.albumentations.ai/transform/InvertImg)\n- [MedianBlur](https://explore.albumentations.ai/transform/MedianBlur)\n- [MotionBlur](https://explore.albumentations.ai/transform/MotionBlur)\n- [MultiplicativeNoise](https://explore.albumentations.ai/transform/MultiplicativeNoise)\n- [Normalize](https://explore.albumentations.ai/transform/Normalize)\n- [PixelDistributionAdaptation](https://explore.albumentations.ai/transform/PixelDistributionAdaptation)\n- [PlanckianJitter](https://explore.albumentations.ai/transform/PlanckianJitter)\n- [PlasmaBrightnessContrast](https://explore.albumentations.ai/transform/PlasmaBrightnessContrast)\n- [PlasmaShadow](https://explore.albumentations.ai/transform/PlasmaShadow)\n- [Posterize](https://explore.albumentations.ai/transform/Posterize)\n- [RGBShift](https://explore.albumentations.ai/transform/RGBShift)\n- [RandomBrightnessContrast](https://explore.albumentations.ai/transform/RandomBrightnessContrast)\n- [RandomFog](https://explore.albumentations.ai/transform/RandomFog)\n- [RandomGamma](https://explore.albumentations.ai/transform/RandomGamma)\n- [RandomGravel](https://explore.albumentations.ai/transform/RandomGravel)\n- [RandomRain](https://explore.albumentations.ai/transform/RandomRain)\n- [RandomShadow](https://explore.albumentations.ai/transform/RandomShadow)\n- [RandomSnow](https://explore.albumentations.ai/transform/RandomSnow)\n- [RandomSunFlare](https://explore.albumentations.ai/transform/RandomSunFlare)\n- [RandomToneCurve](https://explore.albumentations.ai/transform/RandomToneCurve)\n- [RingingOvershoot](https://explore.albumentations.ai/transform/RingingOvershoot)\n- [SaltAndPepper](https://explore.albumentations.ai/transform/SaltAndPepper)\n- [Sharpen](https://explore.albumentations.ai/transform/Sharpen)\n- [ShotNoise](https://explore.albumentations.ai/transform/ShotNoise)\n- [Solarize](https://explore.albumentations.ai/transform/Solarize)\n- [Spatter](https://explore.albumentations.ai/transform/Spatter)\n- [Superpixels](https://explore.albumentations.ai/transform/Superpixels)\n- [TemplateTransform](https://explore.albumentations.ai/transform/TemplateTransform)\n- [TextImage](https://explore.albumentations.ai/transform/TextImage)\n- [ToFloat](https://explore.albumentations.ai/transform/ToFloat)\n- [ToGray](https://explore.albumentations.ai/transform/ToGray)\n- [ToRGB](https://explore.albumentations.ai/transform/ToRGB)\n- [ToSepia](https://explore.albumentations.ai/transform/ToSepia)\n- [UnsharpMask](https://explore.albumentations.ai/transform/UnsharpMask)\n- [ZoomBlur](https://explore.albumentations.ai/transform/ZoomBlur)\n\n### Spatial-level transforms\n\nSpatial-level transforms will simultaneously change both an input image as well as additional targets such as masks, bounding boxes, and keypoints. For volumetric data (volumes and 3D masks), these transforms are applied independently to each slice along the Z-axis (depth dimension), maintaining consistency across the volume. The following table shows which additional targets are supported by each transform:\n\n- Volume: 3D array of shape (D, H, W) or (D, H, W, C) where D is depth, H is height, W is width, and C is number of channels (optional)\n- Mask3D: Binary or multi-class 3D mask of shape (D, H, W) where each slice represents segmentation for the corresponding volume slice\n\n| Transform                                                                                        | Image | Mask | BBoxes | Keypoints | Volume | Mask3D |\n| ------------------------------------------------------------------------------------------------ | :---: | :--: | :----: | :-------: | :----: | :----: |\n| [Affine](https://explore.albumentations.ai/transform/Affine)                                     | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [AtLeastOneBBoxRandomCrop](https://explore.albumentations.ai/transform/AtLeastOneBBoxRandomCrop) | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [BBoxSafeRandomCrop](https://explore.albumentations.ai/transform/BBoxSafeRandomCrop)             | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [CenterCrop](https://explore.albumentations.ai/transform/CenterCrop)                             | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [CoarseDropout](https://explore.albumentations.ai/transform/CoarseDropout)                       | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [ConstrainedCoarseDropout](https://explore.albumentations.ai/transform/ConstrainedCoarseDropout) | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [Crop](https://explore.albumentations.ai/transform/Crop)                                         | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [CropAndPad](https://explore.albumentations.ai/transform/CropAndPad)                             | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [CropNonEmptyMaskIfExists](https://explore.albumentations.ai/transform/CropNonEmptyMaskIfExists) | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [D4](https://explore.albumentations.ai/transform/D4)                                             | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [ElasticTransform](https://explore.albumentations.ai/transform/ElasticTransform)                 | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [Erasing](https://explore.albumentations.ai/transform/Erasing)                                   | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [FrequencyMasking](https://explore.albumentations.ai/transform/FrequencyMasking)                 | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [GridDistortion](https://explore.albumentations.ai/transform/GridDistortion)                     | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [GridDropout](https://explore.albumentations.ai/transform/GridDropout)                           | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [GridElasticDeform](https://explore.albumentations.ai/transform/GridElasticDeform)               | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [HorizontalFlip](https://explore.albumentations.ai/transform/HorizontalFlip)                     | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [Lambda](https://explore.albumentations.ai/transform/Lambda)                                     | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [LongestMaxSize](https://explore.albumentations.ai/transform/LongestMaxSize)                     | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [MaskDropout](https://explore.albumentations.ai/transform/MaskDropout)                           | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [Morphological](https://explore.albumentations.ai/transform/Morphological)                       | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [NoOp](https://explore.albumentations.ai/transform/NoOp)                                         | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [OpticalDistortion](https://explore.albumentations.ai/transform/OpticalDistortion)               | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [OverlayElements](https://explore.albumentations.ai/transform/OverlayElements)                   | \u2713     | \u2713    |        |           |        |        |\n| [Pad](https://explore.albumentations.ai/transform/Pad)                                           | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [PadIfNeeded](https://explore.albumentations.ai/transform/PadIfNeeded)                           | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [Perspective](https://explore.albumentations.ai/transform/Perspective)                           | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [PiecewiseAffine](https://explore.albumentations.ai/transform/PiecewiseAffine)                   | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [PixelDropout](https://explore.albumentations.ai/transform/PixelDropout)                         | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [RandomCrop](https://explore.albumentations.ai/transform/RandomCrop)                             | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [RandomCropFromBorders](https://explore.albumentations.ai/transform/RandomCropFromBorders)       | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [RandomCropNearBBox](https://explore.albumentations.ai/transform/RandomCropNearBBox)             | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [RandomGridShuffle](https://explore.albumentations.ai/transform/RandomGridShuffle)               | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [RandomResizedCrop](https://explore.albumentations.ai/transform/RandomResizedCrop)               | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [RandomRotate90](https://explore.albumentations.ai/transform/RandomRotate90)                     | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [RandomScale](https://explore.albumentations.ai/transform/RandomScale)                           | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [RandomSizedBBoxSafeCrop](https://explore.albumentations.ai/transform/RandomSizedBBoxSafeCrop)   | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [RandomSizedCrop](https://explore.albumentations.ai/transform/RandomSizedCrop)                   | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [Resize](https://explore.albumentations.ai/transform/Resize)                                     | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [Rotate](https://explore.albumentations.ai/transform/Rotate)                                     | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [SafeRotate](https://explore.albumentations.ai/transform/SafeRotate)                             | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [ShiftScaleRotate](https://explore.albumentations.ai/transform/ShiftScaleRotate)                 | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [SmallestMaxSize](https://explore.albumentations.ai/transform/SmallestMaxSize)                   | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [ThinPlateSpline](https://explore.albumentations.ai/transform/ThinPlateSpline)                   | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [TimeMasking](https://explore.albumentations.ai/transform/TimeMasking)                           | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [TimeReverse](https://explore.albumentations.ai/transform/TimeReverse)                           | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [Transpose](https://explore.albumentations.ai/transform/Transpose)                               | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [VerticalFlip](https://explore.albumentations.ai/transform/VerticalFlip)                         | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n| [XYMasking](https://explore.albumentations.ai/transform/XYMasking)                               | \u2713     | \u2713    | \u2713      | \u2713         | \u2713      | \u2713      |\n\n### 3D transforms\n\n3D transforms operate on volumetric data and can modify both the input volume and associated 3D mask.\n\nWhere:\n\n- Volume: 3D array of shape (D, H, W) or (D, H, W, C) where D is depth, H is height, W is width, and C is number of channels (optional)\n- Mask3D: Binary or multi-class 3D mask of shape (D, H, W) where each slice represents segmentation for the corresponding volume slice\n\n| Transform                                                                      | Volume | Mask3D | Keypoints |\n| ------------------------------------------------------------------------------ | :----: | :----: | :-------: |\n| [CenterCrop3D](https://explore.albumentations.ai/transform/CenterCrop3D)       | \u2713      | \u2713      | \u2713         |\n| [CoarseDropout3D](https://explore.albumentations.ai/transform/CoarseDropout3D) | \u2713      | \u2713      | \u2713         |\n| [CubicSymmetry](https://explore.albumentations.ai/transform/CubicSymmetry)     | \u2713      | \u2713      | \u2713         |\n| [Pad3D](https://explore.albumentations.ai/transform/Pad3D)                     | \u2713      | \u2713      | \u2713         |\n| [PadIfNeeded3D](https://explore.albumentations.ai/transform/PadIfNeeded3D)     | \u2713      | \u2713      | \u2713         |\n| [RandomCrop3D](https://explore.albumentations.ai/transform/RandomCrop3D)       | \u2713      | \u2713      | \u2713         |\n\n## A few more examples of **augmentations**\n\n### Semantic segmentation on the Inria dataset\n\n![inria](https://habrastorage.org/webt/su/wa/np/suwanpeo6ww7wpwtobtrzd_cg20.jpeg)\n\n### Medical imaging\n\n![medical](https://habrastorage.org/webt/1i/fi/wz/1ifiwzy0lxetc4nwjvss-71nkw0.jpeg)\n\n### Object detection and semantic segmentation on the Mapillary Vistas dataset\n\n![vistas](https://habrastorage.org/webt/rz/-h/3j/rz-h3jalbxic8o_fhucxysts4tc.jpeg)\n\n### Keypoints augmentation\n\n<img src=\"https://habrastorage.org/webt/e-/6k/z-/e-6kz-fugp2heak3jzns3bc-r8o.jpeg\" width=100%>\n\n## Benchmarking results\n\n### System Information\n\n- Platform: macOS-15.0.1-arm64-arm-64bit\n- Processor: arm\n- CPU Count: 10\n- Python Version: 3.12.7\n\n### Benchmark Parameters\n\n- Number of images: 1000\n- Runs per transform: 10\n- Max warmup iterations: 1000\n\n### Library Versions\n\n- albumentations: 1.4.20\n- augly: 1.0.0\n- imgaug: 0.4.0\n- kornia: 0.7.3\n- torchvision: 0.20.0\n\n## Performance Comparison\n\nNumber - is the number of uint8 RGB images processed per second on a single CPU core. Higher is better.\n\n| Transform         | albumentations<br>1.4.20   | augly<br>1.0.0   | imgaug<br>0.4.0   | kornia<br>0.7.3   | torchvision<br>0.20.0   |\n|:------------------|:---------------------------|:-----------------|:------------------|:------------------|:------------------------|\n| HorizontalFlip    | **8618 \u00b1 1233**            | 4807 \u00b1 818       | 6042 \u00b1 788        | 390 \u00b1 106         | 914 \u00b1 67                |\n| VerticalFlip      | **22847 \u00b1 2031**           | 9153 \u00b1 1291      | 10931 \u00b1 1844      | 1212 \u00b1 402        | 3198 \u00b1 200              |\n| Rotate            | **1146 \u00b1 79**              | 1119 \u00b1 41        | 1136 \u00b1 218        | 143 \u00b1 11          | 181 \u00b1 11                |\n| Affine            | 682 \u00b1 192                  | -                | **774 \u00b1 97**      | 147 \u00b1 9           | 130 \u00b1 12                |\n| Equalize          | **892 \u00b1 61**               | -                | 581 \u00b1 54          | 152 \u00b1 19          | 479 \u00b1 12                |\n| RandomCrop80      | **47341 \u00b1 20523**          | 25272 \u00b1 1822     | 11503 \u00b1 441       | 1510 \u00b1 230        | 32109 \u00b1 1241            |\n| ShiftRGB          | **2349 \u00b1 76**              | -                | 1582 \u00b1 65         | -                 | -                       |\n| Resize            | **2316 \u00b1 166**             | 611 \u00b1 78         | 1806 \u00b1 63         | 232 \u00b1 24          | 195 \u00b1 4                 |\n| RandomGamma       | **8675 \u00b1 274**             | -                | 2318 \u00b1 269        | 108 \u00b1 13          | -                       |\n| Grayscale         | **3056 \u00b1 47**              | 2720 \u00b1 932       | 1681 \u00b1 156        | 289 \u00b1 75          | 1838 \u00b1 130              |\n| RandomPerspective | 412 \u00b1 38                   | -                | **554 \u00b1 22**      | 86 \u00b1 11           | 96 \u00b1 5                  |\n| GaussianBlur      | **1728 \u00b1 89**              | 242 \u00b1 4          | 1090 \u00b1 65         | 176 \u00b1 18          | 79 \u00b1 3                  |\n| MedianBlur        | **868 \u00b1 60**               | -                | 813 \u00b1 30          | 5 \u00b1 0             | -                       |\n| MotionBlur        | **4047 \u00b1 67**              | -                | 612 \u00b1 18          | 73 \u00b1 2            | -                       |\n| Posterize         | **9094 \u00b1 301**             | -                | 2097 \u00b1 68         | 430 \u00b1 49          | 3196 \u00b1 185              |\n| JpegCompression   | **918 \u00b1 23**               | 778 \u00b1 5          | 459 \u00b1 35          | 71 \u00b1 3            | 625 \u00b1 17                |\n| GaussianNoise     | 166 \u00b1 12                   | 67 \u00b1 2           | **206 \u00b1 11**      | 75 \u00b1 1            | -                       |\n| Elastic           | 201 \u00b1 5                    | -                | **235 \u00b1 20**      | 1 \u00b1 0             | 2 \u00b1 0                   |\n| Clahe             | **454 \u00b1 22**               | -                | 335 \u00b1 43          | 94 \u00b1 9            | -                       |\n| CoarseDropout     | **13368 \u00b1 744**            | -                | 671 \u00b1 38          | 536 \u00b1 87          | -                       |\n| Blur              | **5267 \u00b1 543**             | 246 \u00b1 3          | 3807 \u00b1 325        | -                 | -                       |\n| ColorJitter       | **628 \u00b1 55**               | 255 \u00b1 13         | -                 | 55 \u00b1 18           | 46 \u00b1 2                  |\n| Brightness        | **8956 \u00b1 300**             | 1163 \u00b1 86        | -                 | 472 \u00b1 101         | 429 \u00b1 20                |\n| Contrast          | **8879 \u00b1 1426**            | 736 \u00b1 79         | -                 | 425 \u00b1 52          | 335 \u00b1 35                |\n| RandomResizedCrop | **2828 \u00b1 186**             | -                | -                 | 287 \u00b1 58          | 511 \u00b1 10                |\n| Normalize         | **1196 \u00b1 56**              | -                | -                 | 626 \u00b1 40          | 519 \u00b1 12                |\n| PlankianJitter    | **2204 \u00b1 385**             | -                | -                 | 813 \u00b1 211         | -                       |\n\n## Contributing\n\nTo create a pull request to the repository, follow the documentation at [CONTRIBUTING.md](CONTRIBUTING.md)\n\n![https://github.com/albuemntations-team/albumentation/graphs/contributors](https://contrib.rocks/image?repo=albumentations-team/albumentations)\n\n## Community\n\n- [LinkedIn](https://www.linkedin.com/company/albumentations/)\n- [Twitter](https://twitter.com/albumentations)\n- [Discord](https://discord.gg/AKPrrDYNAt)\n\n## Citing\n\nIf you find this library useful for your research, please consider citing [Albumentations: Fast and Flexible Image Augmentations](https://www.mdpi.com/2078-2489/11/2/125):\n\n```bibtex\n@Article{info11020125,\n    AUTHOR = {Buslaev, Alexander and Iglovikov, Vladimir I. and Khvedchenya, Eugene and Parinov, Alex and Druzhinin, Mikhail and Kalinin, Alexandr A.},\n    TITLE = {Albumentations: Fast and Flexible Image Augmentations},\n    JOURNAL = {Information},\n    VOLUME = {11},\n    YEAR = {2020},\n    NUMBER = {2},\n    ARTICLE-NUMBER = {125},\n    URL = {https://www.mdpi.com/2078-2489/11/2/125},\n    ISSN = {2078-2489},\n    DOI = {10.3390/info11020125}\n}\n```\n",
        "releases": [
            {
                "name": "Albumentations 2.0.0 Release Notes",
                "date": "2025-01-08T20:24:20Z"
            },
            {
                "name": "Albumentations 1.4.24 Release Notes",
                "date": "2024-12-24T21:59:11Z"
            },
            {
                "name": "Albumentations 1.4.23 Release Notes",
                "date": "2024-12-17T21:35:12Z"
            },
            {
                "name": "Albumentations 1.4.22 Release Notes",
                "date": "2024-12-06T21:42:20Z"
            },
            {
                "name": "Albumentations 1.4.21 Release Notes",
                "date": "2024-11-01T00:15:41Z"
            },
            {
                "name": "Albumentations 1.4.20 Release Notes",
                "date": "2024-10-24T23:45:42Z"
            },
            {
                "name": "Albumentations 1.4.19 Release Notes",
                "date": "2024-10-23T20:36:23Z"
            },
            {
                "name": "Albumentations 1.4.18 Release Notes",
                "date": "2024-10-08T22:32:19Z"
            },
            {
                "name": "Albumentations 1.4.17 Release Notes",
                "date": "2024-09-30T22:33:41Z"
            },
            {
                "name": "Albumentations 1.4.16 Release Notes",
                "date": "2024-09-22T20:42:05Z"
            },
            {
                "name": "Albumentations 1.4.15 Release Notes",
                "date": "2024-09-13T01:54:23Z"
            },
            {
                "name": "Albumentations 1.4.14 Release Notes",
                "date": "2024-08-16T00:22:58Z"
            },
            {
                "name": "1.4.13",
                "date": "2024-08-05T23:00:36Z"
            },
            {
                "name": "Albumentations 1.4.12 Release Notes",
                "date": "2024-07-27T00:28:08Z"
            },
            {
                "name": "Albumentations 1.4.11 Release Notes",
                "date": "2024-07-05T02:10:23Z"
            },
            {
                "name": "Hotfix release with fixes for RandomGauss",
                "date": "2024-06-19T22:13:17Z"
            },
            {
                "name": "Albumentations 1.4.9 Release Notes",
                "date": "2024-06-18T20:15:47Z"
            },
            {
                "name": "Albumentations 1.4.8 Release Notes",
                "date": "2024-05-28T23:52:07Z"
            },
            {
                "name": "Albumentations 1.4.7 Release Notes",
                "date": "2024-05-14T00:43:00Z"
            },
            {
                "name": "Albumentations 1.4.6 Release Notes",
                "date": "2024-05-04T05:33:38Z"
            },
            {
                "name": "Albumentations 1.4.5 Release Notes",
                "date": "2024-05-03T01:40:16Z"
            },
            {
                "name": "Albumentations 1.4.4 Release Notes",
                "date": "2024-04-17T02:43:35Z"
            },
            {
                "name": "Albumentations 1.4.3 Release Notes",
                "date": "2024-04-03T01:50:38Z"
            },
            {
                "name": "1.4.2",
                "date": "2024-03-18T23:02:05Z"
            },
            {
                "name": "1.4.1",
                "date": "2024-03-05T00:25:37Z"
            },
            {
                "name": "1.4.0",
                "date": "2024-02-17T21:19:08Z"
            },
            {
                "name": "1.3.1",
                "date": "2023-06-10T07:44:08Z"
            },
            {
                "name": "1.3.0",
                "date": "2022-09-20T07:33:54Z"
            },
            {
                "name": "1.2.1",
                "date": "2022-07-12T13:42:54Z"
            },
            {
                "name": "1.2.0",
                "date": "2022-06-15T08:27:06Z"
            },
            {
                "name": "1.1.0",
                "date": "2021-10-04T09:30:05Z"
            },
            {
                "name": "1.0.3",
                "date": "2021-07-15T10:11:54Z"
            },
            {
                "name": "1.0.2",
                "date": "2021-07-09T10:34:29Z"
            },
            {
                "name": "1.0.1",
                "date": "2021-07-06T13:14:16Z"
            },
            {
                "name": "1.0.0",
                "date": "2021-06-01T11:28:30Z"
            },
            {
                "name": "0.5.2",
                "date": "2020-11-29T14:29:44Z"
            },
            {
                "name": "0.5.1",
                "date": "2020-11-02T16:53:22Z"
            },
            {
                "name": "0.5.0",
                "date": "2020-10-19T18:34:55Z"
            },
            {
                "name": "0.4.6",
                "date": "2020-07-19T14:49:51Z"
            },
            {
                "name": "0.4.0",
                "date": "2019-10-14T17:02:40Z"
            },
            {
                "name": "0.3.0 Release",
                "date": "2019-06-26T19:35:03Z"
            },
            {
                "name": "0.2.0 Release",
                "date": "2019-03-04T19:31:57Z"
            },
            {
                "name": "Extended bounding boxes support. New transformations. New notebooks with examples. A lot of bugfixes.",
                "date": "2018-09-26T12:06:36Z"
            }
        ]
    }
}