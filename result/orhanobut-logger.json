{
    "https://api.github.com/repos/orhanobut/logger": {
        "forks": 2141,
        "watchers": 13842,
        "stars": 13842,
        "languages": {
            "Java": 35839,
            "Kotlin": 21529
        },
        "commits": [
            "2021-05-02T10:42:04Z",
            "2021-03-22T13:26:01Z",
            "2018-04-10T07:53:13Z",
            "2018-04-10T07:52:11Z",
            "2018-04-07T13:35:00Z",
            "2018-04-07T13:34:01Z",
            "2018-04-01T05:26:18Z",
            "2018-04-01T05:08:59Z",
            "2018-04-01T04:47:58Z",
            "2018-04-01T04:38:21Z",
            "2018-04-01T04:37:09Z",
            "2018-04-01T04:07:28Z",
            "2018-04-01T04:06:51Z",
            "2018-03-24T05:04:56Z",
            "2018-03-24T04:56:44Z",
            "2018-03-24T04:42:50Z",
            "2018-03-22T10:59:16Z",
            "2018-03-22T10:55:38Z",
            "2018-03-22T10:55:08Z",
            "2018-03-13T10:52:40Z",
            "2018-03-13T10:45:40Z",
            "2018-03-13T10:24:36Z",
            "2018-03-13T09:39:43Z",
            "2018-03-13T09:02:44Z",
            "2018-03-13T08:29:05Z",
            "2018-03-13T08:19:25Z",
            "2018-03-13T08:13:11Z",
            "2018-02-26T14:01:36Z",
            "2018-02-26T13:47:57Z",
            "2017-06-06T11:55:14Z"
        ],
        "creation_date": "2015-03-20T22:30:12Z",
        "contributors": 11,
        "topics": [
            "android",
            "java",
            "json-logging",
            "log",
            "logcat",
            "logger",
            "pretty-printer",
            "timber"
        ],
        "subscribers": 369,
        "readme": "[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Logger-brightgreen.svg?style=flat)](http://android-arsenal.com/details/1/1658) [![](https://img.shields.io/badge/AndroidWeekly-%23147-blue.svg)](http://androidweekly.net/issues/issue-147)\n[![Join the chat at https://gitter.im/orhanobut/logger](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/orhanobut/logger?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) <a href=\"http://www.methodscount.com/?lib=com.orhanobut%3Alogger%3A2.0.0\"><img src=\"https://img.shields.io/badge/Methods and size-198 | 18 KB-e91e63.svg\"/></a> [![Build Status](https://travis-ci.org/orhanobut/logger.svg?branch=master)](https://travis-ci.org/orhanobut/logger)\n\n<img align=\"right\" src='https://github.com/orhanobut/logger/blob/master/art/logger-logo.png' width='128' height='128'/>\n\n### Logger\nSimple, pretty and powerful logger for android\n\n### Setup\nDownload\n```groovy\nimplementation 'com.orhanobut:logger:2.2.0'\n```\n\nInitialize\n```java\nLogger.addLogAdapter(new AndroidLogAdapter());\n```\nAnd use\n```java\nLogger.d(\"hello\");\n```\n\n### Output\n<img src='https://github.com/orhanobut/logger/blob/master/art/logger_output.png'/>\n\n\n### Options\n```java\nLogger.d(\"debug\");\nLogger.e(\"error\");\nLogger.w(\"warning\");\nLogger.v(\"verbose\");\nLogger.i(\"information\");\nLogger.wtf(\"What a Terrible Failure\");\n```\n\nString format arguments are supported\n```java\nLogger.d(\"hello %s\", \"world\");\n```\n\nCollections are supported (only available for debug logs)\n```java\nLogger.d(MAP);\nLogger.d(SET);\nLogger.d(LIST);\nLogger.d(ARRAY);\n```\n\nJson and Xml support (output will be in debug level)\n```java\nLogger.json(JSON_CONTENT);\nLogger.xml(XML_CONTENT);\n```\n\n### Advanced\n```java\nFormatStrategy formatStrategy = PrettyFormatStrategy.newBuilder()\n  .showThreadInfo(false)  // (Optional) Whether to show thread info or not. Default true\n  .methodCount(0)         // (Optional) How many method line to show. Default 2\n  .methodOffset(7)        // (Optional) Hides internal method calls up to offset. Default 5\n  .logStrategy(customLog) // (Optional) Changes the log strategy to print out. Default LogCat\n  .tag(\"My custom tag\")   // (Optional) Global tag for every log. Default PRETTY_LOGGER\n  .build();\n\nLogger.addLogAdapter(new AndroidLogAdapter(formatStrategy));\n```\n\n### Loggable\nLog adapter checks whether the log should be printed or not by checking this function.\nIf you want to disable/hide logs for output, override `isLoggable` method. \n`true` will print the log message, `false` will ignore it.\n```java\nLogger.addLogAdapter(new AndroidLogAdapter() {\n  @Override public boolean isLoggable(int priority, String tag) {\n    return BuildConfig.DEBUG;\n  }\n});\n```\n\n### Save logs to the file\n//TODO: More information will be added later\n```java\nLogger.addLogAdapter(new DiskLogAdapter());\n```\n\nAdd custom tag to Csv format strategy\n```java\nFormatStrategy formatStrategy = CsvFormatStrategy.newBuilder()\n  .tag(\"custom\")\n  .build();\n  \nLogger.addLogAdapter(new DiskLogAdapter(formatStrategy));\n```\n\n### How it works\n<img src='https://github.com/orhanobut/logger/blob/master/art/how_it_works.png'/>\n\n\n### More\n- Use filter for a better result. PRETTY_LOGGER or your custom tag\n- Make sure that wrap option is disabled\n- You can also simplify output by changing settings.\n\n<img src='https://github.com/orhanobut/logger/blob/master/art/logcat_options.png'/>\n\n- Timber Integration\n```java\n// Set methodOffset to 5 in order to hide internal method calls\nTimber.plant(new Timber.DebugTree() {\n  @Override protected void log(int priority, String tag, String message, Throwable t) {\n    Logger.log(priority, tag, message, t);\n  }\n});\n```\n\n### License\n<pre>\nCopyright 2018 Orhan Obut\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n</pre>\n",
        "releases": [
            {
                "name": "2.2.0",
                "date": "2018-03-24T05:07:52Z"
            },
            {
                "name": "2.1.1",
                "date": "2017-06-06T11:56:31Z"
            },
            {
                "name": "2.1.0",
                "date": "2017-05-28T22:34:51Z"
            },
            {
                "name": "2.0.0",
                "date": "2017-05-27T15:18:52Z"
            },
            {
                "name": "1.15",
                "date": "2017-05-27T14:01:35Z"
            },
            {
                "name": "1.12 release",
                "date": "2015-10-06T12:10:27Z"
            },
            {
                "name": "v11-release",
                "date": "2015-08-02T10:01:02Z"
            },
            {
                "name": "v1.10 release",
                "date": "2015-05-30T10:07:11Z"
            },
            {
                "name": "v1.9 Release",
                "date": "2015-05-25T09:36:53Z"
            },
            {
                "name": "",
                "date": "2015-04-13T10:56:28Z"
            },
            {
                "name": "",
                "date": "2015-04-13T08:07:22Z"
            },
            {
                "name": "",
                "date": "2015-04-12T18:09:54Z"
            },
            {
                "name": "",
                "date": "2015-04-09T20:06:31Z"
            },
            {
                "name": "bug fixes",
                "date": "2015-03-28T15:43:48Z"
            },
            {
                "name": "",
                "date": "2015-03-23T23:04:37Z"
            },
            {
                "name": "",
                "date": "2015-03-21T10:24:25Z"
            }
        ]
    }
}