{
    "https://api.github.com/repos/BYVoid/OpenCC": {
        "forks": 990,
        "watchers": 8668,
        "stars": 8668,
        "languages": {
            "C++": 225426,
            "Python": 21819,
            "CMake": 17320,
            "Starlark": 15268,
            "JavaScript": 7141,
            "Makefile": 2712,
            "Shell": 2460,
            "Batchfile": 1349,
            "TypeScript": 912,
            "C": 731
        },
        "commits": [
            "2024-11-14T21:10:58Z",
            "2024-11-02T09:20:54Z",
            "2024-11-02T08:32:10Z",
            "2024-10-20T09:18:15Z",
            "2024-09-09T09:27:54Z",
            "2024-08-11T04:14:39Z",
            "2024-08-26T19:54:36Z",
            "2024-08-03T03:42:09Z",
            "2024-07-30T05:33:03Z",
            "2024-07-30T03:27:20Z",
            "2024-07-30T03:18:06Z",
            "2024-07-30T02:51:18Z",
            "2024-07-30T02:38:37Z",
            "2024-07-29T15:22:54Z",
            "2024-07-29T15:01:23Z",
            "2024-07-29T14:50:36Z",
            "2024-07-28T02:40:31Z",
            "2024-07-27T04:15:48Z",
            "2024-07-27T03:44:40Z",
            "2024-07-27T03:39:52Z",
            "2024-07-27T03:27:25Z",
            "2024-07-27T03:20:01Z",
            "2024-07-26T22:45:20Z",
            "2024-07-26T22:42:48Z",
            "2024-07-26T21:35:01Z",
            "2024-07-26T21:32:29Z",
            "2024-07-26T21:15:19Z",
            "2024-07-26T20:59:34Z",
            "2024-07-26T20:54:07Z",
            "2024-07-26T20:39:41Z"
        ],
        "creation_date": "2010-07-15T13:02:03Z",
        "contributors": 30,
        "topics": [
            "chinese-translation",
            "simplified-chinese",
            "traditional-chinese"
        ],
        "subscribers": 208,
        "readme": "# Open Chinese Convert \u958b\u653e\u4e2d\u6587\u8f49\u63db\n\n[![CMake](https://github.com/BYVoid/OpenCC/actions/workflows/cmake.yml/badge.svg)](https://github.com/BYVoid/OpenCC/actions/workflows/cmake.yml)\n[![Bazel](https://github.com/BYVoid/OpenCC/actions/workflows/bazel.yml/badge.svg)](https://github.com/BYVoid/OpenCC/actions/workflows/bazel.yml)\n[![MSVC](https://github.com/BYVoid/OpenCC/actions/workflows/msvc.yml/badge.svg)](https://github.com/BYVoid/OpenCC/actions/workflows/msvc.yml)\n[![Node.js CI](https://github.com/BYVoid/OpenCC/actions/workflows/nodejs.yml/badge.svg)](https://github.com/BYVoid/OpenCC/actions/workflows/nodejs.yml)\n[![Python CI](https://github.com/BYVoid/OpenCC/actions/workflows/python.yml/badge.svg)](https://github.com/BYVoid/OpenCC/actions/workflows/python.yml)\n[![AppVeyor](https://img.shields.io/appveyor/ci/Carbo/OpenCC.svg)](https://ci.appveyor.com/project/Carbo/OpenCC)\n\n## Introduction \u4ecb\u7d39\n\n![OpenCC](https://opencc.byvoid.com/img/opencc.png)\n\nOpen Chinese Convert (OpenCC, \u958b\u653e\u4e2d\u6587\u8f49\u63db) is an opensource project for conversions between Traditional Chinese, Simplified Chinese and Japanese Kanji (Shinjitai). It supports character-level and phrase-level conversion, character variant conversion and regional idioms among Mainland China, Taiwan and Hong Kong. This is not translation tool between Mandarin and Cantonese, etc.\n\n\u4e2d\u6587\u7c21\u7e41\u8f49\u63db\u958b\u6e90\u9805\u76ee\uff0c\u652f\u6301\u8a5e\u5f59\u7d1a\u5225\u7684\u8f49\u63db\u3001\u7570\u9ad4\u5b57\u8f49\u63db\u548c\u5730\u5340\u7fd2\u6163\u7528\u8a5e\u8f49\u63db\uff08\u4e2d\u570b\u5927\u9678\u3001\u81fa\u7063\u3001\u9999\u6e2f\u3001\u65e5\u672c\u65b0\u5b57\u9ad4\uff09\u3002\u4e0d\u63d0\u4f9b\u666e\u901a\u8a71\u8207\u7cb5\u8a9e\u7684\u8f49\u63db\u3002\n\nDiscussion (Telegram): https://t.me/open_chinese_convert\n\n### Features \u7279\u9ede\n\n* \u56b4\u683c\u5340\u5206\u300c\u4e00\u7c21\u5c0d\u591a\u7e41\u300d\u548c\u300c\u4e00\u7c21\u5c0d\u591a\u7570\u300d\u3002\n* \u5b8c\u5168\u517c\u5bb9\u7570\u9ad4\u5b57\uff0c\u53ef\u4ee5\u5be6\u73fe\u52d5\u614b\u66ff\u63db\u3002\n* \u56b4\u683c\u5be9\u6821\u4e00\u7c21\u5c0d\u591a\u7e41\u8a5e\u689d\uff0c\u539f\u5247\u7232\u300c\u80fd\u5206\u5247\u4e0d\u5408\u300d\u3002\n* \u652f\u6301\u4e2d\u570b\u5927\u9678\u3001\u81fa\u7063\u3001\u9999\u6e2f\u7570\u9ad4\u5b57\u548c\u5730\u5340\u7fd2\u6163\u7528\u8a5e\u8f49\u63db\uff0c\u5982\u300c\u88cf\u300d\u300c\u88e1\u300d\u3001\u300c\u9f20\u6a19\u300d\u300c\u6ed1\u9f20\u300d\u3002\n* \u8a5e\u5eab\u548c\u51fd\u6578\u5eab\u5b8c\u5168\u5206\u96e2\uff0c\u53ef\u4ee5\u81ea\u7531\u4fee\u6539\u3001\u5c0e\u5165\u3001\u64f4\u5c55\u3002\n\n## Installation \u5b89\u88dd\n\n### Package Managers \u5305\u7ba1\u7406\u5668\n\n* [Debian](https://tracker.debian.org/pkg/opencc)\n* [Ubuntu](https://launchpad.net/ubuntu/+source/opencc)\n* [Fedora](https://packages.fedoraproject.org/pkgs/opencc/opencc/)\n* [Arch Linux](https://archlinux.org/packages/extra/x86_64/opencc/)\n* [Mac](https://formulae.brew.sh/formula/opencc)\n* [Bazel](https://registry.bazel.build/modules/opencc)\n* [Node.js](https://npmjs.org/package/opencc)\n* [Python](https://pypi.org/project/OpenCC/)\n\n### Prebuilt \u9810\u7de8\u8b6f\n\n* Windows (x86_64): [Latest build](https://ci.appveyor.com/api/projects/Carbo/opencc/artifacts/OpenCC.zip?branch=master&job=Environment:%20nodejs_version=none;%20Platform:%20x64)\n* Windows (x86): [Latest build](https://ci.appveyor.com/api/projects/Carbo/opencc/artifacts/OpenCC.zip?branch=master&job=Environment:%20nodejs_version=none;%20Platform:%20x86)\n\n## Usage \u4f7f\u7528\n\n### Online demo \u7dda\u4e0a\u8f49\u63db\u5c55\u793a\n\nWarning: **This is NOT an API.** You will be banned if you make calls programmatically.\n\nhttps://opencc.byvoid.com/\n\n### Node.js\n\n[npm](https://www.npmjs.com/opencc) `npm install opencc`\n\n#### JavaScript\n```js\nconst OpenCC = require('opencc');\nconst converter = new OpenCC('s2t.json');\nconverter.convertPromise(\"\u6c49\u5b57\").then(converted => {\n  console.log(converted);  // \u6f22\u5b57\n});\n```\n\n#### TypeScript\n```ts\nimport { OpenCC } from 'opencc';\nasync function main() {\n  const converter: OpenCC = new OpenCC('s2t.json');\n  const result: string = await converter.convertPromise('\u6c49\u5b57');\n  console.log(result);\n}\n```\n\nSee [demo.js](https://github.com/BYVoid/OpenCC/blob/master/node/demo.js) and [ts-demo.ts](https://github.com/BYVoid/OpenCC/blob/master/node/ts-demo.ts).\n\n### Python\n\n`pip install opencc` (Windows, Linux, Mac)\n\n```python\nimport opencc\nconverter = opencc.OpenCC('s2t.json')\nconverter.convert('\u6c49\u5b57')  # \u6f22\u5b57\n```\n\n### C++\n\n```c++\n#include \"opencc.h\"\n\nint main() {\n  const opencc::SimpleConverter converter(\"s2t.json\");\n  converter.Convert(\"\u6c49\u5b57\");  // \u6f22\u5b57\n  return 0;\n}\n```\n\n[Full example with Bazel](https://github.com/BYVoid/opencc-bazel-example)\n\n### C\n\n```c\n#include \"opencc.h\"\n\nint main() {\n  opencc_t opencc = opencc_open(\"s2t.json\");\n  const char* input = \"\u6c49\u5b57\";\n  char* converted = opencc_convert_utf8(opencc, input, strlen(input));  // \u6f22\u5b57\n  opencc_convert_utf8_free(converted);\n  opencc_close(opencc);\n  return 0;\n}\n\n```\n\nDocument \u6587\u6a94: https://byvoid.github.io/OpenCC/\n\n### Command Line\n\n* `opencc --help`\n* `opencc_dict --help`\n* `opencc_phrase_extract --help`\n\n### Others (Unofficial)\n\n* Swift (iOS): [SwiftyOpenCC](https://github.com/XQS6LB3A/SwiftyOpenCC)\n* iOSOpenCC (pod): [iOSOpenCC](https://github.com/swiftdo/OpenCC)\n* Java: [opencc4j](https://github.com/houbb/opencc4j)\n* Android: [android-opencc](https://github.com/qichuan/android-opencc)\n* PHP: [opencc4php](https://github.com/nauxliu/opencc4php)\n* Pure JavaScript: [opencc-js](https://github.com/nk2028/opencc-js)\n* WebAssembly: [wasm-opencc](https://github.com/oyyd/wasm-opencc)\n* Browser Extension: [opencc-extension](https://github.com/tnychn/opencc-extension)\n* Go (Pure): [OpenCC for Go](https://github.com/longbridgeapp/opencc)\n* Dart (native-assets): [opencc-dart](https://github.com/lindeer/opencc-dart)\n\n### Configurations \u914d\u7f6e\u6587\u4ef6\n\n#### \u9810\u8a2d\u914d\u7f6e\u6587\u4ef6\n\n* `s2t.json` Simplified Chinese to Traditional Chinese \u7c21\u9ad4\u5230\u7e41\u9ad4\n* `t2s.json` Traditional Chinese to Simplified Chinese \u7e41\u9ad4\u5230\u7c21\u9ad4\n* `s2tw.json` Simplified Chinese to Traditional Chinese (Taiwan Standard) \u7c21\u9ad4\u5230\u81fa\u7063\u6b63\u9ad4\n* `tw2s.json` Traditional Chinese (Taiwan Standard) to Simplified Chinese \u81fa\u7063\u6b63\u9ad4\u5230\u7c21\u9ad4\n* `s2hk.json` Simplified Chinese to Traditional Chinese (Hong Kong variant) \u7c21\u9ad4\u5230\u9999\u6e2f\u7e41\u9ad4\n* `hk2s.json` Traditional Chinese (Hong Kong variant) to Simplified Chinese \u9999\u6e2f\u7e41\u9ad4\u5230\u7c21\u9ad4\n* `s2twp.json` Simplified Chinese to Traditional Chinese (Taiwan Standard) with Taiwanese idiom \u7c21\u9ad4\u5230\u7e41\u9ad4\uff08\u81fa\u7063\u6b63\u9ad4\u6a19\u6e96\uff09\u4e26\u8f49\u63db\u7232\u81fa\u7063\u5e38\u7528\u8a5e\u5f59\n* `tw2sp.json` Traditional Chinese (Taiwan Standard) to Simplified Chinese with Mainland Chinese idiom \u7e41\u9ad4\uff08\u81fa\u7063\u6b63\u9ad4\u6a19\u6e96\uff09\u5230\u7c21\u9ad4\u4e26\u8f49\u63db\u7232\u4e2d\u570b\u5927\u9678\u5e38\u7528\u8a5e\u5f59\n* `t2tw.json` Traditional Chinese (OpenCC Standard) to Taiwan Standard \u7e41\u9ad4\uff08OpenCC \u6a19\u6e96\uff09\u5230\u81fa\u7063\u6b63\u9ad4\n* `hk2t.json` Traditional Chinese (Hong Kong variant) to Traditional Chinese \u9999\u6e2f\u7e41\u9ad4\u5230\u7e41\u9ad4\uff08OpenCC \u6a19\u6e96\uff09\n* `t2hk.json` Traditional Chinese (OpenCC Standard) to Hong Kong variant \u7e41\u9ad4\uff08OpenCC \u6a19\u6e96\uff09\u5230\u9999\u6e2f\u7e41\u9ad4\n* `t2jp.json` Traditional Chinese Characters (Ky\u016bjitai) to New Japanese Kanji (Shinjitai) \u7e41\u9ad4\uff08OpenCC \u6a19\u6e96\uff0c\u820a\u5b57\u9ad4\uff09\u5230\u65e5\u6587\u65b0\u5b57\u9ad4\n* `jp2t.json` New Japanese Kanji (Shinjitai) to Traditional Chinese Characters (Ky\u016bjitai) \u65e5\u6587\u65b0\u5b57\u9ad4\u5230\u7e41\u9ad4\uff08OpenCC \u6a19\u6e96\uff0c\u820a\u5b57\u9ad4\uff09\n* `tw2t.json` Traditional Chinese (Taiwan standard) to Traditional Chinese \u81fa\u7063\u6b63\u9ad4\u5230\u7e41\u9ad4\uff08OpenCC \u6a19\u6e96\uff09\n\n## Build \u7de8\u8b6f\n\n### Build with CMake\n\n#### Linux & Mac OS X\n\ng++ 4.6+ or clang 3.2+ is required.\n\n```bash\nmake\n```\n\n#### Windows Visual Studio:\n\n```bash\nbuild.cmd\n```\n\n### Build with Bazel\n\n```bash\nbazel build //:opencc\nbazel test --test_output=all //src/... //data/... //test/...\n```\n\n### Test \u6e2c\u8a66\n\n#### Linux & Mac OS X\n\n```\nmake test\n```\n\n#### Windows Visual Studio:\n\n```bash\ntest.cmd\n```\n\n### Benchmark \u57fa\u6e96\u6e2c\u8a66\n\n```\nmake benchmark\n```\n\nExample results (from Github CI):\n\n```\n1: ------------------------------------------------------------------\n1: Benchmark                        Time             CPU   Iterations\n1: ------------------------------------------------------------------\n1: BM_Initialization/hk2s        1.56 ms         1.56 ms          442\n1: BM_Initialization/hk2t       0.144 ms        0.144 ms         4878\n1: BM_Initialization/jp2t       0.260 ms        0.260 ms         2604\n1: BM_Initialization/s2hk        23.8 ms         23.8 ms           29\n1: BM_Initialization/s2t         25.6 ms         25.6 ms           28\n1: BM_Initialization/s2tw        24.0 ms         23.9 ms           30\n1: BM_Initialization/s2twp       24.6 ms         24.6 ms           28\n1: BM_Initialization/t2hk       0.052 ms        0.052 ms        12897\n1: BM_Initialization/t2jp       0.141 ms        0.141 ms         5012\n1: BM_Initialization/t2s         1.30 ms         1.30 ms          540\n1: BM_Initialization/tw2s        1.39 ms         1.39 ms          529\n1: BM_Initialization/tw2sp       1.69 ms         1.69 ms          426\n1: BM_Initialization/tw2t       0.089 ms        0.089 ms         7707\n1: BM_Convert2M                   582 ms          582 ms            1\n1: BM_Convert/100                1.07 ms         1.07 ms          636\n1: BM_Convert/1000               11.0 ms         11.0 ms           67\n1: BM_Convert/10000               113 ms          113 ms            6\n1: BM_Convert/100000             1176 ms         1176 ms            1\n```\n\n## Projects using OpenCC \u4f7f\u7528 OpenCC \u7684\u9805\u76ee\n\nPlease update if your project is using OpenCC.\n\n* [ibus-pinyin](https://github.com/ibus/ibus-pinyin)\n* [fcitx](https://github.com/fcitx/fcitx)\n* [rimeime](https://rime.im/)\n* [libgooglepinyin](http://code.google.com/p/libgooglepinyin/)\n* [ibus-libpinyin](https://github.com/libpinyin/ibus-libpinyin)\n* [alfred-chinese-converter](https://github.com/amowu/alfred-chinese-converter)\n* [GoldenDict](https://github.com/goldendict/goldendict)\n\n## License \u8a31\u53ef\u5354\u8b70\n\nApache License 2.0\n\n## Third Party Library \u7b2c\u4e09\u65b9\u5eab\n\n* [darts-clone](https://github.com/s-yata/darts-clone) BSD License\n* [marisa-trie](https://github.com/s-yata/marisa-trie) BSD License\n* [tclap](http://tclap.sourceforge.net/) MIT License\n* [rapidjson](https://github.com/Tencent/rapidjson) MIT License\n* [Google Test](https://github.com/google/googletest) BSD License\n\nAll these libraries are statically linked by default.\n\n## Change History \u7248\u672c\u6b77\u53f2\n\n* [NEWS](https://github.com/BYVoid/OpenCC/blob/master/NEWS.md)\n\n### Links \u76f8\u95dc\u93c8\u63a5\n\n* Introduction \u8a73\u7d30\u4ecb\u7d39 https://github.com/BYVoid/OpenCC/wiki/%E7%B7%A3%E7%94%B1\n* \u73fe\u4ee3\u6f22\u8a9e\u5e38\u7528\u7c21\u7e41\u4e00\u5c0d\u591a\u5b57\u7fa9\u8fa8\u6790\u8868 http://ytenx.org/byohlyuk/KienxPyan\n\n## Contributors \u8ca2\u737b\u8005\n\n* [BYVoid](http://www.byvoid.com/)\n* [\u4f5b\u632f](https://github.com/lotem)\n* [Peng Huang](https://github.com/phuang)\n* [LI Daobing](https://github.com/lidaobing)\n* [Kefu Chai](https://github.com/tchaikov)\n* [Kan-Ru Chen](http://kanru.info/)\n* [Ma Xiaojun](https://twitter.com/damage3025)\n* [Jiang Jiang](http://jjgod.org/)\n* [Ruey-Cheng Chen](https://github.com/rueycheng)\n* [Paul Meng](http://home.mno2.org/)\n* [Lawrence Lau](https://github.com/ktslwy)\n* [\u747e\u6600](https://github.com/kunki)\n* [\u5167\u6728\u4e00\u90ce](https://github.com/SyaoranHinata)\n* [Marguerite Su](https://www.marguerite.su/)\n* [Brian White](http://mscdex.net)\n* [Qijiang Fan](https://fqj.me/)\n* [LEOYoon-Tsaw](https://github.com/LEOYoon-Tsaw)\n* [Steven Yao](https://github.com/stevenyao)\n* [Pellaeon Lin](https://github.com/pellaeon)\n* [stony](https://github.com/stony-shixz)\n* [steelywing](https://github.com/steelywing)\n* [\u5415\u65ed\u4e1c](https://github.com/lvxudong)\n* [Weng Xuetian](https://github.com/wengxt)\n* [Ma Tao](https://github.com/iwater)\n* [Heinz Wiesinger](https://github.com/pprkut)\n* [J.W](https://github.com/jakwings)\n* [Amo Wu](https://github.com/amowu)\n* [Mark Tsai](https://github.com/mxgit1090)\n* [Zhe Wang](https://github.com/0x1997)\n* [sgqy](https://github.com/sgqy)\n* [Qichuan (Sean) ZHANG](https://github.com/qichuan)\n* [Flandre Scarlet](https://github.com/XadillaX)\n* [\u5b8b\u8fb0\u6587](https://github.com/songchenwen)\n* [iwater](https://github.com/iwater)\n* [Xpol Wan](https://github.com/xpol)\n* [Weihang Lo](https://github.com/weihanglo)\n* [Cychih](https://github.com/pi314)\n* [kyleskimo](https://github.com/kyleskimo)\n* [Ryuan Choi](https://github.com/bunhere)\n* [Prcuvu](https://github.com/Prcuvu)\n* [Tony Able](https://github.com/TonyAble)\n* [Xiao Liang](https://github.com/yxliang01)\n\nPlease feel free to update this list if you have contributed OpenCC.\n",
        "releases": [
            {
                "name": "ver.1.1.9",
                "date": "2024-08-08T04:49:30Z"
            },
            {
                "name": "ver.1.1.8",
                "date": "2024-07-28T02:54:02Z"
            },
            {
                "name": "Version 1.1.7",
                "date": "2023-10-15T13:31:10Z"
            },
            {
                "name": "Version 1.1.6",
                "date": "2022-12-08T07:46:18Z"
            },
            {
                "name": "Version 1.1.5",
                "date": "2022-12-04T05:54:34Z"
            },
            {
                "name": "Version 1.1.4",
                "date": "2022-06-04T07:12:11Z"
            },
            {
                "name": "Version 1.1.3",
                "date": "2021-09-03T14:29:07Z"
            },
            {
                "name": "Version 1.1.2",
                "date": "2021-03-04T05:38:52Z"
            },
            {
                "name": "Version 1.1.1",
                "date": "2021-03-04T05:39:28Z"
            },
            {
                "name": "Version 1.1.0",
                "date": "2021-03-04T05:39:50Z"
            },
            {
                "name": "Version 1.0.6",
                "date": "2021-03-04T05:40:21Z"
            },
            {
                "name": "Version 1.0.5",
                "date": "2021-03-04T05:40:55Z"
            },
            {
                "name": "Version 1.0.4",
                "date": "2021-03-04T05:41:27Z"
            },
            {
                "name": "Version 1.0.3",
                "date": "2021-03-04T05:41:52Z"
            },
            {
                "name": "Version 1.0.2",
                "date": "2021-03-04T05:42:24Z"
            },
            {
                "name": "Version 1.0.1",
                "date": "2021-03-04T05:42:51Z"
            },
            {
                "name": "Version 0.4.3",
                "date": "2021-03-04T05:43:22Z"
            }
        ]
    }
}