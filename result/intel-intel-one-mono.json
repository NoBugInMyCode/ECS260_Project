{
    "https://api.github.com/repos/intel/intel-one-mono": {
        "forks": 313,
        "watchers": 9497,
        "stars": 9497,
        "languages": {},
        "commits": [
            "2024-10-16T22:07:05Z",
            "2024-07-26T14:38:20Z",
            "2024-07-26T14:27:17Z",
            "2023-08-22T14:41:03Z",
            "2023-08-22T13:40:49Z",
            "2023-08-21T20:24:09Z",
            "2023-08-21T20:24:00Z",
            "2023-08-21T20:07:27Z",
            "2023-08-21T20:02:04Z",
            "2023-08-21T19:54:48Z",
            "2023-08-21T19:47:07Z",
            "2023-08-21T19:46:58Z",
            "2023-08-21T19:46:24Z",
            "2023-08-21T19:45:58Z",
            "2023-08-21T19:45:26Z",
            "2023-08-04T19:07:03Z",
            "2023-08-04T18:53:31Z",
            "2023-08-04T18:51:29Z",
            "2023-08-04T18:49:59Z",
            "2023-08-04T15:28:20Z",
            "2023-06-14T11:46:43Z",
            "2023-06-07T21:02:00Z",
            "2023-06-07T20:59:35Z",
            "2023-06-07T20:04:41Z",
            "2023-06-07T19:48:38Z",
            "2023-06-07T19:34:21Z",
            "2023-06-07T16:57:47Z",
            "2023-06-07T16:06:55Z",
            "2023-06-07T15:59:52Z",
            "2023-05-19T19:43:20Z"
        ],
        "creation_date": "2023-04-11T20:25:19Z",
        "contributors": 7,
        "topics": [],
        "subscribers": 81,
        "readme": "# Intel One Mono Typeface\n\n![Image of Intel One Mono character set](https://github.com/intel/intel-one-mono/assets/130394986/6c921cf4-f614-41bd-a909-363bb19f9a30)\n\nIntroducing Intel One Mono, an expressive monospaced font family that\u2019s built with clarity, legibility, and the needs of developers in mind.\n\nIt\u2019s easier to read, and available for free, with an open-source font license.\n\nIdentifying the typographically underserved low-vision developer audience, [Frere-Jones Type](https://frerejones.com/) designed the Intel One Mono typeface in partnership with the Intel Brand Team and VMLY&R, for maximum legibility to address developers' fatigue and eyestrain and reduce coding errors. A panel of low-vision and legally blind developers provided feedback at each stage of design.\n\nIntel One Mono also covers a wide range of over 200 languages using the Latin script. The Intel One Mono fonts are provided in four weights \u2014 Light, Regular, Medium, and Bold \u2014 with matching italics, and we are happy to share both an official release of fonts ready to use as well as editable sources.    \n\n## Using the Fonts\n\nTo install the fonts, please use the provided builds under [Releases](https://github.com/intel/intel-one-mono/releases). Please refer to your software\u2019s documentation for how to activate and use these fonts.\n\n### Activating the Fonts in Code Editors\n- VSCode - In Settings, search Font Family, then specify `Intel One Mono`\n- Sublime Text - Go to Sublime Text -> Preferences -> Settings and set `font_face` to `Intel One Mono`\n- IntelliJ Platform - Go to File -> Settings -> Editor -> Font and set Font to `Intel One Mono`\n\n### Font Formats\n- We recommend the .otf or .ttf format for desktop use.\n- The .ttf files are also well suited for mobile apps.\n- The .woff and .woff2 fonts are optimized for web use.\n\n### Screen Rendering and Size Ranges\nWe recommend using these fonts at 7 points and larger in print, 9 pixels and larger on screen. The .ttf, .woff and .woff2 fonts provided in the official release have been manually optimized for screen display, improving clarity and legibility, especially on Windows platforms.\n\n### Available OpenType Features\nOutside of the default characters, there are a few extra features that are accessible in some applications, as well as via CSS:\n- **Programming Ligatures:** New in release 1.4, by popular demand. To use programming ligatures, activate the `ss01` feature (Stylistic Set #1). Additional refinements are available via `ss02` and `ss03`: Stylistic Set #2 switches the <= and >= combinations to arrow forms (math contractions being the default otherwise), and Stylistic Set #3 additionally activates a \u201cwww\u201d ligature.\n- **Raised Colon:** The colon is automatically raised in operators, to align with math symbols. For non-programming contexts, the raised colon can be applied contextually between numbers or activated generally. The contextual option is available via `ss11` (Stylistic Set #11); for the global switch use `ss12` (Stylistic Set #12) or `salt` (Stylistic Alternates).\n- **Language Support:** `ccmp` and `locl` features ensure correct display across a wide range of languages. These are usually active by default. We recommend setting the language tag/setting in your software to the desired language for best results.\n- **Superior/superscript and inferior/subscript figures** are included via their Unicode codepoints, or you can produce them from the default figures via the `sups` (Superscript) and `subs`/`sinf` (Subscript) features.\n- **Fraction numerals** are similarly available via the `numr` (Numerator) and `dnom` (Denominator) features. A set of premade fractions is also available in the fonts.\n\n### Activating Programming Ligatures in Code Editors\nProgramming ligatures are not active by default. To use them, activate the stylistic sets of your preference in your code editor. For example:\n- VSCode - In Settings, add `\"editor.fontLigatures\": \"'ss01'\"`\n- Sublime Text - In Settings, add `\"font_options\": [\"ss01\"]`\n\n## Viewing and Editing Sources\n\n### UFO Source Files: Instances\nYou will find editable sources in the `sources` directory. The `instances` subfolder contains separate source files for each style of the typeface. Sources are provided in .ufo files, which contain complete artwork, links to OpenType features provided in separate .fea files, as well as meta information like naming and vertical alignments for each style of the typeface.\n\nThese are not installable fonts, but rather the source files that produce them: UFO (Unified Font Object) is an open, human-readable font source file format; you can find the [file spec here](https://github.com/unified-font-object/ufo-spec). \nThese sources were created using [RoboFont](https://robofont.com/). Many other font editors will also be able to open .ufo files; we recommend using RoboFont version 4.4.\n\n### Outline Formats\nFor instances, you will find `postscript` and `truetype` subfolders; these contain separate source files for the .otf format and the .ttf/.woff/.woff2 files respectively. Since the format for the outline drawings differs between these sets of formats, for best results we recommend using the postscript sources to create .otf fonts, and the TrueType sources to create .ttf, .woff, or .woff2 fonts.\n \n### Generating Fonts\nAfter making your desired edits, you can generate installable fonts directly from the font editor using its \u201cGenerate Font\u201d functionality. If you use RoboFont, any install options should default to the ideal settings, but here they are for reference:\n- For .otf builds, we recommend activating \u201cDecompose\u201d as well as \u201cAutohint\u201d options.\n- For .ttf, .woff and .woff2 builds, we recommend activating the \u201cAutohint\u201d option only (see note on hinting below).\n- In any case, we recommend using the \u201cRelease Mode\u201d setting for best results.\n \n### UFO Source Files: Masters\n\nIf you would like to apply edits across multiple weights, a more advanced yet potentially efficient way is to edit the masters. These are special sources that describe the extreme points in the design space \u2014 the lightest and heaviest weights for both roman and italic designs.\n\nAfter editing masters, you will need to rerun interpolation to generate individual weights and styles within that design space. This requires the .designspace files enclosed with the masters. The designspace format is an open, XML-based format that describes interpolation spaces ([format specification](https://github.com/fonttools/fonttools/tree/main/Doc/source/designspaceLib) for reference). For a RoboFont-based workflow we recommend [Skateboard](https://extensionstore.robofont.com/extensions/skateboard/) for interpolation; you can also use the free [DesignSpaceEditor](https://github.com/LettError/designSpaceRoboFontExtension) extension to view and edit these files.\n\nNote that masters are only available in postscript format, so they will be best for creating .otf fonts. If you need to make TrueType based builds from the masters, we recommend [QuadraticConverter](https://github.com/BlackFoundry/QuadraticConverter) for best quality conversion of the curves before generating .ttf, .woff, or .woff2 files; mind that the results will not match the provided instances precisely.\n\nNB: The prepared instances contain some additional data that cannot be maintained through interpolation. For best results, compare new interpolations to the existing instance sources and update them accordingly, specifically the information accessible through the Font Info panels.\n\n\n### Hinting Source\nFor TrueType-based formats (.ttf, .woff, .woff2 files), the official releases are manually optimized for screen rendering. These \u201chinting\u201d sources are stored separately from the .ufo files, which do not contain any TrueType hinting information. When rebuilding TrueType-based formats, we recommend using the \u201cautohint\u201d option to achieve reasonable, though not identical screen rendering.\n\nIf you would like to access and edit manual hinting instructions, you will find these in the separate set of source files under `hinting/truetype hinting source`. These special TTF files will be viewable and editable using [Microsoft VTT](https://learn.microsoft.com/en-us/typography/tools/vtt/).\n \n \n## Suggesting Edits\nIf you have suggestions for edits or additions to the official releases, please email brand_q@intel.com. \n",
        "releases": [
            {
                "name": "V1.4.0",
                "date": "2024-07-26T14:46:43Z"
            },
            {
                "name": "V1.3.0",
                "date": "2023-08-21T20:25:54Z"
            },
            {
                "name": "V1.2.1",
                "date": "2023-06-07T20:34:51Z"
            },
            {
                "name": "V1.2.0",
                "date": "2023-06-07T20:05:51Z"
            },
            {
                "name": "V1.0.0",
                "date": "2023-04-21T23:03:31Z"
            }
        ]
    }
}