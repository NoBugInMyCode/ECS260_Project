{
    "https://api.github.com/repos/jhuangtw/xg2xg": {
        "forks": 1050,
        "watchers": 14732,
        "stars": 14732,
        "languages": {},
        "commits": [
            "2024-06-13T17:42:16Z",
            "2024-06-13T17:42:08Z",
            "2024-06-13T17:41:10Z",
            "2024-06-13T17:38:55Z",
            "2024-06-13T17:35:20Z",
            "2024-06-13T17:25:56Z",
            "2024-06-13T17:25:31Z",
            "2024-06-13T17:24:35Z",
            "2024-06-13T17:24:01Z",
            "2024-06-13T17:23:53Z",
            "2024-06-13T17:20:30Z",
            "2024-06-13T17:20:14Z",
            "2024-06-13T17:16:46Z",
            "2024-06-13T17:15:18Z",
            "2024-06-13T17:14:53Z",
            "2024-06-13T17:14:31Z",
            "2024-06-13T16:39:41Z",
            "2024-06-13T16:38:09Z",
            "2024-06-13T16:37:43Z",
            "2024-06-13T16:37:30Z",
            "2024-05-30T21:53:42Z",
            "2024-04-28T12:05:10Z",
            "2024-03-31T20:20:46Z",
            "2024-03-18T06:27:03Z",
            "2024-02-22T15:21:18Z",
            "2024-01-11T22:28:16Z",
            "2023-11-10T19:12:31Z",
            "2023-10-02T01:19:02Z",
            "2023-09-04T21:57:49Z",
            "2023-06-30T09:12:26Z"
        ],
        "creation_date": "2016-02-18T05:14:58Z",
        "contributors": 30,
        "topics": [
            "cheatsheet",
            "devops-tools",
            "googlers",
            "infrastructure",
            "lookup-table",
            "management"
        ],
        "subscribers": 437,
        "readme": "A handy lookup table of similar technology and services to help ex-googlers survive the *real* world :)\npull-requests are very welcomed. __Please do not list any confidential projects!__\n\nFor a working example of (some) of these technologies integrated together, see:\nhttps://github.com/google/startup-os\n\nSee also: [System Design Primer](https://github.com/donnemartin/system-design-primer), [The Hadoop Ecosystem Table](https://hadoopecosystemtable.github.io/), [Map AWS services to GCP products](https://cloud.google.com/free/docs/map-aws-google-cloud-platform), [Database of Databases](https://dbdb.io/), [Google Open Source Glossary](https://opensource.google/docs/glossary/)\n\n## Technology\n\n### Core Technology\n\n| Google Internal | Google External                          | Open Source / Real-World                 |\n| --------------- | ---------------------------------------- | ---------------------------------------- |\n| MapReduce       |                                          | [Apache Hadoop](https://github.com/apache/hadoop), [Spark](https://github.com/apache/spark) |\n| [Flume](https://ai.google/research/pubs/pub35650)   | [DataFlow](https://cloud.google.com/dataflow)  | [Apache Beam](https://beam.apache.org/) |\n| Protocol Buffer | [Protobuf](https://github.com/google/protobuf), [FlatBuffers](https://google.github.io/flatbuffers/) | [Cap'n Proto](https://capnproto.org/), [Thrift](https://github.com/apache/thrift), [Avro](https://github.com/apache/avro), [Amazon Ion](https://amzn.github.io/ion-docs/), [CBOR](https://cbor.io/), [kryo](https://github.com/EsotericSoftware/kryo) |\n| Stubby          | [gRPC](https://github.com/grpc/grpc)     | [Thrift](https://github.com/apache/thrift), [Bolt](https://boltprotocol.org/) |\n| Chubby          |                                          | [Apache Zookeeper](https://github.com/apache/zookeeper), [etcd](https://github.com/coreos/etcd), [HashiCorp Consul](https://github.com/hashicorp/consul) |\n| Goops / PubSub  | [Cloud Pub/Sub](https://cloud.google.com/pubsub)     | [Apache Kafka](https://github.com/apache/kafka), [Apache Pulsar](https://github.com/apache/incubator-pulsar), [Facebook LogDevice](https://github.com/facebookincubator/LogDevice) |\n| `//base`        |                                          | [abseil](https://github.com/abseil) |\n\n### Infrastructure\n\n| Google Internal      | Google External                          | Open Source / Real-World                 |\n| -------------------- | ---------------------------------------- | ---------------------------------------- |\n| Borg                 | [Kubernetes](https://kubernetes.io/)     | [Apache Mesos](https://github.com/apache/mesos), [Apache Aurora](https://aurora.apache.org/), [HashiCorp Nomad](https://github.com/hashicorp/nomad) |\n| GSLB | [Cloud Load Balancing](https://cloud.google.com/load-balancing) - Internal | AWS ELB,  [Istio](https://istio.io/), [linkerd](https://linkerd.io/)\n| OnePlatform          | [API Gateway](https://cloud.google.com/api-gateway) | [Swagger](https://swagger.io/) |\n| GFE, Maglev, uberproxy | [Cloud Load Balancing](https://cloud.google.com/load-balancing) - HTTPS / External | [envoy](https://www.envoyproxy.io/), AWS ALB, [HAProxy](https://www.haproxy.org/), [nginx](https://www.nginx.com/), [F5](https://f5.com/products/big-ip) |\n| uberproxy (sso proxy) | [Identity-Aware Proxy](https://cloud.google.com/iap) | [buzzfeed-sso](https://github.com/buzzfeed/sso), [Pomerium](https://pomerium.io/) |\n| Zanzibar             | [Zanzibar Research Paper](https://research.google/pubs/pub48190/) | [SpiceDB](https://github.com/authzed/spicedb)/[authzed](https://authzed.com/), [Ory Keto](https://www.ory.sh/keto/docs/), [topaz](https://github.com/aserto-dev/topaz), [Opal](https://opal.dev/), [(iam)Keycloak](https://www.keycloak.org/), [Warrant](https://github.com/warrant-dev/warrant) |\n| data center hardware | [open compute](https://www.opencompute.org/) |                                          |\n| Jupiter, Starblaze   |                                          |                                             |\n| B4, Stargate, TE     |                                          |                                             |\n| USPS, Andromeda      |                                          |                                             |\n| ESDN                 |                                          | [Faucet](https://github.com/faucetsdn/faucet)\n| [broccoli man](https://www.youtube.com/watch?v=3t6L-FlfeaI)  | ||\n\n\n### Storage\n\n| Google Internal                          | Google External                          | Open Source / Real-World                 |\n| ---------------------------------------- | ---------------------------------------- | ---------------------------------------- |\n| GFS/Colossus                             |                                          | [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_design.html), [Ceph](https://ceph.com), [GlusterFS](https://www.gluster.org), [MooseFS](https://moosefs.com/products/#moosefs) |\n| BigTable                                 | [Cloud BigTable](https://cloud.google.com/bigtable) | [PrestoDB](https://prestodb.io/), [Cassandra](https://github.com/apache/cassandra), [HBase](https://github.com/apache/hbase), [Accumulo](https://github.com/apache/accumulo), [DynamoDB](https://aws.amazon.com/dynamodb), [ScyllaDB](https://www.scylladb.com/) |\n| [Spanner](https://research.google.com/archive/spanner.html) | [Cloud Spanner](https://cloud.google.com/spanner/) | [Vitess](https://vitess.io), [CockroachDB](https://github.com/cockroachdb/cockroach), [TiDB](https://github.com/pingcap/tidb) |\n| ColumnIO / [Capacitor](https://cloud.google.com/blog/big-data/2016/04/inside-capacitor-bigquerys-next-generation-columnar-storage-format) |                                          | [Apache Parquet](https://parquet.apache.org), [ORC](https://orc.apache.org/docs/) |\n| sstable                                  | [levelDB](https://github.com/google/leveldb) | [RocksDB](https://rocksdb.org), [pebble](https://github.com/cockroachdb/pebble)      |\n| zippy                                    | [Snappy](https://github.com/google/snappy) | [lz4](https://github.com/lz4/lz4)        |\n| RecordIO                                 | [Riegeli](https://github.com/google/riegeli), [TFRecords](https://github.com/tensorflow/docs/blob/r1.10/site/en/api_guides/python/python_io.md#tfrecords-format-details), & in [OR-Tools](https://github.com/google/or-tools/blob/stable/ortools/base/recordio.h), [szl](https://github.com/google/szl/blob/master/src/utilities/recordio.cc) | [stuffed-record-stream](https://github.com/backtrace-labs/stuffed-record-stream) |\n\n\n### Services\n| Google Internal                          | Google External                          | Open Source                              | SaaS                                     |\n| ---------------------------------------- | ---------------------------------------- | ---------------------------------------- | ---------------------------------------- |\n| Dremel                                   | [BigQuery](https://cloud.google.com/bigquery/) | [Apache Drill](https://github.com/apache/drill), [Presto](https://prestodb.io), Spark(sort-of), | [AWS Athena](https://aws.amazon.com/athena/), [Redshift Spectrum](https://aws.amazon.com/redshift/spectrum/), [Snowflake](https://www.snowflake.com) |\n| Dremel UI                                |                                          | [Redash](https://github.com/getredash/redash), [Metabase](https://github.com/metabase/metabase), [Apache Superset](https://github.com/apache/incubator-superset) |                                          |\n| Search (Mustang, Alexandria)             |                                          | [Elasticsearch](https://github.com/elastic/elasticsearch), [OpenSearch](https://opensearch.org/), Solr, Lucene              | [algolia](https://www.algolia.com/)      |\n| pubsub                                   | [pubsub](https://cloud.google.com/pubsub/docs/overview) | [NATS.io](https://nats.io), [RabbitMQ](https://github.com/rabbitmq), [PubNub](https://www.pubnub.com/) | AWS SQS/SNS, [AWS AppSync](https://aws.amazon.com/appsync) |\n| [MillWheel](https://ai.google/research/pubs/pub41378) | [Cloud Dataflow](https://cloud.google.com/dataflow/) | [Apache Flink](https://flink.apache.org/), beam |                |\n| Colab | [Colaboratory](https://colab.research.google.com/) | [Jupyter](https://jupyter.org) | [Observable](https://observablehq.com/) |\n| PLX | [Google Data Studio](https://datastudio.google.com/) | | [Mode](https://mode.com) |\n| Monarch | [paper](https://research.google/pubs/pub50652/) | | |\n| Napa | [paper](https://research.google/pubs/pub50617/) | | |\n| MakerSuite| [MakerSuite](https://makersuite.google.com) | | |\n\n\n### DevOps\n| Google Internal                 | Google External                          | Real-World                               |\n| ------------------------------- | ---------------------------------------- | ---------------------------------------- |\n| Assimilator                     |                                          | [Dominator](https://github.com/Cloud-Foundations/Dominator) |\n| Blaze                           | [Bazel](https://bazel.build)             | [Buck](https://buckbuild.com/), [Pants](https://www.pantsbuild.org/), [please.build](https://please.build/), [Blade](https://github.com/chen3feng/blade-build), [recc](https://gitlab.com/bloomberg/recc), [BuildBuddy](https://www.buildbuddy.io/), [flare.build](https://flare.build) |\n| Oncall                          |                                          | [PagerDuty](https://pagerduty.com), [OpsGenie](https://www.opsgenie.com/), [VictorOps](https://victorops.com/) |\n| varz/borgmon/monarch            | [Cloud Monitoring](https://cloud.google.com/monitoring) | [Datadog](https://www.datadoghq.com/), [Prometheus](https://prometheus.io), [M3](https://m3db.io/), [librato](https://www.librato.com), [newrelic](https://newrelic.com), skylight, scout, [Scotty](https://github.com/Cloud-Foundations/scotty)/[tricorder](https://github.com/Cloud-Foundations/tricorder), [netdata](https://github.com/netdata/netdata), [bosun](https://bosun.org/), also [this](https://vimeo.com/173610242) and [this](https://prometheus.io/docs/introduction/comparison/) |\n| Viceroy                         | Cloud Monitoring                         | [Grafana](https://grafana.com/) |\n| Exception/Error Tracking (thirdeye)   |                                          | Sentry.io, Raygun.io, [Rollbar](https://rollbar.com), Honeybadger, Airbrake, OverOps, [ELK stack](https://www.elastic.co/what-is/elk-stack) |\n| styleguides                     | [google styleguides](https://github.com/google/styleguide) | [PEP-8](https://www.python.org/dev/peps/pep-0008/), [HoundCI auto-style-reviewer](https://houndci.com/) |\n| Sponge                          |                                          | [EngFlow](https://www.engflow.com/) |\n| Blaze/Forge/TAP/BuildCop        | [Cloud Build](https://cloud.google.com/cloud-build/) | [buildkite](https://buildkite.com/), [CircleCI](https://circleci.com), [travis](https://travis-ci.org/), [jenkins](https://jenkins.io/), [gitlabCI](https://about.gitlab.com/product/continuous-integration/), [github](https://github.blog/2019-08-08-github-actions-now-supports-ci-cd/), [Drone](https://drone.io/) |\n| Forge/ObjFS                     |                                          | [EngFlow](https://www.engflow.com/), [flare.build](https://flare.build) |\n| Sandman(test env)/Guitar        |                                          |                   |\n| Sisyphus / Rapid                |                                          | [Spinnaker](https://www.spinnaker.io/), [lambdaCD](https://www.lambda.cd), screwdriver.cd, [CodeShip](https://codeship.com), [shipit-engine](https://github.com/Shopify/shipit-engine), [GoCD](https://www.gocd.org), [AWS CodeDeploy](https://aws.amazon.com/codedeploy/), [Capistrano](https://www.capistranorb.com), [Fabric](https://www.fabfile.org), [ConcourseCI](https://concourse.ci/), [samson](https://github.com/zendesk/samson) |\n| MPM                             |                                          | [Docker](https://www.docker.com/), [OCI](https://opencontainers.org/) |\n| borg / borgcfg / gcl            | [Jsonnet](https://jsonnet.org/), [Cue](https://cuelang.org/) | [AWS Cloudformation](https://aws.amazon.com/cloudformation/), Puppet, Chef, Salt, Ansible, [Terraform](https://www.terraform.io), [kubecfg](https://github.com/bitnami/kubecfg), [pulumi](https://github.com/pulumi/pulumi), [Nix](https://nix.dev/) |\n| logging, analog                 | [StackDriver](https://cloud.google.com/stackdriver/) | [logstash](https://github.com/elastic/logstash), [fluentd](https://github.com/fluent/fluentd), [PaperTrail](https://www.papertrail.com/), [cernan](https://github.com/postmates/cernan), [loki](https://grafana.com/oss/loki/) |\n| CodeSearch, Grimoire            | [Zoekt](https://github.com/google/zoekt) [kythe](https://github.com/kythe/kythe) [Code Search](https://developers.google.com/code-search/user/getting-started) (for Google open source code only, with separate UI for Android and Chromium. Go CLI [source](https://github.com/google/codesearch).) | [Sourcegraph](https://sourcegraph.com), [OpenGrok](https://github.com/OpenGrok/OpenGrok/), [livegrep](https://github.com/livegrep/livegrep) |\n| Critique, Gerrit, Mondrian etc. | [Gerrit](https://www.gerritcodereview.com/) | [Reviewable](https://reviewable.io) , [Phabricator](https://www.phacility.com/phabricator/)     |\n| cider                           |                                          | [Eclipse Che](https://www.eclipse.org/che/), [Cloud9](https://c9.io/), [gitpod.io](https://gitpod.io), [Coder](https://coder.com/), [Code-Server (VSCode in a Tab)](https://github.com/cdr/code-server), [DevZero](https://www.devzero.io/) |\n| buganizer                       | [Google Issue Tracker](https://issuetracker.google.com/) | [JIRA](https://www.atlassian.com/software/jira), [bugzilla](https://www.bugzilla.org/), github issues, [Linear](https://linear.app/) |\n| Bugjuggler                      |                                          | [SnoozeThis](https://www.snoozethis.com/) |\n| ToTT                            | [Google Test Blog](https://testing.googleblog.com/) | [Increment](https://increment.com/) |\n| Copybara / MOE                  | [Copybara](https://github.com/google/copybara), [MOE](https://github.com/google/MOE)  |                                          |\n| workflow/dependency management | | [Luigi](https://github.com/spotify/luigi), [Airflow](https://github.com/apache/airflow), [digdag](https://github.com/treasure-data/digdag), [Pachyderm](https://github.com/pachyderm/pachyderm), [Dask](https://github.com/dask/dask) |\n| ErrorProne                      | [ErrorProne](https://errorprone.info/)   | [SpotBugs](https://spotbugs.github.io/), [FindBugs](https://findbugs.sourceforge.net/) |\n| [Dapper](https://ai.google/research/pubs/pub36356) | [stackdriver trace](https://cloud.google.com/trace/) | [zipkin](https://github.com/openzipkin/zipkin), [OpenTelemetry](https://opentelemetry.io/), [jaeger](https://www.jaegertracing.io/), [LightStep](https://lightstep.com), [Honeycomb](https://www.honeycomb.io/trace/) |\n| C++ Tips of the Week            | [Abseil C++ Tips of the Week](https://abseil.io/tips/) |  |\n| [DiRT](https://cloud.google.com/blog/products/management-tools/shrinking-the-time-to-mitigate-production-incidents) | | [ChaosMonkey](https://github.com/Netflix/chaosmonkey), [aws fis](https://aws.amazon.com/fis/) |\n| [Rosie](https://cacm.acm.org/magazines/2016/7/204032-why-google-stores-billions-of-lines-of-code-in-a-single-repository/fulltext) | | [microplane](https://github.com/Clever/microplane), [silver-platter](https://github.com/jelmer/silver-platter) |\n| API Improvements Proposals | [AIP](https://google.aip.dev/) | |\n| g4 {fix, submit} | | [Trunk.io](https://trunk.io), [Graphite](https://graphite.dev/) |\n| probers | | [cloudprober](https://github.com/cloudprober/cloudprober) |\n\n### Security\n| Google Internal                  | Google External | Open Source                              |\n| -------------------------------- | --------------- | ---------------------------------------- |\n| prodaccess/LOAS                  |                 | [Keymaster](https://github.com/Cloud-Foundations/keymaster) |\n| prod secrets/identity management |                 | [chamber](https://github.com/segmentio/chamber), [knox](https://github.com/pinterest/knox), [SPIFFE](https://spiffe.io/) |\n\n## IT / Operations / Misc\n| Google Internal                          | Real-World                               |\n| ---------------------------------------- | ---------------------------------------- |\n| software engineering at google [1](https://arxiv.org/ftp/arxiv/papers/1702/1702.01715.pdf), [2](https://abseil.io/resources/swe-book) | [Software Engineering at Google: Lessons Learned from Programming Over Time](https://www.amazon.com/Software-Engineering-Google-Lessons-Programming/dp/1492082791) |\n| [SRE @ google](https://sre.google/sre-book/table-of-contents/) | |\n| valentine                                | [Vault](https://www.vaultproject.io/), [1Password](https://support.1password.com/create-share-vaults/), [Lastpass](https://lastpass.com), [pass](https://www.passwordstore.org/), [keeper](https://www.keepersecurity.com/) |\n| OWNERS files in repo                     | [github CODEOWNERS](https://github.com/blog/2392-introducing-code-owners) |\n| snippets                                 | [Khan/snippets](https://github.com/Khan/snippets) |\n| SnipIt                                   | [recordit](https://recordit.co/), [CloudApp](https://www.getcloudapp.com/), [dropbox screenshots](https://help.dropbox.com/installs-integrations/photos/screenshots), [Snippyly](https://snippyly.com/) |\n| stuff (SaaS IT management)               | [productiv](https://productiv.com/), [intello](https://www.intello.io/), [zylo](https://zylo.com/) |\n| stuff (Device Management)                | [jamf](https://www.jamf.com/) |\n| device security monitoring               | [Red Canary](https://redcanary.com/) |\n| beyondcorp | [beyondcorp](https://www.beyondcorp.com/) |\n| [go/ links](https://medium.com/@golinks/the-full-history-of-go-links-and-the-golink-system-cbc6d2c8bb3)                                | [golinks](https://www.golinks.io/), [go](https://github.com/kellegous/go), [Goat](https://goatcodes.com/), [trotto](https://github.com/trotto/go-links), [go-shorten](https://github.com/thomasdesr/go-shorten) |\n| google3 philosophy                       | [innersource](https://resources.github.com/whitepapers/introduction-to-innersource/), [monorepo](https://cacm.acm.org/magazines/2016/7/204032-why-google-stores-billions-of-lines-of-code-in-a-single-repository/fulltext), [YouTube talk](https://www.youtube.com/watch?v=W71BTkUbdqE) |\n| doing code review                        | [code review](https://google.github.io/eng-practices/review/reviewer/) |\n| safely sharing 1-time secrets            | [sendsecure.ly](https://sendsecure.ly), [croc](https://github.com/schollz/croc), [onetimesecret](https://github.com/onetimesecret/onetimesecret), [privatebin](https://privatebin.info/) |\n| messaging                                | [mattermost](https://github.com/mattermost/mattermost-server), [Slack](https://slack.com), gchat |\n| tech talks | [TechTalks @ Google](https://www.youtube.com/user/GoogleTechTalks/videos) |\n| g3doc | [writethedocs](https://www.writethedocs.org/), [docs-as-code](https://idratherbewriting.com/learnapidoc/pubapis_docs_as_code.html) |\n| GUTS | [spoke](https://www.atspoke.com/), [freshservice](https://freshservice.com/) |\n| MOMA | [glean](https://www.glean.com/) |\n\n## PeopleOps / Culture\n| Google Internal                          | Real-World                               |\n| ---------------------------------------- | ---------------------------------------- |\n| [OKR](https://en.wikipedia.org/wiki/OKR) | [CultureAmp OKR](https://www.cultureamp.com/okr-solution-b), [Lattice Goals](https://lattice.com/goals), [Ally](https://www.ally.io/), [workboard](https://www.workboard.com/) |\n| HRIS/ERP                                 | [Namely](https://namely.com), [BambooHR](https://www.bamboohr.com/), [Workday](https://workday.com), [Paylocity](https://www.paylocity.com/) |\n| [peer bonus](https://www.forbes.com/sites/jurgenappelo/2015/07/08/the-peer-to-peer-bonus-system/#33c47ef84329)   | [bonus.ly](https://bonus.ly/) |\n| kudos  | [heytaco](https://www.heytaco.chat/), [slack ++ bot](https://github.com/tdmalone/working-plusplus/) |\n| perks | [fond](https://fond.co) |\n| talks | [Talks @ Google](https://www.youtube.com/c/talksatgoogle/videos) |\n| dory | [slido](https://www.sli.do/) |\n| edge, people ops training                | [LifeLabs](https://www.lifelabslearning.com/)  |\n| googlegeist                              | [Culture Amp](https://www.cultureamp.com/), [humu](https://www.humu.com/), [tinypulse](https://www.tinypulse.com/), [peakon](https://peakon.com/) |\n| Meng                                     | [Search Inside Yourself](https://www.amazon.com/Search-Inside-Yourself-Unexpected-Achieving/dp/0062116932) |\n| Lazlo                                    | [Work Rules](https://www.amazon.com/Work-Rules-Insights-Inside-Transform/dp/1455554790/) |\n| Claire Stapleton                         | [Tech Support - existential advice for the modern tech worker](https://techsupport.substack.com/) |\n| books about google | [How Google Works](https://www.amazon.com/How-Google-Works-Eric-Schmidt/dp/1455582328), [In The Plex](https://www.amazon.com/Plex-Google-Thinks-Works-Shapes/dp/1416596585), [Software Engineering at Google](https://www.amazon.com/Software-Engineering-Google-Lessons-Programming/dp/1492082791) |\n\n\nalso check out [xoogler.co](https://xoogler.co/), which organizes events, slack channels etc\n\n*disclaimer: I'm not affiliated with any of the technologies/products mentioned above.*\n\n*disclaimer: I left Google a number of years ago so some of the naming might be dated.*\n",
        "releases": []
    }
}