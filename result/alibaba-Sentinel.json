{
    "https://api.github.com/repos/alibaba/Sentinel": {
        "forks": 8067,
        "watchers": 22541,
        "stars": 22541,
        "languages": {
            "Java": 3918653,
            "JavaScript": 218906,
            "HTML": 155194,
            "CSS": 46183,
            "Dockerfile": 861,
            "Shell": 593,
            "Starlark": 115
        },
        "commits": [
            "2024-08-23T05:43:53Z",
            "2024-08-20T08:29:38Z",
            "2024-08-16T06:30:07Z",
            "2024-06-04T08:03:43Z",
            "2024-05-29T12:39:59Z",
            "2024-05-29T12:32:58Z",
            "2024-05-29T12:26:30Z",
            "2024-05-27T13:02:44Z",
            "2024-04-28T01:53:01Z",
            "2024-04-17T02:25:25Z",
            "2024-03-25T02:09:16Z",
            "2024-03-21T05:41:11Z",
            "2024-03-05T05:42:31Z",
            "2024-03-01T10:33:49Z",
            "2024-03-01T10:05:18Z",
            "2024-02-28T13:28:55Z",
            "2024-02-27T12:51:09Z",
            "2022-12-13T05:15:43Z",
            "2022-12-13T04:42:57Z",
            "2024-02-28T12:51:17Z",
            "2024-02-28T11:35:30Z",
            "2024-02-27T11:02:31Z",
            "2024-02-21T09:05:29Z",
            "2024-02-20T12:58:15Z",
            "2024-02-20T10:58:52Z",
            "2024-02-01T11:45:41Z",
            "2023-12-28T11:32:10Z",
            "2023-12-28T02:19:56Z",
            "2023-12-28T09:44:48Z",
            "2023-12-27T11:27:07Z"
        ],
        "creation_date": "2018-04-04T06:37:33Z",
        "contributors": 30,
        "topics": [
            "alibaba",
            "circuit-breaker",
            "cloud-native",
            "java",
            "microservice",
            "microservices",
            "rate-limiting",
            "reliability",
            "resiliency"
        ],
        "subscribers": 781,
        "readme": "# Sentinel: The Sentinel of Your Microservices\n\n<img src=\"https://user-images.githubusercontent.com/9434884/43697219-3cb4ef3a-9975-11e8-9a9c-73f4f537442d.png\" alt=\"Sentinel Logo\" width=\"50%\">\n\n[![Sentinel CI](https://github.com/alibaba/Sentinel/actions/workflows/ci.yml/badge.svg)](https://github.com/alibaba/Sentinel/actions/workflows/ci.yml)\n[![Codecov](https://codecov.io/gh/alibaba/Sentinel/branch/master/graph/badge.svg)](https://codecov.io/gh/alibaba/Sentinel)\n[![Maven Central](https://img.shields.io/maven-central/v/com.alibaba.csp/sentinel-core.svg?label=Maven%20Central)](https://search.maven.org/search?q=g:com.alibaba.csp%20AND%20a:sentinel-core)\n[![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg)](https://www.apache.org/licenses/LICENSE-2.0.html)\n[![Gitter](https://badges.gitter.im/alibaba/Sentinel.svg)](https://gitter.im/alibaba/Sentinel)\n[![Leaderboard](https://img.shields.io/badge/Sentinel-Check%20Your%20Contribution-orange)](https://opensource.alibaba.com/contribution_leaderboard/details?projectValue=sentinel)\n\n## Introduction\n\nAs distributed systems become increasingly popular, the reliability between services is becoming more important than ever before.\nSentinel takes \"flow\" as breakthrough point, and works on multiple fields including **flow control**, **traffic shaping**,\n**concurrency limiting**, **circuit breaking** and **system adaptive overload protection**,\nto guarantee reliability and resilience for microservices.\n\nSentinel has the following features:\n\n- **Rich applicable scenarios**: Sentinel has been wildly used in Alibaba, and has covered almost all the core-scenarios in Double-11 (11.11) Shopping Festivals in the past 10 years, such as \u201cSecond Kill\u201d which needs to limit burst flow traffic to meet the system capacity, message peak clipping and valley fills, circuit breaking for unreliable downstream services, cluster flow control, etc.\n- **Real-time monitoring**: Sentinel also provides real-time monitoring ability. You can see the runtime information of a single machine in real-time, and the aggregated runtime info of a cluster with less than 500 nodes.\n- **Widespread open-source ecosystem**: Sentinel provides out-of-box integrations with commonly-used frameworks and libraries such as Spring Cloud, gRPC, Apache Dubbo and Quarkus. You can easily use Sentinel by simply add the adapter dependency to your services.\n- **Polyglot support**: Sentinel has provided native support for Java, [Go](https://github.com/alibaba/sentinel-golang), [C++](https://github.com/alibaba/sentinel-cpp) and [Rust](https://github.com/sentinel-group/sentinel-rust).\n- **Various SPI extensions**: Sentinel provides easy-to-use SPI extension interfaces that allow you to quickly customize your logic, for example, custom rule management, adapting data sources, and so on.\n\nFeatures overview:\n\n![features-of-sentinel](./doc/image/sentinel-features-overview-en.png)\n\nThe community is also working on **the specification of traffic governance and fault-tolerance**.\nPlease refer to [OpenSergo](https://opensergo.io/) for details.\n\n## Documentation\n\nSee the [Sentinel Website](https://sentinelguard.io/) for the official website of Sentinel.\n\nSee the [\u4e2d\u6587\u6587\u6863](https://sentinelguard.io/zh-cn/docs/introduction.html) for document in Chinese.\n\nSee the [Wiki](https://github.com/alibaba/Sentinel/wiki) for full documentation, examples, blog posts, operational details and other information.\n\nSentinel provides integration modules for various open-source frameworks\n(e.g. Spring Cloud, Apache Dubbo, gRPC, Quarkus, Spring WebFlux, Reactor) and service mesh.\nYou can refer to [the document](https://sentinelguard.io/en-us/docs/open-source-framework-integrations.html) for more information.\n\nIf you are using Sentinel, please [**leave a comment here**](https://github.com/alibaba/Sentinel/issues/18) to tell us your scenario to make Sentinel better.\nIt's also encouraged to add the link of your blog post, tutorial, demo or customized components to [**Awesome Sentinel**](./doc/awesome-sentinel.md).\n\n## Ecosystem Landscape\n\n![ecosystem-landscape](./doc/image/sentinel-opensource-eco-landscape-en.png)\n\n## Quick Start\n\nBelow is a simple demo that guides new users to use Sentinel in just 3 steps. It also shows how to monitor this demo using the dashboard.\n\n### 1. Add Dependency\n\n**Note:** Sentinel requires JDK 1.8 or later.\n\nIf you're using Maven, just add the following dependency in `pom.xml`.\n\n```xml\n<!-- replace here with the latest version -->\n<dependency>\n    <groupId>com.alibaba.csp</groupId>\n    <artifactId>sentinel-core</artifactId>\n    <version>1.8.8</version>\n</dependency>\n```\n\nIf not, you can download JAR in [Maven Center Repository](https://mvnrepository.com/artifact/com.alibaba.csp/sentinel-core).\n\n### 2. Define Resource\n\nWrap your code snippet via Sentinel API: `SphU.entry(resourceName)`.\nIn below example, it is `System.out.println(\"hello world\");`:\n\n```java\ntry (Entry entry = SphU.entry(\"HelloWorld\")) {\n    // Your business logic here.\n    System.out.println(\"hello world\");\n} catch (BlockException e) {\n    // Handle rejected request.\n    e.printStackTrace();\n}\n// try-with-resources auto exit\n```\n\nSo far the code modification is done. We've also provided [annotation support module](https://github.com/alibaba/Sentinel/blob/master/sentinel-extension/sentinel-annotation-aspectj/README.md) to define resource easier.\n\n### 3. Define Rules\n\nIf we want to limit the access times of the resource, we can **set rules to the resource**.\nThe following code defines a rule that limits access to the resource to 20 times per second at the maximum.\n\n```java\nList<FlowRule> rules = new ArrayList<>();\nFlowRule rule = new FlowRule();\nrule.setResource(\"HelloWorld\");\n// set limit qps to 20\nrule.setCount(20);\nrule.setGrade(RuleConstant.FLOW_GRADE_QPS);\nrules.add(rule);\nFlowRuleManager.loadRules(rules);\n```\n\nFor more information, please refer to [How To Use](https://sentinelguard.io/en-us/docs/basic-api-resource-rule.html).\n\n### 4. Check the Result\n\nAfter running the demo for a while, you can see the following records in `~/logs/csp/${appName}-metrics.log.{date}` (When using the default `DateFileLogHandler`).\n\n```plaintext\n|--timestamp-|------date time----|-resource-|p |block|s |e|rt  |occupied\n1529998904000|2018-06-26 15:41:44|HelloWorld|20|0    |20|0|0   |0\n1529998905000|2018-06-26 15:41:45|HelloWorld|20|5579 |20|0|728 |0\n1529998906000|2018-06-26 15:41:46|HelloWorld|20|15698|20|0|0   |0\n1529998907000|2018-06-26 15:41:47|HelloWorld|20|19262|20|0|0   |0\n1529998908000|2018-06-26 15:41:48|HelloWorld|20|19502|20|0|0   |0\n1529998909000|2018-06-26 15:41:49|HelloWorld|20|18386|20|0|0   |0\n\np stands for incoming request, block for blocked by rules, s for success handled by Sentinel, e for exception count, rt for average response time (ms), occupied stands for occupiedPassQps since 1.5.0 which enable us booking more than 1 shot when entering.\n```\n\nThis shows that the demo can print \"hello world\" 20 times per second.\n\nMore examples and information can be found in the [How To Use](https://sentinelguard.io/en-us/docs/basic-api-resource-rule.html) section.\n\nThe working principles of Sentinel can be found in [How it works](https://sentinelguard.io/en-us/docs/basic-implementation.html) section.\n\nSamples can be found in the [sentinel-demo](https://github.com/alibaba/Sentinel/tree/master/sentinel-demo) module.\n\n### 5. Start Dashboard\n\n> Note: Java 8 is required for building or running the dashboard.\n\nSentinel also provides a simple dashboard application, on which you can monitor the clients and configure the rules in real time.\n\n![dashboard](https://user-images.githubusercontent.com/9434884/55449295-84866d80-55fd-11e9-94e5-d3441f4a2b63.png)\n\nFor details please refer to [Dashboard](https://github.com/alibaba/Sentinel/wiki/Dashboard).\n\n## Trouble Shooting and Logs\n\nSentinel will generate logs for troubleshooting and real-time monitoring.\nAll the information can be found in [logs](https://sentinelguard.io/en-us/docs/logs.html).\n\n## Bugs and Feedback\n\nFor bug report, questions and discussions please submit [GitHub Issues](https://github.com/alibaba/sentinel/issues).\n\nContact us via [Gitter](https://gitter.im/alibaba/Sentinel) or [Email](mailto:sentinel@linux.alibaba.com).\n\n## Contributing\n\nContributions are always welcomed! Please refer to [CONTRIBUTING](./CONTRIBUTING.md) for detailed guidelines.\n\nYou can start with the issues labeled with [`good first issue`](https://github.com/alibaba/Sentinel/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22).\n\n## Enterprise Service\n\nIf you need Sentinel enterprise service support (Sentinel \u4f01\u4e1a\u7248), or purchase cloud product services,\nyou can join the discussion by the DingTalk group (34754806). It can also be directly activated\nand used through the [microservice engine (MSE \u5fae\u670d\u52a1\u5f15\u64ce) provided by Alibaba Cloud](https://cn.aliyun.com/product/aliware/mse?spm=sentinel-github.index.0.0.0).\n\n## Credits\n\nThanks [Guava](https://github.com/google/guava), which provides some inspiration on rate limiting.\n\nAnd thanks for all [contributors](https://github.com/alibaba/Sentinel/graphs/contributors) of Sentinel!\n\n## Who is using\n\nThese are only part of the companies using Sentinel, for reference only.\nIf you are using Sentinel, please [add your company here](https://github.com/alibaba/Sentinel/issues/18) to tell us your scenario to make Sentinel better :)\n\n![Alibaba Group](https://docs.alibabagroup.com/assets2/images/en/global/logo_header.png)\n![AntFin](https://user-images.githubusercontent.com/9434884/90598732-30961c00-e226-11ea-8c86-0b1d7f7875c7.png)\n![Taiping Renshou](http://www.cntaiping.com/tplresource/cms/www/taiping/img/home_new/tp_logo_img.png)\n![\u62fc\u591a\u591a](http://cdn.pinduoduo.com/assets/img/pdd_logo_v3.png)\n![\u7231\u5947\u827a](https://user-images.githubusercontent.com/9434884/90598445-a51c8b00-e225-11ea-9327-3543525f3f2a.png)\n![Shunfeng Technology](https://user-images.githubusercontent.com/9434884/48463502-2f48eb80-e817-11e8-984f-2f9b1b789e2d.png)\n![\u4e8c\u7ef4\u706b](https://user-images.githubusercontent.com/9434884/49358468-bc43de00-f70d-11e8-97fe-0bf05865f29f.png)\n![Mandao](https://user-images.githubusercontent.com/9434884/48463559-6cad7900-e817-11e8-87e4-42952b074837.png)\n![\u6587\u8f69\u5728\u7ebf](http://static.winxuancdn.com/css/v2/images/logo.png)\n![\u5ba2\u5982\u4e91](https://www.keruyun.com/static/krynew/images/logo.png)\n![\u4eb2\u5b9d\u5b9d](https://stlib.qbb6.com/wclt/img/home_hd/version1/title_logo.png)\n![\u91d1\u6c47\u91d1\u878d](https://res.jinhui365.com/r/images/logo2.png?v=1.527)\n![\u95ea\u7535\u8d2d](http://cdn.52shangou.com/shandianbang/official-source/3.1.1/build/images/logo.png)\n",
        "releases": [
            {
                "name": "v1.8.8",
                "date": "2024-06-05T01:46:28Z"
            },
            {
                "name": "v1.8.7",
                "date": "2023-12-29T02:10:27Z"
            },
            {
                "name": "v2.0.0-alpha",
                "date": "2023-02-28T06:32:52Z"
            },
            {
                "name": "v1.8.6",
                "date": "2022-10-26T08:43:04Z"
            },
            {
                "name": "v1.8.5",
                "date": "2022-08-09T01:50:34Z"
            },
            {
                "name": "v1.8.4",
                "date": "2022-04-12T11:09:41Z"
            },
            {
                "name": "v1.8.3",
                "date": "2021-12-31T07:11:23Z"
            },
            {
                "name": "v1.8.2",
                "date": "2021-07-06T01:40:37Z"
            },
            {
                "name": "v1.8.1",
                "date": "2021-02-04T08:12:47Z"
            },
            {
                "name": "v1.8.0",
                "date": "2020-08-21T01:49:12Z"
            },
            {
                "name": "v1.7.2",
                "date": "2020-04-08T06:17:51Z"
            },
            {
                "name": "v1.7.1",
                "date": "2019-12-25T02:30:14Z"
            },
            {
                "name": "v1.7.0",
                "date": "2019-11-12T02:22:46Z"
            },
            {
                "name": "v1.6.3",
                "date": "2019-07-30T01:25:48Z"
            },
            {
                "name": "v1.6.2",
                "date": "2019-06-19T12:02:26Z"
            },
            {
                "name": "v1.6.1",
                "date": "2019-05-23T16:25:38Z"
            },
            {
                "name": "v1.6.0",
                "date": "2019-04-25T01:54:22Z"
            },
            {
                "name": "v1.5.1",
                "date": "2019-03-27T09:23:41Z"
            },
            {
                "name": "v1.5.0",
                "date": "2019-03-14T08:19:51Z"
            },
            {
                "name": "v1.4.2",
                "date": "2019-02-20T12:20:59Z"
            },
            {
                "name": "v1.4.1",
                "date": "2019-01-04T07:22:44Z"
            },
            {
                "name": "v1.4.0",
                "date": "2018-12-14T07:11:51Z"
            },
            {
                "name": "v1.3.0-GA",
                "date": "2018-10-30T07:32:03Z"
            },
            {
                "name": "v0.2.0",
                "date": "2018-09-27T11:52:10Z"
            },
            {
                "name": "v0.1.1",
                "date": "2018-08-09T03:29:46Z"
            }
        ]
    }
}