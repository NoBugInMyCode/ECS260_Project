{
    "https://api.github.com/repos/smartcontractkit/full-blockchain-solidity-course-js": {
        "forks": 3091,
        "watchers": 12905,
        "stars": 12905,
        "languages": {},
        "commits": [
            "2024-05-23T08:18:32Z",
            "2024-05-23T07:33:25Z",
            "2024-05-17T03:41:36Z",
            "2023-08-31T19:20:46Z",
            "2023-03-14T03:27:40Z",
            "2023-03-14T03:09:25Z",
            "2023-03-14T03:09:01Z",
            "2023-03-14T03:08:03Z",
            "2023-03-14T03:05:33Z",
            "2023-03-14T03:05:17Z",
            "2023-03-14T03:04:54Z",
            "2023-03-14T03:04:00Z",
            "2022-12-04T07:26:06Z",
            "2022-11-29T21:08:27Z",
            "2022-11-29T21:07:50Z",
            "2022-10-24T16:44:27Z",
            "2022-10-08T08:48:40Z",
            "2022-10-08T08:15:21Z",
            "2022-10-08T08:14:56Z",
            "2022-10-03T15:59:22Z",
            "2022-09-27T15:18:55Z",
            "2022-09-26T16:46:27Z",
            "2022-09-16T00:39:55Z",
            "2022-09-15T16:44:09Z",
            "2022-09-15T16:43:22Z",
            "2022-09-15T16:40:27Z",
            "2022-09-06T12:28:17Z",
            "2022-09-06T12:27:20Z",
            "2022-08-27T21:36:34Z",
            "2022-08-23T15:19:03Z"
        ],
        "creation_date": "2022-01-17T01:15:22Z",
        "contributors": 27,
        "topics": [
            "alchemy",
            "blockchain",
            "chainlink",
            "dao",
            "defi",
            "eth-security-toolbox",
            "ethereum",
            "hardhat",
            "ipfs",
            "javascript",
            "moralis",
            "nextjs",
            "nft",
            "openzeppelin",
            "reactjs",
            "remix",
            "smart-contracts",
            "solidity",
            "thegraphprotocol",
            "typescript"
        ],
        "subscribers": 248,
        "readme": "# Update: Head to Cyfrin Updraft\n\n> **\u2139\ufe0f Important:**\n> This repo is no longer actively maintained as there have been changes in Hardhat tooling. The video is out of sync with the code, and you can still follow along with the video, but you will likely need to troubleshoot the changes in the tooling and dependencies. Note also that best practices have evolved since this video was made.  \n> If you'd like to continue your training with more up-to-date material, you can take a look at [Cyfrin Updraft](https://updraft.cyfrin.io/). That content is developed with love by Patrick & Cyfrin <3. However note that Cyfrin Updraft training uses Foundry, not Hardhat, so there will be tooling changes involved.\n\n# Web3, Full Stack Solidity, Smart Contract & Blockchain - Beginner to Expert ULTIMATE Course | Javascript Edition\n\n<br/>\n<p align=\"center\">\n<a href=\"https://www.youtube.com/watch?v=gyMwXuJrbJQ\" target=\"_blank\">\n<img src=\"./img/blockchain1.png\" width=\"500\" alt=\"Solidity, Blockchain, and Smart Contract Course \u2013 Beginner to Expert Javascript Tutorial\">\n</a>\n</p>\n<br/>\n\nWelcome to the repository for the Ultimate Web3, Full Stack Solidity, and Smart Contract - Beginner to Expert Full Course | Javascript Edition FreeCodeCamp Course!\n\n# Link to video: https://www.youtube.com/watch?v=gyMwXuJrbJQ\n\nAll code references have both a javascript and a typescript edition.\n\nRecommended Testnet: Sepolia\n\n_We have updated the repos to work with Sepolia due to Rinkeby and Kovan being sunset, and Goerli being a disaster. Let us know if any of the changes break stuff!_\n\n# [Testnet Faucets](https://faucets.chain.link)\n\nMain Faucet:<a href=\"https://faucets.chain.link\" target=\"_blank\"> https://faucets.chain.link</a>\nBackup Faucet:<a href=\"https://sepoliafaucet.com/\" target=\"_blank\"> https://sepoliafaucet.com/</a>\n\n> \u26a0\ufe0f All code associated with this course is for demo purposes only. They have not been audited and should not be considered production ready. Please use at your own risk.\n\n# Resources For This Course\n\n### Questions\n\n- [Github Discussions](https://github.com/smartcontractkit/full-blockchain-solidity-course-js/discussions)\n  - Ask questions and chat about the course here!\n- [Stack Exchange Ethereum](https://ethereum.stackexchange.com/)\n  - Great place for asking technical questions about Ethereum\n- [StackOverflow](https://stackoverflow.com/)\n  - Great place for asking technical questions overall\n\n# Table of Contents\n\n<details>\n<summary>Resources</summary>\n<ol>\n<li><a href=\"#testnet-faucets\">Testnet Faucets</a></li>\n<li><a href=\"#resources-for-this-course\">Resources For This Course</a><ul>\n<li><a href=\"#questions\">Questions</a></li>\n</ul>\n</li>\n<li><a href=\"#table-of-contents\">Table of Contents</a></li>\n</ol>\n</details>\n<details>\n<summary> <a href=\"#lesson-0-the-edge-of-the-rabbit-hole\">Lesson 0: The Edge of the Rabbit Hole</a></summary>\n<ol>\n  <li>\n  <a href=\"#welcome-to-the-course\">Welcome to the course! </a>\n  </li>\n  <li>\n  <a href=\"#best-practices\">Best Practices </a>\n  </li>\n</ol>\n</details>\n<details>\n<summary> <a href=\"#lesson-1-blockchain-basics\"> Lesson 1: Blockchain Basics </a> </summary>\n<ol>\n<li>\n<a href=\"#what-is-a-blockchain-what-does-a-blockchain-do\">What is a Blockchain? What does a blockchain do?</a>\n</li>\n<li><a href=\"#the-purpose-of-smart-contracts\">The Purpose Of Smart Contracts</a></li>\n<li><a href=\"#other-blockchain-benefits\">Other Blockchain Benefits</a></li>\n<li><a href=\"#what-have-smart-contracts-done-so-far\">What have Smart Contracts done so far?</a></li>\n<li><a href=\"#making-your-first-transaction\">Making Your First Transaction</a></li>\n<li><a href=\"#gas-i-introduction-to-gas\">Gas I: Introduction to Gas</a></li>\n<li><a href=\"#how-do-blockchains-work\">How Do Blockchains Work?</a></li>\n<li><a href=\"#signing-transactions\">Signing Transactions</a></li>\n<li><a href=\"#gas-ii\">Gas II</a></li>\n<li><a href=\"#high-level-blockchain-fundamentals\">High-Level Blockchain Fundamentals</a></li>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-2-welcome-to-remix-simple-storage\">Lesson 2: Welcome to Remix! Simple Storage</a></summary>\n<ol>\n<li><a href=\"#introduction\">Introduction</a></li>\n<li><a href=\"#setting-up-your-first-contract\">Setting Up Your First Contract</a></li>\n<li><a href=\"#basic-solidity-types\">Basic Solidity: Types</a></li>\n<li><a href=\"#basic-solidity-functions\">Basic Solidity: Functions</a></li>\n<li><a href=\"#basic-solidity-arrays--structs\">Basic Solidity: Arrays &amp; Structs</a></li>\n<li><a href=\"#basic-solidity-compiler-errors-and-warnings\">Basic Solidity: Compiler Errors and Warnings</a></li>\n<li><a href=\"#memory-storage-calldata-intro\">Memory, Storage, Calldata (Intro)</a></li>\n<li><a href=\"#mappings\">Mappings</a></li>\n<li><a href=\"#deploying-your-first-contract\">Deploying your First Contract</a></li>\n<li><a href=\"#the-evm--a-recap-of-lesson-2\">The EVM &amp; A Recap of Lesson 2</a></li>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-3-remix-storage-factory\">Lesson 3: Remix Storage Factory</a></summary>\n<ol>\n<li><a href=\"#introduction-1\">Introduction</a></li>\n<li><a href=\"#basic-solidity-importing-contracts-into-other-contracts\">Basic Solidity: Importing Contracts into other Contracts</a></li>\n<li><a href=\"#basic-solidity-interacting-with-other-contracts\">Basic Solidity: Interacting with other Contracts</a></li>\n<li><a href=\"#basic-solidity-inheritance--overrides\">Basic Solidity: Inheritance &amp; Overrides</a></li>\n<li><a href=\"#lesson-3-recap\">Lesson 3 Recap</a></li>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-4-remix-fund-me\">Lesson 4: Remix Fund Me</a></summary>\n<ol>\n<li><a href=\"#introduction-2\">Introduction</a></li>\n<li><a href=\"#sending-eth-through-a-function--reverts\">Sending ETH Through a Function &amp; Reverts</a></li>\n<li><a href=\"#chainlink--oracles\">Chainlink &amp; Oracles</a></li>\n<li><a href=\"#review-of-sending-eth-and-working-with-chainlink\">Review of Sending ETH and working with Chainlink</a></li>\n<li><a href=\"#interfaces--price-feeds\">Interfaces &amp; Price Feeds</a></li>\n<li><a href=\"#importing-from-github--npm\">Importing from GitHub &amp; NPM</a></li>\n<li><a href=\"#floating-point-math-in-solidtiy\">Floating Point Math in Solidity</a></li>\n<li><a href=\"#basic-solidity-arrays--structs-ii\">Basic Solidity: Arrays &amp; Structs II</a></li>\n<li><a href=\"#review-of-interfacs-importing-from-github--math-in-solidity\">Review of Interfacs, Importing from GitHub, &amp; Math in Solidity</a></li>\n<li><a href=\"#libraries\">Libraries</a></li>\n<li><a href=\"#safemath-overflow-checking-and-the-unchecked-keywork\">SafeMath, Overflow Checking, and the &quot;unchecked&quot; keywork</a></li>\n<li><a href=\"#basic-solidity-for-loop\">Basic Solidity: For Loop</a></li>\n<li><a href=\"#basic-solidity-resetting-an-array\">Basic Solidity: Resetting an Array</a></li>\n<li><a href=\"#sending-eth-from-a-contract\">Sending ETH from a Contract</a></li>\n<li><a href=\"#basic-solidity-constructor\">Basic Solidity: Constructor</a></li>\n<li><a href=\"#basic-solidity-modifiers\">Basic Solidity: Modifiers</a></li>\n<li><a href=\"#testnet-demo\">Testnet Demo</a></li>\n<li><a href=\"#advanced-solidity\">Advanced Solidity</a><ul>\n<li><a href=\"#immutable--constant\">Immutable &amp; Constant</a></li>\n<li><a href=\"#custom-errors\">Custom Errors</a></li>\n<li><a href=\"#receive--fallback-functions\">Receive &amp; Fallback Functions</a></li>\n<li><a href=\"#lesson-4-recap\">Lesson 4 Recap</a></li>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-5-ethersjs-simple-storage\">Lesson 5: Ethers.js Simple Storage</a></summary>\n<ol>\n<li><a href=\"#effective-debugging-strategies--getting-help\">Effective Debugging Strategies &amp; Getting Help</a><ul>\n<li><a href=\"#how-to-debug-anything-video\">How to Debug Anything Video</a></li>\n</ul>\n</li>\n<li><a href=\"#installation--setup\">Installation &amp; Setup</a><ul>\n<li><a href=\"#mac--linux-setup\">Mac &amp; Linux Setup</a></li>\n<li><a href=\"#windows-setup\">Windows Setup</a></li>\n<li><a href=\"#gitpod\">Gitpod</a></li>\n</ul>\n</li>\n<li><a href=\"#local-development-introduction\">Local Development Introduction</a><ul>\n<li><a href=\"#optional-javascript-crash-courses\">Optional Javascript Crash Courses</a></li>\n</ul>\n</li>\n<li><a href=\"#tiny-javascript-refresher\">Tiny Javascript Refresher</a></li>\n<li><a href=\"#asynchronous-programming-in-javascript\">Asynchronous Programming in Javascript</a></li>\n<li><a href=\"#compiling-our-solidity\">Compiling our Solidity</a></li>\n<li><a href=\"#ganache--networks\">Ganache &amp; Networks</a></li>\n<li><a href=\"#introduction-to-ethersjs\">Introduction to Ethers.js</a><ul>\n<li><a href=\"#a-note-on-the-await-keyword\">A Note on the await Keyword</a></li>\n</ul>\n</li>\n<li><a href=\"#adding-transaction-overrides\">Adding Transaction Overrides</a></li>\n<li><a href=\"#transaction-receipts\">Transaction Receipts</a></li>\n<li><a href=\"#sending-a-raw-transaction-in-ethersjs\">Sending a &quot;raw&quot; Transaction in Ethersjs</a></li>\n<li><a href=\"#interacting-with-contracts-in-ethersjs\">Interacting with Contracts in Ethersjs</a></li>\n<li><a href=\"#environment-variables\">Environment Variables</a></li>\n<li><a href=\"#better-private-key-management\">Better Private Key Management</a></li>\n<li><a href=\"#optional-prettier-formatting\">Optional Prettier Formatting</a></li>\n<li><a href=\"#deploying-to-a-testnet-or-a-mainnet\">Deploying to a Testnet or a Mainnet</a></li>\n<li><a href=\"#verifying-on-block-explorers-from-the-ui\">Verifying on Block Explorers from the UI</a></li>\n<li><a href=\"#alchemy-dashboard--the-mempool\">Alchemy Dashboard &amp; The Mempool</a></li>\n<li><a href=\"#lesson-5-recap\">Lesson 5 Recap</a><ul>\n<li><a href=\"#typescript-ethers-simple-storage\">Typescript Ethers Simple Storage</a></li>\n</ul>\n</li>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-6-hardhat-simple-storage\">Lesson 6: Hardhat Simple Storage</a></summary>\n<ol>\n<li><a href=\"#introduction-3\">Introduction</a></li>\n<li><a href=\"#hardhat-setup\">Hardhat Setup</a><ul>\n<li><a href=\"#troubleshooting-hardaht-setup\">Troubleshooting Hardaht Setup</a></li>\n</ul>\n</li>\n<li><a href=\"#hardhat-setup-continued\">Hardhat Setup Continued</a></li>\n<li><a href=\"#deploying-simplestorage-from-hardhat\">Deploying SimpleStorage from Hardhat</a></li>\n<li><a href=\"#networks-in-hardhat\">Networks in Hardhat</a></li>\n<li><a href=\"#programatic-verification\">Programatic Verification</a></li>\n<li><a href=\"#interacting-with-contracts-in-hardhat\">Interacting with Contracts in Hardhat</a></li>\n<li><a href=\"#artifacts-troubleshooting\">Artifacts Troubleshooting</a></li>\n<li><a href=\"#custom-hardhat-tasks\">Custom Hardhat Tasks</a></li>\n<li><a href=\"#hardhat-localhost-node\">Hardhat Localhost Node</a></li>\n<li><a href=\"#the-hardhat-console\">The Hardhat Console</a></li>\n<li><a href=\"#hardhat-tests\">Hardhat Tests</a></li>\n<li><a href=\"#hardhat-gas-reporter\">Hardhat Gas Reporter</a></li>\n<li><a href=\"#solidity-coverage\">Solidity Coverage</a></li>\n<li><a href=\"#hardhat-waffle\">Hardhat Waffle</a></li>\n<li><a href=\"#lesson-6-recap\">Lesson 6 Recap</a><ul>\n<li><a href=\"#typescript-hardhat-simple-storage\">Typescript Hardhat Simple Storage</a></li>\n</ul>\n</li>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-7-hardhat-fund-me\">Lesson 7: Hardhat Fund Me</a></summary>\n<ol>\n<li><a href=\"#introduction-4\">Introduction</a></li>\n<li><a href=\"#hardhat-setup---fund-me\">Hardhat Setup - Fund Me</a></li>\n<li><a href=\"#linting\">Linting</a></li>\n<li><a href=\"#hardhat-setup---fund-me---continued\">Hardhat Setup - Fund Me - Continued</a></li>\n<li><a href=\"#importing-from-npm\">Importing from NPM</a></li>\n<li><a href=\"#hardhat-deploy\">Hardhat Deploy</a></li>\n<li><a href=\"#mocking\">Mocking</a></li>\n<li><a href=\"#utils-folder\">Utils Folder</a></li>\n<li><a href=\"#testnet-demo---hardhat-fund-me\">Testnet Demo - Hardhat Fund Me</a></li>\n<li><a href=\"#solidity-style-guide\">Solidity Style Guide</a></li>\n<li><a href=\"#testing-fund-me\">Testing Fund Me</a></li>\n<li><a href=\"#breakpoints--debugging\">Breakpoints &amp; Debugging</a></li>\n<li><a href=\"#gas-iii\">Gas III:</a></li>\n<li><a href=\"#consolelog--debugging\">console.log &amp; Debugging</a></li>\n<li><a href=\"#testing-fund-me-ii\">Testing Fund Me II</a></li>\n<li><a href=\"#storage-in-solidity\">Storage in Solidity</a></li>\n<li><a href=\"#gas-optimizations-using-storage-knowledge\">Gas Optimizations using Storage Knowledge</a></li>\n<li><a href=\"#solidity-chainlink-style-guide\">Solidity Chainlink Style Guide</a></li>\n<li><a href=\"#storage-review\">Storage Review</a></li>\n<li><a href=\"#staging-tests\">Staging Tests</a></li>\n<li><a href=\"#running-scripts-on-a-local-node\">Running Scripts on a Local Node</a></li>\n<li><a href=\"#adding-scripts-to-your-packagejson\">Adding Scripts to your package.json</a></li>\n<li><a href=\"#pushing-to-github\">Pushing to GitHub</a></li>\n<li><a href=\"#-tweet-me-add-your-repo-in\">\ud83d\udc38\ud83d\udc26 Tweet Me (add your repo in)!</a></li>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-8-html--javascript-fund-me-full-stack--front-end\">Lesson 8: HTML / Javascript Fund Me (Full Stack / Front End)</a></summary>\n<ol>\n<li><a href=\"#introduction-5\">Introduction</a></li>\n<li><a href=\"#how-websites-work-with-web3-wallets\">How Websites work with Web3 Wallets</a></li>\n<li><a href=\"#html-setup\">HTML Setup</a></li>\n<li><a href=\"#connecting-html-to-metamask\">Connecting HTML to Metamask</a></li>\n<li><a href=\"#javascript-in-its-own-file\">Javascript in it&#39;s own file</a></li>\n<li><a href=\"#es6-vs-nodejs\">ES6 vs Nodejs</a></li>\n<li><a href=\"#sending-a-transaction-from-a-website\">Sending a transaction from a Website</a></li>\n<li><a href=\"#resetting-an-account-in-metamask\">Resetting an Account in Metamask</a></li>\n<li><a href=\"#listening-for-events-and-completed-transactions\">Listening for Events and Completed Transactions</a></li>\n<li><a href=\"#input-forms\">Input Forms</a></li>\n<li><a href=\"#reading-from-the-blockchain\">Reading from the Blockchain</a></li>\n<li><a href=\"#withdraw-function\">Withdraw Function</a></li>\n<li><a href=\"#lesson-8-recap\">Lesson 8 Recap</a><ul>\n<li><a href=\"#optional-links\">Optional Links</a></li>\n</ul>\n</li>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-9-hardhat-smart-contract-lottery\">Lesson 9: Hardhat Smart Contract Lottery</a></summary>\n<ol>\n<li><a href=\"#introduction-6\">Introduction</a></li>\n<li><a href=\"#hardhat-setup---smart-contract-lottery\">Hardhat Setup - Smart Contract Lottery</a></li>\n<li><a href=\"#rafflesol-setup\">Raffle.sol Setup</a></li>\n<li><a href=\"#introduction-to-events\">Introduction to Events</a></li>\n<li><a href=\"#events-in-rafflesol\">Events in Raffle.sol</a></li>\n<li><a href=\"#introduction-to-chainlink-vrf\">Introduction to Chainlink VRF</a><ul>\n<li><a href=\"#sub-lesson-chainlink-vrf\">Sub-Lesson: Chainlink VRF</a></li>\n</ul>\n</li>\n<li><a href=\"#implementing-chainlink-vrf---introduction\">Implementing Chainlink VRF - Introduction</a><ul>\n<li><a href=\"#hardhat-shorthand\">Hardhat Shorthand</a></li>\n</ul>\n</li>\n<li><a href=\"#implementing-chainlink-vrf---the-request\">Implementing Chainlink VRF - The Request</a></li>\n<li><a href=\"#implementing-chainlink-vrf---the-fulfill\">Implementing Chainlink VRF - The FulFill</a><ul>\n<li><a href=\"#modulo\">Modulo</a></li>\n</ul>\n</li>\n<li><a href=\"#introduction-to-chainlink-keepers\">Introduction to Chainlink Keepers</a></li>\n<li><a href=\"#implementing-chainlink-keepers---checkupkeep\">Implementing Chainlink Keepers - checkUpkeep</a><ul>\n<li><a href=\"#enums\">Enums</a></li>\n</ul>\n</li>\n<li><a href=\"#implementing-chainlink-keepers---checkupkeep-continued\">Implementing Chainlink Keepers - checkUpkeep continued</a></li>\n<li><a href=\"#implementing-chainlink-keepers---performupkeep\">Implementing Chainlink Keepers - performUpkeep</a></li>\n<li><a href=\"#code-cleanup\">Code Cleanup</a></li>\n<li><a href=\"#deploying-rafflesol\">Deploying Raffle.sol</a><ul>\n<li><a href=\"#mock-chainlink-vrf-coordinator\">Mock Chainlink VRF Coordinator</a></li>\n<li><a href=\"#continued\">Continued</a></li>\n</ul>\n</li>\n<li><a href=\"#rafflesol-unit-tests\">Raffle.sol Unit Tests</a><ul>\n<li><a href=\"#testing-events--chai-matchers\">Testing Events &amp; Chai Matchers</a></li>\n<li><a href=\"#continued-i\">Continued I</a></li>\n</ul>\n</li>\n<li><a href=\"#hardhat-methods--time-travel\">Hardhat Methods &amp; Time Travel</a><ul>\n<li><a href=\"#continued-ii\">Continued II</a></li>\n</ul>\n</li>\n<li><a href=\"#callstatic\">Callstatic</a><ul>\n<li><a href=\"#continued-iii\">Continued III</a></li>\n<li><a href=\"#massive-promise-test\">Massive Promise Test</a></li>\n<li><a href=\"#continued-iv\">Continued IV</a></li>\n</ul>\n</li>\n<li><a href=\"#rafflesol-staging-tests\">Raffle.sol Staging Tests</a></li>\n<li><a href=\"#testing-on-a-testnet\">Testing on a Testnet</a><ul>\n<li><a href=\"#recommended-link-amounts-for-sepolia-staging-test\">Recommended LINK amounts for Sepolia Staging Test:</a></li>\n</ul>\n</li>\n<li><a href=\"#conclusion\">Conclusion</a></li>\n<li><a href=\"#typescript---smart-contract-lottery\">Typescript - Smart Contract Lottery</a></li>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-10-nextjs-smart-contract-lottery-full-stack--front-end\">Lesson 10: NextJS Smart Contract Lottery (Full Stack / Front End)</a></summary>\n<ol>\n<li><a href=\"#introduction-7\">Introduction</a><ul>\n<li><a href=\"#optional-sub-lesson-full-stack-development--other-libraries\">Optional Sub-Lesson: Full Stack Development &amp; Other Libraries</a></li>\n</ul>\n</li>\n<li><a href=\"#nextjs-setup\">NextJS Setup</a></li>\n<li><a href=\"#manual-header-i\">Manual Header I</a><ul>\n<li><a href=\"#react-hooks\">React Hooks</a></li>\n</ul>\n</li>\n<li><a href=\"#manual-header-ii\">Manual Header II</a></li>\n<li><a href=\"#useeffect-hook\">useEffect Hook</a></li>\n<li><a href=\"#local-storage\">Local Storage</a></li>\n<li><a href=\"#isweb3enabledloading\">isWeb3EnabledLoading</a></li>\n<li><a href=\"#web3uikit\">web3uikit</a></li>\n<li><a href=\"#introduction-to-calling-functions-in-nextjs\">Introduction to Calling Functions in Nextjs</a><ul>\n<li><a href=\"#automatic-constant-value-ui-updater\">Automatic Constant Value UI Updater</a></li>\n<li><a href=\"#runcontractfunction\">runContractFunction</a></li>\n</ul>\n</li>\n<li><a href=\"#usestate\">useState</a></li>\n<li><a href=\"#calling-functions-in-nextjs\">Calling Functions in NextJS</a></li>\n<li><a href=\"#usenotification\">useNotification</a></li>\n<li><a href=\"#reading--displaying-contract-data\">Reading &amp; Displaying Contract Data</a></li>\n<li><a href=\"#a-note-about-onsuccess\">A Note about <code>onSuccess</code></a></li>\n<li><a href=\"#a-challenge-to-you\">A Challenge to You</a></li>\n<li><a href=\"#tailwind--styling\">Tailwind &amp; Styling</a></li>\n<li><a href=\"#introduction-to-hosting-your-site\">Introduction to Hosting your Site</a></li>\n<li><a href=\"#ipfs\">IPFS</a></li>\n<li><a href=\"#hosting-on-ipfs\">Hosting on IPFS</a></li>\n<li><a href=\"#hosting-on-ipfs--filecoin-using-fleek\">Hosting on IPFS &amp; Filecoin using Fleek</a></li>\n<li><a href=\"#filecoin-overview\">Filecoin Overview</a></li>\n<li><a href=\"#lesson-10-recap\">Lesson 10 Recap</a></li>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-11-hardhat-starter-kit\">Lesson 11: Hardhat Starter Kit</a></summary>\n<ol>\n</details>\n<details>\n<summary><a href=\"#lesson-12-hardhat-erc20s\">Lesson 12: Hardhat ERC20s</a></summary>\n<ol>\n<li><a href=\"#what-is-an-erc-what-is-an-eip\">What is an ERC? What is an EIP?</a></li>\n<li><a href=\"#what-is-an-erc20\">What is an ERC20?</a></li>\n<li><a href=\"#manually-creating-an-erc20-token\">Manually Creating an ERC20 Token</a></li>\n<li><a href=\"#creating-an-erc20-token-with-openzeppelin\">Creating an ERC20 Token with Openzeppelin</a></li>\n<li><a href=\"#lesson-12-recap\">Lesson 12 Recap</a></li>\n</ul>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-13-hardhat-defi--aave\">Lesson 13: Hardhat DeFi &amp; Aave</a></summary>\n<ol>\n<li><a href=\"#what-is-defi\">What is DeFi?</a></li>\n<li><a href=\"#what-is-aave\">What is Aave?</a></li>\n<li><a href=\"#programatic-borrowing--lending\">Programatic Borrowing &amp; Lending</a></li>\n<li><a href=\"#weth---wrapped-eth\">WETH - Wrapped ETH</a></li>\n<li><a href=\"#forking-mainnet\">Forking Mainnet</a></li>\n<li><a href=\"#depositing-into-aave\">Depositing into Aave</a></li>\n<li><a href=\"#borrowing-from-aave\">Borrowing from Aave</a></li>\n<li><a href=\"#repaying-with-aave\">Repaying with Aave</a></li>\n<li><a href=\"#visualizing-the-transactions\">Visualizing the Transactions</a></li>\n<li><a href=\"#lesson-13-recap\">Lesson 13 Recap</a></li>\n<li><a href=\"#happy-bow-tie-friday-with-austin-griffith\">Happy Bow-Tie Friday with Austin Griffith</a><ul>\n<li><a href=\"#more-defi-learnings\">More DeFi Learnings:</a></li>\n</ul>\n</li>\n</ul>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-14-hardhat-nfts-everything-you-need-to-know-about-nfts\">Lesson 14: Hardhat NFTs (EVERYTHING you need to know about NFTs)</a></summary>\n<ol>\n<li><a href=\"#what-is-an-nft\">What is an NFT?</a></li>\n<li><a href=\"#code-overview\">Code Overview</a></li>\n<li><a href=\"#hardhat-setup-1\">Hardhat Setup</a></li>\n<li><a href=\"#basic-nft\">Basic NFT</a><ul>\n<li><a href=\"#write-tests\">Write Tests</a></li>\n</ul>\n</li>\n<li><a href=\"#random-ipfs-nft\">Random IPFS NFT</a><ul>\n<li><a href=\"#mapping-chainlink-vrf-requests\">Mapping Chainlink VRF Requests</a></li>\n<li><a href=\"#creating-rare-nfts\">Creating Rare NFTs</a></li>\n<li><a href=\"#setting-the-nft-image\">Setting the NFT Image</a></li>\n<li><a href=\"#setting-an-nft-mint-price\">Setting an NFT Mint Price</a></li>\n<li><a href=\"#deploy-script\">Deploy Script</a></li>\n<li><a href=\"#uploading-token-images-with-pinata\">Uploading Token Images with Pinata</a></li>\n<li><a href=\"#uploading-token-uris-metadata-with-pinata\">Uploading Token URIs (metadata) with Pinata</a></li>\n<li><a href=\"#deploying\">Deploying</a></li>\n<li><a href=\"#tests\">Tests</a></li>\n</ul>\n</li>\n<li><a href=\"#dynamic-svg-on-chain-nft\">Dynamic SVG On-Chain NFT</a><ul>\n<li><a href=\"#what-is-an-svg\">What is an SVG?</a></li>\n<li><a href=\"#initial-code\">Initial Code</a></li>\n<li><a href=\"#base64-encoding\">Base64 Encoding</a></li>\n</ul>\n</li>\n<li><a href=\"#advanced-evm-opcodes-encoding-and-calling\">Advanced: EVM Opcodes, Encoding, and Calling</a><ul>\n<li><a href=\"#abiencode--abiencodepacked\">abi.encode &amp; abi.encodePacked</a></li>\n<li><a href=\"#introduction-to-encoding-function-calls-directly\">Introduction to Encoding Function Calls Directly</a></li>\n<li><a href=\"#introduction-to-encoding-function-calls-recap\">Introduction to Encoding Function Calls Recap</a></li>\n<li><a href=\"#encoding-function-calls-directly\">Encoding Function Calls Directly</a></li>\n<li><a href=\"#creating-an-nft-tokenuri-on-chain\">Creating an NFT TokenURI on-Chain</a></li>\n<li><a href=\"#making-the-nft-dynamic\">Making the NFT Dynamic</a></li>\n<li><a href=\"#deploy-script-1\">Deploy Script</a></li>\n</ul>\n</li>\n<li><a href=\"#deploying-the-nfts-to-a-testnet\">Deploying the NFTs to a Testnet</a></li>\n<li><a href=\"#lesson-14-recap\">Lesson 14 Recap</a></li>\n</ul>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-15-nextjs-nft-marketplace-if-you-finish-this-lesson-you-are-a-full-stack-monster\">Lesson 15: NextJS NFT Marketplace (If you finish this lesson, you are a full-stack MONSTER!)</a></summary>\n<ol>\n<li><a href=\"#introduction-8\">Introduction</a></li>\n<li><a href=\"#part-i-nft-marketplace-contracts\">Part I: NFT Marketplace Contracts</a><ul>\n<li><a href=\"#hardhat-setup-2\">Hardhat Setup</a></li>\n<li><a href=\"#nftmarketplacesol\">NftMarketplace.sol</a></li>\n</ul>\n</li>\n<li><a href=\"#reentrancy\">Reentrancy</a><ul>\n<li><a href=\"#nftmarketplacesol---continued\">NftMarketplace.sol - Continued</a></li>\n<li><a href=\"#nftmarketplacesol---deploy-script\">NftMarketplace.sol - Deploy Script</a></li>\n<li><a href=\"#nftmarketplacesol---tests\">NftMarketplace.sol - Tests</a></li>\n<li><a href=\"#nftmarketplacesol---scripts\">NftMarketplace.sol - Scripts</a></li>\n</ul>\n</li>\n<li><a href=\"#part-ii-moralis-front-end\">Part II: Moralis Front End</a><ul>\n<li><a href=\"#what-is-moralis\">What is Moralis?</a></li>\n<li><a href=\"#nextjs-setup-1\">NextJS Setup</a></li>\n<li><a href=\"#adding-tailwind\">Adding Tailwind</a></li>\n<li><a href=\"#introduction-to-indexing-in-web3\">Introduction to Indexing in Web3</a></li>\n<li><a href=\"#connecting-moralis-to-our-local-hardhat-node\">Connecting Moralis to our Local Hardhat Node</a></li>\n<li><a href=\"#moralis-event-sync\">Moralis Event Sync</a><ul>\n<li><a href=\"#reset-local-chain\">Reset Local Chain</a></li>\n</ul>\n</li>\n<li><a href=\"#moralis-cloud-functions\">Moralis Cloud Functions</a><ul>\n<li><a href=\"#practice-resetting-the-local-chain\">Practice Resetting the Local Chain</a></li>\n</ul>\n</li>\n<li><a href=\"#moralis-cloud-functions-ii\">Moralis Cloud Functions II</a></li>\n<li><a href=\"#querying-the-moralis-database\">Querying the Moralis Database</a></li>\n<li><a href=\"#rendering-the-nft-images\">Rendering the NFT Images</a></li>\n<li><a href=\"#update-listing-modal\">Update Listing Modal</a></li>\n<li><a href=\"#buy-nft-listing\">Buy NFT Listing</a></li>\n<li><a href=\"#listing-nfts-for-sale\">Listing NFTs for Sale</a></li>\n</ul>\n</li>\n<li><a href=\"#part-iii-thegraph-front-end\">Part III: TheGraph Front End</a><ul>\n<li><a href=\"#introduction-9\">Introduction</a></li>\n<li><a href=\"#what-is-the-graph\">What is The Graph?</a></li>\n<li><a href=\"#building-a-subgraph\">Building a Subgraph</a></li>\n<li><a href=\"#deploying-our-subgraph\">Deploying our Subgraph</a></li>\n<li><a href=\"#reading-from-the-graph\">Reading from The Graph</a></li>\n<li><a href=\"#hosting-our-dapp\">Hosting our Dapp</a></li>\n</ul>\n</li>\n</ul>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-16-hardhat-upgrades\">Lesson 16: Hardhat Upgrades</a></summary>\n<ol>\n<li><a href=\"#upgradeable-smart-contracts-overview\">Upgradeable Smart Contracts Overview</a></li>\n<li><a href=\"#types-of-upgrades\">Types of Upgrades</a></li>\n<li><a href=\"#delegatecall\">Delegatecall</a></li>\n<li><a href=\"#small-proxy-example\">Small Proxy Example</a></li>\n<li><a href=\"#transparent-upgradeable-smart-contract\">Transparent Upgradeable Smart Contract</a></li>\n</ul>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-17-hardhat-daos\">Lesson 17: Hardhat DAOs</a></summary>\n<ol>\n<li><a href=\"#introduction-10\">Introduction</a></li>\n<li><a href=\"#what-is-a-dao\">What is a DAO?</a></li>\n<li><a href=\"#how-to-build-a-dao\">How to build a DAO</a></li>\n</ol>\n</details>\n<details>\n<summary><a href=\"#lesson-18-security--auditing\">Lesson 18: Security &amp; Auditing</a></summary>\n<ol>\n<li><a href=\"#introduction-11\">Introduction</a></li>\n<li><a href=\"#slither\">Slither</a></li>\n<li><a href=\"#fuzzing-and-eth-security-toolbox\">Fuzzing and Eth Security Toolbox</a></li>\n<li><a href=\"#closing-thoughts\">Closing Thoughts</a></li>\n</ol>\n</details>\n<details>\n<summary>More Resources</summary>\n<ul>\n<li><a href=\"#congratulations\">Congratulations</a><ul>\n<li><a href=\"#where-do-i-go-now\">Where do I go now?</a><ul>\n<li><a href=\"#learning-more\">Learning More</a></li>\n<li><a href=\"#community\">Community</a></li>\n<li><a href=\"#hackathons\">Hackathons</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</ul>\n</details>\n\n# Lesson 0: The Edge of the Rabbit Hole\n\n## Welcome to the course!\n\n_[\u2328\ufe0f (00:00:00) Lesson 0: Welcome To Blockchain](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=0s)_\n\n## Best Practices\n\n- **Follow the repository:** While going through the course be 100% certain to follow along with the github repository. If you run into in an issue check the chronological-updates in the repo.\n- **Be Active in the community:** Ask questions and engage with other developers going through the course in the discussions tab, be sure to go and say hello or gm! This space is different from the other industries, you don't have to be secretive; communicate, network and learn with others :)\n- **Learn at your own pace:** It doesn't matter if it takes you a day, a week, a month or even a year. Progress >>> Perfection\n- **Take Breaks:** You will exhaust your mind and recall less if you go all out and watch the entire course in one sitting.\n  **Suggested Strategy** every 25 minutes take a 5 min break, and every 2 hours take a longer 30 min break\n- **Refer to Documentation:** Things are constantly being updated, so whenever Patrick opens up some documentation, open it your end and maybe even have the code sample next to you.\n\n# Lesson 1: Blockchain Basics\n\n_[\u2328\ufe0f (00:09:05) Lesson 1: Blockchain Basics](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=545s)_\n\n## What is a Blockchain? What does a blockchain do?\n\n- [Bitcoin Whitepaper](https://bitcoin.org/bitcoin.pdf)\n  - [Satoshi Nakamoto](https://en.wikipedia.org/wiki/Satoshi_Nakamoto)\n- [Ethereum Whitepaper](https://ethereum.org/en/whitepaper/)\n  - [Vitalik Buterin](https://en.wikipedia.org/wiki/Vitalik_Buterin)\n- [What is a Smart Contract?](https://chain.link/education/smart-contracts)\n- [Nick Szabo](https://en.wikipedia.org/wiki/Nick_Szabo)\n- [Hybrid Smart Contracts](https://blog.chain.link/hybrid-smart-contracts-explained/)\n- [Blockchain Oracles](https://betterprogramming.pub/what-is-a-blockchain-oracle-f5ccab8dbd72?source=friends_link&sk=d921a38466df8a9176ed8dd767d8c77d)\n- [Terminology](https://connect.comptia.org/content/articles/blockchain-terminology)\n- [Web3](https://en.wikipedia.org/wiki/Web3)\n- [What is a blockchain](https://www.investopedia.com/terms/b/blockchain.asp)\n\n## The Purpose Of Smart Contracts\n\n_[\u2328\ufe0f (00:18:27) The Purpose of Smart Contracts](https://youtu.be/gyMwXuJrbJQ?t=1107)_\n\n- \ud83c\udfa5 [Original Video](https://www.youtube.com/watch?v=_JeRq7Gwj5Y&feature=youtu.be)\n- \ud83e\uddac [My ETH Denver Talk](https://www.youtube.com/watch?v=06hXCX_jj2E)\n- \ud83c\udf54 [McDonalds Scandal](https://www.chicagotribune.com/sns-mcdonalds-story.html)\n- \u26d3 [More on the evolution of agreements](https://www.youtube.com/watch?v=ufVyX7JDCgg)\n- \u270d\ufe0f [What is a Smart Contract?](https://www.youtube.com/watch?v=ZE2HxTmxfrI)\n- \ud83e\uddf1 [How does a blockchain work?](https://www.youtube.com/watch?v=SSo_EIwHSd4)\n- \ud83d\udd2e [Chainlink & Oracles](https://www.youtube.com/watch?v=tIUHQ7sDoaU)\n\n## Other Blockchain Benefits\n\n_[\u2328\ufe0f (00:30:41) Other Blockchain Benefits](https://youtu.be/gyMwXuJrbJQ?t=1841)_\n\n- Decentralized\n- Transparency & Flexibility\n- Speed & Efficiency\n- Security & Immutability\n- Counterparty Risk Removal\n- Trust Minimized Agreements\n\n## What have Smart Contracts done so far?\n\n_[\u2328\ufe0f (00:36:36) What have Smart Contracts done so far?](https://youtu.be/gyMwXuJrbJQ?t=2196)_\n\n- [DeFi](https://chain.link/education/defi)\n  - [Defi Llama](https://defillama.com/)\n  - [Why DeFi is Important](https://medium.com/the-capital/why-defi-1519cc4d4bd3)\n- [DAOs](https://betterprogramming.pub/what-is-a-dao-what-is-the-architecture-of-a-dao-how-to-build-a-dao-high-level-d096a97162cc)\n- [NFTs](https://www.youtube.com/watch?v=9yuHz6g_P50)\n\n## Making Your First Transaction\n\n_[\u2328\ufe0f (00:39:17) Making Your First Transaction](https://youtu.be/gyMwXuJrbJQ?t=2357)_\n\n- [Metamask Download Link](https://metamask.io/)\n  - [What is a Private Key?](https://www.coinbase.com/learn/crypto-basics/what-is-a-private-key)\n  - [What is a Secret Phrase?](https://metamask.zendesk.com/hc/en-us/articles/360060826432-What-is-a-Secret-Recovery-Phrase-and-how-to-keep-your-crypto-wallet-secure)\n- [Etherscan](https://etherscan.io/)\n- [Sepolia Etherscan](https://sepolia.etherscan.io/)\n- Sepolia Faucet (Check the [link token contracts page](https://docs.chain.link/docs/link-token-contracts/#sepolia))\n  - NOTE: The Chainlink documentation always has the most up to date faucets on their [link token contracts page](https://docs.chain.link/docs/link-token-contracts/#sepolia). If the faucet above is broken, check the chainlink documentation for the most up to date faucet.\n- OR, use the [Sepolia ETH Faucet](https://faucets.chain.link/), just be sure to swap your metamask to Sepolia!\n\n## Gas I: Introduction to Gas\n\n_[\u2328\ufe0f (00:58:59) Gas I: Introduction to Gas](https://youtu.be/gyMwXuJrbJQ?t=3539)_\n\n- [Gas and Gas Fees](https://ethereum.org/en/developers/docs/gas/)\n- [Wei, Gwei, and Ether Converter](https://eth-converter.com/)\n- [ETH Gas Station](https://ethgasstation.info/)\n\n## How Do Blockchains Work?\n\n_[\u2328\ufe0f (01:05:32) How Do Blockchains Work](https://youtu.be/gyMwXuJrbJQ?t=3932)_\n\n- [What is a hash?](https://techjury.net/blog/what-is-cryptographic-hash/)\n- [Blockchain Demo](https://andersbrownworth.com/blockchain/)\n- [Summary](https://ethereum.org/en/developers/docs/intro-to-ethereum/)\n\n## Signing Transactions\n\n_[\u2328\ufe0f (01:22:55) Signing Transactions](https://youtu.be/gyMwXuJrbJQ?t=4975)_\n\n- [Public / Private Keys](https://andersbrownworth.com/blockchain/public-private-keys/keys)\n- [Layer 2 and Rollups](https://ethereum.org/en/developers/docs/scaling/layer-2-rollups/)\n- [Decentralized Blockchain Oracles](https://blog.chain.link/what-is-the-blockchain-oracle-problem/)\n\n## Gas II\n\n_[\u2328\ufe0f (01:30:22) Gas II: Block Rewards & EIP 1559](https://youtu.be/gyMwXuJrbJQ?t=5422)_\n\n- [Block Rewards](https://www.investopedia.com/terms/b/block-reward.asp)\n- Advanced Gas\n  - [EIP 1559](https://www.youtube.com/watch?v=MGemhK9t44Q)\n  - GWEI, WEI, and ETH\n    - [ETH Converter](https://eth-converter.com/)\n\n## Gas II Summary\n\n_[\u2328\ufe0f (01:36:44) Gas II Summary](https://youtu.be/gyMwXuJrbJQ?t=5804)_\n\n- [Run Your Own Ethereum Node](https://geth.ethereum.org/docs/getting-started)\n\n## High-Level Blockchain Fundamentals\n\n_[\u2328\ufe0f (01:39:32) High-Level Blockchain Fundamentals]https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=5972s()_\n\n- [Consensus](https://wiki.polkadot.network/docs/learn-consensus)\n- [Proof of Stake](https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/)\n- [Proof of Work](https://ethereum.org/en/developers/docs/consensus-mechanisms/pow/)\n- [Nakamoto Consensus](https://blockonomi.com/nakamoto-consensus/)\n- [Ethereum 2 (the merge)](https://ethereum.org/en/eth2/)\n\n\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a Completed Blockchain Basics! \ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\n\n# Lesson 2: [Welcome to Remix! Simple Storage](https://github.com/PatrickAlphaC/simple-storage-fcc)\n\n_[\u2328\ufe0f (02:01:16) Lesson 2: Welcome to Remix! Simple Storage](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=7276s)_\n\n\ud83d\udcbb Code: https://github.com/PatrickAlphaC/simple-storage-fcc\n\n## Introduction\n\n_[\u2328\ufe0f (02:03:05) Introduction](https://youtu.be/gyMwXuJrbJQ?t=7385)_\n\n- [Remix](https://remix.ethereum.org/)\n- [Solidity Documentation](https://docs.soliditylang.org/en/latest/index.html)\n\n## Setting Up Your First Contract\n\n_[\u2328\ufe0f (02:05:18) Setting Up Your First Contract](https://youtu.be/gyMwXuJrbJQ?t=7518)_\n\n- Versioning\n- Take notes in your code!\n- [What is a software license](https://snyk.io/learn/what-is-a-software-license/)\n- SPDX License\n- Compiling\n- Contract Declaration\n\n## Basic Solidity: Types\n\n_[\u2328\ufe0f (02:12:28) Basic Solidity Types](https://youtu.be/gyMwXuJrbJQ?t=7948)_\n\n- [Types & Declaring Variables](https://docs.soliditylang.org/en/v0.8.13/)\n  - `uint256`, `int256`, `bool`, `string`, `address`, `bytes32`\n  - [Solidity Types](https://docs.soliditylang.org/en/latest/types.html)\n  - [Bits and Bytes](https://www.youtube.com/watch?v=Dnd28lQHquU)\n- Default Initializations\n- Comments\n\n## Basic Solidity: Functions\n\n_[\u2328\ufe0f (02:18:40) Basic Solidity Functions](https://youtu.be/gyMwXuJrbJQ?t=8320)_\n\n- Functions\n- Deploying a Contract\n  - Smart Contracts have addresses just like our wallets\n- Calling a public state-changing Function\n- [Visibility](https://docs.soliditylang.org/en/latest/contracts.html#visibility-and-getters)\n- Gas III | An example\n- Scope\n- View & Pure Functions\n\n## Basic Solidity: Arrays & Structs\n\n_[\u2328\ufe0f (02:35:30) Basic Solidity Arrays & Structs](https://youtu.be/gyMwXuJrbJQ?t=9331)_\n\n- Structs\n- Intro to Storage\n- Arrays\n- Dynamic & Fixed Sized\n- `push` array function\n\n## Basic Solidity: Compiler Errors and Warnings\n\n_[\u2328\ufe0f (02:45:35) Basic Solidity Errors & Warnings](https://youtu.be/gyMwXuJrbJQ?t=9935)_\n\n- Yellow: Warnings are Ok\n- Red: Errors are not Ok\n\n## Memory, Storage, Calldata (Intro)\n\n_[\u2328\ufe0f (02:46:34) Basic Solidity Memory, Storage, & Calldata (Intro)](https://youtu.be/gyMwXuJrbJQ?t=9994)_\n\n- 6 Places you can store and access data\n  - calldata\n  - memory\n  - storage\n  - code\n  - logs\n  - stack\n\n## Mappings\n\n_[\u2328\ufe0f (02:50:17) Basic Solidity Mappings](https://youtu.be/gyMwXuJrbJQ?t=10217)_\n\n- [Mappings](https://solidity-by-example.org/mapping)\n\n## Deploying your First Contract\n\n_[\u2328\ufe0f (02:53:38) Deploying your First Contract](https://youtu.be/gyMwXuJrbJQ?t=10418)_\n\n- A testnet or mainnet\n- Connecting Metamask\n- [Find a faucet here](https://docs.chain.link/docs/link-token-contracts/#Sepolia)\n- See the faucets at the top of this readme!\n- Interacting with Deployed Contracts\n\n## The EVM & A Recap of Lesson 2\n\n_[\u2328\ufe0f (03:03:07) The EVM & A Recap of Lesson 2](https://youtu.be/gyMwXuJrbJQ?t=10987)_\n\n- The EVM\n\n# Lesson 3: Remix Storage Factory\n\n_[\u2328\ufe0f (03:05:34) Lesson 3: Remix Storage Factory](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=11134s)_\n\n\ud83d\udcbb Code: https://github.com/PatrickAlphaC/storage-factory-fcc\n\n## Introduction\n\n_[\u2328\ufe0f (03:06:06) Introduction](https://youtu.be/gyMwXuJrbJQ?t=11166)_\n\n- [Factory Pattern](https://betterprogramming.pub/learn-solidity-the-factory-pattern-75d11c3e7d29)\n\n## Basic Solidity: Importing Contracts into other Contracts\n\n_[\u2328\ufe0f (03:07:29) Importing Contracts into other Contracts](https://youtu.be/gyMwXuJrbJQ?t=11249)_\n\n- [Composibility](https://chain.link/techtalks/defi-composability)\n- [Solidity new keyword](https://docs.soliditylang.org/en/latest/control-structures.html?highlight=new#creating-contracts-via-new)\n- [Importing Code in solidity](https://solidity-by-example.org/import)\n\n## Basic Solidity: Interacting with other Contracts\n\n_[\u2328\ufe0f (03:16:36) Interacting with other contracts](https://youtu.be/gyMwXuJrbJQ?t=11796)_\n\n- To interact, you always need: ABI + Address\n- [ABI](https://docs.soliditylang.org/en/latest/abi-spec.html?highlight=abi)\n\n## Basic Solidity: Inheritance & Overrides\n\n_[\u2328\ufe0f (03:25:23) Inheritance & Overrides](https://youtu.be/gyMwXuJrbJQ?t=12323)_\n\n- [Inheritance](https://solidity-by-example.org/inheritance)\n- [Override & Virtual Keyword](https://docs.soliditylang.org/en/latest/contracts.html?highlight=override#function-overriding)\n\n## Lesson 3 Recap\n\n_[\u2328\ufe0f (03:30:29) Lesson 3 Recap](https://youtu.be/gyMwXuJrbJQ?t=12629)_\n\n# Lesson 4: Remix Fund Me\n\n_[\u2328\ufe0f (03:31:55) Lesson 4: Remix Fund Me](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=12715s)_\n\n\ud83d\udcbb Code: https://github.com/PatrickAlphaC/fund-me-fcc\n\n## Introduction\n\n## Sending ETH Through a Function & Reverts\n\n- [Fields in a Transaction](https://ethereum.org/en/developers/docs/transactions/)\n- [More on v,r,s](https://ethereum.stackexchange.com/questions/15766/what-does-v-r-s-in-eth-gettransactionbyhash-mean)\n- [payable](https://solidity-by-example.org/payable)\n- [msg.value & Other global keywords](https://docs.soliditylang.org/en/latest/cheatsheet.html?highlight=cheatsheet#global-variables)\n- [require](https://codedamn.com/news/solidity/what-is-require-in-solidity)\n- [revert](https://medium.com/blockchannel/the-use-of-revert-assert-and-require-in-solidity-and-the-new-revert-opcode-in-the-evm-1a3a7990e06e)\n\n## Chainlink & Oracles\n\n- [What is a blockchain oracle?](https://chain.link/education/blockchain-oracles)\n- [What is the oracle problem?](https://blog.chain.link/what-is-the-blockchain-oracle-problem/)\n- [Chainlink](https://chain.link/)\n- [Chainlink Price Feeds (Data Feeds)](https://docs.chain.link/docs/get-the-latest-price/)\n  - [data.chain.link](https://data.chain.link/)\n- [Chainlink VRF](https://docs.chain.link/docs/chainlink-vrf/)\n- [Chainlink Keepers](https://docs.chain.link/docs/chainlink-keepers/introduction/)\n- [Chainlink API Calls](https://docs.chain.link/docs/request-and-receive-data/)\n- [Importing Tokens into your Metamask](https://consensys.net/blog/metamask/how-to-add-your-custom-tokens-in-metamask/)\n- [Request and Receive Chainlink Model](https://docs.chain.link/docs/architecture-request-model/)\n\n## Review of Sending ETH and working with Chainlink\n\n## Interfaces & Price Feeds\n\n- [Chainlink Price Feeds (Data Feeds)](https://docs.chain.link/docs/get-the-latest-price/)\n- [Chainlink GitHub](https://github.com/smartcontractkit/chainlink)\n- [Interface](https://solidity-by-example.org/interface)\n\n## Importing from GitHub & NPM\n\n- [Chainlink NPM Package](https://www.npmjs.com/package/@chainlink/contracts)\n\n## Floating Point Math in Solidity\n\n- [tuple](https://docs.soliditylang.org/en/latest/abi-spec.html?highlight=tuple#handling-tuple-types)\n- [Floating Point Numbers in Solidity](https://stackoverflow.com/questions/58277234/does-solidity-supports-floating-point-number)\n- [Type Casting](https://ethereum.stackexchange.com/questions/6891/type-casting-in-solidity)\n- Gas Estimation Failed\n  - Someone should make an article explaining this error\n\n## Basic Solidity: Arrays & Structs II\n\n- [msg.sender](https://docs.soliditylang.org/en/latest/cheatsheet.html?highlight=msg.sender)\n\n## Review of Interfaces, Importing from GitHub, & Math in Solidity\n\n## Libraries\n\n- [Library](https://docs.soliditylang.org/en/v0.8.14/contracts.html?highlight=library#libraries)\n- [Solidity-by-example Library](https://solidity-by-example.org/library)\n\n## SafeMath, Overflow Checking, and the \"unchecked\" keyword\n\n- [Openzeppelin Safemath](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol)\n- [unchecked vs. checked](https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic)\n\n## Basic Solidity: For Loop\n\n- [For Loop](https://solidity-by-example.org/loop)\n- `/* */` is another way to make comments\n\n## Basic Solidity: Resetting an Array\n\n## Sending ETH from a Contract\n\n- [Transfer, Send, Call](https://solidity-by-example.org/sending-ether/)\n- [this keyword](https://ethereum.stackexchange.com/questions/1781/what-is-the-this-keyword-in-solidity)\n\n## Basic Solidity: Constructor\n\n- [Constructor](https://solidity-by-example.org/constructor)\n\n## Basic Solidity: Modifiers\n\n- [Double equals](https://www.geeksforgeeks.org/solidity-operators/)\n- [Modifier](https://solidity-by-example.org/function-modifier)\n\n## Testnet Demo\n\n- [Disconnecting Metamask](https://help.1inch.io/en/articles/4666771-metamask-how-to-connect-disconnect-and-switch-accounts-with-metamask-on-1inch-network)\n\n## Advanced Solidity\n\n### Immutable & Constant\n\n- [Immutable](https://solidity-by-example.org/immutable)\n- [Constant](https://solidity-by-example.org/constants)\n- [Current ETH Gas Prices](https://etherscan.io/gastracker)\n- Don't stress about gas optimizations! (yet)\n- Naming Conventions\n  - [Someone make this!](https://github.com/smartcontractkit/full-blockchain-solidity-course-js/issues/13)\n\n### Custom Errors\n\n- [Custom Errors Introduction](https://blog.soliditylang.org/2021/04/21/custom-errors/)\n\n### Receive & Fallback Functions\n\n- [Solidity Docs Special Functions](https://docs.soliditylang.org/en/latest/contracts.html?highlight=fallback#special-functions)\n- [Fallback](https://solidity-by-example.org/fallback)\n- [Receive](https://docs.soliditylang.org/en/latest/contracts.html?highlight=fallback#receive-ether-function)\n\n## Lesson 4 Recap\n\n\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a Completed Solidity Basics! \ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\n\n# Lesson 5: Ethers.js Simple Storage\n\n_[\u2328\ufe0f (05:30:42) Lesson 5: Ethers.js Simple Storage](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=19842s)_\n\n\ud83d\udcbb Code: https://github.com/PatrickAlphaC/ethers-simple-storage-fcc\n\n\ud83e\uddea [Alchemy: https://alchemy.com/?a=673c802981](https://alchemy.com/?a=673c802981)\n\n## Effective Debugging Strategies & Getting Help\n\n_[\u2328\ufe0f (5:30:46) Effective Debugging Stategies & Getting Help](https://youtu.be/gyMwXuJrbJQ?t=19846)_\n\n1. Tinker and isolate problem\n   1. For this course, take at LEAST 15 minutes to figure out a bug.\n2. Google / Web Search the Exact problem\n   1. Go to this GitHub Repo / Discussions\n3. Ask a question on a Forum like Stack Exchange Ethereum or Stack Overflow\n   1. Format your questions!!\n   2. Use [Markdown](https://www.markdowntutorial.com/)\n\n### How to Debug Anything Video\n\n- [Patrick's Original Video](https://www.youtube.com/watch?v=XT8STflvwNo)\n\n## Installation & Setup\n\n- [Visual Studio Code](https://code.visualstudio.com/)\n  - [Crash Course](https://www.youtube.com/watch?v=WPqXP_kLzpo)\n- [NodeJS](https://nodejs.org/en/)\n- [VSCode Keybindings](https://code.visualstudio.com/docs/getstarted/keybindings)\n- [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git)\n- [What is a terminal?](https://code.visualstudio.com/docs/editor/integrated-terminal)\n\n### Mac & Linux Setup\n\n### Windows Setup\n\n- [WSL](https://docs.microsoft.com/en-us/windows/wsl/install)\n  - When working in WSL, use Linux commands instead of Windows commands\n- [TroubleShooting](https://docs.microsoft.com/en-us/windows/wsl/troubleshooting)\n- `curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash`\n\n> \u26a0\ufe0f Please use Gitpod as an absolute last resort\n\n### Gitpod\n\n- [Gitpod](https://www.gitpod.io/)\n  - **If using this, NEVER share a private key with real money on Gitpod**\n  - Ideally you figure out the MacOS, Linux, or Windows install though\n\n## Local Development Introduction\n\n- `CMD + K` or `CTRL + K` clears the terminal\n- `mkdir ethers-simple-storage-fcc`\n- `code .` to open VSCode in a new VSCode window\n\n### Optional Javascript Crash Courses\n\n- [NodeJS Course](https://www.youtube.com/watch?v=RLtyhwFtXQA)\n- [Javascript Course](https://www.youtube.com/watch?v=jS4aFq5-91M)\n- Import your `SimpleStorage.sol`\n- [Solidity + Hardhat VSCode Extension](https://marketplace.visualstudio.com/items?itemName=NomicFoundation.hardhat-solidity)\n\n- Format your solidity code with:\n\n```\n    \"[solidity]\": {\n        \"editor.defaultFormatter\": \"NomicFoundation.hardhat-solidity\"\n    },\n    \"[javascript]\":{\n      \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    }\n```\n\nIn your `.vscode/settings.json` file.\n\n- [Prettier Extension](https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode)\n\n## Tiny Javascript Refresher\n\n- [Javascript Tips](https://www.freecodecamp.org/news/learn-javascript-free-js-courses-for-beginners/)\n\n## Asynchronous Programming in Javascript\n\n- [Asynchronous Programming](https://www.bmc.com/blogs/asynchronous-programming/)\n- [async keyword](https://www.w3schools.com/JS//js_async.asp)\n- [Promise in Javascript](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)\n- [await keyword](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await)\n\n## Compiling our Solidity\n\n- [Yarn Install](https://yarnpkg.com/getting-started/install)\n- [solc-js](https://github.com/ethereum/solc-js)\n  - `yarn add solc@0.8.7-fixed`\n- [yarn scripts](https://classic.yarnpkg.com/lang/en/docs/cli/run/)\n\n## Ganache & Networks\n\n- [Ganache](https://trufflesuite.com/ganache/)\n- Networks in Metamask\n- RPC URL\n- [Geth](https://github.com/ethereum/go-ethereum)\n- [JSON RPC Spec Playground](https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/execution-apis/assembled-spec/openrpc.json&uiSchema%5BappBar%5D%5Bui:splitView%5D=false&uiSchema%5BappBar%5D%5Bui:input%5D=false&uiSchema%5BappBar%5D%5Bui:examplesDropdown%5D=false)\n\n## Introduction to Ethers.js\n\n- [Ethers.js](https://docs.ethers.io/v5/getting-started/)\n- [prettier-plugin-solidity](https://github.com/prettier-solidity/prettier-plugin-solidity)\n\n### A Note on the await Keyword\n\n## Adding Transaction Overrides\n\n## Transaction Receipts\n\n## Sending a \"raw\" Transaction in Ethers.js\n\n## Interacting with Contracts in Ethers.js\n\n- [EVM Decompiler](https://ethervm.io/decompile)\n- [BigNumber](https://docs.ethers.io/v5/api/utils/bignumber/)\n\n## Environment Variables\n\n- [dotenv](https://www.npmjs.com/package/dotenv)\n- [.gitignore](https://www.atlassian.com/git/tutorials/saving-changes/gitignore)\n\n## Better Private Key Management\n\n- [wallet.encrypt](https://docs.ethers.io/v5/api/signer/#Wallet-encrypt)\n- [THE .ENV PLEDGE](https://github.com/smartcontractkit/full-blockchain-solidity-course-js/discussions/5)\n\n## Optional Prettier Formatting\n\n- [Prettier](https://prettier.io/docs/en/index.html)\n- [Best README Template](https://github.com/othneildrew/Best-README-Template)\n\n## Deploying to a Testnet or a Mainnet\n\n- [Alchemy](https://alchemy.com/?a=673c802981)\n- [Getting your private key from Metamask](https://metamask.zendesk.com/hc/en-us/articles/360015289632-How-to-Export-an-Account-Private-Key)\n- `CTRL + C` stops any terminal command\n\n## Verifying on Block Explorers from the UI\n\n## Alchemy Dashboard & The Mempool\n\n- [Special Guest Albert Hu](https://twitter.com/thatguyintech)\n- [Mempool](https://ethereum.org/en/developers/tutorials/sending-transactions-using-web3-and-alchemy/#see-your-transaction-in-the-mempool)\n\n## Lesson 5 Recap\n\n### Typescript Ethers Simple Storage\n\n# Lesson 6: Hardhat Simple Storage\n\n_[\u2328\ufe0f (08:20:17) Lesson 6: Hardhat Simple Storage](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=30017s)_\n\n\ud83d\udcbb Code: https://github.com/PatrickAlphaC/hardhat-simple-storage-fcc\n\n## Introduction\n\n_[\u2328\ufe0f (08:20:19) Introduction](https://youtu.be/gyMwXuJrbJQ?t=30019)_\n\n## Hardhat Setup\n\n_[\u2328\ufe0f (08:22:47) Hardhat Setup](https://youtu.be/gyMwXuJrbJQ?t=30167)_\n\n- [Hardhat Documentation](https://hardhat.org/)\n- [DevDependencies vs Dependencies](https://stackoverflow.com/questions/18875674/whats-the-difference-between-dependencies-devdependencies-and-peerdependencies)\n- [@ Sign node modules](https://stackoverflow.com/questions/36667258/what-is-the-meaning-of-the-at-prefix-on-npm-packages)\n\n### Troubleshooting Hardhat Setup\n\n_[\u2328\ufe0f (08:29:43) Troubleshooting Hardhat Setup](https://youtu.be/gyMwXuJrbJQ?t=30583)_\n\n- [Special Guest Cami Ramos Garzon](https://twitter.com/camiinthisthang)\n\n## Hardhat Setup Continued\n\n_[\u2328\ufe0f (08:31:48) Hardhat Setup Continued](https://youtu.be/gyMwXuJrbJQ?t=30708)_\n\n## Deploying SimpleStorage from Hardhat\n\n_[\u2328\ufe0f (08:33:10) Deploying SimpleStorage from Hardhat](https://youtu.be/gyMwXuJrbJQ?t=30790)_\n\n## Networks in Hardhat\n\n_[\u2328\ufe0f (08:41:44) Networks in Hardhat](https://youtu.be/gyMwXuJrbJQ?t=31304)_\n\n- [The Hardhat Network](https://hardhat.org/hardhat-network/)\n- [Hardhat configuration](https://hardhat.org/config/#configuration)\n- [Chain ID List](https://chainlist.org/)\n\n## Programmatic Verification\n\n_[\u2328\ufe0f (08:51:16) Programmatic Verification](https://youtu.be/gyMwXuJrbJQ?t=31876)_\n\n- [Etherscan Verify Tutorial](https://docs.etherscan.io/tutorials/verifying-contracts-programmatically)\n- [Etherscan Docs](https://docs.etherscan.io/)\n- [Hardhat-Etherscan](https://hardhat.org/plugins/nomiclabs-hardhat-etherscan.html)\n- [Etherscan API Keys](https://info.etherscan.com/api-keys/)\n- [Javascript == vs ===](https://stackoverflow.com/questions/359494/which-equals-operator-vs-should-be-used-in-javascript-comparisons)\n\n## Interacting with Contracts in Hardhat\n\n_[\u2328\ufe0f (09:06:37) Interacting with Contracts in Hardhat](https://youtu.be/gyMwXuJrbJQ?t=32797)_\n\n## Artifacts Troubleshooting\n\n_[\u2328\ufe0f (09:09:42) Artifacts Troubleshooting](https://youtu.be/gyMwXuJrbJQ?t=32982)_\n\n## Custom Hardhat Tasks\n\n_[\u2328\ufe0f (09:10:52) Custom Hardhat Tasks](https://youtu.be/gyMwXuJrbJQ?t=33052)_\n\n- [Hardhat Tasks](https://hardhat.org/guides/create-task.html)\n- [Javascript Arrow Functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions)\n\n## Hardhat Localhost Node\n\n_[\u2328\ufe0f (09:18:12) Hardhat Localhost Node](https://youtu.be/gyMwXuJrbJQ?t=33492)_\n\n## The Hardhat Console\n\n_[\u2328\ufe0f (09:23:11) The Hardhat Console](https://youtu.be/gyMwXuJrbJQ?t=33791)_\n\n- [Hardhat Console](https://hardhat.org/guides/hardhat-console.html)\n\n## Hardhat Tests\n\n_[\u2328\ufe0f (09:26:13) Hardhat Tests](https://youtu.be/gyMwXuJrbJQ?t=33973)_\n\n- [Hardhat Tests](https://hardhat.org/tutorial/testing-contracts.html#_5-testing-contracts)\n- [Mocha Style Tests](https://mochajs.org/)\n- [Chai](https://www.npmjs.com/package/chai)\n- [Waffle Tests](https://ethereum-waffle.readthedocs.io/en/latest/)\n\n## Hardhat Gas Reporter\n\n_[\u2328\ufe0f (09:38:10) Hardhat Gas Reporter](https://youtu.be/gyMwXuJrbJQ?t=34690)_\n\n- [Hardhat Gas Reporter](https://www.npmjs.com/package/hardhat-gas-reporter)\n- [Coinmarketcap API](https://coinmarketcap.com/api/)\n\n## Solidity Coverage\n\n_[\u2328\ufe0f (09:44:40) Solidity Coverage](https://youtu.be/gyMwXuJrbJQ?t=35080)_\n\n- [Solidity Coverage](https://github.com/sc-forks/solidity-coverage)\n\n## Hardhat Waffle\n\n_[\u2328\ufe0f (09:47:02) Hardhat Waffle](https://youtu.be/gyMwXuJrbJQ?t=35222)_\n\n- [Hardhat-Waffle](https://npm.io/package/@nomiclabs/hardhat-waffle)\n\n## Lesson 6 Recap\n\n_[\u2328\ufe0f (09:47:37) Lesson 6 Recap](https://youtu.be/gyMwXuJrbJQ?t=35257)_\n\n### Typescript Hardhat Simple Storage\n\n_[\u2328\ufe0f (09:52:15) Typescript Hardhat Simple Storage](https://youtu.be/gyMwXuJrbJQ?t=35535)_\n\n- [Typechain](https://github.com/dethcrypto/TypeChain)\n\n```\nyarn add --dev @typechain/ethers-v5 @typechain/hardhat @types/chai @types/node @types/mocha ts-node typechain typescript\n```\n\n# Lesson 7: Hardhat Fund Me\n\n_[\u2328\ufe0f (10:00:48) Lesson 7: Hardhat Fund Me](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=36048s)_\n\n\ud83d\udcbb Code: https://github.com/PatrickAlphaC/hardhat-fund-me-fcc\n\n## Introduction\n\n_[\u2328\ufe0f (10:00:50) Introduction](https://youtu.be/gyMwXuJrbJQ?t=36050)_\n\n## Hardhat Setup - Fund Me\n\n_[\u2328\ufe0f (10:03:41) Hardhat Setup - Fund Me](https://youtu.be/gyMwXuJrbJQ?t=36221)_\n\n## Linting\n\n_[\u2328\ufe0f (10:06:20) Linting](https://youtu.be/gyMwXuJrbJQ?t=36380)_\n\n- [Eslint](https://eslint.org/)\n- [Solhint](https://github.com/protofire/solhint)\n- [Linting Code](https://www.perforce.com/blog/qac/what-lint-code-and-why-linting-important)\n\n## Hardhat Setup - Fund Me - Continued\n\n_[\u2328\ufe0f (10:07:47) Hardhat Setup - Fund Me - Continued](https://youtu.be/gyMwXuJrbJQ?t=36467)_\n\n## Importing from NPM\n\n_[\u2328\ufe0f (10:09:38) Importing from NPM](https://youtu.be/gyMwXuJrbJQ?t=36578)_\n\n- [@chainlink/contracts](https://www.npmjs.com/package/@chainlink/contracts)\n\n## Hardhat Deploy\n\n_[\u2328\ufe0f (10:10:43) Hardhat Deploy](https://youtu.be/gyMwXuJrbJQ?t=36643)_\n\n- [Hardhat Deploy](https://github.com/wighawag/hardhat-deploy)\n\n## Mocking\n\n_[\u2328\ufe0f (10:21:05) Mocking](https://youtu.be/gyMwXuJrbJQ?t=37265)_\n\n- [Mocking](https://stackoverflow.com/questions/2665812/what-is-mocking)\n- [Aave Github](https://github.com/aave/aave-v3-core)\n- [Chainlink Github](https://github.com/smartcontractkit/chainlink)\n- Multiple Versions of Solidity\n- Tags in hardhat\n\n## Utils Folder\n\n_[\u2328\ufe0f (10:52:51) Utils Folder](https://youtu.be/gyMwXuJrbJQ?t=39171)_\n\n## Testnet Demo - Hardhat Fund Me\n\n_[\u2328\ufe0f (10:55:45) Testnet Demo - Hardhat Fund Me](https://youtu.be/gyMwXuJrbJQ?t=39345)_\n\n- Hardhat Deploy Block Confirmations\n\n### TypeScript\n\n- [Code file](https://github.com/PatrickAlphaC/hardhat-fund-me-fcc/blob/84271e7002e55d86c90b26466ff27bc067f25de0/deploy/01-deploy-fund-me.ts#L29) (TypeScript edition)\n- Define blockConfirmations in the `helper-hardhat-config.ts` file instead of `hardhat-config.js`.\n\n## Solidity Style Guide\n\n_[\u2328\ufe0f (11:00:10) Solidity Style Guide](https://youtu.be/gyMwXuJrbJQ?t=39610)_\n\n- [Style Guide](https://docs.soliditylang.org/en/latest/style-guide.html)\n- [NatSpec](https://docs.soliditylang.org/en/latest/natspec-format.html)\n\n## Testing Fund Me\n\n_[\u2328\ufe0f (11:08:36) Testing Fund Me](https://youtu.be/gyMwXuJrbJQ?t=40116)_\n\n- [Unit Testing](https://en.wikipedia.org/wiki/Unit_testing)\n- [Hardhat Deploy Fixtures](https://github.com/wighawag/hardhat-deploy#creating-fixtures)\n- [ethers.getContract](https://github.com/wighawag/hardhat-deploy-ethers)\n- [expect](https://ethereum-waffle.readthedocs.io/en/latest/matchers.html)\n- [ethers.utils.parseUnits](https://docs.ethers.io/v5/api/utils/display-logic/#utils-parseUnits)\n- [Waffle Chai Matchers](https://ethereum-waffle.readthedocs.io/en/latest/matchers.html)\n\n## Breakpoints & Debugging\n\n_[\u2328\ufe0f (11:30:39) Breakpoints & Debugging](https://youtu.be/gyMwXuJrbJQ?t=41439)_\n\n- [VSCode Breakpoints](https://code.visualstudio.com/Docs/editor/debugging)\n\n## Gas III\n\n_[\u2328\ufe0f (11:33:40) Gas III](https://youtu.be/gyMwXuJrbJQ?t=41620)_\n\n- [Transaction Response](https://docs.ethers.io/v5/api/providers/types/#providers-TransactionResponse)\n- [Transaction Receipt](https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt)\n\n## console.log & Debugging\n\n_[\u2328\ufe0f (11:36:35) console.log & Debugging](https://youtu.be/gyMwXuJrbJQ?t=41795)_\n\n- [Hardhat console.log](https://hardhat.org/hardhat-network/reference/#console-log)\n\n## Testing Fund Me II\n\n_[\u2328\ufe0f (11:37:31) Testing Fund Me II](https://youtu.be/gyMwXuJrbJQ?t=41851)_\n\n## Storage in Solidity\n\n_[\u2328\ufe0f (11:44:34) Storage in Solidity](https://youtu.be/gyMwXuJrbJQ?t=42274)_\n\n- [Storage Layout](https://docs.soliditylang.org/en/latest/internals/layout_in_storage.html)\n- [Purpose of the memory keyword](https://stackoverflow.com/questions/33839154/in-ethereum-solidity-what-is-the-purpose-of-the-memory-keyword)\n- [getStorageAt](https://docs.ethers.io/v5/api/providers/provider/#Provider-getStorageAt)\n\n## Gas Optimizations using Storage Knowledge\n\n_[\u2328\ufe0f (11:52:38) Gas Optimizations using Storage Knowledge](https://youtu.be/gyMwXuJrbJQ?t=42758)_\n\n- [Opcodes](https://ethereum.org/en/developers/docs/evm/opcodes/)\n- [Opcodes by Gas](https://github.com/crytic/evm-opcodes)\n- [Opcodes by Gas](https://evm.codes/)\n- Append `s_` to storage variables\n- Append `i_` to immutable variables\n- Caps lock and underscore constant variables\n\n## Solidity Chainlink Style Guide\n\n_[\u2328\ufe0f (12:05:29) Solidity Chainlink Style Guide](https://youtu.be/gyMwXuJrbJQ?t=43529)_\n\n- [Chainlink Solidity Style Guide](https://github.com/smartcontractkit/full-blockchain-solidity-course-js/issues/13)\n\n## Storage Review\n\n_[\u2328\ufe0f (12:09:59) Storage Review](https://youtu.be/gyMwXuJrbJQ?t=43799)_\n\n## Staging Tests\n\n_[\u2328\ufe0f (12:11:43) Staging Tests](https://youtu.be/gyMwXuJrbJQ?t=43903)_\n\n- [Ternary](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator)\n\n## Running Scripts on a Local Node\n\n_[\u2328\ufe0f (12:17:58) Running Scripts on a Local Node](https://youtu.be/gyMwXuJrbJQ?t=44278)_\n\n## Adding Scripts to your package.json\n\n_[\u2328\ufe0f (12:22:00) Adding Scripts to your package.json](https://youtu.be/gyMwXuJrbJQ?t=44520)_\n\n## Pushing to GitHub\n\n_[\u2328\ufe0f (12:25:17) Pushing to GitHub](https://youtu.be/gyMwXuJrbJQ?t=44717)_\n\n- [Github Quickstart](https://docs.github.com/en/get-started/quickstart)\n- [What is Git?](https://www.git-scm.com/book/en/v2/Getting-Started-What-is-Git%3F)\n- [The quickstart that we follow in the video](https://docs.github.com/en/get-started/importing-your-projects-to-github/importing-source-code-to-github/adding-locally-hosted-code-to-github#adding-a-local-repository-to-github-using-git)\n- [Learn about git and GitHub](https://www.youtube.com/watch?v=RGOj5yH7evk)\n\n## \ud83d\udc38\ud83d\udc26 [Tweet Me (add your repo in)!](https://twitter.com/intent/tweet?text=I%20just%20made%20my%20first%20Smart%20Contract%20repo%20using%20@solidity_lang,%20@HardhatHQ,%20@chainlink,%20@AlchemyPlatform,%20and%20more!%0a%0aThanks%20@PatrickAlphaC!!)\n\n# Lesson 8: HTML / Javascript Fund Me (Full Stack / Front End)\n\n_[\u2328\ufe0f (12:32:57) Lesson 8: HTML / Javascript Fund Me (Full Stack / Front End)](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=45177s)_\n\n\ud83d\udcbb Code: https://github.com/PatrickAlphaC/html-fund-me-fcc\n\n## Introduction\n\n## How Websites work with Web3 Wallets\n\n- [How to Connect your Smart Contracts to Metamask](https://www.youtube.com/watch?v=pdsYCkUWrgQ)\n  - \ud83d\udcbb Code from Video: https://github.com/PatrickAlphaC/full-stack-web3-metamask-connectors\n  - \u270d\ufe0f Article from Video: https://betterprogramming.pub/everything-you-need-to-know-about-fullstack-web3-94c0f1b18019?sk=a2764bcbdae98bf05e1052931de77982\n\n## HTML Setup\n\n- Live Server: ExtensionID: ritwickdey.LiveServer\n\n## Connecting HTML to Metamask\n\n- [Metamask Docs](https://docs.metamask.io/guide/)\n\n## Javascript in it's own file\n\n## ES6 vs Nodejs\n\n- [ES6 vs Nodesjs](https://stackoverflow.com/questions/31354559/using-node-js-require-vs-es6-import-export#31367852)\n- [Ethers docs for web browser](https://docs.ethers.io/v5/getting-started/#getting-started--importing--web-browser)\n- [module vs text/javascript](https://stackoverflow.com/questions/51418964/script-type-text-javascript-vs-script-type-module)\n\n## Sending a transaction from a Website\n\n- [Web3Provider](https://docs.ethers.io/v5/api/providers/other/#Web3Provider)\n- [Adding a network to metamask](https://metamask.zendesk.com/hc/en-us/articles/360043227612-How-to-add-a-custom-network-RPC)\n\n## Resetting an Account in Metamask\n\n```\nMetaMask - RPC Error:\n[ethjs-query] while formatting ouputs from RPC '{\"value\":{\"code\":-32603,\"data\":{\"code\":-32000,\"message\":\"Nonce too high. Expected nonce to be 2 but got 4. Note that transactions can't be queued when automining.\"}}}'\n```\n\n## Listening for Events and Completed Transactions\n\n- [provider.once](https://docs.ethers.io/v5/api/providers/provider/#Provider-once)\n- [Anonymous function](https://www.geeksforgeeks.org/javascript-anonymous-functions/)\n- [Javascript Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)\n\n## Input Forms\n\n## Reading from the Blockchain\n\n## Withdraw Function\n\n## Lesson 8 Recap\n\n### Optional Links:\n\n- [Browserify](https://browserify.org/)\n- [Watchify](https://www.npmjs.com/package/watchify)\n\n# Lesson 9: Hardhat Smart Contract Lottery\n\n_[\u2328\ufe0f (13:41:02) Lesson 9: Hardhat Smart Contract Lottery](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=49262s)_\n\n\ud83d\udcbb Code: https://github.com/PatrickAlphaC/hardhat-smartcontract-lottery-fcc\n\n## Introduction\n\n## Hardhat Setup - Smart Contract Lottery\n\n_[\u2328\ufe0f (13:43:43) Hardhat Setup](https://youtu.be/gyMwXuJrbJQ?t=49423)_\n\n- Install dependencies:\n\n```bash\nyarn add --dev @nomiclabs/hardhat-ethers@npm:hardhat-deploy-ethers ethers @nomiclabs/hardhat-etherscan @nomiclabs/hardhat-waffle chai ethereum-waffle hardhat hardhat-contract-sizer hardhat-deploy hardhat-gas-reporter prettier prettier-plugin-solidity solhint solidity-coverage dotenv\n```\n\n- Install dependencies (Typescript version):\n\n```bash\nyarn add --dev @nomiclabs/hardhat-ethers@npm:hardhat-deploy-ethers ethers @nomiclabs/hardhat-etherscan @nomiclabs/hardhat-waffle chai ethereum-waffle hardhat hardhat-contract-sizer hardhat-deploy hardhat-gas-reporter prettier prettier-plugin-solidity solhint solidity-coverage dotenv @typechain/ethers-v5 @typechain/hardhat @types/chai @types/node ts-node typechain typescript\n```\n\n## Raffle.sol Setup\n\n_[\u2328\ufe0f (13:46:55) Raffle.sol Setup](https://youtu.be/gyMwXuJrbJQ?t=49615)_\n\n- [Custom Errors in Solidity](https://blog.soliditylang.org/2021/04/21/custom-errors/)\n\n## Introduction to Events\n\n_[\u2328\ufe0f (13:54:02) Introduction to Events](https://youtu.be/gyMwXuJrbJQ?t=50042)_\n\n- [Events & Logging Video](https://www.youtube.com/watch?v=KDYJC85eS5M)\n- [Events & Logging in Hardhat](https://github.com/PatrickAlphaC/hardhat-events-logs)\n\n## Events in Raffle.sol\n\n_[\u2328\ufe0f (14:00:47) Events in Raffle.sol](https://youtu.be/gyMwXuJrbJQ?t=50447)_\n\n## Introduction to Chainlink VRF\n\n_[\u2328\ufe0f (14:02:30) Introduction to Chainlink VRF](https://youtu.be/gyMwXuJrbJQ?t=50550)_\n\n- [Special Guest Stephen Fluin](https://twitter.com/stephenfluin)\n\n### Sub-Lesson: Chainlink VRF\n\n> - [Chainlink VRFv2 Docs](https://docs.chain.link/docs/get-a-random-number/)\n> - [Chainlink VRFv2 Walkthrough](https://www.youtube.com/watch?v=rdJ5d8j1RCg)\n> - [Chainlink Contracts](https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/VRFConsumerBase.sol)\n\n## Implementing Chainlink VRF - Introduction\n\n_[\u2328\ufe0f (14:09:53) Implementing Chainlink VRF](https://youtu.be/gyMwXuJrbJQ?t=50993)_\n\n### Hardhat Shorthand\n\n- [Hardhat Shorthand](https://hardhat.org/guides/shorthand.html)\n\n## Implementing Chainlink VRF - The Request\n\n## Implementing Chainlink VRF - The FulFill\n\n### Modulo\n\n- [Modulo](https://docs.soliditylang.org/en/latest/types.html?highlight=modulo#modulo)\n\n## Introduction to Chainlink Keepers\n\n- [Chainlink Keepers Docs](https://docs.chain.link/docs/chainlink-keepers/introduction/)\n- [Chainlink Keepers Walkthrough](https://www.youtube.com/watch?v=-Wkw5JVQGUo)\n\n## Implementing Chainlink Keepers - checkUpkeep\n\n### Enums\n\n- [Enum](https://docs.soliditylang.org/en/latest/structure-of-a-contract.html?highlight=enum#enum-types)\n\n## Implementing Chainlink Keepers - checkUpkeep continued\n\n- block.timestamp\n\n## Implementing Chainlink Keepers - performUpkeep\n\n## Code Cleanup\n\n## Deploying Raffle.sol\n\n### Mock Chainlink VRF Coordinator\n\n### Continued\n\n- [LINK Token](https://docs.chain.link/docs/link-token-contracts/)\n\n## Raffle.sol Unit Tests\n\n- We use `async function` in the describe blocks at the start, but we correctly take them out later.\n\n### Testing Events & Chai Matchers\n\n- [Emit Chai Matcher](https://ethereum-waffle.readthedocs.io/en/latest/matchers.html#emitting-events)\n\n### Continued I\n\n## Hardhat Methods & Time Travel\n\n- [Make Hardhat do whatever you want it to](https://hardhat.org/hardhat-network/reference/)\n- [Special debugging hardhat methods](https://hardhat.org/hardhat-network/reference/#special-testing-debugging-methods)\n\n### Continued II\n\n## Callstatic\n\n- [Callstatic](https://docs.ethers.io/v5/api/contract/contract/#contract-callStatic)\n\n### Continued III\n\n### Massive Promise Test\n\n### Continued IV\n\n## Raffle.sol Staging Tests\n\n## Testing on a Testnet\n\n### Recommended LINK amounts for Sepolia Staging Test:\n\n- Chainlink VRF: 2 LINK\n- Chainlink Keepers: 8 LINK\n\n## Conclusion\n\n## Typescript - Smart Contract Lottery\n\n\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a Completed Hardhat Basics! \ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\n\n# Lesson 10: NextJS Smart Contract Lottery (Full Stack / Front End)\n\n_[\u2328\ufe0f (16:34:07) Lesson 10: NextJS Smart Contract Lottery (Full Stack / Front End)](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=59647s)_\n\n\ud83d\udcbb Code: https://github.com/PatrickAlphaC/nextjs-smartcontract-lottery-fcc\n\n\u26a1\ufe0f\u26a1\ufe0f Live Demo IPFS: ipfs://QmXwACyjcS8tL7UkYwimpqMqW9sKzSHUjE4uSZBSyQVuEH\n\n\u26a1\ufe0f\u26a1\ufe0f Live Demo Fleek: https://fancy-dream-3458.on.fleek.co/\n\n## Introduction\n\nWe move into using [NextJS](https://nextjs.org/) for our front end. NextJS is a [React framework](https://reactjs.org/) for building websites.\n\n### Optional Sub-Lesson: Full Stack Development & Other Libraries\n\n- [6 Ways to connect your dapp to a wallet](https://www.youtube.com/watch?v=pdsYCkUWrgQ)\n- [NextJS Crash Course](https://www.youtube.com/watch?v=mTz0GXj8NN0)\n- Other React libraries:\n  - [Web3React](https://github.com/NoahZinsmeister/web3-react)\n  - [wagmi](https://github.com/tmm/wagmi)\n  - [react-moralis](https://www.npmjs.com/package/react-moralis)\n  - [useDapp](https://github.com/TrueFiEng/useDApp)\n  - [Web3Modal](https://github.com/Web3Modal/web3modal)\n  - [useMetamask](https://github.com/mdtanrikulu/use-metamask)\n- Other Full Stack Web3 Templates\n  - [scaffold-eth](https://github.com/scaffold-eth/scaffold-eth)\n  - [ethereum-boilerplate](https://github.com/ethereum-boilerplate/ethereum-boilerplate)\n  - [create-eth-app](https://github.com/paulrberg/create-eth-app)\n- [React being quite popular](https://insights.stackoverflow.com/survey/2021#section-most-popular-technologies-web-frameworks)\n- [Why use react?](https://www.freecodecamp.org/news/why-use-react-for-web-development/)\n\n## NextJS Setup\n\n- [NextJS Documentation](https://nextjs.org/learn/basics/create-nextjs-app)\n- [NextJS Minimal Ethers Example For Lottery](https://github.com/PatrickAlphaC/nextjs-ethers-introduction)\n\n```\nyarn create next-app .\n```\n\n## Manual Header I\n\n- [What is a component?](https://www.w3schools.com/react/react_components.asp)\n- [jsx](https://reactjs.org/docs/introducing-jsx.html)\n- [Moralis](https://moralis.io/)\n- [React Moralis](https://github.com/MoralisWeb3/react-moralis)\n\n### React Hooks\n\n- [What is a react hook?](https://reactjs.org/docs/hooks-overview.html)\n\n## Manual Header II\n\n## useEffect Hook\n\n- [useEffect Hook](https://reactjs.org/docs/hooks-effect.html)\n- [More on useEffect](https://blog.logrocket.com/guide-to-react-useeffect-hook/)\n- [React Context](https://www.freecodecamp.org/news/react-context-for-beginners/)\n  - [useEffect Firing Twice](https://stackoverflow.com/questions/60618844/react-hooks-useeffect-is-called-twice-even-if-an-empty-array-is-used-as-an-ar)\n\n## Local Storage\n\n- [Local Storage](https://codinglead.co/javascript/what-is-localstorage)\n\n## isWeb3EnabledLoading\n\n## web3uikit\n\n- [web3uikit](https://github.com/web3ui/web3uikit)\n- [web3uikit interactive docs](https://web3ui.github.io/web3uikit/?path=/story/1-web3-blockie--custom-seed)\n- [web3uikit connect button](https://web3ui.github.io/web3uikit/?path=/story/1-web3-connectbutton--default)\n\n## Introduction to Calling Functions in Nextjs\n\n- [useWeb3Contract](https://github.com/MoralisWeb3/react-moralis#useweb3contract)\n\n### Automatic Constant Value UI Updater\n\n- [ethers.utils.FormatTypes](https://docs.ethers.io/v5/api/utils/abi/fragments/#fragments--formats)\n\n### runContractFunction\n\n- [Moralis Provider](https://github.com/MoralisWeb3/react-moralis#wrap-your-app-in-a-moralisprovider)\n- [useMoralis](https://github.com/MoralisWeb3/react-moralis#usemoralis)\n- [parseInt](https://www.w3schools.com/JSREF/jsref_parseint.asp)\n\n## useState\n\n- [useState Hook](https://reactjs.org/docs/hooks-state.html)\n\n## Calling Functions in NextJS\n\n## useNotification\n\n- Add `onError` to all your `runContractFunction` calls\n\n## Reading & Displaying Contract Data\n\n## A Note about `onSuccess`\n\n- `onSuccess` just checks to see if MetaMask sends the transaction, not\n\n## A Challenge to You\n\n## Tailwind & Styling\n\n- [Learn CSS](https://www.w3schools.com/css/)\n- [Tailwindcss](https://tailwindcss.com/)\n- [PostCSS Extension](https://marketplace.visualstudio.com/items?itemName=csstools.postcss)\n- [Tailwind Extension](https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss)\n- [Install Tailwind into NextJS](https://tailwindcss.com/docs/guides/nextjs)\n\n## Introduction to Hosting your Site\n\n_[\u2328\ufe0f (18:12:50) Introdunction to Hosting your Site](https://youtu.be/gyMwXuJrbJQ?t=65570)_\n\n- [Vercel](https://vercel.com/)\n- [Moralis](https://moralis.io/)\n- [Netilfy](https://www.netlify.com/)\n- [IPFS](https://ipfs.io/)\n\n## IPFS\n\n_[\u2328\ufe0f (18:15:14) IPFS](https://youtu.be/gyMwXuJrbJQ?t=65714)_\n\n- [What is IPFS](https://www.youtube.com/watch?v=5Uj6uR3fp-U)\n- [IPFS](https://ipfs.io/)\n\n## Hosting on IPFS\n\n_[\u2328\ufe0f (18:18:51) Hosting on IPFS](https://youtu.be/gyMwXuJrbJQ?t=65931)_\n\n- [IPFS Companion](https://chrome.google.com/webstore/detail/ipfs-companion/nibjojkomfdiaoajekhjakgkdhaomnch)\n- [Brave Browser](https://brave.com/)\n- `yarn build && yarn next export`\n\n## Hosting on IPFS & Filecoin using Fleek\n\n_[\u2328\ufe0f (18:25:45) Hosting on IPFS & Filecoin using Fleek](https://youtu.be/gyMwXuJrbJQ?t=66345)_\n\n- [Fleek](https://fleek.co/)\n\n## Filecoin Overview\n\n_[\u2328\ufe0f (18:31:28) Filecoin Overview](https://youtu.be/gyMwXuJrbJQ?t=66688)_\n\n- [Special Guest Ally Haire](https://twitter.com/DeveloperAlly)\n- [IPFS URL of Ally's Video](ipfs://bafybeiasd6oxqiefoxgtskrokomexnb4zcq3fhwlcbyplx2paw65zmq2du)\n\n## Lesson 10 Recap\n\n# Lesson 11: Hardhat Starter Kit\n\n_[\u2328\ufe0f (18:51:36) Lesson 11: Hardhat Starter Kit](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=67896s)_\n\n\ud83d\udcbb Code: https://github.com/smartcontractkit/hardhat-starter-kit\n\n# Lesson 12: Hardhat ERC20s\n\n_[\u2328\ufe0f (18:59:24) Lesson 12: Hardhat ERC20s](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=68364s)_\n\n\ud83d\udcbb Code: https://github.com/PatrickAlphaC/hardhat-erc20-fcc\n\n## What is an ERC? What is an EIP?\n\n- [What is an EIP?](https://eips.ethereum.org/)\n- [EIPs codebase](https://github.com/ethereum/EIPs)\n\n## What is an ERC20?\n\n- [Video (using brownie/python)](https://youtu.be/8rpir_ZSK1g?t=39)\n- [EIP-20](https://eips.ethereum.org/EIPS/eip-20)\n- [ERC-677](https://github.com/ethereum/EIPs/issues/677)\n- [EIP-777](https://eips.ethereum.org/EIPS/eip-777)\n\n## Manually Creating an ERC20 Token\n\n## Creating an ERC20 Token with Openzeppelin\n\n- [Openzeppelin](https://openzeppelin.com/)\n- [Openzeppelin Contracts](https://github.com/OpenZeppelin/openzeppelin-contracts)\n- [Solmate (Openzeppelin alternative)](https://github.com/Rari-Capital/solmate)\n\n## Lesson 12 Recap\n\n# Lesson 13: Hardhat DeFi & Aave\n\n_[\u2328\ufe0f (19:16:13) Lesson 13: Hardhat DeFi & Aave](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=69373s)_\n\n\ud83d\udcbb Code: https://github.com/PatrickAlphaC/hardhat-defi-fcc\n\n## What is DeFi?\n\n- [What is DeFi?](https://chain.link/education/defi)\n- [DefiLlama](https://defillama.com/)\n\n## What is Aave?\n\n- [Aave](https://aave.com/)\n- [My Previous Aave Video on Shorting Assets](https://www.youtube.com/watch?v=TmNGAvI-RUA)\n\n## Programmatic Borrowing & Lending\n\n- [DAI](https://makerdao.com/en/)\n- [Uniswap](https://app.uniswap.org/)\n\n## WETH - Wrapped ETH\n\n- [WETH Token Sepolia Etherscan](https://sepolia.etherscan.io/address/0xdd13E55209Fd76AfE204dBda4007C227904f0a81)\n- [WETH Token Mainnet](https://etherscan.io/token/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2)\n\n## Forking Mainnet\n\n- [Mainnet Forking](https://hardhat.org/hardhat-network/guides/mainnet-forking.html)\n\n## Depositing into Aave\n\n- [Aave V2 Docs](https://docs.aave.com/developers/v/2.0/)\n- [Aave NPM](https://www.npmjs.com/package/@aave/protocol-v2)\n\n## Borrowing from Aave\n\n- [Aave Borrowing FAQs](https://docs.aave.com/faq/borrowing)\n- [Health Factor](https://docs.aave.com/faq/borrowing#what-is-the-health-factor)\n- [Aave Risk Parameters](https://docs.aave.com/risk/asset-risk/risk-parameters)\n\n## Repaying with Aave\n\n## Visualizing the Transactions\n\n- [aTokens](https://docs.aave.com/developers/v/1.0/developing-on-aave/the-protocol/atokens)\n\n## Lesson 13 Recap\n\n## Happy Bow-Tie Friday with Austin Griffith\n\n- [Special Guest Austin Griffith](https://twitter.com/austingriffith)!\n- [Speed Run Ethereum](https://speedrunethereum.com/)\n\n### More DeFi Learnings:\n\n- [Defi-Minimal](https://github.com/smartcontractkit/defi-minimal/tree/main/contracts)\n- [Defi Dad](https://www.youtube.com/channel/UCatItl6C7wJp9txFMbXbSTg)\n\n# Lesson 14: Hardhat NFTs (EVERYTHING you need to know about NFTs)\n\n_[\u2328\ufe0f (20:28:51) Lesson 14: Hardhat NFTs ](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=73731s)_\n\n\ud83d\udcbb Code: https://github.com/PatrickAlphaC/hardhat-nft-fcc\n\n## What is an NFT?\n\n- [Video](https://www.youtube.com/watch?v=9yuHz6g_P50)\n- [Optional: All on Chain SVG NFT](https://www.youtube.com/watch?v=9oERTH9Bkw0)\n- [EIP-721](https://eips.ethereum.org/EIPS/eip-721)\n\n## Code Overview\n\n- [Opensea Testnet](https://testnets.opensea.io/)\n\n## Hardhat Setup\n\n## Basic NFT\n\n### Write Tests\n\n- [Openzeppelin NFT](https://docs.openzeppelin.com/contracts/4.x/)\n\n## Random IPFS NFT\n\n### Mapping Chainlink VRF Requests\n\n### Creating Rare NFTs\n\n### Setting the NFT Image\n\n### Setting an NFT Mint Price\n\n### Deploy Script\n\n### Uploading Token Images with Pinata\n\n- [Pinata](https://pinata.cloud)\n- [nft.storage](https://nft.storage)\n- [Pinata NPM](https://www.npmjs.com/package/@pinata/sdk)\n- [Pinata Docs](https://docs.pinata.cloud/)\n\n### Uploading Token URIs (metadata) with Pinata\n\n### Deploying\n\n### Tests\n\n## Dynamic SVG On-Chain NFT\n\n- [Patrick's Original Video](https://www.youtube.com/watch?v=9oERTH9Bkw0)\n\n### What is an SVG?\n\n- [SVG Tutorial](https://www.w3schools.com/graphics/svg_intro.asp)\n  - [On-Chain SVG Example](https://opensea.io/assets/matic/0x291ff90b9c410f56e047599bfee6b585c0c484d7/2)\n\n### Initial Code\n\n### Base64 Encoding\n\n- [Base64 Encoding](https://en.wikipedia.org/wiki/Base64)\n  - [Example Encoder](https://base64.guru/converter/encode/image/svg)\n- [base64-sol](https://www.npmjs.com/package/base64-sol/v/1.0.1)\n\n## Advanced: EVM Opcodes, Encoding, and Calling\n\n### abi.encode & abi.encodePacked\n\n- [abi.encode](https://docs.soliditylang.org/en/latest/cheatsheet.html?highlight=cheatsheet#global-variables)\n- [abi.encodePacked](https://docs.soliditylang.org/en/latest/cheatsheet.html?highlight=cheatsheet#global-variables)\n  Thanks to [Alex Roan](https://twitter.com/alexroan) for his help on this session!\n- [Example Contract Creation Transaction](https://etherscan.io/tx/0x112133a0a74af775234c077c397c8b75850ceb61840b33b23ae06b753da40490)\n  What REALLY is the ABI?\n- [EVM Opcodes](https://www.evm.codes/)\n- [More EVM Opcodes](https://github.com/crytic/evm-opcodes)\n- [Solidity Cheatsheet](https://docs.soliditylang.org/en/latest/cheatsheet.html?highlight=encodewithsignature)\n- [abi.encode vs abi.encodePacked](https://ethereum.stackexchange.com/questions/91826/why-are-there-two-methods-encoding-arguments-abi-encode-and-abi-encodepacked)\n\n### Introduction to Encoding Function Calls Directly\n\n### Introduction to Encoding Function Calls Recap\n\n### Encoding Function Calls Directly\n\n- [Function Selector](https://blog.openzeppelin.com/deconstructing-a-solidity-contract-part-iii-the-function-selector-6a9b6886ea49/)\n- [Function Signature](https://twitter.com/PatrickAlphaC/status/1517156225670078465)\n\n### Creating an NFT TokenURI on-Chain\n\n### Making the NFT Dynamic\n\n### Deploy Script\n\n## Deploying the NFTs to a Testnet\n\n## Lesson 14 Recap\n\nExtra credit:\n\n- [Deconstructing Solidity](https://blog.openzeppelin.com/deconstructing-a-solidity-contract-part-ii-creation-vs-runtime-6b9d60ecb44c/)\n- [Knowing and controlling your Smart Contract Address](https://www.youtube.com/watch?v=56K0FdosZ8g)\n- [From Solidity to byte code](https://www.youtube.com/watch?v=RxL_1AfV7N4)\n\n# Lesson 15: NextJS NFT Marketplace (If you finish this lesson, you are a full-stack MONSTER!)\n\n_[\u2328\ufe0f (23:37:03) Lesson 15: NextJS NFT Marketplace (Full Stack / Front End)](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=85023s)_\n\n## Large Update, please read\n\nMoralis has recently updated to a self-hosted server over their own server. For this, you can do one of the following:\n\n- [Learn how to run one yourself](https://www.youtube.com/watch?v=9GtysZs-FrA)\n- Follow along to learn the concepts of this more interactive app, without actually coding along\n- Skip to the section where we interact with the graph\n\nTL;DR: TheGraph code should work exactly the same as the video, however the Moralis code will not.\n\n\ud83d\udcbb Code:\n\n- Backend (Contracts): https://github.com/PatrickAlphaC/hardhat-nft-marketplace-fcc\n- Frontend (Moralis Indexer): https://github.com/PatrickAlphaC/nextjs-nft-marketplace-moralis-fcc\n- Frontend (TheGraph Indexer): https://github.com/PatrickAlphaC/nextjs-nft-marketplace-thegraph-fcc\n  - The Graph: https://github.com/PatrickAlphaC/graph-nft-marketplace-fcc\n\nSpecial thanks to [Matt Durkin](https://twitter.com/mdurkin92) for help with this section.\n\n## Introduction\n\n- [Opensea](https://opensea.io/)\n- [Artion](https://github.com/Fantom-foundation/Artion-Contracts)\n\n## Part I: NFT Marketplace Contracts\n\n### Hardhat Setup\n\n### NftMarketplace.sol\n\n- [Pull Over Push](https://fravoll.github.io/solidity-patterns/pull_over_push.html)\n\n## Reentrancy\n\n- [Reentrancy](https://solidity-by-example.org/hacks/re-entrancy)\n- [Rekt.news](https://rekt.news/leaderboard/)\n- [Openzeppelin NonReentrant](https://docs.openzeppelin.com/contracts/4.x/api/security#ReentrancyGuard)\n\n### NftMarketplace.sol - Continued\n\n### NftMarketplace.sol - Deploy Script\n\n### NftMarketplace.sol - Tests\n\n### NftMarketplace.sol - Scripts\n\n## Part II: Moralis Front End\n\n### What is Moralis?\n\n- [Special Guest Ivan Liljeqvist](https://twitter.com/IvanOnTech)\n\n### NextJS Setup\n\n- [Link NextJS](https://nextjs.org/docs/api-reference/next/link)\n\n### Adding Tailwind\n\n- [Tailwind with NextJS](https://tailwindcss.com/docs/guides/nextjs)\n\n### Introduction to Indexing in Web3\n\n- [TheGraph](https://thegraph.com/en/)\n- [Moralis](https://moralis.io/)\n\n### Connecting Moralis to our Local Hardhat Node\n\n- [NextJS Environment Variables](https://nextjs.org/docs/basic-features/environment-variables)\n- [Reverse Proxy FRP](https://github.com/fatedier/frp/releases)\n  - [Docs](https://docs.moralis.io/moralis-dapp/web3/setting-up-ganache)\n  - [Trouble Shooting](https://docs.moralis.io/faq#frpc)\n- [Moralis Forum](https://forum.moralis.io/)\n- [Moralis Admin CLI](https://docs.moralis.io/moralis-dapp/tools/moralis-admin-cli)\n\n### Moralis Event Sync\n\n- [Moralis Add Event Sync From Code](https://docs.moralis.io/moralis-dapp/connect-the-sdk/connect-using-node#add-new-event-sync-from-code)\n\n#### Reset Local Chain\n\n### Moralis Cloud Functions\n\n- [Moralis Cloud Functions](https://docs.moralis.io/moralis-dapp/cloud-code/cloud-functions)\n- [Moralis Logging](https://docs.moralis.io/moralis-dapp/tools/moralis-admin-cli#get-logs)\n- [Hardhat Network Reference](https://hardhat.org/hardhat-network/reference/)\n- Moralis Database only confirms a transaction with a block confirmation - so we need to move blocks on our hardhat local node.\n- [Moralis Triggers](https://docs.moralis.io/moralis-dapp/cloud-code/triggers)\n\n#### Practice Resetting the Local Chain\n\n### Moralis Cloud Functions II\n\n### Querying the Moralis Database\n\n- [Moralis Queries](https://docs.moralis.io/moralis-dapp/database/queries)\n\n### Rendering the NFT Images\n\n- [useNFTBalance](https://github.com/MoralisWeb3/react-moralis#usenftbalances)\n- [fetch](https://www.npmjs.com/package/node-fetch)\n- [next/image](https://nextjs.org/docs/api-reference/next/image#loader-configuration)\n\n### Update Listing Modal\n\n### Buy NFT Listing\n\n### Listing NFTs for Sale\n\n- [web3uikit Form](https://web3uikit.com/)\n\n## Part III: TheGraph Front End\n\n### Introduction\n\n### What is The Graph?\n\n- [Special Guest Nader Dabit](https://twitter.com/dabit3)\n\n### Building a Subgraph\n\n- [Example Subgraphs](https://thegraph.com/explorer/)\n- [The Graph Studio](https://thegraph.com/studio/)\n- [GraphQL VSCode Extension](https://marketplace.visualstudio.com/items?itemName=GraphQL.vscode-graphql)\n- [GraphQL](https://graphql.org/)\n\n### Deploying our Subgraph\n\n- [GraphQL Queries](https://www.tutorialspoint.com/graphql/graphql_query.htm)\n\n### Reading from The Graph\n\n- [@apollo/client](https://www.npmjs.com/package/@apollo/client)\n- [gql](https://www.npmjs.com/package/gql)\n- [The Graph Docs](https://thegraph.com/docs/en/)\n\n### Hosting our Dapp\n\n\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a Completed Front End Basics! \ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\n\n# Lesson 16: Hardhat Upgrades\n\n_[\u2328\ufe0f (28:53:11) Lesson 16: Hardhat Upgrades](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=103991s)_\n\n\ud83d\udcbb Code: https://github.com/PatrickAlphaC/hardhat-upgrades-fcc\n\n## Upgradable Smart Contracts Overview\n\n- [Optional Video](https://www.youtube.com/watch?v=bdXJmWajZRY)\n- [Links from Video]\n\n## Types of Upgrades\n\n1.  Parameter\n2.  Social Migrate\n3.  Proxy\n    1.  Proxy Gotchas\n        1. [Function Collisions](https://blog.openzeppelin.com/the-state-of-smart-contract-upgrades/#diamonds)\n        2. [Storage Collisions](https://blog.openzeppelin.com/the-state-of-smart-contract-upgrades/#diamonds)\n    2.  [Metamorphic Upgrades](https://github.com/PatrickAlphaC/hardhat-metamorphic-upgrades-fcc)\n    3.  [Transparent](https://blog.openzeppelin.com/the-transparent-proxy-pattern/)\n    4.  [UUPS](https://forum.openzeppelin.com/t/uups-proxies-tutorial-solidity-javascript/7786)\n    5.  [Diamond](https://eips.ethereum.org/EIPS/eip-2535)\n\n## Delegatecall\n\n- [delegatecall (solidity-by-example)](https://solidity-by-example.org/delegatecall)\n- [Yul](https://docs.soliditylang.org/en/latest/yul.html)\n\n## Small Proxy Example\n\n- [EIP 1967](https://eips.ethereum.org/EIPS/eip-1967)\n\n## Transparent Upgradable Smart Contract\n\n- [Hardhat-deploy Proxies](https://github.com/wighawag/hardhat-deploy#deploying-and-upgrading-proxies)\n- [Openzeppelin Upgrades Plugin](https://docs.openzeppelin.com/upgrades-plugins/1.x/)\n  - [Openzeppelin upgrades tutorial](https://forum.openzeppelin.com/t/openzeppelin-upgrades-step-by-step-tutorial-for-hardhat/3580)\n- [hardhat deploy upgrades examples](https://github.com/wighawag/template-ethereum-contracts/tree/examples/openzeppelin-proxies/deploy)\n\n# Lesson 17: Hardhat DAOs\n\n_[\u2328\ufe0f (29:45:24) Lesson 17: Hardhat DAOs](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=107124s)_\n\n\u2b06\ufe0f Up-to-date code: https://github.com/PatrickAlphaC/dao-template\n\n\ud83d\udcbb Code from video: https://github.com/PatrickAlphaC/hardhat-dao-fcc\n\n## Introduction\n\n## What is a DAO?\n\n- [What is a DAO?](https://www.youtube.com/watch?v=X_QKZzd68ro)\n\n## How to build a DAO\n\n- [How to build a DAO](https://www.youtube.com/watch?v=AhJtmUqhAqg)\n- That's Patrick\n- [PY Code](https://github.com/brownie-mix/dao-mix)\n- [Python Video](https://www.youtube.com/watch?v=rD8AxZ_wBA4)\n- [Openzeppelin Governance](https://docs.openzeppelin.com/contracts/4.x/api/governance)\n- [Compound Governance](https://compound.finance/governance)\n- [Contract Wizard](https://docs.openzeppelin.com/contracts/4.x/wizard)\n- [CastVoteBySig](https://forum.openzeppelin.com/t/what-is-votecastbysig/17069/2)\n\n# Lesson 18: Security & Auditing\n\n_[\u2328\ufe0f (31:28:32) Lesson 18: Security & Auditing ](https://www.youtube.com/watch?v=gyMwXuJrbJQ&t=113312s)_\n\n\ud83d\udcbb Code: https://github.com/PatrickAlphaC/hardhat-security-fcc\n\n## Introduction\n\n- [Readiness Guide](https://learn.openzeppelin.com/security-audits/readiness-guide)\n\n## Slither\n\n- [Install python](https://www.python.org/downloads/)\n- [Slither](https://github.com/crytic/slither#how-to-install)\n- [solc-select](https://github.com/crytic/solc-select)\n- [Fuzz testing](https://en.wikipedia.org/wiki/Fuzzing)\n\n## Fuzzing and Eth Security Toolbox\n\n- [Echidna](https://github.com/crytic/echidna)\n- [Docker Install](https://docs.docker.com/get-docker/)\n- [Eth-Security-ToolBox](https://github.com/trailofbits/eth-security-toolbox)\n\n## Closing Thoughts\n\n- [Best Practices](https://consensys.github.io/smart-contract-best-practices/)\n- [Attacks](https://consensys.github.io/smart-contract-best-practices/attacks/)\n  - [Oracle Attacks](https://hackernoon.com/how-dollar100m-got-stolen-from-defi-in-2021-price-oracle-manipulation-and-flash-loan-attacks-explained-3n6q33r1)\n  - [Re-entrancy Attacks](https://quantstamp.com/blog/what-is-a-re-entrancy-attack)\n- [Damn Vulnerable Defi](https://www.damnvulnerabledefi.xyz/)\n- [Ethernaut](https://ethernaut.openzeppelin.com/)\n- Some Auditors:\n  - [OpenZeppelin](https://openzeppelin.com/)\n  - [SigmaPrime](https://sigmaprime.io/)\n  - [Trail of Bits](https://www.trailofbits.com/)\n\n# Congratulations\n\n\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a Completed The Course! \ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\ud83c\udf8a\n\n## Where do I go now?\n\n### Learning More\n\n- [CryptoZombies](https://cryptozombies.io/)\n- [Patrick Collins](https://www.youtube.com/channel/UCn-3f8tw_E1jZvhuHatROwA)\n- [Dapp University](https://www.youtube.com/channel/UCY0xL8V6NzzFcwzHCgB8orQ)\n- [ChainShot](https://www.chainshot.com/courses)\n- [Cami Ramos Garzon](https://twitter.com/camiinthisthang)\n- [Albert Hu](https://twitter.com/thatguyintech)\n- [Ivan Liljeqvist](https://twitter.com/IvanOnTech)\n- [Ally Haire](https://twitter.com/DeveloperAlly)\n- [Stephen Fluin](https://twitter.com/stephenfluin)\n- [Eat the Blocks](https://www.youtube.com/channel/UCZM8XQjNOyG2ElPpEUtNasA)\n- [Austin Griffith](https://www.youtube.com/channel/UC_HI2i2peo1A-STdG22GFsA)\n- [Nader Dabit](https://www.youtube.com/user/boyindasouth)\n- [Ethereum.org](https://ethereum.org/en/)\n\n### Community\n\n- [Twitter](https://twitter.com/PatrickAlphaC)\n- [Hardhat Discord](https://hardhat.org/discord)\n- [Ethereum Python Community Discord](https://discord.gg/9zk7snTfWe)\n- [Chainlink Discord](https://discord.gg/2YHSAey)\n- [Ethereum Discord](https://ethereum.org/en/)\n- [Reddit ethdev](https://www.reddit.com/r/ethdev/)\n\n### Hackathons\n\n- [CL Hackathon](https://chain.link/hackathon)\n- [ETHGlobal](https://ethglobal.com/)\n- [ETHIndia](https://ethindia.co/)\n\nBe sure to check out project grant programs!\n\nAnd make today an amazing day!\n\n# Thank you\n\nThanks to everyone who is taking, participating in, and working on this course. It's been a passion project and a data dump of everything I've learnt in the web3 space to get you up to speed quickly. Also, a big thank you to Chainlink Labs for encouraging this course to come to light-and to the many Chainlink Labs team members who helped with various assets!\n\n[![Patrick Collins Twitter](https://img.shields.io/badge/Twitter-1DA1F2?style=for-the-badge&logo=twitter&logoColor=white)](https://twitter.com/PatrickAlphaC)\n[![Patrick Collins YouTube](https://img.shields.io/badge/YouTube-FF0000?style=for-the-badge&logo=youtube&logoColor=white)](https://www.youtube.com/channel/UCn-3f8tw_E1jZvhuHatROwA)\n[![Patrick Collins Linkedin](https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&logo=linkedin&logoColor=white)](https://www.linkedin.com/in/patrickalphac/)\n[![Patrick Collins Medium](https://img.shields.io/badge/Medium-000000?style=for-the-badge&logo=medium&logoColor=white)](https://medium.com/@patrick.collins_58673/)\n",
        "releases": []
    }
}