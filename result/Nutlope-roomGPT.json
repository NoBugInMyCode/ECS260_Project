{
    "https://api.github.com/repos/Nutlope/roomGPT": {
        "forks": 1399,
        "watchers": 10205,
        "stars": 10205,
        "languages": {
            "TypeScript": 31178,
            "CSS": 1410,
            "JavaScript": 595
        },
        "commits": [
            "2023-09-20T19:25:21Z",
            "2023-09-17T23:37:21Z",
            "2023-09-17T23:14:40Z",
            "2023-09-17T23:09:36Z",
            "2023-08-29T17:19:45Z",
            "2023-08-20T13:03:12Z",
            "2023-06-02T04:57:32Z",
            "2023-06-01T22:46:50Z",
            "2023-06-01T21:05:06Z",
            "2023-06-01T21:03:57Z",
            "2023-06-01T21:02:50Z",
            "2023-06-01T20:59:31Z",
            "2023-06-01T20:58:36Z",
            "2023-06-01T20:56:03Z",
            "2023-06-01T19:26:02Z",
            "2023-05-30T22:02:15Z",
            "2023-05-30T18:44:40Z",
            "2023-05-30T18:27:58Z",
            "2023-03-04T04:55:40Z",
            "2023-03-04T04:55:27Z",
            "2023-03-04T03:15:08Z",
            "2023-03-03T12:59:23Z",
            "2023-03-03T12:59:02Z",
            "2023-03-02T17:32:28Z",
            "2023-03-02T17:30:47Z",
            "2023-03-02T16:53:25Z",
            "2023-03-02T16:39:56Z",
            "2023-03-02T16:06:39Z",
            "2023-03-02T16:02:58Z",
            "2023-03-02T15:39:34Z"
        ],
        "creation_date": "2023-02-21T19:54:43Z",
        "contributors": 6,
        "topics": [],
        "subscribers": 71,
        "readme": "# [RoomGPT](https://roomGPT.io) - redesign your room with AI\n\nThis is the previous and open source version of RoomGPT.io (a paid SaaS product). It's the very first version of roomGPT without the auth, payments, or additional features and it's simple to clone, deploy, and play around with.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https://github.com/Nutlope/roomGPT&env=REPLICATE_API_KEY&project-name=room-GPT&repo-name=roomGPT)\n\n[![Room GPT](./public/screenshot.png)](https://roomGPT.io)\n\n## How it works\n\nIt uses an ML model called [ControlNet](https://github.com/lllyasviel/ControlNet) to generate variations of rooms. This application gives you the ability to upload a photo of any room, which will send it through this ML Model using a Next.js API route, and return your generated room. The ML Model is hosted on [Replicate](https://replicate.com) and [Bytescale](https://www.bytescale.com/) is used for image storage.\n\n## Running Locally\n\n### Cloning the repository the local machine.\n\n```bash\ngit clone https://github.com/Nutlope/roomGPT\n```\n\n### Creating a account on Replicate to get an API key.\n\n1. Go to [Replicate](https://replicate.com/) to make an account.\n2. Click on your profile picture in the top left corner, and click on \"API Tokens\".\n3. Here you can find your API token. Copy it.\n\n### Storing the API keys in .env\n\nCreate a file in root directory of project with env. And store your API key in it, as shown in the .example.env file.\n\nIf you'd also like to do rate limiting, create an account on UpStash, create a Redis database, and populate the two environment variables in `.env` as well. If you don't want to do rate limiting, you don't need to make any changes.\n\n### Installing the dependencies.\n\n```bash\nnpm install\n```\n\n### Running the application.\n\nThen, run the application in the command line and it will be available at `http://localhost:3000`.\n\n```bash\nnpm run dev\n```\n\n## One-Click Deploy\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=vercel-examples):\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https://github.com/Nutlope/roomGPT&env=REPLICATE_API_KEY&project-name=room-GPT&repo-name=roomGPT)\n\n## License\n\nThis repo is MIT licensed.\n",
        "releases": []
    }
}