{
    "https://api.github.com/repos/dodyg/practical-aspnetcore": {
        "forks": 1291,
        "watchers": 9635,
        "stars": 9635,
        "languages": {
            "C#": 1008920,
            "HTML": 273411,
            "Batchfile": 57054,
            "Dockerfile": 681
        },
        "commits": [
            "2025-01-02T06:58:13Z",
            "2024-12-14T10:48:04Z",
            "2024-12-10T09:09:38Z",
            "2024-12-10T08:50:50Z",
            "2024-12-04T08:27:49Z",
            "2024-12-04T08:26:54Z",
            "2024-12-04T08:26:52Z",
            "2024-12-01T08:42:59Z",
            "2024-11-18T18:10:50Z",
            "2024-10-30T11:48:46Z",
            "2024-10-30T10:45:52Z",
            "2024-10-15T08:52:38Z",
            "2024-10-15T08:52:11Z",
            "2024-10-15T08:36:03Z",
            "2024-10-15T08:28:12Z",
            "2024-10-15T08:26:08Z",
            "2024-10-15T07:46:29Z",
            "2024-10-15T07:38:08Z",
            "2024-10-15T07:30:42Z",
            "2024-10-10T08:48:06Z",
            "2024-09-12T07:54:33Z",
            "2024-08-31T08:47:10Z",
            "2024-08-12T09:09:19Z",
            "2024-08-12T08:49:16Z",
            "2024-08-10T09:30:02Z",
            "2024-08-05T07:25:03Z",
            "2024-08-03T17:45:25Z",
            "2024-08-02T19:20:21Z",
            "2024-08-02T15:43:19Z",
            "2024-08-02T15:42:20Z"
        ],
        "creation_date": "2016-07-27T08:23:40Z",
        "contributors": 30,
        "topics": [
            "asp-net-core",
            "aspnet-core",
            "aspnetcore",
            "dotnet-core",
            "hacktoberfest"
        ],
        "subscribers": 405,
        "readme": "# Samples for ASP.NET Core 8.0 \n\n> [!NOTE]\n> This repository is WIP. I am updating all the previous samples from .NET 6/7 to .NET 8. Check the previous stable branch ([6.0](https://github.com/dodyg/practical-aspnetcore/tree/net6.0/)) if you want to browse the existing stable samples that contains also .NET 7/8 samples.\n\nGreetings from Cairo, Egypt. You can [sponsor](https://github.com/sponsors/dodyg) this project [here](https://github.com/sponsors/dodyg). \n\n## ASP.NET Core 9\n\nYou can find samples on new features availabel in ASP.NET Core 9(3) [here](/projects/net9).\n\n## Previous versions\n\n[6.0](https://github.com/dodyg/practical-aspnetcore/tree/net6.0/), [5.0](https://github.com/dodyg/practical-aspnetcore/tree/net5.0/), [3.1 LTS](https://github.com/dodyg/practical-aspnetcore/tree/3.1-LTS/), [2.1 LTS](https://github.com/dodyg/practical-aspnetcore/tree/2.1-LTS)\n\n## Other Samples\n\n- For ATProtocol (the underlying open protocol for Bluesky) related samples, you can find them [here](https://github.com/dodyg/bluenile). \n- For Hydro Framework (Razor Pages compatible), you can find them [here](/projects/hydro/)(4).\n- [Official .NET Aspire samples](https://github.com/dotnet/aspire-samples).\n- For Data Access samples, go to the excellent [ORM Cookbook](https://github.com/Grauenwolf/DotNet-ORM-Cookbook).\n- .NET team also has [a sample repository](https://github.com/dotnet/samples).\n\n\n## Sections\n\n| Section                                                                 |     |                                                                              |\n| ----------------------------------------------------------------------- | --- | ---------------------------------------------------------------------------- |\n| [Authentication](/projects/authentication)                              | 5   |                                                                              |\n| [Blazor Client Side (Web Assembly)](/projects/blazor-wasm)              | 22  | .NET8 (WIP), Components, Data Binding                                        |\n| [Blazor Server](/projects/blazor-ss)                                    | 16  | Localization                                                                 |\n| [Blazor Server Side Render](/projects/blazor-ssr)                       | 22  |                                                                              |\n| [Caching](/projects/caching)                                            | 5   |                                                                              |\n| [Configurations](/projects/configurations)                              | 10  |                                                                              |\n| [CoreWCF](/projects/corewcf)                                            | 1   |                                                                              |\n| [Dependency Injection](/projects/dependency-injection/)                 | 4   |                                                                              |\n| [Diagnostics](/projects/diagnostics)                                    | 5   |                                                                              |\n| [Endpoint Routing](/projects/endpoint-routing)                          | 32  |                                                                              |\n| [Email](/projects/mailkit)                                              | 2   |                                                                              |\n| [Elsa Workflow](/projects/elsa)                                         | 14  | .NET8                                                                        |\n| [Exception Handler Middleware](/projects/exception-handler-middleware/) | 2   |                                                                              |\n| [Features](/projects/features)                                          | 11  |                                                                              |\n| [Generic Hosting](/projects/generic-host)                               | 9   |                                                                              |\n| [gRPC](/projects/grpc) (including grpc-Web)                             | 12  |                                                                              |\n| [Health Check](/projects/health-check)                                  | 6   |                                                                              |\n| [HTMX](/projects/htmx)                                                  | 40  |                                                                              |\n| [IHttpClientFactory](/projects/httpclientfactory)                       | 4   |                                                                              |\n| [IHostedService](/projects/ihosted-service)                             | 2   |                                                                              |\n| [Logging](/projects/logging)                                            | 5   |                                                                              |\n| [Localization and Globalization](/projects/localization)                | 6   |                                                                              |\n| [Middleware](/projects/middleware)                                      | 14  |                                                                              |\n| [Mini Apps](/projects/mini)                                             | 2   |                                                                              |\n| [Minimal API](/projects/minimal-api)                                    | 36  | Routing, Parameter Bindings, etc                                             |\n| [Minimal Hosting](/projects/minimal-hosting)                            | 23  |                                                                              |\n| [MVC](/projects/mvc)                                                    | 47  | Localization, Routing, Razor Class Library, Tag Helpers, View Component, etc |\n| [Output Cache Middleware](/projects/output-cache-middleware)            |     |                                                                              |\n| [Open Telemetry](/projects/open-telemetry/)                             | 3   |                                                                              |\n| [Orchard Core](/projects/orchard-core)                                  | 4   |                                                                              |\n| [Path String (HttpContext.Request.Path)](/projects/path-string)         | 1   |                                                                              |\n| [Polly](/projects/polly/)                                               | 1   |                                                                              |\n| [Problem Details Middleware](/projects/problem-details-middleware/)     | 3   |                                                                              |\n| [Razor Pages](/projects/razor-pages)                                    | 10  | TempData                                                                     |\n| [RazorSlices](/projects/razor-slices)                                   | 1   |                                                                              |\n| [Request](/projects/request)                                            | 15  | Form, Cookies, Query String, Headers                                         |\n| [Request Timeouts Middleware](/projets/request-timeouts-middleware)     | 6   |                                                                              |\n| [Response](/projects/response)                                          | 3   |                                                                              |\n| [SignalR](/projects/signalr)                                            | 1   |                                                                              |\n| [Security](/projects/security)                                          | 7   |                                                                              |\n| [Single File Application](/projects/sfa)                                | 2   |                                                                              |\n| [Static Files and File Provider](/projects/file-provider)               | 10  |                                                                              |\n| [System.Text.Json](/projects/json)                                      | 23  |                                                                              |\n| [Syndications](/projects/syndications)                                  | 3   |                                                                              |\n| [Testing](/projects/testing)                                            | 1   |                                                                              |\n| [Unpoly](/projects/unpoly)                                              | 5   |                                                                              |\n| [URL Redirect/Rewrite](/projects/rewrite)                               | 6   |                                                                              |\n| [Uri Helper](/projects/uri-helper)                                      | 5   |                                                                              |\n| [Windows Service](/projects/windows-service)                            | 1   |                                                                              |\n| [Web Sockets](/projects/web-sockets)                                    | 6   |                                                                              |\n| [Web Utilities](/projects/web-utilities)                                | 3   |                                                                              |\n| [Orleans](/projects/orleans)                                            | 5   | .NET.8                                                                       |\n| [Xml](/projects/xml)                                                    | 1   |                                                                              |\n| [YARP](/projects/yarp)                                                  | 1   |                                                                              |\n\n## How to run these samples\n\nTo run these samples, simply open your command line console, go to each folder and execute `dotnet watch run`.\n\n### Misc (6)\n\n-   [Application Environment](/projects/application-environment)\n\n    This sample shows how to obtain application environment information (target framework, etc).\n\n-   [Show Connection info](/projects/connection-info)\n\n    Enumerate the connection information of a HTTP request.\n\n-   [Password Hasher server](/projects/password-hasher)\n\n    Give it a string and it will generate a secure hash for you, e.g. `localhost:5000?password=mypassword`.\n\n-   [Version info](/projects/version)\n\n    Show various version info of the framework your system is running on.\n\n-   [IApplicationLifetime](/projects/i-application-lifetime)\n\n    Responds to application startup and shutdown.\n\n    We are using `IApplicationLifetime` that trigger events during application startup and shutdown.\n\n- [Short Circuit](map-short-circuit)\n\n  Use `MapShortCircuit` or `.ShortCircuit()` to efficiently respond to a request without going through a middleware pipeline run. \n\n### Server-Sent Events (1)\n\n-   [Forever Server](/projects/sse)\n\n    This server will send a 'hello world' greeting forever.\n\n### Markdown (2)\n\n-   [Markdown server](/projects/markdown-server)\n\n    Serve markdown file as html file. You will see how you can create useful app using a few basic facilities in aspnetcore.\n\n    We take `\"Markdig\"` as dependency.\n\n-   [Markdown server - implemented as middleware component](/projects/markdown-server-middleware)\n\n    Serve markdown file as html file. It has the same exact functionality as [Markdown server](/projects/markdown-server) but implemented using middleware component.\n\n    We take `\"Markdig\"` as dependency.\n\n### Utils (3)\n\n-   [Status Codes](/projects/utils/http-status-codes)\n\n    Here we contrast between the usage of `Microsoft.AspNetCore.Http.StatusCodes` and `System.Net.HttpStatusCode`.\n\n-   [MediaTypeNames](/projects/utils/media-type-names)\n\n    This class provides convenient constants for some common MIME types. It's not extensive by any means however `MediaTypeNames.Text.Html` and `MediaTypeNames.Application.Json` come handy.\n\n-   [MediaTypeNames - 2](/projects/utils/media-type-names-2)\n\n    Using `FileExtensionContentTypeProvider` to obtain the correct MIME type of a filename extension.\n\n### Device Detection (1)\n\nThe samples in this section rely on [Wangkanai.Detection](https://github.com/wangkanai/wangkanai/tree/main/Detection) library.\n\n-   [Device Detection](/projects/device-detection)\n\n    This is the most basic device detection. You will be able to detect whether the client is a desktop or a mobile client.\n\n### Image Sharp (1)\n\nAll these samples require `SixLabors.ImageSharp.Web` middleware package. This middleware is an excelent tool to process your day to day image processing need.\n\n-   [Image-Sharp](/projects/image-sharp)\n\n    This example shows how to enable image resizing functionality to your site. It's super easy and the middleware takes care of caching, etc.\n\n## Misc\n\n-   [Contributor Guidelines](https://github.com/dodyg/practical-aspnetcore/blob/master/CONTRIBUTING.md)\n-   [Code of Conduct](https://github.com/dodyg/practical-aspnetcore/blob/master/CODE_OF_CONDUCT.md)\n",
        "releases": []
    }
}