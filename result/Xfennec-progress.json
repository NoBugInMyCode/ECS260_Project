{
    "https://api.github.com/repos/Xfennec/progress": {
        "forks": 313,
        "watchers": 8613,
        "stars": 8613,
        "languages": {
            "C": 39709,
            "Roff": 2977,
            "Makefile": 1535
        },
        "commits": [
            "2024-11-19T08:43:06Z",
            "2023-10-13T08:45:36Z",
            "2023-08-18T15:57:29Z",
            "2023-07-28T22:08:49Z",
            "2023-06-26T13:59:10Z",
            "2023-06-26T13:57:45Z",
            "2023-05-22T09:13:25Z",
            "2023-05-22T09:12:14Z",
            "2023-05-22T09:05:25Z",
            "2023-05-22T08:59:11Z",
            "2023-05-19T18:16:50Z",
            "2023-05-19T17:53:42Z",
            "2023-03-14T13:34:52Z",
            "2023-03-13T11:31:47Z",
            "2021-07-26T14:03:20Z",
            "2021-07-23T16:45:05Z",
            "2021-05-12T06:56:41Z",
            "2021-05-12T06:49:02Z",
            "2021-05-11T22:49:41Z",
            "2021-03-04T10:26:40Z",
            "2021-03-04T10:25:21Z",
            "2021-03-04T10:22:43Z",
            "2021-03-03T08:54:04Z",
            "2021-03-03T08:52:46Z",
            "2021-02-27T12:52:29Z",
            "2021-02-27T08:46:51Z",
            "2021-02-27T08:38:11Z",
            "2021-02-27T05:33:36Z",
            "2020-11-23T07:54:00Z",
            "2020-01-18T06:41:11Z"
        ],
        "creation_date": "2013-11-22T15:25:33Z",
        "contributors": 30,
        "topics": [
            "coreutils",
            "linux",
            "monitoring"
        ],
        "subscribers": 140,
        "readme": "progress - Coreutils Progress Viewer\n=====================\n\nWhat is it\n----------\n\nThis tool can be described as a **tiny**, dirty C command\nthat looks for coreutils basic commands (cp, mv, dd, tar, gzip/gunzip,\ncat, etc.) currently running on your system and displays the\n**percentage** of copied data. It can also show **estimated time** and **throughput**,\nand provides a \"top-like\" mode (monitoring).\n\n![progress screenshot with cp and mv](https://raw.github.com/Xfennec/progress/master/capture.png)\n\n_(After many requests: the colors in the shell come from [powerline-shell](https://github.com/milkbikis/powerline-shell). Try it, it's cool.)_\n\n`progress` works on Linux, FreeBSD and macOS.\n\nFormerly known as cv (Coreutils Viewer).\n\nHow do you install it\n---------------------\n\nOn deb-based systems (Debian, Ubuntu, Mint, etc.) run:\n\n    apt install progress\n\nOn Arch Linux, run:\n\n    pacman -S progress\n\nOn Fedora, run:\n\n    dnf install progress\n\nOn openSUSE, run:\n\n    zypper install progress\n\nOn macOS, with homebrew, run:\n\n    brew install progress\n\nOn macOS, with MacPorts, run:\n\n    port install progress\n\nPackaging status:\n-----------------\n[![Packaging status](https://repology.org/badge/vertical-allrepos/progress.svg?columns=3)](https://repology.org/project/progress/versions)\n\nHow do you build it from source\n-------------------------------\n\n    make && make install\n\nOn FreeBSD, substitute `make` with `gmake`.\n\nIt depends on the library ncurses, you may have to install corresponding packages (maybe something like 'libncurses5-dev', 'libncursesw6' or 'ncurses-devel').\n\nHow do you run it\n-----------------\n\nJust launch the binary, `progress`.\n\nWhat can I do with it\n---------------------\n\nA few examples. You can:\n\n* monitor all current and upcoming instances of coreutils commands in\n  a simple window:\n\n        watch progress -q\n\n* see how your download is progressing:\n\n        watch progress -wc firefox\n\n* look at your web server activity:\n\n        progress -c httpd\n\n* launch and monitor any heavy command using `$!`:\n\n        cp bigfile newfile & progress -mp $!\n\nand much more.\n\nHow does it work\n----------------\n\nIt simply scans `/proc` for interesting commands*, and then looks at\ndirectories `fd` and `fdinfo` to find opened files and seek positions,\nand reports status for the largest file.\n\nIt's very light and compatible with virtually any command.\n\n<em>(*) on macOS, it does the same thing using libproc</em>\n",
        "releases": []
    }
}