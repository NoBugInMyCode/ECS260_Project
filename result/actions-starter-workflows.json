{
    "https://api.github.com/repos/actions/starter-workflows": {
        "forks": 5599,
        "watchers": 9688,
        "stars": 9688,
        "languages": {
            "TypeScript": 12974
        },
        "commits": [
            "2025-01-21T20:06:02Z",
            "2025-01-14T18:59:44Z",
            "2025-01-14T18:13:27Z",
            "2025-01-14T01:52:25Z",
            "2025-01-13T21:05:21Z",
            "2025-01-13T20:54:01Z",
            "2025-01-13T17:59:45Z",
            "2025-01-13T17:56:22Z",
            "2025-01-13T17:54:55Z",
            "2025-01-13T17:52:40Z",
            "2024-08-06T12:52:16Z",
            "2025-01-06T14:25:01Z",
            "2025-01-06T14:15:19Z",
            "2025-01-06T14:13:48Z",
            "2024-12-13T16:54:28Z",
            "2024-11-22T15:03:25Z",
            "2024-11-22T14:48:05Z",
            "2024-11-22T14:47:32Z",
            "2024-11-07T02:03:35Z",
            "2024-11-06T22:10:48Z",
            "2024-11-05T17:52:19Z",
            "2024-11-05T17:50:41Z",
            "2024-10-22T19:55:05Z",
            "2024-10-22T08:53:35Z",
            "2024-10-21T20:01:52Z",
            "2024-09-17T18:50:21Z",
            "2024-09-12T15:09:53Z",
            "2024-09-11T18:12:06Z",
            "2024-09-10T18:50:28Z",
            "2024-09-10T18:46:17Z"
        ],
        "creation_date": "2019-07-29T16:26:51Z",
        "contributors": 30,
        "topics": [
            "actions"
        ],
        "subscribers": 479,
        "readme": "<p align=\"center\">\n  <img src=\"https://avatars0.githubusercontent.com/u/44036562?s=100&v=4\"/> \n</p>\n\n## Starter Workflows\n\nThese are the workflow files for helping people get started with GitHub Actions.  They're presented whenever you start to create a new GitHub Actions workflow.\n\n**If you want to get started with GitHub Actions, you can use these starter workflows by clicking the \"Actions\" tab in the repository where you want to create a workflow.**\n\n<img src=\"https://d3vv6lp55qjaqc.cloudfront.net/items/353A3p3Y2x3c2t2N0c01/Image%202019-08-27%20at%203.25.07%20PM.png\" max-width=\"75%\"/>\n\n### Directory structure\n\n* [ci](ci): solutions for Continuous Integration workflows\n* [deployments](deployments): solutions for Deployment workflows\n* [automation](automation): solutions for automating workflows\n* [code-scanning](code-scanning): solutions for [Code Scanning](https://github.com/features/security)\n* [pages](pages): solutions for Pages workflows\n* [icons](icons): svg icons for the relevant template\n\nEach workflow must be written in YAML and have a `.yml` extension. They also need a corresponding `.properties.json` file that contains extra metadata about the workflow (this is displayed in the GitHub.com UI).\n\nFor example: `ci/django.yml` and `ci/properties/django.properties.json`.\n\n### Valid properties\n\n* `name`: the name shown in onboarding. This property is unique within the repository.\n* `description`: the description shown in onboarding\n* `iconName`: the icon name in the relevant folder, for example, `django` should have an icon `icons/django.svg`. Only SVG is supported at this time. Another option is to use [octicon](https://primer.style/octicons/). The format to use an octicon is `octicon <<icon name>>`. Example: `octicon person`\n* `creator`: creator of the template shown in onboarding. All the workflow templates from an author will have the same `creator` field.\n* `categories`: the categories that it will be shown under. Choose at least one category from the list [here](#categories). Further, choose the categories from the list of languages available [here](https://github.com/github/linguist/blob/master/lib/linguist/languages.yml) and the list of tech stacks available [here](https://github.com/github-starter-workflows/repo-analysis-partner/blob/main/tech_stacks.yml). When a user views the available templates, those templates that match the language and tech stacks will feature more prominently.\n\n### Categories\n* continuous-integration\n* deployment\n* testing\n* code-quality\n* code-review\n* dependency-management\n* monitoring\n* Automation\n* utilities\n* Pages\n* Hugo\n\n### Variables\nThese variables can be placed in the starter workflow and will be substituted as detailed below:\n\n* `$default-branch`: will substitute the branch from the repository, for example `main` and `master`\n* `$protected-branches`: will substitute any protected branches from the repository\n* `$cron-daily`: will substitute a valid but random time within the day\n\n## How to test templates before publishing\n\n### Disable template for public\nThe template author adds a `labels` array in the template's `properties.json` file with a label `preview`. This will hide the template from users, unless user uses query parameter `preview=true` in the URL.\nExample `properties.json` file:\n```json\n{\n    \"name\": \"Node.js\",\n    \"description\": \"Build and test a Node.js project with npm.\",\n    \"iconName\": \"nodejs\",\n    \"categories\": [\"Continuous integration\", \"JavaScript\", \"npm\", \"React\", \"Angular\", \"Vue\"],\n    \"labels\": [\"preview\"]\n}\n```\n\nFor viewing the templates with `preview` label, provide query parameter `preview=true` to the  `new workflow` page URL. Eg. `https://github.com/<owner>/<repo_name>/actions/new?preview=true`.\n\n### Enable template for public\nRemove the `labels` array from `properties.json` file to publish the template to public\n",
        "releases": []
    }
}