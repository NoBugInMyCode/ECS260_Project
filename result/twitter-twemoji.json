{
    "https://api.github.com/repos/twitter/twemoji": {
        "forks": 1866,
        "watchers": 16931,
        "stars": 16931,
        "languages": {
            "HTML": 242662,
            "JavaScript": 84336,
            "Shell": 924
        },
        "commits": [
            "2023-01-10T10:19:32Z",
            "2023-01-09T21:31:23Z",
            "2022-04-30T06:56:42Z",
            "2022-04-30T06:40:40Z",
            "2022-04-29T22:34:13Z",
            "2022-04-29T22:29:16Z",
            "2022-03-31T03:25:51Z",
            "2022-03-31T00:32:23Z",
            "2022-03-31T00:17:21Z",
            "2021-09-01T06:30:40Z",
            "2022-03-24T17:00:38Z",
            "2021-12-25T15:02:15Z",
            "2022-03-23T15:35:42Z",
            "2022-03-29T08:54:35Z",
            "2022-03-31T00:03:58Z",
            "2022-03-14T23:19:48Z",
            "2022-03-14T23:00:32Z",
            "2022-03-14T15:01:32Z",
            "2022-03-14T14:48:25Z",
            "2022-03-14T14:23:52Z",
            "2022-03-14T13:39:00Z",
            "2022-03-11T08:12:24Z",
            "2022-03-11T08:10:28Z",
            "2022-03-11T08:08:48Z",
            "2022-03-11T08:03:51Z",
            "2022-03-11T08:03:27Z",
            "2022-03-11T07:49:22Z",
            "2022-03-11T07:43:21Z",
            "2022-03-11T07:38:28Z",
            "2021-08-11T05:12:34Z"
        ],
        "creation_date": "2014-11-06T21:49:34Z",
        "contributors": 30,
        "topics": [
            "emoji",
            "twemoji"
        ],
        "subscribers": 338,
        "readme": "# Twitter Emoji (Twemoji) [![Build Status](https://travis-ci.org/twitter/twemoji.svg?branch=gh-pages)](https://travis-ci.org/twitter/twemoji)\n\nA simple library that provides standard Unicode [emoji](http://en.wikipedia.org/wiki/Emoji) support across all platforms.\n\n**Twemoji v14.0** adheres to the [Unicode 14.0 spec](https://unicode.org/versions/Unicode14.0.0/) and supports the [Emoji 14.0 spec](https://www.unicode.org/reports/tr51/tr51-21.html). _We do not support custom emoji._\n\nThe Twemoji library offers support for all Unicode-defined emoji which are recommended for general interchange (RGI).\n\n## Usage\n\n### CDN Support\n\n<del>The folks over at [MaxCDN](https://www.maxcdn.com) have graciously provided CDN support.</del>\n\nMaxCDN is shut down right now, so in the meanwhile use a different CDN or download the assets. (See [Maxcdn has shut down, cdn not working anymore. \u00b7 Issue #580 \u00b7 twitter/twemoji](https://github.com/twitter/twemoji/issues/580)).\n\nUse the following in the `<head>` tag of your HTML document(s):\n\n```html\n<script src=\"https://unpkg.com/twemoji@latest/dist/twemoji.min.js\" crossorigin=\"anonymous\"></script>\n```\n\nThis guarantees that you will always use the latest version of the library.\n\nIf, instead, you'd like to include the latest version explicitly, you can add the following tag:\n```html\n<script src=\"https://unpkg.com/twemoji@14.0.2/dist/twemoji.min.js\" integrity=\"sha384-ICOlZarapRIX6UjKPcWKEpubjg7lGADN7Y9fYP4DU9zm0aPFhgnP5ef+XFaPyKv+\" crossorigin=\"anonymous\"></script>\n```\n\n### Download\n\nIf instead you want to download a specific version, please look at the `gh-pages` branch, where you will find the built assets for both our latest and older versions.\n\n## API\n\nFollowing are all the methods exposed in the `twemoji` namespace.\n\n### twemoji.parse( ... ) V1\n\nThis is the main parsing utility and has 3 overloads per parsing type.\n\nAlthough there are two kinds of parsing supported by this utility, we recommend you use [DOM parsing](https://github.com/twitter/twemoji#dom-parsing), explained below. Each type of parsing accepts a callback to generate an image source or an options object with parsing info.\n\nThe second kind of parsing is string parsing, explained in the legacy documentation [here](https://github.com/twitter/twemoji/blob/master/LEGACY.md#string-parsing). This is unrecommended because this method does not sanitize the string or otherwise prevent malicious code from being executed; such sanitization is out of scope.\n\n#### DOM parsing\n\nIf the first argument to `twemoji.parse` is an `HTMLElement`, generated image tags will replace emoji that are **inside `#text` nodes only** without compromising surrounding nodes or listeners, and completely avoiding the usage of `innerHTML`.\n\nIf security is a major concern, this parsing can be considered the safest option but with a slight performance penalty due to DOM operations that are inevitably *costly*.\n\n```js\nvar div = document.createElement('div');\ndiv.textContent = 'I \\u2764\\uFE0F emoji!';\ndocument.body.appendChild(div);\n\ntwemoji.parse(document.body);\n\nvar img = div.querySelector('img');\n\n// note the div is preserved\nimg.parentNode === div; // true\n\nimg.src;        // https://twemoji.maxcdn.com/v/latest/72x72/2764.png\nimg.alt;        // \\u2764\\uFE0F\nimg.className;  // emoji\nimg.draggable;  // false\n\n```\n\nAll other overloads described for `string` are available in exactly the same way for DOM parsing.\n\n### Object as parameter\n\nHere's the list of properties accepted by the optional object that can be passed to the `parse` function.\n\n```js\n  {\n    callback: Function,   // default the common replacer\n    attributes: Function, // default returns {}\n    base: string,         // default MaxCDN\n    ext: string,          // default \".png\"\n    className: string,    // default \"emoji\"\n    size: string|number,  // default \"72x72\"\n    folder: string        // in case it's specified\n                          // it replaces .size info, if any\n  }\n```\n\n#### callback\n\nThe function to invoke in order to generate image `src`(s).\n\nBy default it is a function like the following one:\n\n```js\nfunction imageSourceGenerator(icon, options) {\n  return ''.concat(\n    options.base, // by default Twitter Inc. CDN\n    options.size, // by default \"72x72\" string\n    '/',\n    icon,         // the found emoji as code point\n    options.ext   // by default \".png\"\n  );\n}\n```\n\n#### base\n\nThe default url is the same as `twemoji.base`, so if you modify the former, it will reflect as default for all parsed strings or nodes.\n\n#### ext\n\nThe default image extension is the same as `twemoji.ext` which is `\".png\"`.\n\nIf you modify the former, it will reflect as default for all parsed strings or nodes.\n\n#### className\n\nThe default `class` for each generated image is `emoji`. It is possible to specify a different one through this property.\n\n##### size\n\nThe default asset size is the same as `twemoji.size` which is `\"72x72\"`.\n\nIf you modify the former, it will reflect as default for all parsed strings or nodes.\n\n#### folder\n\nIn case you don't want to specify a size for the image. It is possible to choose a folder, as in the case of SVG emoji.\n\n```js\ntwemoji.parse(genericNode, {\n  folder: 'svg',\n  ext: '.svg'\n});\n```\n\nThis will generate urls such `https://twemoji.maxcdn.com/svg/2764.svg` instead of using a specific size based image.\n\n## Utilities\n\nBasic utilities / helpers to convert code points to JavaScript surrogates and vice versa.\n\n### twemoji.convert.fromCodePoint()\n\nFor a given HEX codepoint, returns UTF-16 surrogate pairs.\n\n```js\ntwemoji.convert.fromCodePoint('1f1e8');\n // \"\\ud83c\\udde8\"\n```\n\n### twemoji.convert.toCodePoint()\n\nFor given UTF-16 surrogate pairs, returns the equivalent HEX codepoint.\n\n```js\n twemoji.convert.toCodePoint('\\ud83c\\udde8\\ud83c\\uddf3');\n // \"1f1e8-1f1f3\"\n\n twemoji.convert.toCodePoint('\\ud83c\\udde8\\ud83c\\uddf3', '~');\n // \"1f1e8~1f1f3\"\n```\n\n## Tips\n\n### Inline Styles\n\nIf you'd like to size the emoji according to the surrounding text, you can add the following CSS to your stylesheet:\n\n```css\nimg.emoji {\n   height: 1em;\n   width: 1em;\n   margin: 0 .05em 0 .1em;\n   vertical-align: -0.1em;\n}\n```\n\nThis will make sure emoji derive their width and height from the `font-size` of the text they're shown with. It also adds just a little bit of space before and after each emoji, and pulls them upwards a little bit for better optical alignment.\n\n### UTF-8 Character Set\n\nTo properly support emoji, the document character set must be set to UTF-8. This can be done by including the following meta tag in the document `<head>`\n\n```html\n<meta charset=\"utf-8\">\n```\n\n### Exclude Characters (V1)\n\nTo exclude certain characters from being replaced by twemoji.js, call twemoji.parse() with a callback, returning false for the specific unicode icon. For example:\n\n```js\ntwemoji.parse(document.body, {\n    callback: function(icon, options, variant) {\n        switch ( icon ) {\n            case 'a9':      // \u00a9 copyright\n            case 'ae':      // \u00ae registered trademark\n            case '2122':    // \u2122 trademark\n                return false;\n        }\n        return ''.concat(options.base, options.size, '/', icon, options.ext);\n    }\n});\n```\n\n## Legacy API (V1)\n\nIf you're still using our V1 API, you can read our legacy documentation [here](https://github.com/twitter/twemoji/tree/master/LEGACY.md).\n\n## Contributing\n\nThe contributing documentation can be found [here](https://github.com/twitter/twemoji/tree/master/CONTRIBUTING.md).\n\n## Attribution Requirements\n\nAs an open source project, attribution is critical from a legal, practical and motivational perspective in our opinion. The graphics are licensed under the CC-BY 4.0 which has a pretty good guide on [best practices for attribution](https://wiki.creativecommons.org/Best_practices_for_attribution).\n\nHowever, we consider the guide a bit onerous and as a project, will accept a mention in a project README or an 'About' section or footer on a website. In mobile applications, a common place would be in the Settings/About section (for example, see the mobile Twitter application Settings->About->Legal section). We would consider a mention in the HTML/JS source sufficient also.\n\n## Community Projects\n\n* [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app) by [@ShahriarKh](https://github.com/ShahriarKh): An easy-to-use cheatsheet for exploring, copying and downloading emojis!\n* [Twemoji Amazing](https://github.com/SebastianAigner/twemoji-amazing) by [@SebastianAigner](https://github.com/SebastianAigner): Use Twemoji using CSS classes (like [Font Awesome](http://fortawesome.github.io/Font-Awesome/)).\n* [Twemoji Ruby](https://github.com/jollygoodcode/twemoji) by [@JollyGoodCode](https://twitter.com/jollygoodcode): Use Twemoji in Ruby.\n* [Twemoji Utils](https://github.com/gustavwilliam/twemoji-utils) by [@gustavwilliam](https://github.com/gustavwilliam): Utilities for finding and downloading Twemoji source files.\n* [Twemoji for Pencil](https://github.com/nathanielw/Twemoji-for-Pencil) by [@Nathanielnw](https://twitter.com/nathanielnw): Use Twemoji in Pencil.\n* [FrwTwemoji - Twemoji in dotnet](http://github.frenchw.net/FrwTwemoji/) by [@FrenchW](https://twitter.com/frenchw): Use Twemoji in any dotnet project (C#, asp.net ...).\n* [Emojiawesome - Twemoji for Yellow](https://github.com/datenstrom/yellow-extensions/tree/master/source/emojiawesome) by [@datenstrom](https://github.com/datenstrom/): Use Twemoji on your website.\n* [EmojiPanel for Twitter](https://github.com/danbovey/EmojiPanel) by [@danielbovey](https://twitter.com/danielbovey/status/749580050274582528): Insert Twemoji into your tweets on twitter.com.\n* [Twitter Color Emoji font](https://github.com/eosrei/twemoji-color-font) by [@bderickson](https://twitter.com/bderickson): Use Twemoji as your system default font on Linux & OS X.\n* [Emojica](https://github.com/xoudini/emojica) by [@xoudini](https://twitter.com/xoudini): An iOS framework allowing you to replace all standard emoji in strings with Twemoji.\n* [gwt-twemoji](https://github.com/phpmonkeys-de/gwt-twemoji) by [@nbartels](https://github.com/nbartels): Use Twemoji in GWT\n* [JavaFXEmojiTextFlow](https://github.com/pavlobu/emoji-text-flow-javafx) by [@pavlobu](https://github.com/pavlobu): A JavaFX library allowing you to replace all standard emoji in extended EmojiTextFlow with Twemoji.\n* [Vue Twemoji Picker](https://github.com/kevinfaguiar/vue-twemoji-picker) by [@kevinfaguiar](https://github.com/kevinfaguiar): A fast plug-n-play Twemoji Picker (+textarea for Twemoji rendering) for Vue.\n* [Unmaintained] [Twemoji Awesome](http://ellekasai.github.io/twemoji-awesome/) by [@ellekasai](https://twitter.com/ellekasai/): Use Twemoji using CSS classes (like [Font Awesome](http://fortawesome.github.io/Font-Awesome/)).\n* [EmojiOnRoku](https://github.com/KasperGam/EmojiOnRoku) by [@KasperGam](https://github.com/KasperGam): Use Twemoji on Roku!\n* [LaTeX Twemoji](https://gitlab.com/rossel.jost/latex-twemojis) by [@rossel.jost](https://gitlab.com/rossel.jost): Use Twemoji in LaTeX.\n* [PHP Twemoji](https://github.com/Astrotomic/php-twemoji) by [@Astrotomic](https://github.com/Astrotomic): Use twemoji within your PHP website project's by replacing standard Emoji with twemoji urls.\n\n## Committers and Contributors\n\n* Justine De Caires (Twitter)\n* Jason Sofonia (Twitter)\n* Bryan Haggerty (ex-Twitter)\n* Nathan Downs (ex-Twitter)\n* Tom Wuttke (ex-Twitter)\n* Andrea Giammarchi (ex-Twitter)\n* Joen Asmussen (WordPress)\n* Marcus Kazmierczak (WordPress)\n\nThe goal of this project is to simply provide emoji for everyone. We definitely welcome improvements and fixes, but we may not merge every pull request suggested by the community due to the simple nature of the project.\n\nThe rules for contributing are available in the `CONTRIBUTING.md` file.\n\nThank you to all of our [contributors](https://github.com/twitter/twemoji/graphs/contributors).\n\n## License\n\nCopyright 2019 Twitter, Inc and other contributors\n\nCode licensed under the MIT License: <http://opensource.org/licenses/MIT>\n\nGraphics licensed under CC-BY 4.0: <https://creativecommons.org/licenses/by/4.0/>\n",
        "releases": [
            {
                "name": "Twemoji 14.0.2 update",
                "date": "2022-03-31T03:08:55Z"
            },
            {
                "name": "Twemoji 14.0.1 update",
                "date": "2022-03-31T03:06:55Z"
            },
            {
                "name": "Twemoji 14.0.0 update",
                "date": "2022-03-31T03:02:05Z"
            },
            {
                "name": "Twemoji 13.1.1 update",
                "date": "2022-03-11T08:00:32Z"
            },
            {
                "name": "Twemoji 13.1.0 update",
                "date": "2021-05-28T04:25:35Z"
            },
            {
                "name": "Twemoji 13.0.2 update",
                "date": "2021-03-12T22:18:59Z"
            },
            {
                "name": "Twemoji 13.0.1 update",
                "date": "2020-07-17T06:45:09Z"
            },
            {
                "name": "Twemoji 13.0.0 update",
                "date": "2020-05-09T01:00:50Z"
            },
            {
                "name": "Twemoji 12.1.6 update",
                "date": "2020-04-28T19:41:01Z"
            },
            {
                "name": "Twemoji 12.1.5 update",
                "date": "2020-01-28T22:08:48Z"
            },
            {
                "name": "Twemoji 12.1.4 update",
                "date": "2019-11-14T01:59:04Z"
            },
            {
                "name": "Twemoji 12.1.3 update",
                "date": "2019-09-18T21:16:08Z"
            },
            {
                "name": "Twemoji 12.1.2 update",
                "date": "2019-08-07T23:00:41Z"
            },
            {
                "name": "Twemoji 12.1.1 update",
                "date": "2019-08-07T23:00:22Z"
            },
            {
                "name": "Twemoji 12.1.0 update",
                "date": "2019-08-07T22:58:53Z"
            },
            {
                "name": "Twemoji 12.0.4 update",
                "date": "2019-05-30T00:22:56Z"
            },
            {
                "name": "Twemoji 12.0.3 update",
                "date": "2019-05-29T23:54:23Z"
            },
            {
                "name": "Twemoji 12.0.2 update",
                "date": "2019-05-29T18:36:51Z"
            },
            {
                "name": "Twemoji 12.0.1 update",
                "date": "2019-04-15T23:19:34Z"
            },
            {
                "name": "Twemoji 12.0 update",
                "date": "2019-04-04T22:49:44Z"
            },
            {
                "name": "Twemoji 11.4 update",
                "date": "2019-03-29T05:32:43Z"
            },
            {
                "name": "Twemoji 11.3 update",
                "date": "2019-01-29T21:20:14Z"
            },
            {
                "name": "Twemoji 11.2 update",
                "date": "2018-09-26T22:09:31Z"
            },
            {
                "name": "Twemoji 11.1 update",
                "date": "2018-08-10T21:02:40Z"
            },
            {
                "name": "",
                "date": "2018-08-04T00:09:32Z"
            },
            {
                "name": "Twemoji 11.0 update",
                "date": "2018-06-05T21:16:18Z"
            },
            {
                "name": "v2.7.0: Twemoji 2.7 update",
                "date": "2018-05-17T23:28:01Z"
            },
            {
                "name": "",
                "date": "2018-04-11T23:19:52Z"
            },
            {
                "name": "",
                "date": "2018-03-02T00:26:31Z"
            },
            {
                "name": "",
                "date": "2018-02-23T07:32:58Z"
            },
            {
                "name": "",
                "date": "2017-12-08T18:46:25Z"
            }
        ]
    }
}