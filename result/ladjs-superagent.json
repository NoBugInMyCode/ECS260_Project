{
    "https://api.github.com/repos/ladjs/superagent": {
        "forks": 1326,
        "watchers": 16606,
        "stars": 16606,
        "languages": {
            "JavaScript": 338649,
            "HTML": 42992,
            "Makefile": 1811,
            "Shell": 139
        },
        "commits": [
            "2024-10-18T23:44:57Z",
            "2024-10-18T23:42:34Z",
            "2024-10-18T22:26:58Z",
            "2024-08-24T20:10:08Z",
            "2024-08-24T20:06:33Z",
            "2024-08-24T19:33:12Z",
            "2024-08-15T19:09:33Z",
            "2024-08-15T19:07:43Z",
            "2024-08-13T04:29:21Z",
            "2024-08-13T04:26:12Z",
            "2024-08-06T06:58:49Z",
            "2024-08-05T10:29:38Z",
            "2024-08-05T10:26:52Z",
            "2024-08-05T10:19:06Z",
            "2024-08-05T10:18:33Z",
            "2024-08-05T10:10:42Z",
            "2024-07-18T08:36:41Z",
            "2024-06-29T00:44:35Z",
            "2024-06-29T00:23:34Z",
            "2024-04-29T16:28:46Z",
            "2024-04-29T16:23:17Z",
            "2024-04-25T20:48:35Z",
            "2024-04-26T18:11:06Z",
            "2024-04-25T21:19:06Z",
            "2024-04-25T19:00:41Z",
            "2024-04-25T18:28:05Z",
            "2024-04-23T18:23:23Z",
            "2024-04-23T18:19:48Z",
            "2024-04-23T18:19:41Z",
            "2024-04-23T18:18:42Z"
        ],
        "creation_date": "2011-04-13T02:29:45Z",
        "contributors": 30,
        "topics": [],
        "subscribers": 224,
        "readme": "# superagent\n\n[![build status](https://img.shields.io/travis/ladjs/superagent.svg)](https://travis-ci.org/ladjs/superagent)\n[![code coverage](https://img.shields.io/codecov/c/github/ladjs/superagent.svg)](https://codecov.io/gh/ladjs/superagent)\n[![code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/sindresorhus/xo)\n[![styled with prettier](https://img.shields.io/badge/styled_with-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![made with lass](https://img.shields.io/badge/made_with-lass-95CC28.svg)](https://lass.js.org)\n[![license](https://img.shields.io/github/license/ladjs/superagent.svg)](LICENSE)\n\n> Small progressive client-side HTTP request library, and Node.js module with the same API, supporting many high-level HTTP client features.  Maintained for [Forward Email](https://github.com/forwardemail) and [Lad](https://github.com/ladjs).\n\n\n## Table of Contents\n\n* [Install](#install)\n* [Usage](#usage)\n  * [Node](#node)\n  * [Browser](#browser)\n* [Supported Platforms](#supported-platforms)\n  * [Required Browser Features](#required-browser-features)\n* [Plugins](#plugins)\n* [Upgrading from previous versions](#upgrading-from-previous-versions)\n* [Contributors](#contributors)\n* [License](#license)\n\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install superagent\n```\n\n[yarn][]:\n\n```sh\nyarn add superagent\n```\n\n\n## Usage\n\n### Node\n\n```js\nconst superagent = require('superagent');\n\n// callback\nsuperagent\n  .post('/api/pet')\n  .send({ name: 'Manny', species: 'cat' }) // sends a JSON post body\n  .set('X-API-Key', 'foobar')\n  .set('accept', 'json')\n  .end((err, res) => {\n    // Calling the end function will send the request\n  });\n\n// promise with then/catch\nsuperagent.post('/api/pet').then(console.log).catch(console.error);\n\n// promise with async/await\n(async () => {\n  try {\n    const res = await superagent.post('/api/pet');\n    console.log(res);\n  } catch (err) {\n    console.error(err);\n  }\n})();\n```\n\n### Browser\n\n**The browser-ready, minified version of `superagent` is only 50 KB (minified and gzipped).**\n\nBrowser-ready versions of this module are available via [jsdelivr][], [unpkg][], and also in the `node_modules/superagent/dist` folder in downloads of the `superagent` package.\n\n> Note that we also provide unminified versions with `.js` instead of `.min.js` file extensions.\n\n#### VanillaJS\n\nThis is the solution for you if you're just using `<script>` tags everywhere!\n\n```html\n<script src=\"https://cdnjs.cloudflare.com/polyfill/v3/polyfill.min.js?features=WeakRef,BigInt\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/superagent\"></script>\n<!-- if you wish to use unpkg.com instead: -->\n<!-- <script src=\"https://unpkg.com/superagent\"></script> -->\n<script type=\"text/javascript\">\n  (function() {\n    // superagent is exposed as `window.superagent`\n    // if you wish to use \"request\" instead please\n    // uncomment the following line of code:\n    // `window.request = superagent;`\n    superagent\n      .post('/api/pet')\n      .send({ name: 'Manny', species: 'cat' }) // sends a JSON post body\n      .set('X-API-Key', 'foobar')\n      .set('accept', 'json')\n      .end(function (err, res) {\n        // Calling the end function will send the request\n      });\n  })();\n</script>\n```\n\n#### Bundler\n\nIf you are using [browserify][], [webpack][], [rollup][], or another bundler, then you can follow the same usage as [Node](#node) above.\n\n\n## Supported Platforms\n\n* Node: v14.18.0+\n* Browsers (see [.browserslistrc](.browserslistrc)):\n\n  ```sh\n  npx browserslist\n  ```\n\n  ```sh\n  and_chr 102\n  and_ff 101\n  and_qq 10.4\n  and_uc 12.12\n  android 101\n  chrome 103\n  chrome 102\n  chrome 101\n  chrome 100\n  edge 103\n  edge 102\n  edge 101\n  firefox 101\n  firefox 100\n  firefox 91\n  ios_saf 15.5\n  ios_saf 15.4\n  ios_saf 15.2-15.3\n  ios_saf 15.0-15.1\n  ios_saf 14.5-14.8\n  ios_saf 14.0-14.4\n  ios_saf 12.2-12.5\n  kaios 2.5\n  op_mini all\n  op_mob 64\n  opera 86\n  opera 85\n  safari 15.5\n  safari 15.4\n  samsung 17.0\n  samsung 16.0\n  ```\n\n### Required Browser Features\n\nWe recommend using <https://cdnjs.cloudflare.com/polyfill/> (specifically with the bundle mentioned in [VanillaJS](#vanillajs) above):\n\n```html\n<script src=\"https://cdnjs.cloudflare.com/polyfill/v3/polyfill.min.js?features=WeakRef,BigInt\"></script>\n```\n\n* WeakRef is not supported in Opera 85, iOS Safari 12.2-12.5\n* BigInt is not supported in iOS Safari 12.2-12.5\n\n\n## Plugins\n\nSuperAgent is easily extended via plugins.\n\n```js\nconst nocache = require('superagent-no-cache');\nconst superagent = require('superagent');\nconst prefix = require('superagent-prefix')('/static');\n\nsuperagent\n  .get('/some-url')\n  .query({ action: 'edit', city: 'London' }) // query string\n  .use(prefix) // Prefixes *only* this request\n  .use(nocache) // Prevents caching of *only* this request\n  .end((err, res) => {\n    // Do something\n  });\n```\n\nExisting plugins:\n\n* [superagent-no-cache](https://github.com/johntron/superagent-no-cache) - prevents caching by including Cache-Control header\n* [superagent-prefix](https://github.com/johntron/superagent-prefix) - prefixes absolute URLs (useful in test environment)\n* [superagent-suffix](https://github.com/timneutkens1/superagent-suffix) - suffix URLs with a given path\n* [superagent-mock](https://github.com/M6Web/superagent-mock) - simulate HTTP calls by returning data fixtures based on the requested URL\n* [superagent-mocker](https://github.com/shuvalov-anton/superagent-mocker) \u2014 simulate REST API\n* [superagent-cache](https://github.com/jpodwys/superagent-cache) - A global SuperAgent patch with built-in, flexible caching\n* [superagent-cache-plugin](https://github.com/jpodwys/superagent-cache-plugin) - A SuperAgent plugin with built-in, flexible caching\n* [superagent-jsonapify](https://github.com/alex94puchades/superagent-jsonapify) - A lightweight [json-api](http://jsonapi.org/format/) client addon for superagent\n* [superagent-serializer](https://github.com/zzarcon/superagent-serializer) - Converts server payload into different cases\n* [superagent-httpbackend](https://www.npmjs.com/package/superagent-httpbackend) - stub out requests using AngularJS' $httpBackend syntax\n* [superagent-throttle](https://github.com/leviwheatcroft/superagent-throttle) - queues and intelligently throttles requests\n* [superagent-charset](https://github.com/magicdawn/superagent-charset) - add charset support for node's SuperAgent\n* [superagent-verbose-errors](https://github.com/jcoreio/superagent-verbose-errors) - include response body in error messages for failed requests\n* [superagent-declare](https://github.com/damoclark/superagent-declare) - A simple [declarative](https://en.wikipedia.org/wiki/Declarative_programming) API for SuperAgent\n* [superagent-node-http-timings](https://github.com/webuniverseio/superagent-node-http-timings) - measure http timings in node.js\n* [superagent-cheerio](https://github.com/mmmmmrob/superagent-cheerio) - add [cheerio](https://www.npmjs.com/package/cheerio) to your response content automatically. Adds `res.$` for HTML and XML response bodies.\n* [@certible/superagent-aws-sign](https://github.com/certible/superagent-aws-sign) - Sign AWS endpoint requests, it uses the aws4 to authenticate the SuperAgent requests\n\nPlease prefix your plugin with `superagent-*` so that it can easily be found by others.\n\nFor SuperAgent extensions such as couchdb and oauth visit the [wiki](https://github.com/ladjs/superagent/wiki).\n\n\n## Upgrading from previous versions\n\nPlease see [GitHub releases page](https://github.com/ladjs/superagent/releases) for the current changelog.\n\nOur breaking changes are mostly in rarely used functionality and from stricter error handling.\n\n* [6.0 to 6.1](https://github.com/ladjs/superagent/releases/tag/v6.1.0)\n  * Browser behaviour changed to match Node when serializing `application/x-www-form-urlencoded`, using `arrayFormat: 'indices'` semantics of `qs` library. (See: <https://www.npmjs.com/package/qs#stringifying>)\n* [5.x to 6.x](https://github.com/ladjs/superagent/releases/tag/v6.0.0):\n  * Retry behavior is still opt-in, however we now have a more fine-grained list of status codes and error codes that we retry against (see updated docs)\n  * A specific issue with Content-Type matching not being case-insensitive is fixed\n  * Set is now required for IE 9, see [Required Browser Features](#required-browser-features) for more insight\n* [4.x to 5.x](https://github.com/ladjs/superagent/releases/tag/v5.0.0):\n  * We've implemented the build setup of [Lass](https://lass.js.org) to simplify our stack and linting\n  * Unminified browserified build size has been reduced from 48KB to 20KB (via `tinyify` and the latest version of Babel using `@babel/preset-env` and `.browserslistrc`)\n  * Linting support has been added using `caniuse-lite` and `eslint-plugin-compat`\n  * We can now target what versions of Node we wish to support more easily using `.babelrc`\n* [3.x to 4.x](https://github.com/ladjs/superagent/releases/tag/v4.0.0-alpha.1):\n  * Ensure you're running Node 6 or later. We've dropped support for Node 4.\n  * We've started using ES6 and for compatibility with Internet Explorer you may need to use Babel.\n  * We suggest migrating from `.end()` callbacks to `.then()` or `await`.\n* [2.x to 3.x](https://github.com/ladjs/superagent/releases/tag/v3.0.0):\n  * Ensure you're running Node 4 or later. We've dropped support for Node 0.x.\n  * Test code that calls `.send()` multiple times. Invalid calls to `.send()` will now throw instead of sending garbage.\n* [1.x to 2.x](https://github.com/ladjs/superagent/releases/tag/v2.0.0):\n  * If you use `.parse()` in the *browser* version, rename it to `.serialize()`.\n  * If you rely on `undefined` in query-string values being sent literally as the text \"undefined\", switch to checking for missing value instead. `?key=undefined` is now `?key` (without a value).\n  * If you use `.then()` in Internet Explorer, ensure that you have a polyfill that adds a global `Promise` object.\n* 0.x to 1.x:\n  * Instead of 1-argument callback `.end(function(res){})` use `.then(res => {})`.\n\n\n## Contributors\n\n| Name                |\n| ------------------- |\n| **Kornel Lesi\u0144ski** |\n| **Peter Lyons**     |\n| **Hunter Loftis**   |\n| **Nick Baugh**      |\n\n\n## License\n\n[MIT](LICENSE) \u00a9 TJ Holowaychuk\n\n\n##\n\n[npm]: https://www.npmjs.com/\n\n[yarn]: https://yarnpkg.com/\n\n[jsdelivr]: https://www.jsdelivr.com/\n\n[unpkg]: https://unpkg.com/\n\n[browserify]: https://github.com/browserify/browserify\n\n[webpack]: https://github.com/webpack/webpack\n\n[rollup]: https://github.com/rollup/rollup\n",
        "releases": [
            {
                "name": "",
                "date": "2024-10-18T23:46:42Z"
            },
            {
                "name": "",
                "date": "2024-08-24T20:13:24Z"
            },
            {
                "name": "",
                "date": "2024-08-15T19:15:41Z"
            },
            {
                "name": "",
                "date": "2024-08-13T04:31:05Z"
            },
            {
                "name": "",
                "date": "2024-08-05T10:34:09Z"
            },
            {
                "name": "",
                "date": "2024-04-29T16:30:34Z"
            },
            {
                "name": "",
                "date": "2024-04-23T18:33:49Z"
            },
            {
                "name": "",
                "date": "2024-04-23T17:26:13Z"
            },
            {
                "name": "",
                "date": "2023-08-15T22:34:29Z"
            },
            {
                "name": "",
                "date": "2023-08-15T15:39:43Z"
            },
            {
                "name": "",
                "date": "2023-08-15T01:31:39Z"
            },
            {
                "name": "",
                "date": "2023-01-25T22:44:14Z"
            },
            {
                "name": "",
                "date": "2023-01-18T16:55:20Z"
            },
            {
                "name": "",
                "date": "2023-01-18T16:45:27Z"
            },
            {
                "name": "",
                "date": "2022-12-07T23:25:41Z"
            },
            {
                "name": "",
                "date": "2022-12-02T21:37:55Z"
            },
            {
                "name": "",
                "date": "2022-11-25T18:50:20Z"
            },
            {
                "name": "",
                "date": "2022-10-24T19:50:30Z"
            },
            {
                "name": "",
                "date": "2022-10-03T06:01:12Z"
            },
            {
                "name": "",
                "date": "2022-09-29T19:45:52Z"
            },
            {
                "name": "",
                "date": "2022-06-24T05:53:19Z"
            },
            {
                "name": "DEPRECATED (use v7.1.5 or v8.0.0+ instead)",
                "date": "2022-06-01T04:56:18Z"
            },
            {
                "name": "",
                "date": "2022-06-01T03:21:36Z"
            },
            {
                "name": "",
                "date": "2022-05-31T19:37:01Z"
            },
            {
                "name": "",
                "date": "2022-04-26T23:31:54Z"
            },
            {
                "name": "",
                "date": "2022-01-19T17:01:26Z"
            },
            {
                "name": "",
                "date": "2022-01-11T22:24:04Z"
            },
            {
                "name": "",
                "date": "2022-01-07T17:36:10Z"
            },
            {
                "name": "",
                "date": "2022-01-07T02:32:36Z"
            },
            {
                "name": "",
                "date": "2020-08-30T19:25:23Z"
            },
            {
                "name": "",
                "date": "2020-08-08T23:55:57Z"
            },
            {
                "name": "",
                "date": "2020-06-28T06:18:10Z"
            },
            {
                "name": "",
                "date": "2020-06-28T03:42:11Z"
            },
            {
                "name": "",
                "date": "2020-02-17T20:35:45Z"
            },
            {
                "name": "",
                "date": "2020-01-07T10:15:22Z"
            },
            {
                "name": "",
                "date": "2020-01-07T09:33:11Z"
            },
            {
                "name": "",
                "date": "2020-01-07T09:22:40Z"
            },
            {
                "name": "",
                "date": "2019-12-20T19:35:23Z"
            },
            {
                "name": "",
                "date": "2019-12-01T18:45:52Z"
            },
            {
                "name": "",
                "date": "2019-06-15T18:27:24Z"
            },
            {
                "name": "",
                "date": "2019-06-14T20:47:44Z"
            },
            {
                "name": "",
                "date": "2019-06-12T19:46:53Z"
            },
            {
                "name": "",
                "date": "2019-06-11T18:04:22Z"
            },
            {
                "name": "",
                "date": "2019-06-06T06:05:25Z"
            },
            {
                "name": "",
                "date": "2019-04-29T20:04:37Z"
            },
            {
                "name": "",
                "date": "2019-04-28T04:31:59Z"
            },
            {
                "name": "",
                "date": "2019-04-25T20:45:47Z"
            },
            {
                "name": "",
                "date": "2019-03-28T17:41:54Z"
            },
            {
                "name": "",
                "date": "2019-03-28T17:19:19Z"
            },
            {
                "name": "",
                "date": "2019-03-28T07:36:44Z"
            },
            {
                "name": "IP overrides",
                "date": "2018-12-26T20:03:12Z"
            },
            {
                "name": "v4 = ES6 natively",
                "date": "2018-11-17T15:19:48Z"
            },
            {
                "name": "",
                "date": "2018-07-25T15:53:39Z"
            },
            {
                "name": "",
                "date": "2018-04-29T16:28:36Z"
            },
            {
                "name": "",
                "date": "2018-04-29T16:27:53Z"
            },
            {
                "name": "",
                "date": "2018-04-29T16:27:34Z"
            },
            {
                "name": "",
                "date": "2018-04-29T16:27:45Z"
            },
            {
                "name": "",
                "date": "2017-11-08T22:51:28Z"
            },
            {
                "name": "",
                "date": "2017-10-19T14:09:05Z"
            },
            {
                "name": "",
                "date": "2017-10-02T08:27:07Z"
            },
            {
                "name": "",
                "date": "2017-08-20T17:16:33Z"
            },
            {
                "name": "",
                "date": "2017-03-18T22:24:55Z"
            },
            {
                "name": "",
                "date": "2017-03-11T10:19:36Z"
            },
            {
                "name": "",
                "date": "2017-03-11T10:19:58Z"
            },
            {
                "name": "",
                "date": "2017-02-14T18:11:37Z"
            },
            {
                "name": "",
                "date": "2017-01-29T00:40:34Z"
            },
            {
                "name": "",
                "date": "2017-01-25T23:18:45Z"
            },
            {
                "name": "",
                "date": "2017-03-11T10:20:22Z"
            },
            {
                "name": "",
                "date": "2016-12-14T14:59:13Z"
            },
            {
                "name": "",
                "date": "2016-12-11T22:20:49Z"
            },
            {
                "name": "",
                "date": "2016-11-28T15:02:12Z"
            },
            {
                "name": "",
                "date": "2016-11-23T18:50:26Z"
            },
            {
                "name": "",
                "date": "2016-11-15T23:35:51Z"
            },
            {
                "name": "",
                "date": "2016-11-08T00:53:06Z"
            },
            {
                "name": "",
                "date": "2016-10-30T23:04:09Z"
            },
            {
                "name": "",
                "date": "2016-09-20T16:54:25Z"
            },
            {
                "name": "",
                "date": "2016-08-13T14:55:02Z"
            },
            {
                "name": "",
                "date": "2016-07-15T16:06:15Z"
            },
            {
                "name": "",
                "date": "2016-06-11T16:16:21Z"
            },
            {
                "name": "",
                "date": "2016-06-11T16:16:44Z"
            },
            {
                "name": "",
                "date": "2016-03-26T21:59:23Z"
            },
            {
                "name": "",
                "date": "2016-03-21T15:58:46Z"
            },
            {
                "name": "",
                "date": "2016-03-09T19:10:21Z"
            },
            {
                "name": "",
                "date": "2016-02-27T18:41:45Z"
            },
            {
                "name": "",
                "date": "2016-01-26T16:06:04Z"
            },
            {
                "name": "",
                "date": "2016-01-21T15:21:59Z"
            },
            {
                "name": "",
                "date": "2016-01-19T14:15:05Z"
            },
            {
                "name": "v1.6.1",
                "date": "2015-12-16T00:26:30Z"
            },
            {
                "name": "v1.6.0",
                "date": "2015-12-16T00:20:47Z"
            },
            {
                "name": "",
                "date": "2015-12-03T16:45:54Z"
            },
            {
                "name": "",
                "date": "2015-12-03T16:46:11Z"
            },
            {
                "name": "",
                "date": "2015-12-03T16:46:26Z"
            },
            {
                "name": "",
                "date": "2015-12-03T16:46:42Z"
            },
            {
                "name": "",
                "date": "2015-12-03T16:46:59Z"
            }
        ]
    }
}