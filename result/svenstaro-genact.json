{
    "https://api.github.com/repos/svenstaro/genact": {
        "forks": 428,
        "watchers": 9940,
        "stars": 9940,
        "languages": {
            "Rust": 104924,
            "HTML": 1189,
            "Makefile": 740,
            "CSS": 170,
            "Dockerfile": 70
        },
        "commits": [
            "2025-01-03T04:01:59Z",
            "2025-01-01T05:37:51Z",
            "2024-12-01T14:31:02Z",
            "2024-12-01T05:23:55Z",
            "2024-11-01T06:29:30Z",
            "2024-11-01T05:22:57Z",
            "2024-10-21T21:42:18Z",
            "2024-10-21T07:50:52Z",
            "2024-10-02T03:05:36Z",
            "2024-10-02T03:05:07Z",
            "2024-10-02T02:53:58Z",
            "2024-08-02T17:51:02Z",
            "2024-08-01T05:34:21Z",
            "2024-07-03T12:43:10Z",
            "2024-07-01T05:27:11Z",
            "2024-06-02T16:19:43Z",
            "2024-06-02T15:54:48Z",
            "2024-06-02T15:38:29Z",
            "2024-06-02T13:49:01Z",
            "2024-06-02T13:35:24Z",
            "2024-06-02T13:29:15Z",
            "2024-06-02T13:27:30Z",
            "2024-04-18T11:02:13Z",
            "2024-03-28T15:32:45Z",
            "2024-03-28T15:32:19Z",
            "2024-03-28T15:31:15Z",
            "2024-03-28T00:37:13Z",
            "2024-03-14T04:31:53Z",
            "2024-03-11T14:13:53Z",
            "2024-03-11T04:54:30Z"
        ],
        "creation_date": "2011-02-09T08:11:05Z",
        "contributors": 30,
        "topics": [
            "cli",
            "fake",
            "hacktoberfest",
            "nonsense",
            "useless",
            "wasm",
            "webassembly"
        ],
        "subscribers": 84,
        "readme": "# genact - a nonsense activity generator\n\n[![CI](https://github.com/svenstaro/genact/workflows/CI/badge.svg)](https://github.com/svenstaro/genact/actions)\n[![Docker Hub](https://img.shields.io/docker/pulls/svenstaro/genact)](https://cloud.docker.com/repository/docker/svenstaro/genact/)\n[![Crates.io](https://img.shields.io/crates/v/genact.svg)](https://crates.io/crates/genact)\n[![license](http://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/svenstaro/genact/blob/master/LICENSE)\n[![Stars](https://img.shields.io/github/stars/svenstaro/genact.svg)](https://github.com/svenstaro/genact/stargazers)\n[![Downloads](https://img.shields.io/github/downloads/svenstaro/genact/total.svg)](https://github.com/svenstaro/genact/releases)\n\n**Pretend to be busy or waiting for your computer when you should actually be doing real work!** Impress people with your insane multitasking skills. Just open a few instances of `genact` and watch the show. `genact` has multiple scenes that pretend to be doing something exciting or useful when in reality nothing is happening at all.\n\n![](gifs/cc.gif)\n![](gifs/memdump.gif)\n![](gifs/cargo.gif)\n\n## Installation\n\n<a href=\"https://repology.org/project/genact/versions\"><img align=\"right\" src=\"https://repology.org/badge/vertical-allrepos/genact.svg\" alt=\"Packaging status\"></a>\n\nYou don't have to install anything! For your convenience, prebuilt binaries for Linux, OSX and Windows are provided [here](https://github.com/svenstaro/genact/releases) that should run without any dependencies. **Additionally, there is a web version at https://svenstaro.github.io/genact/**\n\nIt's compatible with FreeBSD, Linux, macOS, Windows, and most modern web browsers that support WebAssembly.\n\n**On FreeBSD**: You don't have to do anything special here. Just run\n\n    pkg install genact\n    genact\n\n**On Linux**: Download `genact-linux` from [the releases page](https://github.com/svenstaro/genact/releases) and run\n\n    chmod +x genact-linux\n    ./genact-linux\n\n**On macOS**: Download `genact-osx` from [the releases page](https://github.com/svenstaro/genact/releases) and run\n\n    chmod +x genact-osx\n    ./genact-osx\n\nA homebrew package is also available. To install it this way, run\n\n    brew install genact\n\nOn macOS, you can also install via MacPorts:\n\n    sudo port install genact\n\n**On Windows**: Download `genact-win.exe` from [the releases page](https://github.com/svenstaro/genact/releases) and double click it.\n\nIt is also available on Scoop:\n\n    scoop install genact\n\n**With Cargo**: If you have a somewhat recent version of Rust and Cargo installed, you can run\n\n    cargo install genact\n    genact\n\n## Running\n\nTo see a list of all available options, you can run\n\n    ./genact -h\n\nor\n\n    cargo run -- -h\n\nor (on Docker)\n\n    docker run -it --rm svenstaro/genact -h\n\n### Usage\n\n    A nonsense activity generator\n\n    Usage: genact [OPTIONS]\n\n    Options:\n      -l, --list-modules                               List available modules\n      -m, --modules <MODULES>                          Run only these modules [possible values: ansible, bootlog, botnet, bruteforce, cargo, cc,\n                                                       composer, cryptomining, docker_build, docker_image_rm, download, julia, kernel_compile, memdump,\n                                                       mkinitcpio, rkhunter, simcity, terraform, weblog]\n      -s, --speed-factor <SPEED_FACTOR>                Global speed factor [default: 1]\n      -i, --instant-print-lines <INSTANT_PRINT_LINES>  Instantly print this many lines [default: 0]\n          --exit-after-time <EXIT_AFTER_TIME>          Exit after running for this long (format example: 2h10min)\n          --exit-after-modules <EXIT_AFTER_MODULES>    Exit after running this many modules\n          --print-completions <shell>                  Generate completion file for a shell [possible values: bash, elvish, fish, powershell, zsh]\n          --print-manpage                              Generate man page\n      -h, --help                                       Print help\n      -V, --version                                    Print version\n\n### Web usage\n\nIn the web version, you can run specific modules by providing them as `?module`\nparameters like this: https://svenstaro.github.io/genact?module=cc&module=memdump\n\nYou can also provide a `?speed-factor` like this:\nhttps://svenstaro.github.io/genact?speed-factor=5\n\n## Building\n\nYou should have a recent version of rust and cargo installed.\n\nThen, just clone it like usual and `cargo run` to get output:\n\n    git clone https://github.com/svenstaro/genact.git\n    cd genact\n    cargo run --release\n\n## Releasing\n\nThis is mostly a note for me on how to release this thing:\n\n- Make sure `CHANGELOG.md` is up to date.\n- `cargo release <version>`\n- `cargo release --execute <version>`\n- Releases will automatically be deployed by GitHub Actions.\n- Update Arch package.\n",
        "releases": [
            {
                "name": "",
                "date": "2024-02-17T22:15:39Z"
            },
            {
                "name": "",
                "date": "2024-02-17T21:41:16Z"
            },
            {
                "name": "",
                "date": "2024-02-16T03:38:10Z"
            },
            {
                "name": "",
                "date": "2023-12-10T15:49:35Z"
            },
            {
                "name": "",
                "date": "2022-10-10T05:17:12Z"
            },
            {
                "name": "",
                "date": "2022-10-10T04:18:42Z"
            },
            {
                "name": "",
                "date": "2022-10-09T02:57:05Z"
            },
            {
                "name": "",
                "date": "2022-09-13T10:41:08Z"
            },
            {
                "name": "",
                "date": "2022-09-13T02:57:54Z"
            },
            {
                "name": "",
                "date": "2022-09-10T04:20:12Z"
            },
            {
                "name": "",
                "date": "2022-09-09T23:26:14Z"
            },
            {
                "name": "",
                "date": "2022-09-07T09:39:13Z"
            },
            {
                "name": "",
                "date": "2022-02-21T04:47:10Z"
            },
            {
                "name": "",
                "date": "2021-03-19T07:55:09Z"
            },
            {
                "name": null,
                "date": "2020-08-27T03:44:43Z"
            },
            {
                "name": null,
                "date": "2020-08-10T06:41:05Z"
            },
            {
                "name": null,
                "date": "2019-04-22T23:09:50Z"
            },
            {
                "name": null,
                "date": "2018-06-09T05:09:47Z"
            },
            {
                "name": null,
                "date": "2018-05-20T22:07:58Z"
            },
            {
                "name": null,
                "date": "2018-02-03T05:09:02Z"
            },
            {
                "name": null,
                "date": "2018-01-21T19:07:58Z"
            },
            {
                "name": null,
                "date": "2018-01-21T17:42:45Z"
            },
            {
                "name": null,
                "date": "2018-01-21T13:53:55Z"
            },
            {
                "name": null,
                "date": "2018-01-17T11:41:53Z"
            },
            {
                "name": null,
                "date": "2018-01-17T10:11:16Z"
            }
        ]
    }
}