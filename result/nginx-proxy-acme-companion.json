{
    "https://api.github.com/repos/nginx-proxy/acme-companion": {
        "forks": 822,
        "watchers": 7468,
        "stars": 7468,
        "languages": {
            "Shell": 172090,
            "Dockerfile": 993
        },
        "commits": [
            "2025-01-19T22:03:26Z",
            "2025-01-19T20:34:12Z",
            "2025-01-19T09:30:26Z",
            "2025-01-09T19:45:17Z",
            "2025-01-09T17:31:11Z",
            "2025-01-08T06:22:11Z",
            "2025-01-07T15:17:00Z",
            "2024-12-09T23:44:30Z",
            "2024-12-09T19:51:33Z",
            "2024-12-06T22:30:51Z",
            "2024-12-06T15:56:38Z",
            "2024-11-25T17:00:36Z",
            "2024-11-25T15:59:10Z",
            "2024-11-24T19:19:30Z",
            "2024-11-23T16:59:51Z",
            "2024-11-23T10:49:53Z",
            "2024-11-23T10:45:48Z",
            "2024-11-23T10:39:03Z",
            "2024-11-04T07:26:47Z",
            "2024-11-04T07:19:44Z",
            "2024-10-28T07:58:53Z",
            "2024-10-28T07:36:12Z",
            "2024-10-12T17:07:26Z",
            "2024-09-27T13:32:36Z",
            "2024-09-24T16:16:21Z",
            "2024-09-24T14:18:26Z",
            "2024-09-19T23:00:46Z",
            "2024-09-11T02:02:17Z",
            "2024-09-09T19:32:23Z",
            "2024-09-09T15:57:04Z"
        ],
        "creation_date": "2015-12-31T17:50:05Z",
        "contributors": 30,
        "topics": [
            "acme",
            "acme-protocol",
            "acme-v2",
            "buypass",
            "docker",
            "letsencrypt",
            "nginx-proxy",
            "ssl",
            "zerossl"
        ],
        "subscribers": 99,
        "readme": "[![Tests](https://github.com/nginx-proxy/acme-companion/actions/workflows/test.yml/badge.svg)](https://github.com/nginx-proxy/acme-companion/actions/workflows/test.yml)\r\n[![GitHub release](https://img.shields.io/github/release/nginx-proxy/acme-companion.svg)](https://github.com/nginx-proxy/acme-companion/releases)\r\n[![Docker Image Size](https://img.shields.io/docker/image-size/nginxproxy/acme-companion?sort=semver)](https://hub.docker.com/r/nginxproxy/acme-companion \"Click to view the image on Docker Hub\")\r\n[![Docker stars](https://img.shields.io/docker/stars/nginxproxy/acme-companion.svg)](https://hub.docker.com/r/nginxproxy/acme-companion \"Click to view the image on Docker Hub\")\r\n[![Docker pulls](https://img.shields.io/docker/pulls/nginxproxy/acme-companion.svg)](https://hub.docker.com/r/nginxproxy/acme-companion \"Click to view the image on Docker Hub\")\r\n\r\n**acme-companion** is a lightweight companion container for [**nginx-proxy**](https://github.com/nginx-proxy/nginx-proxy).\r\n\r\nIt handles the automated creation, renewal and use of SSL certificates for proxied Docker containers through the ACME protocol.\r\n\r\n### Features:\r\n* Automated creation/renewal of Let's Encrypt (or other ACME CAs) certificates using [**acme.sh**](https://github.com/acmesh-official/acme.sh).\r\n* Let's Encrypt / ACME domain validation through `HTTP-01` (by default) or [`DNS-01`](https://github.com/nginx-proxy/acme-companion/blob/main/docs/Let's-Encrypt-and-ACME.md#dns-01-acme-challenge) challenge.\r\n* Automated update and reload of nginx config on certificate creation/renewal.\r\n* Support creation of [Multi-Domain (SAN) Certificates](https://github.com/nginx-proxy/acme-companion/blob/main/docs/Let's-Encrypt-and-ACME.md#multi-domains-certificates).\r\n* Support creation of [Wildcard Certificates](https://community.letsencrypt.org/t/acme-v2-production-environment-wildcards/55578) (with `DNS-01` challenge only).\r\n* Creation of a strong [RFC7919 Diffie-Hellman Group](https://datatracker.ietf.org/doc/html/rfc7919#appendix-A) at startup.\r\n* Work with all versions of docker.\r\n\r\n### HTTP-01 challenge requirements:\r\n* Your host **must** be publicly reachable on **both** port [`80`](https://letsencrypt.org/docs/allow-port-80/) and [`443`](https://github.com/nginx-proxy/acme-companion/discussions/873#discussioncomment-1410225).\r\n* Check your firewall rules and [**do not attempt to block port `80`**](https://letsencrypt.org/docs/allow-port-80/) as that will prevent `HTTP-01` challenges from completing.\r\n* For the same reason, you can't use nginx-proxy's [`HTTPS_METHOD=nohttp`](https://github.com/nginx-proxy/nginx-proxy#how-ssl-support-works).\r\n* The (sub)domains you want to issue certificates for must correctly resolve to the host.\r\n* If your (sub)domains have AAAA records set, the host must be publicly reachable over IPv6 on port `80` and `443`.\r\n\r\nIf you can't meet these requirements, you can use the `DNS-01` challenge instead. Please refer to the [documentation](https://github.com/nginx-proxy/acme-companion/blob/main/docs/Let's-Encrypt-and-ACME.md#dns-01-acme-challenge) for more information.\r\n\r\nIn addition to the above, please ensure that your DNS provider answers correctly to CAA record requests. [If your DNS provider answer with an error, Let's Encrypt won't issue a certificate for your domain](https://letsencrypt.org/docs/caa/). Let's Encrypt do not require that you set a CAA record on your domain, just that your DNS provider answers correctly.\r\n\r\n![schema](https://github.com/nginx-proxy/acme-companion/blob/main/schema.png)\r\n\r\n## Basic usage (with the nginx-proxy container)\r\n\r\nTwo writable volumes must be declared on the **nginx-proxy** container so that they can be shared with the **acme-companion** container:\r\n\r\n* `/etc/nginx/certs` to store certificates and private keys (readonly for the **nginx-proxy** container).\r\n* `/usr/share/nginx/html` to write `http-01` challenge files.\r\n\r\nAdditionally, a third volume must be declared on the **acme-companion** container to store `acme.sh` configuration and state: `/etc/acme.sh`.\r\n\r\nPlease also read the doc about [data persistence](./docs/Persistent-data.md).\r\n\r\nExample of use:\r\n\r\n### Step 1 - nginx-proxy\r\n\r\nStart **nginx-proxy** with the two additional volumes declared:\r\n\r\n```shell\r\n$ docker run --detach \\\r\n    --name nginx-proxy \\\r\n    --publish 80:80 \\\r\n    --publish 443:443 \\\r\n    --volume certs:/etc/nginx/certs \\\r\n    --volume html:/usr/share/nginx/html \\\r\n    --volume /var/run/docker.sock:/tmp/docker.sock:ro \\\r\n    nginxproxy/nginx-proxy\r\n```\r\n\r\nBinding the host docker socket (`/var/run/docker.sock`) inside the container to `/tmp/docker.sock` is a requirement of **nginx-proxy**.\r\n\r\n### Step 2 - acme-companion\r\n\r\nStart the **acme-companion** container, getting the volumes from **nginx-proxy** with `--volumes-from`:\r\n\r\n```shell\r\n$ docker run --detach \\\r\n    --name nginx-proxy-acme \\\r\n    --volumes-from nginx-proxy \\\r\n    --volume /var/run/docker.sock:/var/run/docker.sock:ro \\\r\n    --volume acme:/etc/acme.sh \\\r\n    --env \"DEFAULT_EMAIL=mail@yourdomain.tld\" \\\r\n    nginxproxy/acme-companion\r\n```\r\n\r\nThe host docker socket has to be bound inside this container too, this time to `/var/run/docker.sock`.\r\n\r\nAlbeit **optional**, it is **recommended** to provide a valid default email address through the `DEFAULT_EMAIL` environment variable, so that Let's Encrypt can warn you about expiring certificates and allow you to recover your account.\r\n\r\n### Step 3 - proxied container(s)\r\n\r\nOnce both **nginx-proxy** and **acme-companion** containers are up and running, start any container you want proxied with environment variables `VIRTUAL_HOST` and `LETSENCRYPT_HOST` both set to the domain(s) your proxied container is going to use.\r\n\r\n[`VIRTUAL_HOST`](https://github.com/nginx-proxy/nginx-proxy#usage) control proxying by **nginx-proxy** and `LETSENCRYPT_HOST` control certificate creation and SSL enabling by **acme-companion**.\r\n\r\nCertificates will only be issued for containers that have both `VIRTUAL_HOST` and `LETSENCRYPT_HOST` variables set to domain(s) that correctly resolve to the host, provided the host is publicly reachable.\r\n\r\n```shell\r\n$ docker run --detach \\\r\n    --name your-proxied-app \\\r\n    --env \"VIRTUAL_HOST=subdomain.yourdomain.tld\" \\\r\n    --env \"LETSENCRYPT_HOST=subdomain.yourdomain.tld\" \\\r\n    nginx\r\n```\r\n\r\nThe containers being proxied must expose the port to be proxied, either by using the `EXPOSE` directive in their Dockerfile or by using the `--expose` flag to `docker run` or `docker create`.\r\n\r\nIf the proxied container listen on and expose another port than the default `80`, you can force **nginx-proxy** to use this port with the [`VIRTUAL_PORT`](https://github.com/nginx-proxy/nginx-proxy#multiple-ports) environment variable.\r\n\r\nExample using [Grafana](https://hub.docker.com/r/grafana/grafana/) (expose and listen on port 3000):\r\n\r\n```shell\r\n$ docker run --detach \\\r\n    --name grafana \\\r\n    --env \"VIRTUAL_HOST=othersubdomain.yourdomain.tld\" \\\r\n    --env \"VIRTUAL_PORT=3000\" \\\r\n    --env \"LETSENCRYPT_HOST=othersubdomain.yourdomain.tld\" \\\r\n    --env \"LETSENCRYPT_EMAIL=mail@yourdomain.tld\" \\\r\n    grafana/grafana\r\n```\r\n\r\nRepeat [Step 3](#step-3---proxied-containers) for any other container you want to proxy.\r\n\r\n## Additional documentation\r\n\r\nPlease check the [docs section](https://github.com/nginx-proxy/acme-companion/tree/main/docs).\r\n",
        "releases": [
            {
                "name": "v2.5.2",
                "date": "2025-01-19T09:34:58Z"
            },
            {
                "name": "v2.5.1",
                "date": "2024-11-24T19:22:41Z"
            },
            {
                "name": "v2.5.0",
                "date": "2024-09-24T16:27:10Z"
            },
            {
                "name": "v2.4.0",
                "date": "2024-06-06T12:27:35Z"
            },
            {
                "name": "v2.3.0",
                "date": "2024-05-04T20:02:17Z"
            },
            {
                "name": "v2.2.10",
                "date": "2024-01-14T12:22:12Z"
            },
            {
                "name": "v2.2.9",
                "date": "2023-12-10T18:09:17Z"
            },
            {
                "name": "v2.2.8",
                "date": "2023-04-18T06:04:53Z"
            },
            {
                "name": "v2.2.7",
                "date": "2023-03-21T06:30:31Z"
            },
            {
                "name": "v2.2.6",
                "date": "2023-02-28T07:41:15Z"
            },
            {
                "name": "v2.2.5",
                "date": "2023-02-09T07:33:30Z"
            },
            {
                "name": "v2.2.4",
                "date": "2023-01-17T07:49:16Z"
            },
            {
                "name": "v2.2.3",
                "date": "2022-12-23T18:37:31Z"
            },
            {
                "name": "v2.2.2",
                "date": "2022-12-02T15:55:10Z"
            },
            {
                "name": "v2.2.1",
                "date": "2022-04-12T16:33:26Z"
            },
            {
                "name": "v2.2.0",
                "date": "2022-03-04T22:09:20Z"
            },
            {
                "name": "v2.1.3",
                "date": "2022-02-02T14:38:35Z"
            },
            {
                "name": "v2.1.2",
                "date": "2021-12-15T16:25:44Z"
            },
            {
                "name": "v2.1.1",
                "date": "2021-12-08T15:28:44Z"
            },
            {
                "name": "v2.1.0",
                "date": "2021-04-05T20:49:39Z"
            },
            {
                "name": "v2.0.2",
                "date": "2020-12-25T10:08:43Z"
            },
            {
                "name": "v2.0.1",
                "date": "2020-12-08T23:23:17Z"
            },
            {
                "name": "v2.0.0",
                "date": "2020-11-30T14:54:18Z"
            },
            {
                "name": "v1.13.1",
                "date": "2020-10-20T08:41:31Z"
            },
            {
                "name": "v1.13",
                "date": "2020-06-10T15:05:08Z"
            },
            {
                "name": "v1.12.1 (Stable)",
                "date": "2020-03-09T20:43:27Z"
            },
            {
                "name": "v1.12",
                "date": "2019-10-16T12:51:45Z"
            },
            {
                "name": "v1.12-rc.1",
                "date": "2019-10-08T20:32:27Z"
            },
            {
                "name": "v1.11.2",
                "date": "2019-06-19T22:27:15Z"
            },
            {
                "name": "v1.11.1",
                "date": "2019-05-17T16:09:31Z"
            },
            {
                "name": "v1.11",
                "date": "2019-05-15T11:11:31Z"
            },
            {
                "name": "v1.10",
                "date": "2019-01-08T23:58:09Z"
            },
            {
                "name": "v1.9.1",
                "date": "2018-09-30T15:58:11Z"
            },
            {
                "name": "v1.9",
                "date": "2018-08-12T13:22:23Z"
            },
            {
                "name": "v1.8.1",
                "date": "2018-03-23T08:29:55Z"
            },
            {
                "name": "v1.8",
                "date": "2018-03-17T16:09:16Z"
            },
            {
                "name": "v1.7",
                "date": "2018-01-01T10:46:07Z"
            },
            {
                "name": "v1.6",
                "date": "2017-11-20T11:06:17Z"
            },
            {
                "name": "",
                "date": "2016-02-01T07:34:10Z"
            }
        ]
    }
}