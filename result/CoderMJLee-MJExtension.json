{
    "https://api.github.com/repos/CoderMJLee/MJExtension": {
        "forks": 2157,
        "watchers": 8525,
        "stars": 8525,
        "languages": {
            "Objective-C": 109732,
            "Swift": 11369,
            "Ruby": 764
        },
        "commits": [
            "2024-03-13T03:19:43Z",
            "2021-12-06T06:52:09Z",
            "2021-12-06T06:50:40Z",
            "2021-11-26T02:30:10Z",
            "2021-09-22T02:48:12Z",
            "2021-09-17T10:29:37Z",
            "2021-09-14T04:17:11Z",
            "2021-09-14T04:14:49Z",
            "2021-09-14T04:04:26Z",
            "2021-09-14T03:22:48Z",
            "2021-09-14T03:12:19Z",
            "2021-09-13T09:15:37Z",
            "2021-09-09T10:01:15Z",
            "2021-09-09T02:55:11Z",
            "2021-09-09T02:52:02Z",
            "2021-09-08T10:27:40Z",
            "2021-08-31T07:50:15Z",
            "2021-08-31T07:46:24Z",
            "2021-06-16T02:16:06Z",
            "2021-03-22T07:13:25Z",
            "2021-03-22T07:05:41Z",
            "2021-03-22T06:57:57Z",
            "2021-03-12T01:41:23Z",
            "2021-01-18T07:33:04Z",
            "2021-01-18T07:32:25Z",
            "2021-01-18T06:57:59Z",
            "2021-01-13T07:36:30Z",
            "2020-11-18T05:13:09Z",
            "2020-11-18T05:10:14Z",
            "2020-11-18T01:46:59Z"
        ],
        "creation_date": "2014-05-23T15:54:00Z",
        "contributors": 23,
        "topics": [
            "array",
            "dictionary",
            "json",
            "model",
            "objective-c"
        ],
        "subscribers": 327,
        "readme": "MJExtension\n===\n[![SPM supported](https://img.shields.io/badge/SPM-supported-4BC51D.svg?style=flat)](https://github.com/apple/swift-package-manager)\n[![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)\n[![podversion](https://img.shields.io/cocoapods/v/MJExtension.svg)](https://cocoapods.org/pods/MJExtension)\n![Platform](https://img.shields.io/cocoapods/p/MJExtension.svg?style=flat)\n\n- A fast, convenient and nonintrusive conversion framework between JSON and model.\n- \u8f6c\u6362\u901f\u5ea6\u5feb\u3001\u4f7f\u7528\u7b80\u5355\u65b9\u4fbf\u7684\u5b57\u5178\u8f6c\u6a21\u578b\u6846\u67b6\n\n[\ud83d\udcdc\u270d\ud83c\udffb**Release Notes**: more details](https://github.com/CoderMJLee/MJExtension/releases)\n\n## Contents\n\n* [Getting Started \u3010\u5f00\u59cb\u4f7f\u7528\u3011](#Getting_Started)\n\t* [Features \u3010\u80fd\u505a\u4ec0\u4e48\u3011](#Features)\n\t* [Installation \u3010\u5b89\u88c5\u3011](#Installation)\n* [Examples \u3010\u793a\u4f8b\u3011](#Examples)\n  * [Usage in Swift](#usage_in_swift)\n  * [JSON -> Model](#JSON_Model)\n  * [JSONString -> Model](#JSONString_Model)\n  * [Model contains model](#Model_contains_model)\n  * [Model contains model-array](#Model_contains_model_array)\n  * [Model name - JSON key mapping](#Model_name_JSON_key_mapping)\n  * [JSON array -> model array](#JSON_array_model_array)\n  * [Model -> JSON](#Model_JSON)\n  * [Model array -> JSON array](#Model_array_JSON_array)\n  * [Core Data](#Core_Data)\n  * [Coding](#Coding)\n  * [Secure Coding](#SecureCoding)\n  * [Camel -> underline](#Camel_underline)\n  * [NSString -> NSDate, nil -> @\"\"](#NSString_NSDate)\n  * [NSDate -> NSString](#NSDate_NSString)\n  * [More use cases](#More_use_cases)\n\n---\n\n## <a id=\"Getting_Started\"></a> Getting Started\u3010\u5f00\u59cb\u4f7f\u7528\u3011\n\n### <a id=\"Features\"></a> Features\u3010\u80fd\u505a\u4ec0\u4e48\u3011\n- MJExtension\u662f\u4e00\u5957\u5b57\u5178\u548c\u6a21\u578b\u4e4b\u95f4\u4e92\u76f8\u8f6c\u6362\u7684\u8d85\u8f7b\u91cf\u7ea7\u6846\u67b6\n* `JSON` --> `Model`\u3001`Core Data Model`\n* `JSONString` --> `Model`\u3001`Core Data Model`\n* `Model`\u3001`Core Data Model` --> `JSON`\n* `JSON Array` --> `Model Array`\u3001`Core Data Model Array`\n* `JSONString` --> `Model Array`\u3001`Core Data Model Array`\n* `Model Array`\u3001`Core Data Model Array` --> `JSON Array`\n* Coding all properties of a model with only one line of code.\n    * \u53ea\u9700\u8981\u4e00\u884c\u4ee3\u7801\uff0c\u5c31\u80fd\u5b9e\u73b0\u6a21\u578b\u7684\u6240\u6709\u5c5e\u6027\u8fdb\u884cCoding / SecureCoding\uff08\u5f52\u6863\u548c\u89e3\u6863\uff09\n\n### <a id=\"Installation\"></a> Installation\u3010\u5b89\u88c5\u3011\n\n#### CocoaPods\u3010\u4f7f\u7528CocoaPods\u3011\n\n```ruby\npod 'MJExtension'\n```\n\n#### Carthage\n\n```ruby\ngithub \"CoderMJLee/MJExtension\"\n```\n\n#### Swift Package Manager\n\nReleased from [`3.4.0`](https://github.com/CoderMJLee/MJExtension/releases/)\n\n#### Manually\u3010\u624b\u52a8\u5bfc\u5165\u3011\n\n- Drag all source files under folder `MJExtension` to your project.\u3010\u5c06`MJExtension`\u6587\u4ef6\u5939\u4e2d\u7684\u6240\u6709\u6e90\u4ee3\u7801\u62fd\u5165\u9879\u76ee\u4e2d\u3011\n- Import the main header file\uff1a`#import \"MJExtension.h\"`\u3010\u5bfc\u5165\u4e3b\u5934\u6587\u4ef6\uff1a`#import \"MJExtension.h\"`\u3011\n\n## <a id=\"Examples\"></a> Examples\u3010\u793a\u4f8b\u3011\n\n**Add `MJKeyValue` protocol to your model if needed\u3010\u5982\u679c\u6709\u9700\u8981, \u8bf7\u5728\u6a21\u578b\u4e2d\u52a0\u5165 `MJKeyValue` \u534f\u8bae\u3011**\n\n### <a id=\"usage_in_swift\"></a> Usage in Swift [\u5173\u4e8e\u5728Swift\u4e2d\u4f7f\u7528MJExtension] \u203c\ufe0f\n\n> Example: \n>\n> - [Model - MJTester.swift](MJExtensionTests/SwiftModel/MJTester.swift)\n>\n> - [Usage - SwiftModelTests.swift](MJExtensionTests/SwiftModelTests.swift)\n\n```swift\n@objc(MJTester)\n@objcMembers\nclass MJTester: NSObject {\n    // make sure to use `dynamic` attribute for basic type & must use as Non-Optional & must set initial value\n    dynamic var isSpecialAgent: Bool = false\n    dynamic var age: Int = 0\n    \n    var name: String?\n    var identifier: String?\n}\n```\n\n1.  `@objc` or `@objcMembers` attributes should be added to class or property for declaration of Objc accessibility [\u5728 Swift4 \u4e4b\u540e, \u8bf7\u5728\u5c5e\u6027\u524d\u52a0 `@objc` \u4fee\u9970\u6216\u5728\u7c7b\u524d\u589e\u52a0 `@objcMembers`. \u4ee5\u4fdd\u8bc1 Swift \u7684\u5c5e\u6027\u80fd\u591f\u66b4\u9732\u7ed9 Objc \u4f7f\u7528. ]\n2.  If you let `Bool` & `Int` as property type, make sure that using `dynamic` to attribute it. It must be `Non-Optional` type and assign `a default value`.[\u5982\u679c\u8981\u4f7f\u7528 `Bool` \u548c `Int` \u7b49 Swfit \u4e13\u7528\u57fa\u672c\u7c7b\u578b, \u8bf7\u4f7f\u7528 `dynamic` \u5173\u952e\u5b57\u4fee\u9970, \u7c7b\u578b\u4e3a `Non-Optional`, \u4e26\u4e14\u7ed9\u5b9a\u521d\u59cb\u503c.]\n\n> \u7eafSwift\u7248\u7684JSON\u4e0eModel\u8f6c\u6362\u6846\u67b6\u5df2\u7ecf\u5f00\u6e90\u4e0a\u67b6\n>\n> - [KakaJSON](https://github.com/kakaopensource/KakaJSON)\n> - [\u4e2d\u6587\u6559\u7a0b](https://www.cnblogs.com/mjios/p/11352776.html)\n> - \u5982\u679c\u4f60\u7684\u9879\u76ee\u662f\u7528Swift\u5199\u7684Model\uff0c\u5899\u88c2\u63a8\u8350\u4f7f\u7528[KakaJSON](https://github.com/kakaopensource/KakaJSON)\n>   - \u5df2\u7ecf\u5bf9\u5404\u79cd\u5e38\u7528\u7684\u6570\u636e\u573a\u666f\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u5355\u5143\u6d4b\u8bd5\n>   - \u7b80\u5355\u6613\u7528\u3001\u529f\u80fd\u4e30\u5bcc\u3001\u8f6c\u6362\u5feb\u901f\n\n### <a id=\"JSON_Model\"></a> The most simple JSON -> Model\u3010\u6700\u7b80\u5355\u7684\u5b57\u5178\u8f6c\u6a21\u578b\u3011\n\n```objc\ntypedef enum {\n    SexMale,\n    SexFemale\n} Sex;\n\n@interface User : NSObject\n@property (copy, nonatomic) NSString *name;\n@property (copy, nonatomic) NSString *icon;\n@property (assign, nonatomic) unsigned int age;\n@property (copy, nonatomic) NSString *height;\n@property (strong, nonatomic) NSNumber *money;\n@property (assign, nonatomic) Sex sex;\n@property (assign, nonatomic, getter=isGay) BOOL gay;\n@end\n\n/***********************************************/\n\nNSDictionary *dict = @{\n    @\"name\" : @\"Jack\",\n    @\"icon\" : @\"lufy.png\",\n    @\"age\" : @20,\n    @\"height\" : @\"1.55\",\n    @\"money\" : @100.9,\n    @\"sex\" : @(SexFemale),\n    @\"gay\" : @\"true\"\n//   @\"gay\" : @\"1\"\n//   @\"gay\" : @\"NO\"\n};\n\n// JSON -> User\nUser *user = [User mj_objectWithKeyValues:dict];\n\nNSLog(@\"name=%@, icon=%@, age=%zd, height=%@, money=%@, sex=%d, gay=%d\", user.name, user.icon, user.age, user.height, user.money, user.sex, user.gay);\n// name=Jack, icon=lufy.png, age=20, height=1.550000, money=100.9, sex=1\n```\n\n### <a id=\"JSONString_Model\"></a> JSONString -> Model\u3010JSON\u5b57\u7b26\u4e32\u8f6c\u6a21\u578b\u3011\n\n```objc\n// 1.Define a JSONString\nNSString *jsonString = @\"{\\\"name\\\":\\\"Jack\\\", \\\"icon\\\":\\\"lufy.png\\\", \\\"age\\\":20}\";\n\n// 2.JSONString -> User\nUser *user = [User mj_objectWithKeyValues:jsonString];\n\n// 3.Print user's properties\nNSLog(@\"name=%@, icon=%@, age=%d\", user.name, user.icon, user.age);\n// name=Jack, icon=lufy.png, age=20\n```\n\n### <a id=\"Model_contains_model\"></a> Model contains model\u3010\u6a21\u578b\u4e2d\u5d4c\u5957\u6a21\u578b\u3011\n\n```objc\n@interface Status : NSObject\n@property (copy, nonatomic) NSString *text;\n@property (strong, nonatomic) User *user;\n@property (strong, nonatomic) Status *retweetedStatus;\n@end\n\n/***********************************************/\n\nNSDictionary *dict = @{\n    @\"text\" : @\"Agree!Nice weather!\",\n    @\"user\" : @{\n        @\"name\" : @\"Jack\",\n        @\"icon\" : @\"lufy.png\"\n    },\n    @\"retweetedStatus\" : @{\n        @\"text\" : @\"Nice weather!\",\n        @\"user\" : @{\n            @\"name\" : @\"Rose\",\n            @\"icon\" : @\"nami.png\"\n        }\n    }\n};\n\n// JSON -> Status\nStatus *status = [Status mj_objectWithKeyValues:dict];\n\nNSString *text = status.text;\nNSString *name = status.user.name;\nNSString *icon = status.user.icon;\nNSLog(@\"text=%@, name=%@, icon=%@\", text, name, icon);\n// text=Agree!Nice weather!, name=Jack, icon=lufy.png\n\nNSString *text2 = status.retweetedStatus.text;\nNSString *name2 = status.retweetedStatus.user.name;\nNSString *icon2 = status.retweetedStatus.user.icon;\nNSLog(@\"text2=%@, name2=%@, icon2=%@\", text2, name2, icon2);\n// text2=Nice weather!, name2=Rose, icon2=nami.png\n```\n\n### <a id=\"Model_contains_model_array\"></a> Model contains model-array\u3010\u6a21\u578b\u4e2d\u6709\u4e2a\u6570\u7ec4\u5c5e\u6027\uff0c\u6570\u7ec4\u91cc\u9762\u53c8\u8981\u88c5\u7740\u5176\u4ed6\u6a21\u578b\u3011\n\n```objc\n@interface Ad : NSObject\n@property (copy, nonatomic) NSString *image;\n@property (copy, nonatomic) NSString *url;\n@end\n\n@interface StatusResult : NSObject\n/** Contatins status model */\n@property (strong, nonatomic) NSMutableArray *statuses;\n/** Contatins ad model */\n@property (strong, nonatomic) NSArray *ads;\n@property (strong, nonatomic) NSNumber *totalNumber;\n@end\n\n/***********************************************/\n\n// Tell MJExtension what type of model will be contained in statuses and ads.\n[StatusResult mj_setupObjectClassInArray:^NSDictionary *{\n    return @{\n               @\"statuses\" : @\"Status\",\n               // @\"statuses\" : [Status class],\n               @\"ads\" : @\"Ad\"\n               // @\"ads\" : [Ad class]\n           };\n}];\n// Equals: StatusResult.m implements +mj_objectClassInArray method.\n\nNSDictionary *dict = @{\n    @\"statuses\" : @[\n                      @{\n                          @\"text\" : @\"Nice weather!\",\n                          @\"user\" : @{\n                              @\"name\" : @\"Rose\",\n                              @\"icon\" : @\"nami.png\"\n                          }\n                      },\n                      @{\n                          @\"text\" : @\"Go camping tomorrow!\",\n                          @\"user\" : @{\n                              @\"name\" : @\"Jack\",\n                              @\"icon\" : @\"lufy.png\"\n                          }\n                      }\n                  ],\n    @\"ads\" : @[\n                 @{\n                     @\"image\" : @\"ad01.png\",\n                     @\"url\" : @\"http://www.ad01.com\"\n                 },\n                 @{\n                     @\"image\" : @\"ad02.png\",\n                     @\"url\" : @\"http://www.ad02.com\"\n                 }\n             ],\n    @\"totalNumber\" : @\"2014\"\n};\n\n// JSON -> StatusResult\nStatusResult *result = [StatusResult mj_objectWithKeyValues:dict];\n\nNSLog(@\"totalNumber=%@\", result.totalNumber);\n// totalNumber=2014\n\n// Printing\nfor (Status *status in result.statuses) {\n    NSString *text = status.text;\n    NSString *name = status.user.name;\n    NSString *icon = status.user.icon;\n    NSLog(@\"text=%@, name=%@, icon=%@\", text, name, icon);\n}\n// text=Nice weather!, name=Rose, icon=nami.png\n// text=Go camping tomorrow!, name=Jack, icon=lufy.png\n\n// Printing\nfor (Ad *ad in result.ads) {\n    NSLog(@\"image=%@, url=%@\", ad.image, ad.url);\n}\n// image=ad01.png, url=http://www.ad01.com\n// image=ad02.png, url=http://www.ad02.com\n```\n\n### <a id=\"Model_name_JSON_key_mapping\"></a> Model name - JSON key mapping\u3010\u6a21\u578b\u4e2d\u7684\u5c5e\u6027\u540d\u548c\u5b57\u5178\u4e2d\u7684key\u4e0d\u76f8\u540c(\u6216\u8005\u9700\u8981\u591a\u7ea7\u6620\u5c04)\u3011\n\n```objc\n@interface Bag : NSObject\n@property (copy, nonatomic) NSString *name;\n@property (assign, nonatomic) double price;\n@end\n\n@interface Student : NSObject\n@property (copy, nonatomic) NSString *ID;\n@property (copy, nonatomic) NSString *desc;\n@property (copy, nonatomic) NSString *nowName;\n@property (copy, nonatomic) NSString *oldName;\n@property (copy, nonatomic) NSString *nameChangedTime;\n@property (strong, nonatomic) Bag *bag;\n@end\n\n/***********************************************/\n\n// How to map\n[Student mj_setupReplacedKeyFromPropertyName:^NSDictionary *{\n    return @{\n               @\"ID\" : @\"id\",\n               @\"desc\" : @\"description\",\n               @\"oldName\" : @\"name.oldName\",\n               @\"nowName\" : @\"name.newName\",\n               @\"nameChangedTime\" : @\"name.info[1].nameChangedTime\",\n               @\"bag\" : @\"other.bag\"\n           };\n}];\n// Equals: Student.m implements +mj_replacedKeyFromPropertyName method.\n\nNSDictionary *dict = @{\n    @\"id\" : @\"20\",\n    @\"description\" : @\"kids\",\n    @\"name\" : @{\n        @\"newName\" : @\"lufy\",\n        @\"oldName\" : @\"kitty\",\n        @\"info\" : @[\n        \t\t @\"test-data\",\n        \t\t @{\n            \t             @\"nameChangedTime\" : @\"2013-08\"\n                         }\n                  ]\n    },\n    @\"other\" : @{\n        @\"bag\" : @{\n            @\"name\" : @\"a red bag\",\n            @\"price\" : @100.7\n        }\n    }\n};\n\n// JSON -> Student\nStudent *stu = [Student mj_objectWithKeyValues:dict];\n\n// Printing\nNSLog(@\"ID=%@, desc=%@, oldName=%@, nowName=%@, nameChangedTime=%@\",\n      stu.ID, stu.desc, stu.oldName, stu.nowName, stu.nameChangedTime);\n// ID=20, desc=kids, oldName=kitty, nowName=lufy, nameChangedTime=2013-08\nNSLog(@\"bagName=%@, bagPrice=%f\", stu.bag.name, stu.bag.price);\n// bagName=a red bag, bagPrice=100.700000\n```\n\n\n### <a id=\"JSON_array_model_array\"></a> JSON array -> model array\u3010\u5c06\u4e00\u4e2a\u5b57\u5178\u6570\u7ec4\u8f6c\u6210\u6a21\u578b\u6570\u7ec4\u3011\n\n```objc\nNSArray *dictArray = @[\n                         @{\n                             @\"name\" : @\"Jack\",\n                             @\"icon\" : @\"lufy.png\"\n                         },\n                         @{\n                             @\"name\" : @\"Rose\",\n                             @\"icon\" : @\"nami.png\"\n                         }\n                     ];\n\n// JSON array -> User array\nNSArray *userArray = [User mj_objectArrayWithKeyValuesArray:dictArray];\n\n// Printing\nfor (User *user in userArray) {\n    NSLog(@\"name=%@, icon=%@\", user.name, user.icon);\n}\n// name=Jack, icon=lufy.png\n// name=Rose, icon=nami.png\n```\n\n### <a id=\"Model_JSON\"></a> Model -> JSON\u3010\u5c06\u4e00\u4e2a\u6a21\u578b\u8f6c\u6210\u5b57\u5178\u3011\n```objc\n// New model\nUser *user = [[User alloc] init];\nuser.name = @\"Jack\";\nuser.icon = @\"lufy.png\";\n\nStatus *status = [[Status alloc] init];\nstatus.user = user;\nstatus.text = @\"Nice mood!\";\n\n// Status -> JSON\nNSDictionary *statusDict = status.mj_keyValues;\nNSLog(@\"%@\", statusDict);\n/*\n {\n text = \"Nice mood!\";\n user =     {\n icon = \"lufy.png\";\n name = Jack;\n };\n }\n */\n\n// More complex situation\nStudent *stu = [[Student alloc] init];\nstu.ID = @\"123\";\nstu.oldName = @\"rose\";\nstu.nowName = @\"jack\";\nstu.desc = @\"handsome\";\nstu.nameChangedTime = @\"2018-09-08\";\n\nBag *bag = [[Bag alloc] init];\nbag.name = @\"a red bag\";\nbag.price = 205;\nstu.bag = bag;\n\nNSDictionary *stuDict = stu.mj_keyValues;\nNSLog(@\"%@\", stuDict);\n/*\n{\n    ID = 123;\n    bag =     {\n        name = \"\\U5c0f\\U4e66\\U5305\";\n        price = 205;\n    };\n    desc = handsome;\n    nameChangedTime = \"2018-09-08\";\n    nowName = jack;\n    oldName = rose;\n}\n */\n```\n\n### <a id=\"Model_array_JSON_array\"></a> Model array -> JSON array\u3010\u5c06\u4e00\u4e2a\u6a21\u578b\u6570\u7ec4\u8f6c\u6210\u5b57\u5178\u6570\u7ec4\u3011\n\n```objc\n// New model array\nUser *user1 = [[User alloc] init];\nuser1.name = @\"Jack\";\nuser1.icon = @\"lufy.png\";\n\nUser *user2 = [[User alloc] init];\nuser2.name = @\"Rose\";\nuser2.icon = @\"nami.png\";\n\nNSArray *userArray = @[user1, user2];\n\n// Model array -> JSON array\nNSArray *dictArray = [User mj_keyValuesArrayWithObjectArray:userArray];\nNSLog(@\"%@\", dictArray);\n/*\n (\n {\n icon = \"lufy.png\";\n name = Jack;\n },\n {\n icon = \"nami.png\";\n name = Rose;\n }\n )\n */\n```\n\n### <a id=\"Core_Data\"></a> Core Data\n\n```swift\nfunc json2CoreDataObject() {\n    context.performAndWait {\n        let object = MJCoreDataTester.mj_object(withKeyValues: Values.testJSONObject, context: context)\n        // use the object\n    }\n}\n\nfunc coreDataObject2JSON() {\n    context.performAndWait {        \n        let dict = coreDataObject.mj_keyValues()\n        // use dict\n    }\n}\n```\n\n### <a id=\"Coding\"></a> Coding (Archive & Unarchive methods are deprecated in iOS 12)\n\n```objc\n#import \"MJExtension.h\"\n\n@implementation MJBag\n// NSCoding Implementation\nMJCodingImplementation\n@end\n\n/***********************************************/\n\n// what properties not to be coded\n[MJBag mj_setupIgnoredCodingPropertyNames:^NSArray *{\n    return @[@\"name\"];\n}];\n// Equals: MJBag.m implements +mj_ignoredCodingPropertyNames method.\n\n// Create model\nMJBag *bag = [[MJBag alloc] init];\nbag.name = @\"Red bag\";\nbag.price = 200.8;\n\nNSString *file = [NSHomeDirectory() stringByAppendingPathComponent:@\"Desktop/bag.data\"];\n// Encoding by archiving\n[NSKeyedArchiver archiveRootObject:bag toFile:file];\n\n// Decoding by unarchiving\nMJBag *decodedBag = [NSKeyedUnarchiver unarchiveObjectWithFile:file];\nNSLog(@\"name=%@, price=%f\", decodedBag.name, decodedBag.price);\n// name=(null), price=200.800000\n```\n\n### <a id=\"SecureCoding\"></a> Secure Coding\n\nUsing `MJSecureCodingImplementation(class, isSupport)` macro.\n\n```objc\n@import MJExtension;\n\n// NSSecureCoding Implementation\nMJSecureCodingImplementation(MJBag, YES)\n\n@implementation MJBag\n@end\n\n /***********************************************/\n\n// what properties not to be coded\n[MJBag mj_setupIgnoredCodingPropertyNames:^NSArray *{\n    return @[@\"name\"];\n}];\n// Equals: MJBag.m implements +mj_ignoredCodingPropertyNames method.\n\n// Create model\nMJBag *bag = [[MJBag alloc] init];\nbag.name = @\"Red bag\";\nbag.price = 200.8;\nbag.isBig = YES;\nbag.weight = 200;\n\nNSString *file = [NSTemporaryDirectory() stringByAppendingPathComponent:@\"bag.data\"];\n\nNSError *error = nil;\n// Encoding by archiving\nNSData *data = [NSKeyedArchiver archivedDataWithRootObject:bag requiringSecureCoding:YES error:&error];\n[data writeToFile:file atomically:true];\n\n// Decoding by unarchiving\nNSData *readData = [NSFileManager.defaultManager contentsAtPath:file];\nerror = nil;\nMJBag *decodedBag = [NSKeyedUnarchiver unarchivedObjectOfClass:MJBag.class fromData:readData error:&error];\nMJExtensionLog(@\"name=%@, price=%f\", decodedBag.name, decodedBag.price);\n```\n\n### <a id=\"Camel_underline\"></a> Camel -> underline\u3010\u7edf\u4e00\u8f6c\u6362\u5c5e\u6027\u540d\uff08\u6bd4\u5982\u9a7c\u5cf0\u8f6c\u4e0b\u5212\u7ebf\uff09\u3011\n\n```objc\n// Dog\n#import \"MJExtension.h\"\n\n@implementation Dog\n+ (NSString *)mj_replacedKeyFromPropertyName121:(NSString *)propertyName\n{\n    // nickName -> nick_name\n    return [propertyName mj_underlineFromCamel];\n}\n@end\n\n// NSDictionary\nNSDictionary *dict = @{\n                       @\"nick_name\" : @\"\u65fa\u8d22\",\n                       @\"sale_price\" : @\"10.5\",\n                       @\"run_speed\" : @\"100.9\"\n                       };\n// NSDictionary -> Dog\nDog *dog = [Dog mj_objectWithKeyValues:dict];\n\n// printing\nNSLog(@\"nickName=%@, scalePrice=%f runSpeed=%f\", dog.nickName, dog.salePrice, dog.runSpeed);\n```\n\n### <a id=\"NSString_NSDate\"></a> NSString -> NSDate, nil -> @\"\"\u3010\u8fc7\u6ee4\u5b57\u5178\u7684\u503c\uff08\u6bd4\u5982\u5b57\u7b26\u4e32\u65e5\u671f\u5904\u7406\u4e3aNSDate\u3001\u5b57\u7b26\u4e32nil\u5904\u7406\u4e3a@\"\"\uff09\u3011\n```objc\n// Book\n#import \"MJExtension.h\"\n\n@implementation Book\n- (id)mj_newValueFromOldValue:(id)oldValue property:(MJProperty *)property\n{\n    if ([property.name isEqualToString:@\"publisher\"]) {\n        if (oldValue == nil) return @\"\";\n    } else if (property.type.typeClass == [NSDate class]) {\n        NSDateFormatter *fmt = [[NSDateFormatter alloc] init];\n        fmt.dateFormat = @\"yyyy-MM-dd\";\n        return [fmt dateFromString:oldValue];\n    }\n\n    return oldValue;\n}\n@end\n\n// NSDictionary\nNSDictionary *dict = @{\n                       @\"name\" : @\"5\u5206\u949f\u7a81\u7834iOS\u5f00\u53d1\",\n                       @\"publishedTime\" : @\"2011-09-10\"\n                       };\n// NSDictionary -> Book\nBook *book = [Book mj_objectWithKeyValues:dict];\n\n// printing\nNSLog(@\"name=%@, publisher=%@, publishedTime=%@\", book.name, book.publisher, book.publishedTime);\n```\n\n### <a id=\"NSDate_NSString\"></a> NSDate -> NSString\u3010\u6a21\u578b\u8f6c\u5b57\u5178\u65f6, \u4fee\u6539 Date \u7c7b\u578b\u81f3 String\u3011\n\n```objc\n- (void)mj_objectDidConvertToKeyValues:(NSMutableDictionary *)keyValues {\n    // NSDateFormatter *formatter = [[NSDateFormatter alloc] init];\n    // formatter.dateFormat = @\"yyy-MM-dd\";\n    // should use sharedFormatter for better performance  \n    keyValues[@\"publishedTime\"] = [sharedFormatter stringFromDate:self.publishedTime];\n}\n```\n\n\n\n### <a id=\"More_use_cases\"></a> More use cases\u3010\u66f4\u591a\u7528\u6cd5\u3011\n\n- Please reference to `NSObject+MJKeyValue.h` and `NSObject+MJCoding.h`\n\n\n## \u671f\u5f85\n* \u5982\u679c\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u9047\u5230BUG\uff0c\u5e0c\u671b\u4f60\u80fdIssues\u6211\uff0c\u8c22\u8c22\uff08\u6216\u8005\u5c1d\u8bd5\u4e0b\u8f7d\u6700\u65b0\u7684\u6846\u67b6\u4ee3\u7801\u770b\u770bBUG\u4fee\u590d\u6ca1\u6709\uff09\n* \u5982\u679c\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u529f\u80fd\u4e0d\u591f\u7528\uff0c\u5e0c\u671b\u4f60\u80fdIssues\u6211\uff0c\u6211\u975e\u5e38\u60f3\u4e3a\u8fd9\u4e2a\u6846\u67b6\u589e\u52a0\u66f4\u591a\u597d\u7528\u7684\u529f\u80fd\uff0c\u8c22\u8c22\n* \u5982\u679c\u4f60\u60f3\u4e3aMJExtension\u8f93\u51fa\u4ee3\u7801\uff0c\u8bf7\u62fc\u547dPull Requests\u6211\n\n",
        "releases": [
            {
                "name": "3.4.2",
                "date": "2024-03-13T05:26:26Z"
            },
            {
                "name": "3.4.1",
                "date": "2021-12-06T06:54:28Z"
            },
            {
                "name": "3.4.0",
                "date": "2021-09-14T04:20:43Z"
            },
            {
                "name": "",
                "date": "2021-06-16T02:17:15Z"
            },
            {
                "name": "",
                "date": "2021-03-22T07:16:13Z"
            },
            {
                "name": "",
                "date": "2021-01-18T07:45:32Z"
            },
            {
                "name": "",
                "date": "2021-01-13T07:37:16Z"
            },
            {
                "name": "",
                "date": "2020-06-29T02:50:18Z"
            },
            {
                "name": "",
                "date": "2019-10-08T06:29:11Z"
            },
            {
                "name": "",
                "date": "2019-09-26T09:09:48Z"
            },
            {
                "name": "Fix",
                "date": "2019-09-11T06:15:39Z"
            },
            {
                "name": "Fix ",
                "date": "2019-08-29T13:11:40Z"
            },
            {
                "name": "support iOS 13 beta & fix some bugs",
                "date": "2019-07-17T01:52:01Z"
            },
            {
                "name": "(Hotfix) fix memory leak for protocol_copyPropertyList",
                "date": "2019-04-29T06:33:04Z"
            },
            {
                "name": "3.0.16 - \u4fee\u590d\u7ebf\u7a0b\u5b89\u5168\u53ca`NSObject`\u534f\u8bae\u4e2d\u5d29\u6e83\u7684\u95ee\u9898",
                "date": "2019-04-04T09:19:31Z"
            },
            {
                "name": "\u8c03\u6574\u7ec6\u8282",
                "date": "2018-05-28T17:18:34Z"
            },
            {
                "name": "\u4e00\u4e9b\u5c0f\u95ee\u9898",
                "date": "2016-07-22T10:50:53Z"
            },
            {
                "name": "\u591a\u7ebf\u7a0b\u652f\u6301",
                "date": "2016-07-21T12:00:42Z"
            },
            {
                "name": "\u589e\u5f3akey\u66ff\u6362\u7684\u529f\u80fd",
                "date": "2016-06-30T02:02:17Z"
            }
        ]
    }
}