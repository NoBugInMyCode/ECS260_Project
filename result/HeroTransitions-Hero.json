{
    "https://api.github.com/repos/HeroTransitions/Hero": {
        "forks": 1731,
        "watchers": 22143,
        "stars": 22143,
        "languages": {
            "Swift": 283937,
            "Makefile": 14528,
            "Ruby": 8474,
            "Awk": 1337,
            "Objective-C": 459
        },
        "commits": [
            "2024-02-06T02:03:13Z",
            "2024-02-06T01:42:06Z",
            "2024-02-06T01:26:59Z",
            "2023-09-13T12:17:44Z",
            "2024-01-27T05:55:15Z",
            "2024-01-27T02:04:54Z",
            "2024-01-21T01:09:43Z",
            "2022-10-06T05:20:52Z",
            "2022-10-06T05:11:43Z",
            "2022-10-06T05:10:06Z",
            "2022-10-06T03:57:11Z",
            "2022-10-06T02:15:21Z",
            "2022-10-03T07:55:34Z",
            "2022-09-16T13:49:15Z",
            "2022-09-01T03:03:58Z",
            "2022-09-01T03:01:38Z",
            "2022-09-01T02:55:15Z",
            "2022-08-28T18:30:48Z",
            "2022-08-12T13:04:57Z",
            "2022-07-06T01:05:45Z",
            "2022-07-05T12:13:45Z",
            "2022-05-06T04:48:45Z",
            "2022-05-06T04:40:12Z",
            "2022-05-06T04:36:20Z",
            "2022-05-06T04:20:19Z",
            "2022-05-05T07:20:00Z",
            "2022-05-05T07:16:02Z",
            "2022-04-11T00:49:11Z",
            "2021-04-19T03:52:14Z",
            "2021-04-18T16:46:16Z"
        ],
        "creation_date": "2016-11-24T18:49:37Z",
        "contributors": 30,
        "topics": [
            "animation",
            "animations",
            "carthage",
            "custom-transitions",
            "hero",
            "ios",
            "ios-animation",
            "ios-framework",
            "ios-lib",
            "ios-swift",
            "ios-transition",
            "layout",
            "material-design",
            "swift",
            "swiftpm",
            "transition-animation",
            "xcode"
        ],
        "subscribers": 363,
        "readme": "<img src=\"https://cdn.rawgit.com/lkzhao/Hero/427d5f2/Resources/Hero.svg\" width=\"388\"/>\n\n**Hero** is a library for building iOS view controller transitions. It provides a declarative layer on top of the UIKit's cumbersome transition APIs\u2014making custom transitions an easy task for developers.\n\n[![Carthage compatible](https://img.shields.io/badge/Carthage-Compatible-brightgreen.svg?style=flat)](https://github.com/Carthage/Carthage)\n[![Accio supported](https://img.shields.io/badge/Accio-supported-0A7CF5.svg?style=flat)](https://github.com/JamitLabs/Accio)\n[![codecov](https://codecov.io/gh/HeroTransitions/Hero/branch/develop/graph/badge.svg)](https://codecov.io/gh/HeroTransitions/Hero)\n[![Version](https://img.shields.io/cocoapods/v/Hero.svg?style=flat)](http://cocoapods.org/pods/Hero)\n[![License](https://img.shields.io/cocoapods/l/Hero.svg?style=flat)](https://github.com/lkzhao/Hero/blob/master/LICENSE?raw=true)\n![Xcode 10.0+](https://img.shields.io/badge/Xcode-10.0%2B-blue.svg)\n![iOS 10.0+](https://img.shields.io/badge/iOS-10.0%2B-blue.svg)\n![Swift 4.0+](https://img.shields.io/badge/Swift-4.0%2B-orange.svg)\n[![\u4e2d\u6587 README](https://img.shields.io/badge/%E4%B8%AD%E6%96%87-README-blue.svg?style=flat)](https://github.com/lkzhao/Hero/blob/master/README.zh-cn.md)\n[![Donate](https://img.shields.io/badge/Donate-PayPal-blue.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=NT5F7Y2MPV7RE)\n\n[![Unit Test](https://github.com/HeroTransitions/Hero/actions/workflows/test.yml/badge.svg)](https://github.com/HeroTransitions/Hero/actions/workflows/test.yml)\n[![Swift PM](https://github.com/HeroTransitions/SwiftPMTest/actions/workflows/spm.yml/badge.svg)](https://github.com/HeroTransitions/SwiftPMTest/actions/workflows/spm.yml)\n\n<img src=\"https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/features.svg\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<img src=\"https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/features2.svg\"/>\n\nHero is similar to Keynote's **Magic Move**. It checks the `heroID` property on all source and destination views. Every matched view pair is then automatically transitioned from its old state to its new state.\n\nHero can also construct animations for unmatched views. It is easy to define these animations via the `heroModifiers` property. Hero will run these animations alongside the **Magic Move** animations. All of these animations can be **interactively controlled** by user gestures.\n\nAt view controller level, Hero provides several template transitions that you can set through `heroModalAnimationType`, `heroNavigationAnimationType`, and `heroTabBarAnimationType`. These can be used as the foundation of your custom transitions. Combine with `heroID` & `heroModifiers` to make your own unique transitions.\n\n<img src=\"https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/defaultAnimations.svg\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<img src=\"https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/defaultAnimations2.svg\"/>\n\nBy default, Hero provides **dynamic duration** based on the [Material Design Motion Guide](https://material.io/design/motion/speed.html#easing). Duration is automatically determined by changes to distance and size\u2014saving you the hassle, while providing consistent and delightful animations.\n\nHero doesn't make any assumptions about how the view is built or structured. It won't modify any of your views' states other than hiding them during the animation. This makes it work with **Auto Layout**, **programmatic layout**, **UICollectionView** (without modifying its layout object), **UITableView**, **UINavigationController**, **UITabBarController**, etc...\n\n## Usage Example 1\n\n<img src=\"https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/simple.svg\" />\n\n### View Controller 1\n\n```swift\nredView.hero.id = \"ironMan\"\nblackView.hero.id = \"batMan\"\n```\n\n### View Controller 2\n\n```swift\nself.hero.isEnabled = true\nredView.hero.id = \"ironMan\"\nblackView.hero.id = \"batMan\"\nwhiteView.hero.modifiers = [.translate(y:100)]\n```\n\n## Usage Example 2\n\n<img src=\"https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/advanced.svg\" />\n\n### View Controller 1\n\n```swift\ngreyView.hero.id = \"skyWalker\"\n```\n\n### View Controller 2\n\n```swift\nself.hero.isEnabled = true\ngreyView.hero.id = \"skyWalker\"\n\n// collectionView is the parent view of all red cells\ncollectionView.hero.modifiers = [.cascade]\nfor cell in redCells {\n    cell.hero.modifiers = [.fade, .scale(0.5)]\n}\n```\n\nYou can do these in the **storyboard** too!\n\n<img src=\"https://cdn.rawgit.com/lkzhao/Hero/master/Resources/storyboardView.png\" width=\"267px\"/>\n<img src=\"https://cdn.rawgit.com/lkzhao/Hero/master/Resources/storyboardViewController.png\" width=\"267px\"/>\n\n## Installation\n\n### CocoaPods\n\nAdd the following entry to your Podfile:\n\n```rb\npod 'Hero'\n```\n\nThen run `pod install`.\n\nDon't forget to `import Hero` in every file you'd like to use Hero.\n\n### Carthage\n\nAdd the following entry to your `Cartfile`:\n\n```text\ngithub \"HeroTransitions/Hero\"\n```\n\nThen run `carthage update`.\n\nIf this is your first time using Carthage in the project, you'll need to go through some additional steps as explained [over at Carthage](https://github.com/Carthage/Carthage#adding-frameworks-to-an-application).\n\n### Accio\n\nAdd the following to your `Package.swift`:\n\n```swift\n.package(url: \"https://github.com/HeroTransitions/Hero.git\", .upToNextMajor(from: \"1.4.0\")),\n```\n\nNext, add `Hero` to your App targets dependencies like so:\n\n```swift\n.target(\n    name: \"App\",\n    dependencies: [\n        \"Hero\",\n    ]\n),\n```\n\nThen run `accio update`.\n\n### Swift Package Manager\n\nTo integrate using Apple's Swift package manager, add the following as a dependency to your `Package.swift`:\n\n```swift\n.package(url: \"https://github.com/HeroTransitions/Hero.git\", .upToNextMajor(from: \"1.3.0\"))\n```\n\nand then specify `\"Hero\"` as a dependency of the Target in which you wish to use Hero.\nHere's an example `PackageDescription`:\n\n```swift\n// swift-tools-version:4.0\nimport PackageDescription\n\nlet package = Package(\n    name: \"MyPackage\",\n    products: [\n        .library(\n            name: \"MyPackage\",\n            targets: [\"MyPackage\"]),\n    ],\n    dependencies: [\n        .package(url: \"https://github.com/HeroTransitions/Hero.git\", .upToNextMajor(from: \"1.6.3\"))\n    ],\n    targets: [\n        .target(\n            name: \"MyPackage\",\n            dependencies: [\"Hero\"])\n    ]\n)\n```\n\n### Manually\n\n- Drag the **Sources** folder anywhere in your project.\n\n## Documentations\n\nCheckout the **[WIKI PAGES (Usage Guide)](https://github.com/lkzhao/Hero/wiki/Usage-Guide)** for documentations.\n\nFor more up-to-date ones, please see the header-doc. (use **alt+click** in Xcode)\n<img src=\"https://cdn.rawgit.com/lkzhao/Hero/master/Resources/headerDoc.png\" width=\"521px\"/>\n\nDash compatible API docs: https://HeroTransitions.github.io/Hero/\n\n## Interactive Transition Tutorials\n\n[Interactive transitions with Hero (Part 1)](https://lkzhao.gitbooks.io/hero/content/docs/InteractiveTransition.html)\n\n## FAQ\n\n### Not able to use Hero transition even when `self.hero.isEnabled` is set to true\n\nMake sure that you have also enabled `self.hero.isEnabled` on the navigation controller if you are doing a push/pop inside the navigation controller.\n\n### Views being covered by another matched view during the transition\n\nMatched views use global coordinate space while unmatched views use local coordinate space by default. Local coordinate spaced views might be covered by other global coordinate spaced views. To solve this, use the `useGlobalCoordinateSpace` modifier on the views being covered. Checkout [Coordinate Space Wiki page](https://github.com/lkzhao/Hero/wiki/Coordinate-Space) for details.\n\n### Push animation is shown along side my custom animation\n\nThis is the default animation for navigation controller provided by Hero. To disable the push animation, set `self.hero.navigationAnimationType` to `.fade` or `.none` on the navigation controller.\n\n### How do I use a different default animation when dismissing\n\nYou can use the animation type `.selectBy(presenting:dismissing)` to specify a different default animation for dismiss.\n\nFor example:\n\n```swift\n    self.hero.modalAnimationType = .selectBy(presenting:.zoom, dismissing:.zoomOut)\n```\n\n## Contribute\n\nWe welcome any contributions. Please read the [Contribution Guide](https://github.com/lkzhao/Hero/wiki/Contribution-Guide).\n",
        "releases": [
            {
                "name": "1.6.3",
                "date": "2024-02-06T01:46:56Z"
            },
            {
                "name": "1.6.2 - Bug fixes",
                "date": "2022-09-01T03:10:25Z"
            },
            {
                "name": "1.6.1 - Bug fixes and cleaner Swift PM",
                "date": "2021-03-07T21:06:48Z"
            },
            {
                "name": "1.6.0 - Swift 5, Swift PM support",
                "date": "2021-02-15T04:12:06Z"
            },
            {
                "name": "1.5.0",
                "date": "2021-02-15T03:58:50Z"
            },
            {
                "name": "1.4.0",
                "date": "2018-10-14T23:15:59Z"
            },
            {
                "name": "1.3.1",
                "date": "2018-09-11T00:38:08Z"
            },
            {
                "name": "1.3.0",
                "date": "2018-07-30T18:58:12Z"
            },
            {
                "name": "1.2.0",
                "date": "2018-04-12T03:26:45Z"
            },
            {
                "name": "API Cleanup & Bug fixes",
                "date": "2018-02-07T22:33:24Z"
            },
            {
                "name": "1.0.1",
                "date": "2017-11-22T21:14:55Z"
            },
            {
                "name": "Swift 4, Xcode 9, iOS 11 Support",
                "date": "2017-10-25T22:28:47Z"
            },
            {
                "name": "1.0.0-alpha.4",
                "date": "2017-07-21T20:27:52Z"
            },
            {
                "name": "1.0.0-alpha.3",
                "date": "2017-07-18T22:17:11Z"
            },
            {
                "name": "1.0.0-alpha.2",
                "date": "2017-07-14T19:42:51Z"
            },
            {
                "name": "1.0.0-alpha.1",
                "date": "2017-06-30T20:43:48Z"
            },
            {
                "name": "Bug fixes",
                "date": "2017-03-16T22:32:38Z"
            },
            {
                "name": "Bug fixes",
                "date": "2017-03-15T18:29:26Z"
            },
            {
                "name": "Better string properties parser & bug fixes",
                "date": "2017-03-11T16:58:45Z"
            },
            {
                "name": "Bug fixes",
                "date": "2017-02-25T20:54:45Z"
            },
            {
                "name": "0.3.2",
                "date": "2017-02-16T18:12:00Z"
            },
            {
                "name": "Bug fixes",
                "date": "2017-02-12T19:16:35Z"
            },
            {
                "name": "OverFullScreen Support & Default Transition",
                "date": "2017-02-11T02:18:41Z"
            },
            {
                "name": "tvOS Support",
                "date": "2017-02-08T04:58:59Z"
            },
            {
                "name": "Shadow & Border Animation Support. New zPosition modifier behavior.",
                "date": "2017-02-07T19:22:35Z"
            },
            {
                "name": "No more zPosition needed!!",
                "date": "2017-02-06T21:40:12Z"
            },
            {
                "name": "Bug fixes",
                "date": "2017-02-05T05:52:31Z"
            },
            {
                "name": "Bug fixes",
                "date": "2017-02-05T05:25:54Z"
            },
            {
                "name": "Bug fixes & useScaleBasedSizeChange modifier",
                "date": "2017-02-05T05:12:49Z"
            },
            {
                "name": "Unwind Support & Snapshot Type Modifiers",
                "date": "2017-02-05T00:05:06Z"
            },
            {
                "name": "Local coordinate space support + new Apple Homepage Transition example",
                "date": "2017-02-01T01:34:20Z"
            },
            {
                "name": "Bug fixes",
                "date": "2017-01-29T21:40:42Z"
            },
            {
                "name": "0.1.1",
                "date": "2017-01-15T20:21:05Z"
            },
            {
                "name": "HUGE Update. Revamped Hero Modifier implementation. Bug fixes.",
                "date": "2017-01-09T07:42:44Z"
            },
            {
                "name": "Bug fixes",
                "date": "2017-01-06T00:37:42Z"
            },
            {
                "name": "Carthage Support",
                "date": "2017-01-04T02:04:35Z"
            },
            {
                "name": "0.0.3 Stable",
                "date": "2016-12-31T00:23:44Z"
            },
            {
                "name": "0.0.2",
                "date": "2016-12-21T02:33:46Z"
            },
            {
                "name": "Initial Beta!",
                "date": "2016-12-18T22:01:44Z"
            }
        ]
    }
}